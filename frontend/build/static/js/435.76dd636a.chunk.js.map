{"version":3,"file":"static/js/435.76dd636a.chunk.js","mappings":"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","sources":["components/utils/Menu.jsx","components/utils/MenuItemText.jsx","components/menus/NotificationsMenu.jsx","components/dialogs/ChangePasswordBody.jsx","components/dialogs/EditNameBody.jsx","components/menus/EditPicMenu.jsx","components/utils/CustomTooltip.tsx","components/utils/CustomDialog.tsx","components/utils/ChildDialog.jsx","components/dialogs/EditProfileBody.jsx","components/menus/ProfileSettingsMenu.jsx","components/utils/UserListItem.jsx","components/utils/LoadingList.tsx","components/utils/SearchInput.tsx","components/utils/SearchUsersDrawer.jsx","components/ChatpageHeader.jsx","components/dialogs/NewGroupBody.jsx","components/dialogs/AddMembersToGroup.jsx","components/utils/TypingIndicator.jsx","components/utils/ChatListItem.jsx","components/utils/FullSizeImage.jsx","components/GettingStarted.jsx","components/ChatListView.jsx","components/dialogs/ViewProfileBody.jsx","components/utils/GroupMemberItem.jsx","components/menus/MemberOptionsMenu.jsx","components/dialogs/ViewGroupMembers.jsx","components/dialogs/GroupInfoBody.jsx","components/utils/LoadingMsgs.tsx","components/utils/MsgAttachment.tsx","components/utils/AttachmentPreview.tsx","components/utils/Message.jsx","components/menus/MsgOptionsMenu.jsx","components/WelcomeBanner.jsx","components/MsgsHeader.jsx","components/MessagesView.jsx","pages/ChatsPage.tsx"],"sourcesContent":["import { Menu as MuiMenu } from \"@mui/material\";\r\n\r\nexport const menuPaperProps = {\r\n  elevation: 0,\r\n  sx: {\r\n    overflow: \"auto\",\r\n    maxHeight: 250,\r\n    filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\r\n    borderRadius: 2,\r\n    backgroundColor: \"#404040\",\r\n    mt: 1,\r\n  },\r\n};\r\n\r\nexport const menuItemProps = {\r\n  \":hover\": { backgroundColor: \"#505050\" },\r\n  color: \"#e0e0e0\",\r\n  fontSize: \"19px\",\r\n};\r\n\r\nexport const menuIconProps = { color: \"lightblue\" };\r\n\r\nconst Menu = ({\r\n  children,\r\n  menuAnchor,\r\n  setMenuAnchor,\r\n  transformOrigin,\r\n  anchorOrigin,\r\n}) => {\r\n  const isMenuOpen = Boolean(menuAnchor);\r\n  const closeMenu = () => setMenuAnchor(null);\r\n\r\n  return (\r\n    <MuiMenu\r\n      anchorEl={menuAnchor}\r\n      open={isMenuOpen}\r\n      onClose={closeMenu}\r\n      onClick={closeMenu}\r\n      PaperProps={menuPaperProps}\r\n      transformOrigin={transformOrigin}\r\n      anchorOrigin={anchorOrigin}\r\n    >\r\n      {children}\r\n    </MuiMenu>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","const MenuItemText = ({ children }) => {\r\n  return <span style={{ marginBottom: \"3px\" }}>{children}</span>;\r\n};\r\n\r\nexport default MenuItemText;\r\n","import { MenuItem } from \"@mui/material\";\r\nimport Menu, { menuItemProps } from \"../utils/Menu\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setDeleteNotifsOfChat,\r\n  setFetchMsgs,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n} from \"../../store/slices/AppSlice\";\r\nimport { getOneToOneChatReceiver, truncateString } from \"../../utils/appUtils\";\r\n\r\nconst NotificationsMenu = ({ chats, anchor, setAnchor }) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n  const notifs = [...loggedInUser?.notifications];\r\n  const notifGroups = {};\r\n\r\n  notifs.forEach((notif) => {\r\n    // Notifications grouped by 'chat'\r\n    const notifChat = notif.chat;\r\n    const chatId = notifChat._id;\r\n    const chatName = notifChat.isGroupChat\r\n      ? `group===${notifChat.chatName}`\r\n      : getOneToOneChatReceiver(loggedInUser, notifChat.users).name;\r\n    const notifGroupId = `${chatId}---${chatName}`;\r\n    if (notifGroups[notifGroupId]) {\r\n      ++notifGroups[notifGroupId];\r\n    } else {\r\n      notifGroups[notifGroupId] = 1;\r\n    }\r\n  });\r\n\r\n  const chatNotifClickHandler = (e) => {\r\n    const chatNotifId =\r\n      e.target.dataset.notifGroup || e.target.parentNode.dataset.notifGroup;\r\n    if (!chatNotifId) return;\r\n\r\n    const chatId = chatNotifId.split(\"---\")[0];\r\n    const chatToBeOpened = chats.find((chat) => chat._id === chatId);\r\n    dispatch(setSelectedChat(chatToBeOpened));\r\n    dispatch(setFetchMsgs(true)); // To fetch selected chat msgs\r\n    dispatch(setDeleteNotifsOfChat(chatId));\r\n    if (chatToBeOpened?.isGroupChat) dispatch(setGroupInfo(chatToBeOpened));\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      {Object.keys(notifGroups).length ? (\r\n        <div onClick={chatNotifClickHandler}>\r\n          {Object.keys(notifGroups).map((notifGroupId) => {\r\n            const fromGroup = notifGroupId.includes(\"group===\");\r\n            const notifCount = notifGroups[notifGroupId];\r\n            let chatName = notifGroupId.split(\"---\")[1];\r\n            chatName = fromGroup ? chatName.split(\"===\")[1] : chatName;\r\n            return (\r\n              <MenuItem\r\n                key={notifGroupId}\r\n                data-notif-group={notifGroupId}\r\n                sx={menuItemProps}\r\n              >\r\n                <MenuItemText>\r\n                  {`${notifCount} message${notifCount > 1 ? \"s\" : \"\"} ${\r\n                    fromGroup ? \"in\" : \"from\"\r\n                  } `}\r\n                  <span\r\n                    title={chatName}\r\n                    data-notif-group={notifGroupId}\r\n                    className=\"text-info\"\r\n                  >\r\n                    {`${truncateString(\r\n                      fromGroup ? chatName : chatName.split(\" \")[0],\r\n                      12,\r\n                      9\r\n                    )}`}\r\n                  </span>\r\n                </MenuItemText>\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <MenuItem sx={menuItemProps}>\r\n          <MenuItemText>No notifications</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default NotificationsMenu;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\nimport PasswordVisibilityToggle from \"../utils/PasswordVisibilityToggle\";\r\n\r\nconst ChangePasswordBody = ({ getUpdatedState }) => {\r\n  const {\r\n    loading,\r\n    disableIfLoading,\r\n    formLabelClassName,\r\n    formFieldClassName,\r\n    inputFieldClassName,\r\n  } = useSelector(selectFormfieldState);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [changePasswordData, setChangePasswordData] = useState({\r\n    currentPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmNewPassword: \"\",\r\n  });\r\n\r\n  const { currentPassword, newPassword, confirmNewPassword } =\r\n    changePasswordData;\r\n\r\n  const handleChangeFor = (prop) => (e) => {\r\n    setChangePasswordData({ ...changePasswordData, [prop]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Return updated state to profile settings menu\r\n    getUpdatedState(changePasswordData);\r\n  }, [changePasswordData]);\r\n\r\n  const onEnterKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      // Submit updated password data\r\n      getUpdatedState(changePasswordData, { submitUpdatedPassword: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Current Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 mt-3 col-md-6 order-md-2`}\r\n      >\r\n        <label htmlFor=\"current_password\" className={`${formLabelClassName}`}>\r\n          Current Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={currentPassword}\r\n            onChange={handleChangeFor(\"currentPassword\")}\r\n            onKeyDown={onEnterKeyDown}\r\n            required\r\n            autoFocus\r\n            name=\"currentPassword\"\r\n            id=\"current_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Used While Signing In\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n      {/* New Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 col-md-6 order-md-2`}\r\n      >\r\n        <label htmlFor=\"new_password\" className={`${formLabelClassName}`}>\r\n          New Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={newPassword}\r\n            onChange={handleChangeFor(\"newPassword\")}\r\n            onKeyDown={onEnterKeyDown}\r\n            required\r\n            name=\"newPassword\"\r\n            id=\"new_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Different from Current\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n      {/* Confirm New Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 col-md-6 order-md-2`}\r\n      >\r\n        <label\r\n          htmlFor=\"confirm_new_password\"\r\n          className={`${formLabelClassName}`}\r\n        >\r\n          Confirm New Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={confirmNewPassword}\r\n            onChange={handleChangeFor(\"confirmNewPassword\")}\r\n            onKeyDown={onEnterKeyDown}\r\n            required\r\n            name=\"confirmNewPassword\"\r\n            id=\"confirm_new_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Exactly as Above\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordBody;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\n\r\nconst EditNameBody = ({ originalName, getUpdatedName, placeholder }) => {\r\n  const { loading, formFieldClassName, inputFieldClassName } =\r\n    useSelector(selectFormfieldState);\r\n  const [name, setName] = useState(originalName);\r\n\r\n  useEffect(() => {\r\n    getUpdatedName(name);\r\n  }, [name]);\r\n\r\n  return (\r\n    <section\r\n      className={`${formFieldClassName} mx-auto`}\r\n      style={{ width: \"clamp(250px, 60vw, 360px)\" }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            // Submit updated group name\r\n            getUpdatedName(name, { submitUpdatedName: true });\r\n          }\r\n        }}\r\n        name=\"editname\"\r\n        autoFocus\r\n        className={`${inputFieldClassName} mt-1`}\r\n        disabled={loading}\r\n        placeholder={placeholder}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditNameBody;\r\n","import { Delete, Upload } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\n\r\nconst EditPicMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  selectProfilePic,\r\n  openDeletePhotoConfirmDialog,\r\n  deletePhotoCondition,\r\n}) => {\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={selectProfilePic}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Upload />\r\n        </ListItemIcon>\r\n        <MenuItemText>Upload Photo</MenuItemText>\r\n      </MenuItem>\r\n      {deletePhotoCondition && (\r\n        <MenuItem sx={menuItemProps} onClick={openDeletePhotoConfirmDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <Delete />\r\n          </ListItemIcon>\r\n          <MenuItemText>Delete Photo</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default EditPicMenu;\r\n","import { styled } from \"@mui/material/styles\";\r\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\r\n\r\ninterface StyledProps {\r\n  className: string;\r\n  children: any;\r\n  title: string;\r\n  placement: any;\r\n  arrow: boolean;\r\n}\r\n\r\nconst getCustomTooltip = (arrowStyles: any, tooltipStyles: any) =>\r\n  styled(\r\n    ({ className, children, title, placement, arrow }: StyledProps): any => (\r\n      <Tooltip\r\n        title={title}\r\n        placement={placement}\r\n        arrow={arrow}\r\n        classes={{ popper: className }}\r\n      >\r\n        {children}\r\n      </Tooltip>\r\n    )\r\n  )(({ theme }) => ({\r\n    [`& .${tooltipClasses.arrow}`]: { ...arrowStyles },\r\n    [`& .${tooltipClasses.tooltip}`]: { ...tooltipStyles },\r\n  }));\r\n\r\nexport default getCustomTooltip;\r\n","import {\r\n  Close,\r\n  KeyboardDoubleArrowLeft,\r\n  KeyboardDoubleArrowRight,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { NavigateFunction, useNavigate } from \"react-router-dom\";\r\nimport { setSelectedChat } from \"../../store/slices/AppSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/storeHooks\";\r\nimport { CustomDialogState } from \"../../utils/AppTypes\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\n\r\nexport const btnHoverStyle = { \":hover\": { backgroundColor: \"#93c2f727\" } };\r\nexport const btnCustomStyle = {\r\n  fontSize: 17,\r\n  color: \"#8cc2ff\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  borderRadius: 10,\r\n};\r\n\r\nconst CustomDialog = ({\r\n  children,\r\n  dialogData,\r\n  showDialogActions,\r\n  showDialogClose,\r\n  closeDialog,\r\n}: CustomDialogState) => {\r\n  const { loading, disableIfLoading } = useAppSelector(selectFormfieldState);\r\n  const dispatch = useAppDispatch();\r\n  const navigate: NavigateFunction = useNavigate();\r\n  const {\r\n    isFullScreen,\r\n    isOpen,\r\n    title,\r\n    nolabel,\r\n    yeslabel,\r\n    loadingYeslabel,\r\n    action,\r\n  } = dialogData;\r\n\r\n  const handleDialogClose = () => {\r\n    if (closeDialog) return closeDialog();\r\n    dispatch(hideDialog());\r\n  };\r\n\r\n  const handleYes = async () => {\r\n    if (!action) return;\r\n    const result = await action();\r\n    if (\r\n      result === \"profileUpdated\" ||\r\n      result === \"membersUpdated\" ||\r\n      result === \"msgActionDone\"\r\n    ) {\r\n      handleDialogClose();\r\n    } else if (result === \"createdGroup\") {\r\n      handleDialogClose();\r\n      // Close Parent Dialog as well\r\n      dispatch(hideDialog());\r\n    } else if (result === \"pwdUpdated\" || result === \"loggingOut\") {\r\n      handleDialogClose();\r\n      dispatch(setSelectedChat(null));\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen={Boolean(isFullScreen)}\r\n      PaperProps={{\r\n        sx: {\r\n          borderRadius: 2,\r\n          backgroundImage: \"linear-gradient(0deg,#353535,#444)\",\r\n        },\r\n      }}\r\n      className={`user-select-none ${disableIfLoading}`}\r\n      open={isOpen}\r\n      onClose={handleDialogClose}\r\n    >\r\n      <DialogTitle\r\n        style={{\r\n          fontSize: 25,\r\n          color: \"#A4D0F0\",\r\n          fontFamily: \"Trebuchet MS\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        <span\r\n          className=\"d-flex\"\r\n          title={title}\r\n          style={{ marginTop: -5, marginRight: 10 }}\r\n        >\r\n          {truncateString(title, 24, 21)}\r\n        </span>\r\n        {showDialogClose && (\r\n          <IconButton\r\n            onClick={handleDialogClose}\r\n            disabled={loading}\r\n            sx={{\r\n              position: \"absolute\",\r\n              right: 8,\r\n              top: 8,\r\n              color: \"#999999\",\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        )}\r\n      </DialogTitle>\r\n      <DialogContent\r\n        style={{ fontSize: 19, color: \"#e0e0e0\", fontFamily: \"Trebuchet MS\" }}\r\n      >\r\n        {children || <></>}\r\n      </DialogContent>\r\n      {showDialogActions && (\r\n        <DialogActions>\r\n          <Button\r\n            sx={btnHoverStyle}\r\n            disabled={loading}\r\n            style={btnCustomStyle}\r\n            onClick={handleDialogClose}\r\n          >\r\n            {nolabel === \"Back\" ? (\r\n              <span>\r\n                <KeyboardDoubleArrowLeft\r\n                  className=\"btnArrowIcons\"\r\n                  style={{\r\n                    margin: \"0px 5px 2px 0px\",\r\n                  }}\r\n                />\r\n                Back\r\n              </span>\r\n            ) : (\r\n              nolabel\r\n            )}\r\n          </Button>\r\n          <Button\r\n            sx={btnHoverStyle}\r\n            disabled={loading}\r\n            style={btnCustomStyle}\r\n            onClick={handleYes}\r\n          >\r\n            {loading && yeslabel !== \"Next\" ? (\r\n              <>\r\n                <CircularProgress size={25} style={{ marginRight: 12 }} />\r\n                <span style={{ marginRight: 22 }}>{loadingYeslabel}</span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {yeslabel === \"Next\" ? (\r\n                  <span>\r\n                    Next\r\n                    <KeyboardDoubleArrowRight\r\n                      className=\"btnArrowIcons\"\r\n                      style={{\r\n                        marginLeft: 4,\r\n                      }}\r\n                    />\r\n                  </span>\r\n                ) : (\r\n                  yeslabel\r\n                )}\r\n              </>\r\n            )}\r\n          </Button>\r\n        </DialogActions>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CustomDialog;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setChildDialogMethods } from \"../../store/slices/ChildDialogSlice\";\r\nimport CustomDialog from \"./CustomDialog\";\r\n\r\nconst ChildDialog = ({\r\n  showChildDialogActions = true,\r\n  showChildDialogClose = false,\r\n}) => {\r\n  // Child Dialog config\r\n  const [childDialogData, setChildDialogData] = useState({\r\n    isOpen: false,\r\n    title: \"Child Dialog\",\r\n    nolabel: \"NO\",\r\n    yeslabel: \"YES\",\r\n    loadingYeslabel: \"Updating...\",\r\n    action: () => {},\r\n  });\r\n  const [childDialogBody, setChildDialogBody] = useState(<></>);\r\n  const dispatch = useDispatch();\r\n  const displayChildDialog = (options) =>\r\n    setChildDialogData({ ...options, isOpen: true });\r\n\r\n  const closeChildDialog = (data) =>\r\n    setChildDialogData({ ...data, isOpen: false });\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setChildDialogMethods({\r\n        setChildDialogBody,\r\n        displayChildDialog,\r\n        closeChildDialog,\r\n      })\r\n    );\r\n  }, [childDialogData]);\r\n\r\n  return (\r\n    <CustomDialog\r\n      dialogData={childDialogData}\r\n      closeDialog={closeChildDialog}\r\n      showDialogActions={showChildDialogActions}\r\n      showDialogClose={showChildDialogClose}\r\n    >\r\n      {childDialogBody}\r\n    </CustomDialog>\r\n  );\r\n};\r\n\r\nexport default ChildDialog;\r\n","import { Edit } from \"@mui/icons-material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"../../utils/axios\";\r\nimport EditNameBody from \"./EditNameBody\";\r\nimport { CircularProgress, IconButton } from \"@mui/material\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport {\r\n  getAxiosConfig,\r\n  isImageFile,\r\n  truncateString,\r\n  truncateWords,\r\n  TWO_MB,\r\n} from \"../../utils/appUtils\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { selectAppState, setLoggedInUser } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\n\r\nconst arrowStyles = { color: \"#111\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 260,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  padding: \"5px 10px\",\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst EditProfileBody = () => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const { loading, disableIfLoading } = useSelector(selectFormfieldState);\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const dispatch = useDispatch();\r\n  const { setChildDialogBody, displayChildDialog, closeChildDialog } =\r\n    childDialogMethods;\r\n\r\n  const [profileData, setProfileData] = useState({\r\n    profilePicUrl: loggedInUser?.profilePic,\r\n    name: loggedInUser?.name,\r\n    email: loggedInUser?.email,\r\n  });\r\n  const [editProfilePicMenuAnchor, setEditProfilePicMenuAnchor] =\r\n    useState(null);\r\n\r\n  useEffect(() => {\r\n    setProfileData({\r\n      ...profileData,\r\n      profilePicUrl: loggedInUser?.profilePic,\r\n      name: loggedInUser?.name,\r\n    });\r\n  }, [loggedInUser]);\r\n\r\n  const displayWarning = (message = \"Warning\", duration = 3000) => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"warning\",\r\n        duration,\r\n        position: \"top-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const displayError = (\r\n    error = \"Oops! Something went wrong\",\r\n    title = \"Operation Failed\"\r\n  ) => {\r\n    dispatch(\r\n      displayToast({\r\n        title,\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"top-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const displaySuccess = (message = \"Operation Successful\") => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"success\",\r\n        duration: 3000,\r\n        position: \"bottom-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  // For profile pic upload loading indicator\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const { profilePicUrl, name, email } = profileData;\r\n  const imgInput = useRef();\r\n  const isGuestUser = loggedInUser?.email === \"guest.user@gmail.com\";\r\n\r\n  const persistUpdatedUser = (updatedUser) => {\r\n    // localStorage persists updated user even after page refresh\r\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\r\n    dispatch(setLoggedInUser(updatedUser));\r\n  };\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") {\r\n      e.target.click();\r\n    }\r\n  };\r\n\r\n  // Update Profile Pic\r\n  const handleImgInputChange = async (e) => {\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n\r\n    if (!isImageFile(image.name)) {\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Invalid Image File\",\r\n          message: \"Please Select an Image File (png/jpg/jpeg/svg/webp)\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    if (image.size >= TWO_MB) {\r\n      imgInput.current.value = \"\";\r\n      return displayWarning(\"Please Select an Image Smaller than 2 MB\", 4000);\r\n    }\r\n    dispatch(setLoading(true));\r\n    setUploading(true);\r\n    const config = getAxiosConfig({ loggedInUser, formData: true });\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"profilePic\", image);\r\n    formData.append(\"currentProfilePic\", loggedInUser?.profilePic);\r\n    formData.append(\"cloudinary_id\", loggedInUser?.cloudinary_id);\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/update/profile-pic\",\r\n        formData,\r\n        config\r\n      );\r\n      displaySuccess(\"ProfilePic Updated Successfully\");\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n      persistUpdatedUser({\r\n        ...data,\r\n        token: loggedInUser.token,\r\n        expiryTime: loggedInUser.expiryTime,\r\n      });\r\n    } catch (error) {\r\n      displayError(error, \"ProfilePic Update Failed\");\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const deleteProfilePic = async () => {\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/delete/profile-pic\",\r\n        {\r\n          currentProfilePic: loggedInUser?.profilePic,\r\n          cloudinary_id: loggedInUser?.cloudinary_id,\r\n        },\r\n        config\r\n      );\r\n      displaySuccess(\"ProfilePic Deleted Successfully\");\r\n      dispatch(setLoading(false));\r\n      persistUpdatedUser({\r\n        ...data,\r\n        token: loggedInUser.token,\r\n        expiryTime: loggedInUser.expiryTime,\r\n      });\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      displayError(error, \"ProfilePic Deletion Failed\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Edited Name config\r\n  let editedName;\r\n\r\n  const getUpdatedName = (updatedValue, options) => {\r\n    editedName = updatedValue;\r\n    if (options?.submitUpdatedName)\r\n      updateProfileName({ enterKeyPressed: true });\r\n  };\r\n\r\n  const updateProfileName = async (options) => {\r\n    if (!editedName) return displayWarning(\"Please Enter a Valid Name\");\r\n\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/update/name\",\r\n        { newUserName: editedName },\r\n        config\r\n      );\r\n      displaySuccess(\"Name Updated Successfully\");\r\n      dispatch(setLoading(false));\r\n      persistUpdatedUser({\r\n        ...data,\r\n        token: loggedInUser.token,\r\n        expiryTime: loggedInUser.expiryTime,\r\n      });\r\n      if (options?.enterKeyPressed) closeChildDialog();\r\n      else return \"profileUpdated\";\r\n    } catch (error) {\r\n      displayError(error, \"Name Update Failed\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Open edit name dialog\r\n  const openEditNameDialog = () => {\r\n    setChildDialogBody(\r\n      <EditNameBody\r\n        originalName={loggedInUser?.name}\r\n        getUpdatedName={getUpdatedName}\r\n        placeholder=\"Enter New Name\"\r\n      />\r\n    );\r\n    displayChildDialog({\r\n      title: \"Edit Name\",\r\n      nolabel: \"CANCEL\",\r\n      yeslabel: \"SAVE\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: updateProfileName,\r\n    });\r\n  };\r\n\r\n  // Open delete photo confirm dialog\r\n  const openDeletePhotoConfirmDialog = () => {\r\n    setChildDialogBody(<>Are you sure you want to delete this profile pic?</>);\r\n    displayChildDialog({\r\n      title: \"Delete Profile Pic\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteProfilePic,\r\n    });\r\n  };\r\n\r\n  const openEditProfilePicMenu = (e) => {\r\n    setEditProfilePicMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* View/Edit Profile Pic */}\r\n      {loading && uploading ? (\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n          <CircularProgress\r\n            size={75}\r\n            style={{ margin: \"30px 0px\", color: \"lightblue\" }}\r\n          />\r\n          <span style={{ marginBottom: \"45px\" }} className=\"text-light h1\">\r\n            {\" Updating Photo...\"}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <section className=\"dialogField d-flex position-relative mb-4\">\r\n          <img\r\n            className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n            id=\"viewedit__profilePic\"\r\n            src={profilePicUrl}\r\n            alt=\"profilePic\"\r\n          />\r\n          {!isGuestUser && (\r\n            <CustomTooltip title=\"Edit Profile Pic\" placement=\"top-start\" arrow>\r\n              <i\r\n                id=\"editProfilePic\"\r\n                tabIndex={2}\r\n                onKeyDown={clickOnKeydown}\r\n                className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n                onClick={openEditProfilePicMenu}\r\n              >\r\n                <Edit className=\"text-light fs-6\" />\r\n              </i>\r\n            </CustomTooltip>\r\n          )}\r\n          {/* Edit/Delete profile pic menu */}\r\n          <EditPicMenu\r\n            anchor={editProfilePicMenuAnchor}\r\n            setAnchor={setEditProfilePicMenuAnchor}\r\n            selectProfilePic={() => imgInput.current.click()}\r\n            openDeletePhotoConfirmDialog={openDeletePhotoConfirmDialog}\r\n            deletePhotoCondition={\r\n              !loggedInUser?.profilePic?.endsWith(\"user_dqzjdz.png\")\r\n            }\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={handleImgInputChange}\r\n            name=\"profilepic\"\r\n            id=\"editProfilePic\"\r\n            ref={imgInput}\r\n            className={`d-none`}\r\n            disabled={loading}\r\n          />\r\n        </section>\r\n      )}\r\n      {/* View Name */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-15px\" }}>\r\n          <CustomTooltip title={name} placement=\"top\" arrow>\r\n            <div\r\n              className=\"w-100 h1 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"32px\", wordWrap: \"break-word\" }}\r\n            >\r\n              {truncateWords(name, 14, 11)}\r\n            </div>\r\n          </CustomTooltip>\r\n          {!isGuestUser && (\r\n            <CustomTooltip title=\"Edit Name\" placement=\"top\" arrow>\r\n              <IconButton\r\n                tabIndex={3}\r\n                onKeyDown={clickOnKeydown}\r\n                onClick={openEditNameDialog}\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  right: -8,\r\n                  top: 0,\r\n                  \":hover\": { backgroundColor: \"#aaaaaa30\" },\r\n                }}\r\n              >\r\n                <Edit className=\"text-light\" />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n          )}\r\n        </div>\r\n      </section>\r\n      {/* View Email */}\r\n      <section\r\n        className={`dialogField text-center mb-2`}\r\n        style={{ marginTop: \"-10px\" }}\r\n      >\r\n        <CustomTooltip\r\n          title={email?.length > 24 ? email : \"\"}\r\n          placement=\"bottom\"\r\n          arrow\r\n        >\r\n          <span className=\"h4\" style={{ color: \"lightblue\" }}>\r\n            {truncateString(email, 25, 21)}\r\n          </span>\r\n        </CustomTooltip>\r\n      </section>\r\n      {/* Child confirmation dialog */}\r\n      <ChildDialog />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfileBody;\r\n","import { Key, Logout, ManageAccounts, Person } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport axios from \"../../utils/axios\";\r\nimport ChangePasswordBody from \"../dialogs/ChangePasswordBody\";\r\nimport EditProfileBody from \"../dialogs/EditProfileBody\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setLoggedInUser,\r\n  setSelectedChat,\r\n} from \"../../store/slices/AppSlice\";\r\nimport { setLoading } from \"../../store/slices/FormfieldSlice\";\r\nimport {\r\n  displayDialog,\r\n  hideDialog,\r\n  setShowDialogActions,\r\n} from \"../../store/slices/CustomDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getAxiosConfig } from \"../../utils/appUtils\";\r\n\r\nconst ProfileSettingsMenu = ({ anchor, setAnchor, setDialogBody }) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const displaySuccess = (\r\n    message = \"Operation Successful\",\r\n    duration = 3000\r\n  ) => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"success\",\r\n        duration,\r\n        position: \"bottom-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const displayWarning = (message = \"Warning\") => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"warning\",\r\n        duration: 5000,\r\n        position: \"top-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const isGuestUser = loggedInUser?.email === \"guest.user@gmail.com\";\r\n\r\n  // Edit Password Config\r\n  let editPasswordData;\r\n\r\n  const getUpdatedState = (updatedState, options) => {\r\n    editPasswordData = updatedState;\r\n    if (options?.submitUpdatedPassword)\r\n      updatePassword({ enterKeyPressed: true });\r\n  };\r\n\r\n  const updatePassword = async (options) => {\r\n    const { currentPassword, newPassword, confirmNewPassword } =\r\n      editPasswordData;\r\n\r\n    if (!currentPassword || !newPassword || !confirmNewPassword) {\r\n      return displayWarning(\"Please Enter All the Fields\");\r\n    }\r\n    if (currentPassword === newPassword) {\r\n      return displayWarning(\"New Password Must Differ from Current Password\");\r\n    }\r\n    if (newPassword !== confirmNewPassword) {\r\n      return displayWarning(\"New Password Must Match Confirm New Password\");\r\n    }\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      await axios.put(\r\n        \"/api/user/update/password\",\r\n        { currentPassword, newPassword },\r\n        config\r\n      );\r\n      displaySuccess(\r\n        \"Password Updated Successfully. Please Login Again with Updated Password\",\r\n        5000\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      localStorage.removeItem(\"loggedInUser\");\r\n      dispatch(setLoggedInUser(null));\r\n      if (options?.enterKeyPressed) {\r\n        dispatch(hideDialog());\r\n        dispatch(setSelectedChat(null));\r\n        navigate(\"/\");\r\n        return;\r\n      }\r\n      return \"pwdUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Password Update Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"loggedInUser\");\r\n    dispatch(setLoggedInUser(null));\r\n    dispatch(\r\n      displayToast({\r\n        message: \"Logged Out\",\r\n        type: \"success\",\r\n        duration: 1500,\r\n        position: \"bottom-center\",\r\n      })\r\n    );\r\n    return \"loggingOut\";\r\n  };\r\n\r\n  // Open dialogs\r\n  const openLogoutConfirmDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<>Are you sure you want to log out?</>);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Logout Confirmation\",\r\n        nolabel: \"NO\",\r\n        yeslabel: \"YES\",\r\n        loadingYeslabel: \"Logging Out...\",\r\n        action: logout,\r\n      })\r\n    );\r\n  };\r\n\r\n  const openEditProfileDialog = () => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<EditProfileBody />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: isGuestUser ? \"View Profile\" : \"Edit Profile\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const openEditPasswordDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<ChangePasswordBody getUpdatedState={getUpdatedState} />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Change Password\",\r\n        nolabel: \"CANCEL\",\r\n        yeslabel: \"SAVE\",\r\n        loadingYeslabel: \"Saving...\",\r\n        action: updatePassword,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={openEditProfileDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          {isGuestUser ? <Person /> : <ManageAccounts />}\r\n        </ListItemIcon>\r\n        <MenuItemText>{isGuestUser ? \"View\" : \"Edit\"} Profile</MenuItemText>\r\n      </MenuItem>\r\n      {!isGuestUser && (\r\n        <MenuItem sx={menuItemProps} onClick={openEditPasswordDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <Key />\r\n          </ListItemIcon>\r\n          <MenuItemText>Change Password</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n      <MenuItem sx={menuItemProps} onClick={openLogoutConfirmDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Logout />\r\n        </ListItemIcon>\r\n        <MenuItemText>Logout</MenuItemText>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default ProfileSettingsMenu;\r\n","import { Avatar } from \"@mui/material\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\n\r\nconst arrowStyles = { color: \"#A30CA7\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  padding: \"5px 12px\",\r\n  borderRadius: 5,\r\n  backgroundColor: \"#A30CA7\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst UserListItem = ({ user, truncateValues }) => {\r\n  const { _id, name, email, profilePic } = user;\r\n  const [max, index] = truncateValues;\r\n\r\n  return (\r\n    <div\r\n      data-user={_id}\r\n      className={`userListItem user-select-none d-flex text-light justify-content-start align-items-center pointer px-3`}\r\n    >\r\n      <CustomTooltip\r\n        data-user={_id}\r\n        title={`${name} (${email})`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <Avatar\r\n          src={profilePic}\r\n          alt={_id}\r\n          data-user={_id}\r\n          className={`listItemAvatar userListAvatar`}\r\n        />\r\n      </CustomTooltip>\r\n      <div\r\n        data-user={_id}\r\n        className=\"userListData d-flex flex-column align-items-start px-2\"\r\n      >\r\n        <p data-user={_id} className=\"userListName fs-5 fw-bold text-info\">\r\n          {truncateString(name, max, index)}\r\n        </p>\r\n        <p data-user={_id} className=\"userListEmail fs-6\">\r\n          {truncateString(email, max, index)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n","import { Skeleton } from \"@mui/material\";\r\n\r\ninterface Props {\r\n  listOf: string;\r\n  dpRadius: string;\r\n  count: number;\r\n}\r\n\r\nconst LoadingList = ({ listOf, dpRadius, count }: Props) => {\r\n  const skeletonStyle = { backgroundColor: \"#999\" };\r\n  return (\r\n    <>\r\n      {[...Array(count)].map((e, i) => (\r\n        <div key={`loadingListOf${listOf + i}`} className=\"loadingListItem row\">\r\n          <Skeleton\r\n            variant=\"circular\"\r\n            className=\"loadingDp rounded-circle\"\r\n            style={{ ...skeletonStyle, width: dpRadius, height: dpRadius }}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className=\"loadingTitle col-5\"\r\n            style={skeletonStyle}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className=\"loadingDesc col-7\"\r\n            style={skeletonStyle}\r\n          />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadingList;\r\n","import { Clear, Search } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { forwardRef, LegacyRef, MutableRefObject, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\n\r\ninterface Props {\r\n  searchHandler: Function;\r\n  autoFocus: boolean;\r\n  placeholder: string;\r\n  clearInput: Function;\r\n}\r\n\r\ntype InputRef = MutableRefObject<HTMLInputElement>;\r\n\r\nconst SearchInput = forwardRef<HTMLInputElement, Props>((props, inputRef) => {\r\n  const { searchHandler, autoFocus, placeholder, clearInput } = props;\r\n  const { disableIfLoading, formFieldClassName, inputFieldClassName } =\r\n    useSelector(selectFormfieldState);\r\n\r\n  // To display/hide clear search (<Close />) icon when typing\r\n  const [typing, setTyping] = useState(false);\r\n\r\n  const onClearIconClick = () => {\r\n    if (!inputRef || !(inputRef as InputRef).current) return;\r\n    (inputRef as InputRef).current.value = \"\";\r\n    setTyping(false); // Hide '<Close />' icon\r\n    (inputRef as InputRef).current.focus();\r\n    clearInput();\r\n  };\r\n\r\n  return (\r\n    <section className={`${formFieldClassName} pt-3 pb-2 mx-1`}>\r\n      {/* Input box */}\r\n      <div className=\"input-group\">\r\n        <span\r\n          className={`input-group-text ${disableIfLoading} bg-black bg-gradient border-secondary text-light rounded-pill rounded-end`}\r\n        >\r\n          <Search className=\"mx-0\" style={{ marginTop: \"3px\" }} />\r\n        </span>\r\n        <input\r\n          type=\"text\"\r\n          ref={inputRef as LegacyRef<HTMLInputElement>}\r\n          onChange={(e) => {\r\n            setTyping(Boolean(e.target.value.trim()));\r\n            searchHandler(e);\r\n          }}\r\n          autoFocus={autoFocus}\r\n          placeholder={placeholder}\r\n          className={`${inputFieldClassName\r\n            .replace(\"text-center\", \"text-start\")\r\n            .replace(\"pill\", \"0\")} border-start-0 border-end-0 d-inline-block`}\r\n          style={{ cursor: \"auto\", fontSize: \"18px\" }}\r\n        />\r\n        {/* Clear icon button */}\r\n        <span\r\n          className={`input-group-text ${disableIfLoading} bg-black bg-gradient border-secondary text-light rounded-pill rounded-start border-start-0`}\r\n        >\r\n          <IconButton\r\n            onClick={onClearIconClick}\r\n            className={`${typing ? \"d-inline-block\" : \"d-none\"}`}\r\n            style={{\r\n              padding: \"0px 9px 3px 9px\",\r\n              margin: \"-7px\",\r\n              color: \"#999999\",\r\n            }}\r\n            sx={{ \":hover\": { backgroundColor: \"#aaaaaa20\" } }}\r\n          >\r\n            <Clear style={{ fontSize: \"19px\" }} />\r\n          </IconButton>\r\n        </span>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default SearchInput;\r\n","import { ChevronLeft } from \"@mui/icons-material\";\r\nimport { Drawer, IconButton } from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"../../utils/axios\";\r\nimport { debounce, getAxiosConfig, truncateString } from \"../../utils/appUtils\";\r\nimport UserListItem from \"./UserListItem\";\r\nimport LoadingList from \"./LoadingList\";\r\nimport SearchInput from \"./SearchInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setDeleteNotifsOfChat,\r\n  setFetchMsgs,\r\n  setSelectedChat,\r\n} from \"../../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\n\r\nconst SearchUsersDrawer = ({ isDrawerOpen, setIsDrawerOpen }) => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const { loading } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n  const searchUserInput = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isDrawerOpen) {\r\n      setSearchResults([]);\r\n      dispatch(setLoading(false));\r\n      setSearchQuery(\"\");\r\n    }\r\n  }, [isDrawerOpen]);\r\n\r\n  const handleClose = () => setIsDrawerOpen(false);\r\n\r\n  // Debouncing fetchUsers method to limit the no. of API calls\r\n  const searchUsers = debounce(async (e) => {\r\n    const query = e.target?.value?.trim();\r\n    setSearchQuery(query);\r\n    if (!query) return setSearchResults([]);\r\n\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.get(`/api/user?search=${query}`, config);\r\n\r\n      dispatch(setLoading(false));\r\n      setSearchResults(data);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Users\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-left\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  }, 800);\r\n\r\n  // Create/Retreive chat when a user item is clicked\r\n  const createOrRetrieveChat = async (userId) => {\r\n    handleClose();\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\r\n\r\n      dispatch(setLoading(false));\r\n      dispatch(setSelectedChat(data));\r\n      dispatch(setFetchMsgs(true));\r\n      dispatch(setDeleteNotifsOfChat(data._id));\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Create/Retrieve Chat\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        PaperProps={{\r\n          sx: {\r\n            borderTopRightRadius: 10,\r\n            borderBottomRightRadius: 10,\r\n            backgroundImage: \"linear-gradient(0deg,#222,#444)\",\r\n            padding: \"10px\",\r\n            width: \"350px\",\r\n          },\r\n        }}\r\n        anchor=\"left\"\r\n        open={isDrawerOpen}\r\n        onClose={handleClose}\r\n        transitionDuration={350}\r\n      >\r\n        <div className=\"d-flex justify-content-center\">\r\n          <span\r\n            className=\"text-center mt-1 user-select-none text-light\"\r\n            style={{ marginTop: 0, fontSize: 27 }}\r\n          >\r\n            Search Users\r\n            <IconButton\r\n              onClick={handleClose}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: 8,\r\n                top: 5,\r\n                color: \"#999999\",\r\n                \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n              }}\r\n            >\r\n              <ChevronLeft className=\"text-light m-1\" />\r\n            </IconButton>\r\n          </span>\r\n        </div>\r\n        {/* Search Bar */}\r\n        <SearchInput\r\n          ref={searchUserInput}\r\n          searchHandler={searchUsers}\r\n          autoFocus={true}\r\n          placeholder=\"Search by Name or Email\"\r\n          clearInput={() => {\r\n            setSearchQuery(\"\");\r\n            setSearchResults([]);\r\n            searchUserInput.current.focus();\r\n          }}\r\n        />\r\n        {/* Search Results */}\r\n        <section\r\n          className=\"position-relative mx-1 my-2 h-100\"\r\n          style={{ overflowY: \"auto\", overflowX: \"hidden\" }}\r\n        >\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={(e) => {\r\n              const userId = e.target.dataset.user || e.target.alt;\r\n              if (!userId) return;\r\n              createOrRetrieveChat(userId);\r\n            }}\r\n          >\r\n            {loading ? (\r\n              <LoadingList listOf=\"User\" dpRadius={\"42px\"} count={8} />\r\n            ) : searchResults.length > 0 ? (\r\n              searchResults.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  truncateValues={[27, 24]}\r\n                />\r\n              ))\r\n            ) : searchQuery && !loading ? (\r\n              <p className=\"text-light text-center fs-5 mt-3 mx-5\">\r\n                No results found for '\r\n                <span className=\"text-info\">\r\n                  {truncateString(searchQuery, 30, 26)}\r\n                </span>\r\n                '\r\n              </p>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        </section>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchUsersDrawer;\r\n","import { Notifications, Search } from \"@mui/icons-material\";\r\nimport { Avatar, IconButton } from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport NotificationsMenu from \"./menus/NotificationsMenu\";\r\nimport ProfileSettingsMenu from \"./menus/ProfileSettingsMenu\";\r\nimport SearchUsersDrawer from \"./utils/SearchUsersDrawer\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport animationData from \"../animations/chat-gif.json\";\r\nimport LottieAnimation from \"./utils/LottieAnimation\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../store/slices/AppSlice\";\r\n\r\nconst arrowStyles = { color: \"#666\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 16,\r\n  padding: \"5px 15px\",\r\n  backgroundColor: \"#666\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ChatpageHeader = ({ chats, setDialogBody }) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const appGif = useRef();\r\n  const notifCount = loggedInUser?.notifications?.length || \"\";\r\n\r\n  const [animateNotif, setAnimateNotif] = useState(false);\r\n  const [notificationsMenuAnchor, setNotificationsMenuAnchor] = useState(null);\r\n  const [profileSettingsMenuAnchor, setProfileSettingsMenuAnchor] =\r\n    useState(null);\r\n\r\n  const openNotificationMenu = (e) => setNotificationsMenuAnchor(e.target);\r\n  const openProfileSettingsMenu = (e) => setProfileSettingsMenuAnchor(e.target);\r\n\r\n  // For opening/closing 'search users' left drawer\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (animateNotif) return;\r\n    setAnimateNotif(true);\r\n    let timeout = setTimeout(() => {\r\n      setAnimateNotif(false);\r\n    }, 1000);\r\n    return () => clearTimeout(timeout);\r\n  }, [notifCount]);\r\n\r\n  return (\r\n    <header\r\n      className={`chatpageDiv d-flex justify-content-between align-items-center user-select-none`}\r\n    >\r\n      {/* Search Users to create/access chat */}\r\n      <CustomTooltip\r\n        title=\"Search Users to Start or Open a Chat\"\r\n        placement=\"bottom-start\"\r\n        arrow\r\n      >\r\n        <button\r\n          style={{ borderRadius: \"20px\" }}\r\n          className={`btn btn-outline-secondary text-light px-3`}\r\n          onClick={() => setIsDrawerOpen(true)}\r\n        >\r\n          <Search className={`me-1`} />\r\n          <span className={`d-none d-md-inline mb-1 fs-5`}>Search Users</span>\r\n        </button>\r\n      </CustomTooltip>\r\n      <SearchUsersDrawer\r\n        isDrawerOpen={isDrawerOpen}\r\n        setIsDrawerOpen={setIsDrawerOpen}\r\n      />\r\n\r\n      {/* App Logo */}\r\n      <div className={`d-flex align-items-center ms-3 ms-md-0`}>\r\n        <LottieAnimation\r\n          ref={appGif}\r\n          className={\"d-none d-sm-inline-block mt-2 me-sm-1 me-md-2\"}\r\n          style={{ width: \"35px\", height: \"35px\" }}\r\n          animationData={animationData}\r\n        />\r\n        <span style={{ color: \"orange\" }} className=\"fs-4 fw-bold mt-1\">\r\n          CHAT ZONED\r\n        </span>\r\n      </div>\r\n\r\n      {/* User notification and profile settings icons */}\r\n      <div>\r\n        <CustomTooltip title={`Notifications`} placement=\"bottom-end\" arrow>\r\n          <IconButton\r\n            className=\"position-relative mx-1\"\r\n            onClick={openNotificationMenu}\r\n            sx={{\r\n              color: \"#999999\",\r\n              \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n            }}\r\n          >\r\n            {notifCount && (\r\n              <span\r\n                className={`notifBadge ${\r\n                  animateNotif ? \"notifCountChange\" : \"\"\r\n                } badge rounded-circle bg-danger \r\n               position-absolute`}\r\n                style={{\r\n                  fontSize: notifCount > 99 ? 12 : 13,\r\n                  top: -2,\r\n                  right: notifCount > 99 ? -11 : notifCount > 9 ? -5 : -2,\r\n                  padding:\r\n                    notifCount > 99\r\n                      ? \"6px 5px\"\r\n                      : notifCount > 9\r\n                      ? \"4px 5px\"\r\n                      : \"4px 7px\",\r\n                }}\r\n              >\r\n                {!notifCount ? \"\" : notifCount > 99 ? \"99+\" : notifCount}\r\n              </span>\r\n            )}\r\n            <Notifications className={`text-light`} />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n        <CustomTooltip\r\n          title=\"Profile Settings\"\r\n          size=\"small\"\r\n          placement=\"bottom-end\"\r\n          arrow\r\n        >\r\n          <IconButton\r\n            className=\"mx-md-3 mx-lg-4\"\r\n            sx={{\r\n              color: \"#999999\",\r\n              \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n            }}\r\n            onClick={openProfileSettingsMenu}\r\n          >\r\n            <Avatar\r\n              alt=\"LoggedInUser\"\r\n              className=\"img-fluid\"\r\n              src={loggedInUser?.profilePic}\r\n            />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n        <NotificationsMenu\r\n          chats={chats}\r\n          anchor={notificationsMenuAnchor}\r\n          setAnchor={setNotificationsMenuAnchor}\r\n        />\r\n        <ProfileSettingsMenu\r\n          anchor={profileSettingsMenuAnchor}\r\n          setAnchor={setProfileSettingsMenuAnchor}\r\n          setDialogBody={setDialogBody}\r\n        />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default ChatpageHeader;\r\n","import { useRef, useState } from \"react\";\r\nimport { Edit, KeyboardDoubleArrowLeft } from \"@mui/icons-material\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport { getAxiosConfig, isImageFile, TWO_MB } from \"../../utils/appUtils\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport axios from \"../../utils/axios\";\r\nimport { Button, CircularProgress, DialogActions } from \"@mui/material\";\r\nimport { btnCustomStyle, btnHoverStyle } from \"../utils/CustomDialog\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  toggleRefresh,\r\n} from \"../../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\n\r\nconst arrowStyles = { color: \"#111\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  padding: \"5px 10px\",\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\nconst DEFAULT_GROUP_DP = process.env.REACT_APP_DEFAULT_GROUP_DP;\r\n\r\nconst NewGroupBody = ({ closeChildDialog }) => {\r\n  const { loggedInUser, refresh, groupInfo, clientSocket, isSocketConnected } =\r\n    useSelector(selectAppState);\r\n  const {\r\n    loading,\r\n    disableIfLoading,\r\n    formFieldClassName,\r\n    inputFieldClassName,\r\n    formLabelClassName,\r\n  } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n\r\n  const { chatDisplayPicUrl, chatName } = groupInfo;\r\n  const [editGroupDpMenuAnchor, setEditGroupDpMenuAnchor] = useState(null);\r\n  const imgInput = useRef();\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") e.target.click();\r\n  };\r\n\r\n  const displayWarning = (message = \"Warning\", duration = 3000) => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"warning\",\r\n        duration,\r\n        position: \"top-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  // Create group chat\r\n  const createGroupChat = async () => {\r\n    if (!groupInfo) return;\r\n    const { chatDisplayPic, chatName, users } = groupInfo;\r\n\r\n    if (!chatName) return displayWarning(\"Please Enter a Group Name\");\r\n\r\n    if (users?.length < 2)\r\n      return displayWarning(\"Please Add Atleast 2 Members\");\r\n\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser, formData: true });\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"displayPic\", chatDisplayPic);\r\n      formData.append(\"chatName\", chatName);\r\n      formData.append(\"users\", JSON.stringify(users?.map((user) => user?._id)));\r\n\r\n      const { data } = await axios.post(\"/api/chat/group\", formData, config);\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"new grp created\", {\r\n          admin: loggedInUser,\r\n          newGroup: data,\r\n        });\r\n      }\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Group Created Successfully\",\r\n          type: \"success\",\r\n          duration: 2000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      dispatch(toggleRefresh());\r\n      closeChildDialog();\r\n      // Close Parent Dialog as well\r\n      dispatch(hideDialog());\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Create Group\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleImgInputChange = (e) => {\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n\r\n    if (!isImageFile(image.name)) {\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Invalid Image File\",\r\n          message: \"Please Select an Image File (png/jpg/jpeg/svg/webp)\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    if (image.size >= TWO_MB) {\r\n      imgInput.current.value = \"\";\r\n      return displayWarning(\"Please Select an Image Smaller than 2 MB\", 4000);\r\n    }\r\n    dispatch(\r\n      setGroupInfo({\r\n        ...groupInfo,\r\n        chatDisplayPic: image,\r\n        chatDisplayPicUrl: URL.createObjectURL(image),\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleReset = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      setGroupInfo({\r\n        ...groupInfo,\r\n        chatDisplayPic: null,\r\n        chatDisplayPicUrl: DEFAULT_GROUP_DP,\r\n      })\r\n    );\r\n    imgInput.current.value = \"\";\r\n  };\r\n\r\n  const openEditGroupDpMenu = (e) => {\r\n    setEditGroupDpMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Select Display Pic */}\r\n      <section className=\"newGroup d-flex position-relative mb-4\">\r\n        <img\r\n          className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n          src={chatDisplayPicUrl}\r\n          alt=\"displayPic\"\r\n        />\r\n        <CustomTooltip\r\n          title=\"Edit Group Display Pic\"\r\n          placement=\"top-start\"\r\n          arrow\r\n        >\r\n          <i\r\n            id=\"editGroupDPTooltip\"\r\n            tabIndex={2}\r\n            onKeyDown={clickOnKeydown}\r\n            className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n            onClick={openEditGroupDpMenu}\r\n          >\r\n            <Edit className=\"text-light fs-6\" />\r\n          </i>\r\n        </CustomTooltip>\r\n        {/* Edit/Delete profile pic menu */}\r\n        <EditPicMenu\r\n          anchor={editGroupDpMenuAnchor}\r\n          setAnchor={setEditGroupDpMenuAnchor}\r\n          selectProfilePic={() => imgInput.current.click()}\r\n          openDeletePhotoConfirmDialog={handleReset}\r\n          deletePhotoCondition={\r\n            !chatDisplayPicUrl?.endsWith(\"group_mbuvht.png\")\r\n          }\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleImgInputChange}\r\n          name=\"groupdp\"\r\n          id=\"editGroupDp\"\r\n          ref={imgInput}\r\n          className={`d-none`}\r\n          disabled={loading}\r\n        />\r\n      </section>\r\n      {/* Group Name input */}\r\n      <section className={`${formFieldClassName}`}>\r\n        <label htmlFor=\"groupName\" className={`${formLabelClassName}`}>\r\n          Group Name <span className=\"required\">*</span>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={chatName}\r\n          onChange={(e) => {\r\n            dispatch(setGroupInfo({ ...groupInfo, chatName: e.target.value }));\r\n          }}\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\") createGroupChat();\r\n          }}\r\n          required\r\n          autoFocus\r\n          name=\"groupname\"\r\n          id=\"groupName\"\r\n          className={`${inputFieldClassName}`}\r\n          disabled={loading}\r\n          placeholder=\"Eg: The Avengers\"\r\n        />\r\n      </section>\r\n      <DialogActions className=\"mt-3\" style={{ marginBottom: \"-17px\" }}>\r\n        <Button\r\n          sx={btnHoverStyle}\r\n          disabled={loading}\r\n          style={btnCustomStyle}\r\n          onClick={closeChildDialog}\r\n        >\r\n          <span>\r\n            <KeyboardDoubleArrowLeft\r\n              className=\"btnArrowIcons\"\r\n              style={{\r\n                margin: \"0px 5px 2px 0px\",\r\n              }}\r\n            />\r\n            Back\r\n          </span>\r\n        </Button>\r\n        <Button\r\n          sx={btnHoverStyle}\r\n          disabled={loading}\r\n          style={btnCustomStyle}\r\n          onClick={createGroupChat}\r\n        >\r\n          {loading ? (\r\n            <>\r\n              <CircularProgress size={25} style={{ marginRight: \"10px\" }} />\r\n              <span>Creating...</span>\r\n            </>\r\n          ) : (\r\n            <>Create Group</>\r\n          )}\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewGroupBody;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { Avatar, Chip } from \"@mui/material\";\r\nimport axios from \"../../utils/axios\";\r\nimport { debounce, getAxiosConfig, truncateString } from \"../../utils/appUtils\";\r\nimport UserListItem from \"../utils/UserListItem\";\r\nimport SearchInput from \"../utils/SearchInput\";\r\nimport NewGroupBody from \"./NewGroupBody\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport LoadingList from \"../utils/LoadingList\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectAppState, setGroupInfo } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { setDialogAction } from \"../../store/slices/CustomDialogSlice\";\r\n\r\nconst AddMembersToGroup = ({ getAddedMembers, forCreateGroup }) => {\r\n  const { loggedInUser, groupInfo } = useSelector(selectAppState);\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const dispatch = useDispatch();\r\n\r\n  const [groupData, setGroupData] = useState(groupInfo);\r\n  const [fetching, setFetching] = useState(false);\r\n  const groupMembers = groupData?.users;\r\n  const [isMemberSelected, setIsMemberSelected] = useState(false);\r\n  const [addedMembers, setAddedMembers] = useState([]);\r\n\r\n  const searchUserInput = useRef(null);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const { setChildDialogBody, displayChildDialog, closeChildDialog } =\r\n    childDialogMethods;\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setGroupData(groupInfo);\r\n  }, [groupInfo]);\r\n\r\n  // For 'create group chat'\r\n  const openNewGroupDialog = () => {\r\n    if (addedMembers?.length < 2) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Add Atleast 2 Members\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(false);\r\n    dispatch(setGroupInfo(groupData));\r\n    setChildDialogBody(<NewGroupBody closeChildDialog={closeChildDialog} />);\r\n    displayChildDialog({\r\n      title: \"Create New Group\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSearchResults([]);\r\n    setSearchQuery(\"\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // For create group: [Next >>] button\r\n    if (forCreateGroup) dispatch(setDialogAction(openNewGroupDialog));\r\n  }, [groupData]);\r\n\r\n  useEffect(() => {\r\n    // For add more group members\r\n    if (!forCreateGroup) getAddedMembers([...addedMembers]);\r\n  }, [addedMembers]);\r\n\r\n  const searchUsers = debounce(async (e) => {\r\n    const query = e.target?.value?.trim();\r\n    setSearchQuery(query);\r\n    if (!query) return setSearchResults([]);\r\n\r\n    setFetching(true);\r\n    if (isMemberSelected) setIsMemberSelected(false);\r\n\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.get(`/api/user?search=${query}`, config);\r\n\r\n      // Remove all the already added members from search results\r\n      let membersNotAdded = [...data];\r\n      groupMembers.forEach((addedMember) => {\r\n        membersNotAdded = membersNotAdded.filter(\r\n          (m) => m._id !== addedMember._id\r\n        );\r\n      });\r\n\r\n      setFetching(false);\r\n      setSearchResults(membersNotAdded);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Users\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-left\",\r\n        })\r\n      );\r\n      setFetching(false);\r\n    }\r\n  }, 800);\r\n\r\n  const unselectUser = (user) => {\r\n    if (!user) return;\r\n    setGroupData({\r\n      ...groupData,\r\n      users: groupMembers.filter((u) => u._id !== user._id),\r\n    });\r\n    // Remove user from added member list\r\n    setAddedMembers(addedMembers.filter((u) => u._id !== user._id));\r\n    // Add removed user to search result list\r\n    setSearchResults([user, ...searchResults]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"addGroupMembers d-flex flex-column\">\r\n      {/* Selected Users tag list */}\r\n      <section\r\n        className=\"mx-auto px-3 py-2 overflow-auto d-flex flex-wrap\"\r\n        style={{\r\n          flex: \"0.33\",\r\n          borderRadius: \"15px\",\r\n          backgroundColor: \"#303030\",\r\n        }}\r\n      >\r\n        {addedMembers?.map((user) => (\r\n          <Chip\r\n            key={user?._id}\r\n            className=\"userChip text-light bg-success rounded-pill fs-6\"\r\n            avatar={\r\n              <Avatar\r\n                className=\"userChipAvatar\"\r\n                alt={user?.name}\r\n                src={user?.profilePic}\r\n              />\r\n            }\r\n            label={truncateString(user?.name?.split(\" \")[0], 12, 8)}\r\n            onDelete={() => unselectUser(user)}\r\n          />\r\n        ))}\r\n      </section>\r\n      {/* Search Bar */}\r\n      <SearchInput\r\n        ref={searchUserInput}\r\n        searchHandler={searchUsers}\r\n        autoFocus={true}\r\n        placeholder=\"Search Members\"\r\n        clearInput={() => {\r\n          setSearchQuery(\"\");\r\n          setSearchResults([]);\r\n          searchUserInput.current.focus();\r\n        }}\r\n      />\r\n      {/* Search Results */}\r\n      <section\r\n        className=\"position-relative mx-auto mt-2 overflow-auto\"\r\n        style={{ flex: \"1\", marginBottom: \"-10px\" }}\r\n      >\r\n        <div\r\n          // 'Event delegation'\r\n          onClick={(e) => {\r\n            const userId = e.target.dataset.user || e.target.alt;\r\n            if (!userId) return;\r\n\r\n            if (!isMemberSelected) setIsMemberSelected(true);\r\n            // Add selected user to tag list\r\n            const selectedUser = searchResults.find((u) => u._id === userId);\r\n            setGroupData({\r\n              ...groupData,\r\n              users: [...groupMembers, selectedUser],\r\n            });\r\n            // Add selected user to added member list\r\n            setAddedMembers([...addedMembers, selectedUser]);\r\n            // Remove selected user from search result list\r\n            setSearchResults(searchResults.filter((u) => u._id !== userId));\r\n          }}\r\n        >\r\n          {fetching ? (\r\n            <LoadingList listOf=\"Member\" dpRadius={\"43px\"} count={6} />\r\n          ) : searchResults.length > 0 ? (\r\n            searchResults.map((user) => (\r\n              <UserListItem\r\n                key={user._id}\r\n                user={user}\r\n                truncateValues={[21, 18]}\r\n              />\r\n            ))\r\n          ) : (\r\n            searchQuery &&\r\n            !fetching && (\r\n              <p className=\"text-light text-center fs-5 mt-3 mx-5\">\r\n                {isMemberSelected ? \"No Other Users \" : \"No Results \"}\r\n                Found for '\r\n                <span className=\"text-info\">\r\n                  {truncateString(searchQuery, 25, 22)}\r\n                </span>\r\n                '\r\n              </p>\r\n            )\r\n          )}\r\n        </div>\r\n      </section>\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMembersToGroup;\r\n","import { Avatar } from \"@mui/material\";\r\nimport LottieAnimation from \"../utils/LottieAnimation\";\r\nimport typingAnimData from \"../../animations/typing.json\";\r\nimport { useRef } from \"react\";\r\n\r\nconst TypingIndicator = ({ typingChatUser, showAvatar }) => {\r\n  const typingGif = useRef(null);\r\n  const typingUserData = typingChatUser?.toString().split(\"---\") || [];\r\n  const typingUserName = typingUserData[1] || \"\";\r\n  const isGroupChat = typingUserData[3] === \"true\";\r\n  return (\r\n    <span\r\n      className={`typingIndicator ${\r\n        typingChatUser ? \"displayTyping\" : \"hideTyping\"\r\n      } \r\n      d-flex pt-2 rounded-3 ps-2 ms-3`}\r\n    >\r\n      {showAvatar && (\r\n        <Avatar\r\n          alt={typingUserName || \"Receiver\"}\r\n          src={typingUserData[2] || \"Receiver\"}\r\n          style={{ height: 30, width: 30 }}\r\n        />\r\n      )}\r\n      <span className=\"ms-2\">\r\n        {typingUserName && isGroupChat ? `${typingUserName} is ` : \"\"}typing\r\n      </span>\r\n      <LottieAnimation\r\n        ref={typingGif}\r\n        className={\"\"}\r\n        style={{ height: 30, bottom: 0 }}\r\n        animationData={typingAnimData}\r\n      />\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default TypingIndicator;\r\n","import {\r\n  AudioFile,\r\n  Description,\r\n  DoneAll,\r\n  GifBox,\r\n  Image,\r\n  PictureAsPdf,\r\n  VideoFile,\r\n} from \"@mui/icons-material\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport { useAppSelector } from \"../../store/storeHooks\";\r\nimport {\r\n  dateStringOf,\r\n  isImageFile,\r\n  msgDateStringOf,\r\n  msgTimeStringOf,\r\n  truncateString,\r\n} from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"./CustomTooltip\";\r\nimport TypingIndicator from \"./TypingIndicator\";\r\n\r\nconst arrowStyles = { color: \"#A30CA7\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  padding: \"5px 12px\",\r\n  borderRadius: 5,\r\n  backgroundColor: \"#A30CA7\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ChatListItem = ({ chat, chatNotifCount, typingChatUser }) => {\r\n  const { selectedChat, loggedInUser } = useAppSelector(selectAppState);\r\n  const {\r\n    _id,\r\n    chatName,\r\n    receiverEmail,\r\n    isGroupChat,\r\n    lastMessage,\r\n    chatDisplayPic,\r\n  } = chat;\r\n  const tooltipTitle = isGroupChat\r\n    ? `Group: ${chatName}\\n(${chat?.users?.length} Members)`\r\n    : `${chatName}\\n${receiverEmail}`;\r\n\r\n  let lastMsgContent = lastMessage?.content\r\n    ?.replaceAll(\"<br>\", \"\\n\")\r\n    .replaceAll(\"&nbsp;\", \" \")\r\n    .replaceAll(\"<div>\", \"\\n\")\r\n    .replaceAll(\"</div>\", \"\\n\")\r\n    .replaceAll(\"<span>\", \"\")\r\n    .replaceAll(\"</span>\", \"\");\r\n\r\n  const lastMsgDate = new Date(lastMessage?.createdAt);\r\n  const lastMsgDateString = msgDateStringOf(lastMsgDate);\r\n\r\n  const lastMsgFileUrl = lastMessage?.fileUrl;\r\n  const fileContents = lastMessage?.file_name?.split(\"===\") || [];\r\n  const lastMsgFileName = fileContents[0] || \"\";\r\n  const lastMsgData = lastMsgContent || lastMsgFileName;\r\n  const fileType = fileContents[1]?.split(\"+++\")[1];\r\n  let lastMsgFileType;\r\n\r\n  if (lastMsgFileUrl) {\r\n    lastMsgFileType = isImageFile(lastMsgFileUrl)\r\n      ? \"image\"\r\n      : /(\\.gif)$/.test(lastMsgFileUrl)\r\n      ? \"gif\"\r\n      : fileType?.startsWith(\"video/\") ||\r\n        /(\\.mp4|\\.mov|\\.ogv|\\.webm)$/.test(lastMsgFileUrl)\r\n      ? \"video\"\r\n      : fileType?.startsWith(\"audio/\") ||\r\n        /(\\.mp3|\\.ogg|\\.wav)$/.test(lastMsgFileUrl)\r\n      ? \"audio\"\r\n      : /(\\.pdf)$/.test(lastMsgFileUrl)\r\n      ? \"pdf\"\r\n      : \"otherFile\";\r\n  }\r\n\r\n  return (\r\n    <div\r\n      data-chat={_id}\r\n      data-has-notifs={chatNotifCount}\r\n      className={`chatListItem w-100 user-select-none text-light pointer ${\r\n        selectedChat?._id === _id ? \"isSelected\" : \"\"\r\n      } d-flex justify-content-start align-items-center`}\r\n    >\r\n      {/* Chat Display Pic */}\r\n      <CustomTooltip\r\n        title={`View ${isGroupChat ? \"Group DP\" : \"Profile Pic\"}`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <Avatar\r\n          src={chatDisplayPic}\r\n          alt={chatName}\r\n          data-chat={_id}\r\n          data-has-notifs={chatNotifCount}\r\n          className={`img-fluid listItemAvatar chatListAvatar rounded-circle`}\r\n        />\r\n      </CustomTooltip>\r\n      {/* Chat Data */}\r\n      <div\r\n        data-chat={_id}\r\n        data-has-notifs={chatNotifCount}\r\n        className=\"chatListData w-100 d-flex flex-column align-items-start px-2\"\r\n      >\r\n        {/* Chat Name */}\r\n        <p\r\n          data-chat={_id}\r\n          data-has-notifs={chatNotifCount}\r\n          title={tooltipTitle}\r\n          className=\"chatListName fs-5 fw-bold text-info text-start\"\r\n        >\r\n          {truncateString(chatName, 31, 28)}\r\n        </p>\r\n        {lastMessage && (\r\n          <span\r\n            className=\"lastMsgDate\"\r\n            data-chat={_id}\r\n            data-has-notifs={chatNotifCount}\r\n            style={{ color: chatNotifCount ? \"#50F0B8\" : \"#b9b9b9\" }}\r\n          >\r\n            {lastMsgDateString === \"Today\"\r\n              ? msgTimeStringOf(lastMsgDate)\r\n              : lastMsgDateString !== \"Yesterday\"\r\n              ? dateStringOf(lastMsgDate)\r\n              : \"Yesterday\"}\r\n          </span>\r\n        )}\r\n        {lastMessage && chatNotifCount && (\r\n          <span\r\n            className={`notifBadge badge rounded-circle\r\n             position-absolute text-black bg-gradient`}\r\n            data-chat={_id}\r\n            data-has-notifs={chatNotifCount}\r\n            style={{\r\n              fontSize: chatNotifCount > 99 ? 12 : 13,\r\n              right: 17,\r\n              bottom: chatNotifCount > 9 ? 8 : 9,\r\n              padding:\r\n                chatNotifCount > 99\r\n                  ? \"6px 4px\"\r\n                  : chatNotifCount > 9\r\n                  ? \"6px 5px\"\r\n                  : \"4px 7px\",\r\n            }}\r\n          >\r\n            {chatNotifCount || \"\"}\r\n          </span>\r\n        )}\r\n        {/* Last Message Data */}\r\n        {typingChatUser ? (\r\n          <span style={{ color: \"#73F76D\", margin: \"-6px 0px -4px -30px\" }}>\r\n            <TypingIndicator typingChatUser={typingChatUser} />\r\n          </span>\r\n        ) : (\r\n          (lastMessage || lastMessage === null || isGroupChat) && (\r\n            <p\r\n              data-chat={_id}\r\n              data-has-notifs={chatNotifCount}\r\n              className=\"chatListLastMessage text-start\"\r\n            >\r\n              <span\r\n                data-chat={_id}\r\n                data-has-notifs={chatNotifCount}\r\n                className=\"text-warning\"\r\n              >\r\n                <>\r\n                  {lastMessage === null ||\r\n                  (isGroupChat && !lastMessage) ||\r\n                  (!isGroupChat &&\r\n                    lastMessage?.sender?._id !== loggedInUser?._id) ? (\r\n                    \"\"\r\n                  ) : lastMessage?.sender?._id === loggedInUser?._id ? (\r\n                    <>\r\n                      {isGroupChat ? (\r\n                        <>You: </>\r\n                      ) : (\r\n                        <DoneAll\r\n                          data-chat={_id}\r\n                          data-has-notifs={chatNotifCount}\r\n                          className=\"me-1 fs-5\"\r\n                          style={{ color: \"lightblue\" }}\r\n                        />\r\n                      )}\r\n                    </>\r\n                  ) : (\r\n                    truncateString(\r\n                      lastMessage?.sender?.name?.split(\" \")[0],\r\n                      12,\r\n                      8\r\n                    ) + \": \"\r\n                  )}\r\n                </>\r\n              </span>\r\n              {lastMsgFileUrl ? (\r\n                <span data-chat={_id} data-has-notifs={chatNotifCount}>\r\n                  {lastMsgFileType === \"image\" ? (\r\n                    <span\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      title={lastMsgData}\r\n                    >\r\n                      <Image\r\n                        data-chat={_id}\r\n                        data-has-notifs={chatNotifCount}\r\n                        className=\"fileIcon\"\r\n                      />{\" \"}\r\n                      {truncateString(lastMsgContent, 25, 22) || \"Photo\"}\r\n                    </span>\r\n                  ) : lastMsgFileType === \"gif\" ? (\r\n                    <span\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      title={lastMsgData}\r\n                    >\r\n                      <GifBox\r\n                        data-chat={_id}\r\n                        data-has-notifs={chatNotifCount}\r\n                        className=\"fileIcon\"\r\n                      />{\" \"}\r\n                      {truncateString(lastMsgContent, 25, 22) || \"Gif\"}\r\n                    </span>\r\n                  ) : lastMsgFileType === \"video\" ? (\r\n                    <span\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      title={lastMsgData}\r\n                    >\r\n                      <VideoFile\r\n                        data-chat={_id}\r\n                        data-has-notifs={chatNotifCount}\r\n                        className=\"fileIcon\"\r\n                      />{\" \"}\r\n                      {truncateString(lastMsgContent, 25, 22) || \"Video\"}\r\n                    </span>\r\n                  ) : lastMsgFileType === \"audio\" ? (\r\n                    <span\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      title={lastMsgData}\r\n                    >\r\n                      <AudioFile\r\n                        data-chat={_id}\r\n                        data-has-notifs={chatNotifCount}\r\n                        className=\"fileIcon\"\r\n                      />{\" \"}\r\n                      {truncateString(lastMsgContent, 25, 22) || \"Audio\"}\r\n                    </span>\r\n                  ) : lastMsgFileType === \"pdf\" ? (\r\n                    <span\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      title={lastMsgData}\r\n                    >\r\n                      <PictureAsPdf\r\n                        data-chat={_id}\r\n                        data-has-notifs={chatNotifCount}\r\n                        className=\"fileIcon\"\r\n                      />{\" \"}\r\n                      {truncateString(lastMsgData, 22, 19) || \"Pdf\"}\r\n                    </span>\r\n                  ) : (\r\n                    <span\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      title={lastMsgData}\r\n                    >\r\n                      <Description\r\n                        data-chat={_id}\r\n                        data-has-notifs={chatNotifCount}\r\n                        className=\"fileIcon\"\r\n                      />{\" \"}\r\n                      {truncateString(lastMsgData, 22, 19) || \"File\"}\r\n                    </span>\r\n                  )}\r\n                </span>\r\n              ) : (\r\n                <span\r\n                  data-chat={_id}\r\n                  data-has-notifs={chatNotifCount}\r\n                  title={lastMsgContent}\r\n                >\r\n                  {lastMessage === null\r\n                    ? \" Last Message was deleted\"\r\n                    : isGroupChat && !lastMessage\r\n                    ? `New Group Created`\r\n                    : truncateString(lastMsgContent, 35, 32)}\r\n                </span>\r\n              )}\r\n            </p>\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListItem;\r\n","const FILE_STYLES = { width: \"90vw\", height: \"82vh\", borderRadius: 10 };\r\nconst PLACEHOLDER_IMG = process.env.REACT_APP_PLACEHOLDER_IMG_URL;\r\n\r\nconst FullSizeImage = ({ event, audioSrc, videoSrc }) => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n      {audioSrc ? (\r\n        <audio\r\n          src={audioSrc}\r\n          style={{ width: \"clamp(300px, 70%, 600px)\" }}\r\n          autoPlay\r\n          controls\r\n        >\r\n          Your browser does not support audio tag.\r\n        </audio>\r\n      ) : videoSrc ? (\r\n        <video src={videoSrc} style={FILE_STYLES} autoPlay controls>\r\n          Your browser does not support video tag.\r\n        </video>\r\n      ) : (\r\n        <img\r\n          src={event.target?.src || PLACEHOLDER_IMG}\r\n          alt={event.target?.alt || \"fullSizeImg\"}\r\n          className=\"img-fluid d-inline-block mx-auto\"\r\n          style={{ ...FILE_STYLES, objectFit: \"contain\" }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullSizeImage;\r\n","import { GroupAdd, Search } from \"@mui/icons-material\";\r\n\r\nconst GettingStarted = () => {\r\n  const iconWrapperStyles = \"text-light border d-inline-block rounded-pill\";\r\n\r\n  return (\r\n    <div\r\n      className=\"w-75 mt-4 mx-auto\"\r\n      style={{ color: \"lightblue\", fontSize: 18 }}\r\n    >\r\n      <p>\r\n        Click on{\" \"}\r\n        <span className={`${iconWrapperStyles} px-2`}>\r\n          <Search />\r\n        </span>{\" \"}\r\n        button at the top left, to search users by name or email, and then click\r\n        on a user to start a one-to-one chat.\r\n      </p>\r\n      <p>\r\n        You can also click on{\" \"}\r\n        <span\r\n          className={`${iconWrapperStyles}`}\r\n          style={{ padding: \"0px 10px 3px 13px\" }}\r\n        >\r\n          <GroupAdd />\r\n        </span>{\" \"}\r\n        button to search users and create a group chat.\r\n      </p>\r\n      <p style={{ color: \"#F2AFEC\" }}>\r\n        If you're not sure what to search, enter{\" \"}\r\n        <span className={`${iconWrapperStyles} bg-secondary border-0 px-2`}>\r\n          .\r\n        </span>{\" \"}\r\n        in search box to list all users.\r\n      </p>\r\n      <p>\r\n        After creating a chat, click the chat avatar at top-left of messages\r\n        view, for receiver/group info.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GettingStarted;\r\n","import { GroupAdd } from \"@mui/icons-material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  debounce,\r\n  getAxiosConfig,\r\n  getOneToOneChatReceiver,\r\n  truncateString,\r\n} from \"../utils/appUtils\";\r\nimport axios from \"../utils/axios\";\r\nimport AddMembersToGroup from \"./dialogs/AddMembersToGroup\";\r\nimport ChatListItem from \"./utils/ChatListItem\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport FullSizeImage from \"./utils/FullSizeImage\";\r\nimport LoadingList from \"./utils/LoadingList\";\r\nimport SearchInput from \"./utils/SearchInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setDeleteNotifsOfChat,\r\n  setFetchMsgs,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n} from \"../store/slices/AppSlice\";\r\nimport {\r\n  displayDialog,\r\n  setShowDialogActions,\r\n} from \"../store/slices/CustomDialogSlice\";\r\nimport { displayToast } from \"../store/slices/ToastSlice\";\r\nimport GettingStarted from \"./GettingStarted\";\r\n\r\nconst DEFAULT_GROUP_DP = process.env.REACT_APP_DEFAULT_GROUP_DP;\r\n\r\nconst arrowStyles = { color: \"#666\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 16,\r\n  padding: \"5px 12px\",\r\n  backgroundColor: \"#666\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ChatListView = ({\r\n  chats,\r\n  setChats,\r\n  loadingMsgs,\r\n  setDialogBody,\r\n  typingChatUsers,\r\n}) => {\r\n  const { loggedInUser, selectedChat, refresh } = useSelector(selectAppState);\r\n  const notifs = [...loggedInUser?.notifications];\r\n  const dispatch = useDispatch();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [filteredChats, setFilteredChats] = useState(chats);\r\n  const searchChatInput = useRef();\r\n\r\n  const openCreateGroupChatDialog = () => {\r\n    dispatch(\r\n      setGroupInfo({\r\n        chatDisplayPic: null,\r\n        chatDisplayPicUrl: DEFAULT_GROUP_DP,\r\n        chatName: \"\",\r\n        users: [],\r\n      })\r\n    );\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<AddMembersToGroup forCreateGroup={true} />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Add Group Members\",\r\n        nolabel: \"Cancel\",\r\n        yeslabel: \"Next\",\r\n        action: null,\r\n      })\r\n    );\r\n  };\r\n\r\n  const displayFullSizeImage = (e) => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<FullSizeImage event={e} />);\r\n    dispatch(\r\n      displayDialog({\r\n        isFullScreen: true,\r\n        title: e.target?.alt || \"Display Pic\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const fetchChats = async () => {\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.get(`/api/chat`, config);\r\n\r\n      const mappedChats = data\r\n        .map((chat) => {\r\n          const { isGroupChat, users } = chat;\r\n\r\n          if (!isGroupChat) {\r\n            const receiver = getOneToOneChatReceiver(loggedInUser, users);\r\n            chat[\"chatName\"] = receiver?.name;\r\n            chat[\"receiverEmail\"] = receiver?.email;\r\n            chat[\"chatDisplayPic\"] = receiver?.profilePic;\r\n          }\r\n          return chat;\r\n        })\r\n        .filter((chat) => chat.lastMessage !== undefined || chat.isGroupChat);\r\n\r\n      setChats(mappedChats);\r\n      setFilteredChats(mappedChats);\r\n      if (loading) setLoading(false);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Chats\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      if (loading) setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Debouncing filterChats method to limit the no. of fn calls\r\n  const searchChats = debounce((e) => {\r\n    const chatNameInput = e.target.value?.toLowerCase().trim();\r\n    if (!chatNameInput) return setFilteredChats(chats);\r\n    setFilteredChats(\r\n      chats.filter((chat) =>\r\n        chat?.chatName?.toLowerCase().includes(chatNameInput)\r\n      )\r\n    );\r\n  }, 600);\r\n\r\n  useEffect(() => {\r\n    fetchChats();\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <div\r\n      className={`chatpageDiv chatpageView chatListView text-light ${\r\n        selectedChat ? \"d-none d-md-flex\" : \"d-flex\"\r\n      } flex-column user-select-none mx-1 p-2 ${\r\n        loadingMsgs ? \"pe-none\" : \"pe-auto\"\r\n      }`}\r\n    >\r\n      <section className=\"position-relative\">\r\n        <p className=\"chatListHeader fw-bold fs-4 rounded-pill bg-info bg-opacity-10 py-2\">\r\n          CHATS\r\n          {/* Create Group Chat */}\r\n          <CustomTooltip\r\n            title=\"Create New Group Chat\"\r\n            placement=\"bottom-end\"\r\n            arrow\r\n          >\r\n            <button\r\n              className={`btnCreateGroup pointer btn btn-outline-secondary text-light px-3`}\r\n              onClick={openCreateGroupChatDialog}\r\n            >\r\n              <GroupAdd />\r\n            </button>\r\n          </CustomTooltip>\r\n        </p>\r\n      </section>\r\n      {/* Search Bar */}\r\n      {chats?.length > 0 && (\r\n        <section className=\"searchChat\">\r\n          <SearchInput\r\n            ref={searchChatInput}\r\n            searchHandler={searchChats}\r\n            autoFocus={false}\r\n            placeholder=\"Search Chat\"\r\n            clearInput={() => setFilteredChats(chats)}\r\n          />\r\n        </section>\r\n      )}\r\n      {/* Chat list */}\r\n      <section className=\"chatList m-1 p-1 overflow-auto position-relative\">\r\n        {loading ? (\r\n          <LoadingList listOf=\"Chat\" dpRadius={\"49px\"} count={8} />\r\n        ) : filteredChats?.length > 0 ? (\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={(e) => {\r\n              const { dataset } = e.target;\r\n              const parentDataset = e.target.parentNode.dataset;\r\n              const clickedChatId = dataset.chat || parentDataset.chat;\r\n              const hasNotifs = dataset.hasNotifs || parentDataset.hasNotifs;\r\n              if (!clickedChatId) return;\r\n\r\n              if (e.target.className?.toString().includes(\"MuiAvatar-img\")) {\r\n                return displayFullSizeImage(e);\r\n              }\r\n              const clickedChat = filteredChats.find(\r\n                (chat) => chat._id === clickedChatId\r\n              );\r\n              if (clickedChat._id === selectedChat?._id) return;\r\n              dispatch(setSelectedChat(clickedChat));\r\n              dispatch(setFetchMsgs(true)); // To fetch selected chat msgs\r\n              if (clickedChat?.isGroupChat) dispatch(setGroupInfo(clickedChat));\r\n\r\n              // Delete notifications if notif badge is present\r\n              if (hasNotifs) dispatch(setDeleteNotifsOfChat(clickedChatId));\r\n            }}\r\n          >\r\n            {filteredChats.map((chat) => {\r\n              let chatNotifCount = 0;\r\n              notifs?.forEach((notif) => {\r\n                if (notif.chat._id === chat._id) ++chatNotifCount;\r\n              });\r\n              return (\r\n                <ChatListItem\r\n                  key={chat._id}\r\n                  chat={chat}\r\n                  chatNotifCount={chatNotifCount || \"\"}\r\n                  typingChatUser={typingChatUsers?.find(\r\n                    (u) => u?.toString()?.split(\"---\")[0] === chat._id\r\n                  )}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <span className=\"d-inline-block w-100 text-light fs-3 mt-4 mx-auto\">\r\n              {chats?.length === 0\r\n                ? `Hi ${\r\n                    truncateString(loggedInUser?.name?.split(\" \")[0], 12, 9) ||\r\n                    \"There\"\r\n                  } 😎`\r\n                : \"No Chats Found\"}\r\n            </span>\r\n            {chats?.length === 0 && <GettingStarted />}\r\n          </>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListView;\r\n","import { getOneToOneChatReceiver, truncateString } from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport FullSizeImage from \"../utils/FullSizeImage\";\r\nimport { useState } from \"react\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\n\r\nconst arrowStyles = { color: \"#111\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  padding: \"5px 10px\",\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ViewProfileBody = ({ memberProfilePic, memberName, memberEmail }) => {\r\n  const { loggedInUser, selectedChat } = useSelector(selectAppState);\r\n  let name, email, profilePic;\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const { setChildDialogBody, displayChildDialog } = childDialogMethods;\r\n\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n\r\n  if (memberProfilePic && memberName && memberEmail) {\r\n    name = memberName;\r\n    email = memberEmail;\r\n    profilePic = memberProfilePic;\r\n  } else {\r\n    const receiver = getOneToOneChatReceiver(loggedInUser, selectedChat?.users);\r\n    name = receiver?.name;\r\n    email = receiver?.email;\r\n    profilePic = receiver?.profilePic;\r\n  }\r\n\r\n  const displayFullSizeImage = (e) => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    setChildDialogBody(<FullSizeImage event={e} />);\r\n    displayChildDialog({\r\n      isFullScreen: true,\r\n      title: e.target?.alt || \"Profile Pic\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* View Profile Pic */}\r\n      <section className=\"dialogField d-flex position-relative mb-4\">\r\n        <CustomTooltip title=\"View Profile Pic\" placement=\"top\" arrow>\r\n          <img\r\n            className=\"img-fluid pointer d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n            id=\"view_profilePic\"\r\n            onClick={displayFullSizeImage}\r\n            src={profilePic}\r\n            alt={name}\r\n          />\r\n        </CustomTooltip>\r\n      </section>\r\n      {/* View Name */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-15px\" }}>\r\n          <CustomTooltip\r\n            title={name?.length > 20 ? name : \"\"}\r\n            placement=\"top\"\r\n            arrow\r\n          >\r\n            <div\r\n              className=\"w-100 h1 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"32px\" }}\r\n            >\r\n              {truncateString(name, 25, 21)}\r\n            </div>\r\n          </CustomTooltip>\r\n        </div>\r\n      </section>\r\n      {/* View Email */}\r\n      <section\r\n        className={`dialogField text-center mb-2`}\r\n        style={{ marginTop: \"-10px\" }}\r\n      >\r\n        <CustomTooltip\r\n          title={email?.length > 20 ? email : \"\"}\r\n          placement=\"bottom\"\r\n          arrow\r\n        >\r\n          <span className=\"fs-4\" style={{ color: \"lightblue\" }}>\r\n            {truncateString(email, 25, 21)}\r\n          </span>\r\n        </CustomTooltip>\r\n      </section>\r\n\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewProfileBody;\r\n","import { KeyboardArrowDown } from \"@mui/icons-material\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\n\r\nconst arrowStyles = { color: \"#E6480C\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  borderRadius: 10,\r\n  backgroundColor: \"#E6480C\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst GroupMemberItem = ({ user, truncateValues }) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const { _id, name, email, profilePic } = user;\r\n  const [max, index] = truncateValues;\r\n  const isLoggedInUser = _id === loggedInUser?._id;\r\n\r\n  return (\r\n    <div\r\n      data-user={_id}\r\n      className={`groupMemberItem position-relative user-select-none d-flex text-light justify-content-start align-items-center px-3 ${\r\n        !isLoggedInUser && \"pointer\"\r\n      }`}\r\n    >\r\n      {user?.isGroupAdmin && (\r\n        <span\r\n          className={`adminBadge position-absolute fw-light badge rounded-3 bg-success`}\r\n          style={{ cursor: \"auto\" }}\r\n        >\r\n          Admin\r\n        </span>\r\n      )}\r\n      {!isLoggedInUser && (\r\n        <span\r\n          data-user={_id}\r\n          className=\"memberSettingsIcon text-light position-absolute rounded-circle\"\r\n        >\r\n          <KeyboardArrowDown data-user={_id} />\r\n        </span>\r\n      )}\r\n      <CustomTooltip\r\n        data-user={_id}\r\n        title={`${isLoggedInUser ? \"\" : `${name} (${email})`}`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <Avatar\r\n          src={profilePic}\r\n          alt={_id}\r\n          data-user={_id}\r\n          className={`listItemAvatar groupMemberAvatar`}\r\n        />\r\n      </CustomTooltip>\r\n      <div\r\n        data-user={_id}\r\n        className=\"groupMemberData d-flex flex-column align-items-start px-2\"\r\n      >\r\n        <p data-user={_id} className=\"groupMemberName fw-bold text-info\">\r\n          {isLoggedInUser ? \"You\" : truncateString(name, max, index)}\r\n        </p>\r\n        <p data-user={_id} className=\"groupMemberEmail\">\r\n          {truncateString(email, max, index)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupMemberItem;\r\n","import {\r\n  AdminPanelSettings,\r\n  GroupRemove,\r\n  InfoOutlined,\r\n  Message,\r\n} from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport axios from \"../../utils/axios\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\nimport { getAxiosConfig, truncateString } from \"../../utils/appUtils\";\r\nimport ViewProfileBody from \"../dialogs/ViewProfileBody\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setDeleteNotifsOfChat,\r\n  setFetchMsgs,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n  toggleRefresh,\r\n} from \"../../store/slices/AppSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { setLoading } from \"../../store/slices/FormfieldSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\n\r\nconst MemberOptionsMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  clickedMember,\r\n  setShowDialogActions,\r\n  setShowDialogClose,\r\n  childDialogMethods,\r\n}) => {\r\n  const { loggedInUser, refresh, groupInfo, clientSocket, isSocketConnected } =\r\n    useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n\r\n  const { setChildDialogBody, displayChildDialog } = childDialogMethods;\r\n  const isLoggedInUserGroupAdmin = groupInfo?.groupAdmins?.some(\r\n    (admin) => admin?._id === loggedInUser?._id\r\n  );\r\n  const clickedMemberName = truncateString(\r\n    clickedMember?.name?.split(\" \")[0],\r\n    12,\r\n    9\r\n  );\r\n  const styledMemberName = (\r\n    <span style={{ color: \"violet\", fontSize: \"22px\" }}>\r\n      {clickedMemberName}\r\n    </span>\r\n  );\r\n  const updateView = (data) => {\r\n    dispatch(toggleRefresh());\r\n    dispatch(setSelectedChat(data));\r\n  };\r\n\r\n  const displayError = (\r\n    error = \"Oops! Something went wrong\",\r\n    title = \"Operation Failed\"\r\n  ) => {\r\n    dispatch(\r\n      displayToast({\r\n        title,\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"bottom-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  // Create/Retreive chat when 'Message Member' is clicked\r\n  const openChat = async () => {\r\n    dispatch(hideDialog()); // Close all dialogs by closing parent dialog\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.post(\r\n        `/api/chat`,\r\n        { userId: clickedMember?._id },\r\n        config\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n      dispatch(setFetchMsgs(true));\r\n      dispatch(setDeleteNotifsOfChat(data._id));\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Create/Retrieve Chat\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const openViewProfileDialog = () => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    setChildDialogBody(\r\n      <ViewProfileBody\r\n        memberProfilePic={clickedMember?.profilePic}\r\n        memberName={clickedMember?.name}\r\n        memberEmail={clickedMember?.email}\r\n      />\r\n    );\r\n    displayChildDialog({ title: \"View Profile\" });\r\n  };\r\n\r\n  const makeGroupAdmin = async () => {\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.post(\r\n        `/api/chat/group/make-admin`,\r\n        { userId: clickedMember?._id, chatId: groupInfo?._id },\r\n        config\r\n      );\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n          createdAdmin: clickedMember,\r\n        });\r\n      }\r\n      dispatch(\r\n        displayToast({\r\n          message: `${clickedMemberName} is now a Group Admin`,\r\n          type: \"success\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setGroupInfo(data));\r\n      updateView(data);\r\n      dispatch(setLoading(false));\r\n    } catch (error) {\r\n      displayError(error, \"Make Group Admin Failed\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const dismissAsAdmin = async () => {\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/dismiss-admin`,\r\n        { userId: clickedMember?._id, chatId: groupInfo?._id },\r\n        config\r\n      );\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n          dismissedAdmin: clickedMember,\r\n        });\r\n      }\r\n      dispatch(\r\n        displayToast({\r\n          message: `${clickedMemberName} is no longer a Group Admin`,\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      dispatch(setGroupInfo(data));\r\n      updateView(data);\r\n      return \"membersUpdated\";\r\n    } catch (error) {\r\n      displayError(error, \"Dismiss As Group Admin Failed\");\r\n      dispatch(setLoading(false));\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  const removeFromGroup = async () => {\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/remove`,\r\n        {\r\n          userToBeRemoved: clickedMember?._id,\r\n          isGroupAdmin: clickedMember?.isGroupAdmin,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      data[\"removedUser\"] = clickedMember;\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n        });\r\n      }\r\n      dispatch(\r\n        displayToast({\r\n          message: `${clickedMemberName} removed from Group`,\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      dispatch(setGroupInfo(data));\r\n      updateView(data);\r\n      return \"membersUpdated\";\r\n    } catch (error) {\r\n      displayError(error, \"Remove From Group Failed\");\r\n      dispatch(setLoading(false));\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  // Confirmation dialogs\r\n  const openDismissAsAdminConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>Are you sure you want to dismiss {styledMemberName} as group admin?</>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Dismiss As Admin\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: dismissAsAdmin,\r\n    });\r\n  };\r\n\r\n  const openRemoveFromGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>Are you sure you want to remove {styledMemberName} from this group?</>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Remove From Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: removeFromGroup,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      {/* Message X */}\r\n      <MenuItem sx={menuItemProps} onClick={openChat}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Message />\r\n        </ListItemIcon>\r\n        <MenuItemText>{`Message ${\r\n          clickedMemberName || \"Member\"\r\n        }`}</MenuItemText>\r\n      </MenuItem>\r\n      {/* View X */}\r\n      <MenuItem sx={menuItemProps} onClick={openViewProfileDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <InfoOutlined />\r\n        </ListItemIcon>\r\n        <MenuItemText>{`View ${clickedMemberName || \"Member\"}`}</MenuItemText>\r\n      </MenuItem>\r\n      {/* Make Group Admin / Dismiss as Admin */}\r\n      {isLoggedInUserGroupAdmin && (\r\n        <MenuItem\r\n          sx={menuItemProps}\r\n          onClick={\r\n            clickedMember?.isGroupAdmin\r\n              ? openDismissAsAdminConfirmDialog\r\n              : makeGroupAdmin\r\n          }\r\n        >\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <AdminPanelSettings />\r\n          </ListItemIcon>\r\n          <MenuItemText>\r\n            {clickedMember?.isGroupAdmin\r\n              ? \"Dismiss as Admin\"\r\n              : \"Make Group Admin\"}\r\n          </MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n      {/* Remove X */}\r\n      {isLoggedInUserGroupAdmin && (\r\n        <MenuItem sx={menuItemProps} onClick={openRemoveFromGroupConfirmDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <GroupRemove />\r\n          </ListItemIcon>\r\n          <MenuItemText>{`Remove ${\r\n            clickedMemberName || \"Member\"\r\n          }`}</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MemberOptionsMenu;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { debounce } from \"../../utils/appUtils\";\r\nimport SearchInput from \"../utils/SearchInput\";\r\nimport GroupMemberItem from \"../utils/GroupMemberItem\";\r\nimport MemberOptionsMenu from \"../menus/MemberOptionsMenu\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\n\r\nlet filteredMembersCache = [];\r\n\r\nconst ViewGroupMembers = () => {\r\n  const { loggedInUser, groupInfo } = useSelector(selectAppState);\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n  const groupMembers = groupInfo?.users;\r\n  const admins = groupInfo?.groupAdmins;\r\n  const [clickedMember, setClickedMember] = useState(null);\r\n  const [memberOptionsMenuAnchor, setMemberOptionsMenuAnchor] = useState(null);\r\n  // LoggedInUser and Group Admins should be at the top\r\n  const sortMembers = () => {\r\n    return [\r\n      loggedInUser,\r\n      ...admins?.filter((admin) => admin?._id !== loggedInUser?._id),\r\n      ...groupMembers?.filter(\r\n        (member) =>\r\n          member?._id !== loggedInUser?._id &&\r\n          admins?.every((admin) => admin?._id !== member?._id)\r\n      ),\r\n    ].map((member) => {\r\n      return {\r\n        ...member,\r\n        isGroupAdmin: admins?.some((admin) => member?._id === admin?._id),\r\n      };\r\n    });\r\n  };\r\n\r\n  // Update the member list whenever groupInfo is updated\r\n  useEffect(() => {\r\n    if (!groupInfo) return;\r\n    filteredMembersCache = sortMembers();\r\n    setFilteredMembers(filteredMembersCache);\r\n  }, [groupInfo]);\r\n\r\n  const filterMemberInput = useRef(null);\r\n  const [filteredMembers, setFilteredMembers] = useState(filteredMembersCache);\r\n\r\n  // Debouncing filterMembers method to limit the no. of fn calls\r\n  const filterMembers = debounce((e) => {\r\n    const memberNameInput = e.target?.value?.toLowerCase().trim();\r\n    if (!memberNameInput) {\r\n      return setFilteredMembers(filteredMembersCache);\r\n    }\r\n    setFilteredMembers(\r\n      filteredMembersCache?.filter(\r\n        (user) =>\r\n          user?.name?.toLowerCase().includes(memberNameInput) ||\r\n          user?.email?.toLowerCase().includes(memberNameInput)\r\n      )\r\n    );\r\n  }, 600);\r\n\r\n  const openMemberOptionsMenu = (e) => setMemberOptionsMenuAnchor(e.target);\r\n\r\n  return (\r\n    <div\r\n      className=\"addGroupMembers d-flex flex-column\"\r\n      style={{ height: \"75vh\" }}\r\n    >\r\n      {/* Member Count */}\r\n      <p className=\"h3 text-center text-light\" style={{ marginTop: \"-5px\" }}>\r\n        {`${groupMembers?.length} Member${groupMembers?.length > 1 ? \"s\" : \"\"}`}\r\n      </p>\r\n      {/* Search Bar */}\r\n      <section className=\"searchChat\" style={{ marginTop: \"-15px\" }}>\r\n        <SearchInput\r\n          ref={filterMemberInput}\r\n          searchHandler={filterMembers}\r\n          autoFocus={false}\r\n          placeholder=\"Search Member\"\r\n          clearInput={() => setFilteredMembers(filteredMembersCache)}\r\n        />\r\n      </section>\r\n      {/* Member list */}\r\n      <section className=\"chatList p-1 overflow-auto position-relative\">\r\n        {filteredMembers?.length > 0 ? (\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={(e) => {\r\n              const userId =\r\n                e.target?.dataset.user ||\r\n                e.target.parentNode.dataset.user ||\r\n                e.target.alt;\r\n              if (userId) {\r\n                // Don't display member options menu for loggedInUser\r\n                if (loggedInUser?._id === userId) return;\r\n\r\n                setClickedMember(\r\n                  filteredMembers?.find((m) => m?._id === userId)\r\n                );\r\n                openMemberOptionsMenu(e);\r\n              }\r\n            }}\r\n          >\r\n            {filteredMembers.map((member) => (\r\n              <GroupMemberItem\r\n                key={member._id}\r\n                user={member}\r\n                truncateValues={[21, 18]}\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <span className=\"d-inline-block w-100 text-center text-light h5 mt-4 mx-auto\">\r\n            No Members Found\r\n          </span>\r\n        )}\r\n      </section>\r\n      <MemberOptionsMenu\r\n        anchor={memberOptionsMenuAnchor}\r\n        setAnchor={setMemberOptionsMenuAnchor}\r\n        clickedMember={clickedMember}\r\n        setShowDialogActions={setShowDialogActions}\r\n        setShowDialogClose={setShowDialogClose}\r\n        childDialogMethods={childDialogMethods}\r\n      />\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewGroupMembers;\r\n","import { useRef, useState } from \"react\";\r\nimport {\r\n  Delete,\r\n  Edit,\r\n  InfoOutlined,\r\n  Logout,\r\n  PersonAdd,\r\n} from \"@mui/icons-material\";\r\nimport { CircularProgress, IconButton } from \"@mui/material\";\r\nimport axios from \"../../utils/axios\";\r\nimport {\r\n  getAxiosConfig,\r\n  isImageFile,\r\n  truncateString,\r\n  TWO_MB,\r\n} from \"../../utils/appUtils\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport EditNameBody from \"./EditNameBody\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport AddMembersToGroup from \"./AddMembersToGroup\";\r\nimport ViewGroupMembers from \"./ViewGroupMembers\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport FullSizeImage from \"../utils/FullSizeImage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n  toggleRefresh,\r\n} from \"../../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\n\r\nconst arrowStyles = { color: \"#111\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  padding: \"5px 10px\",\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst GroupInfoBody = ({ messages, deleteNotifications }) => {\r\n  const { loggedInUser, refresh, groupInfo, clientSocket, isSocketConnected } =\r\n    useSelector(selectAppState);\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const { loading, disableIfLoading } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n  const { setChildDialogBody, displayChildDialog, closeChildDialog } =\r\n    childDialogMethods;\r\n\r\n  const groupDP = groupInfo?.chatDisplayPic;\r\n  const groupName = groupInfo?.chatName;\r\n  const groupMembers = groupInfo?.users;\r\n  const admins = groupInfo?.groupAdmins;\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [editGroupDpMenuAnchor, setEditGroupDpMenuAnchor] = useState(null);\r\n  const isUserGroupAdmin = admins?.some(\r\n    (admin) => admin?._id === loggedInUser?._id\r\n  );\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n  const imgInput = useRef(null);\r\n  const btnClassName = \"w-100 btn text-light fs-5\";\r\n\r\n  const displayWarning = (message = \"Warning\", duration = 3000) => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"warning\",\r\n        duration,\r\n        position: \"top-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const displayError = (\r\n    error = \"Oops! Something went wrong\",\r\n    title = \"Operation Failed\"\r\n  ) => {\r\n    dispatch(\r\n      displayToast({\r\n        title,\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"top-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const displaySuccess = (message = \"Operation Successful\") => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"success\",\r\n        duration: 3000,\r\n        position: \"bottom-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const updateView = (data) => {\r\n    dispatch(setGroupInfo(data));\r\n    dispatch(toggleRefresh());\r\n    dispatch(setSelectedChat(data)); // To update messages view\r\n  };\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") {\r\n      e.target.click();\r\n    }\r\n  };\r\n\r\n  // To retreive added members from `AddMembersToGroup` dialog\r\n  let updatedName = \"\";\r\n  const getUpdatedName = (updatedValue, options) => {\r\n    updatedName = updatedValue;\r\n    if (options?.submitUpdatedName) updateGroupName({ enterKeyClicked: true });\r\n  };\r\n\r\n  const updateGroupName = async (options) => {\r\n    if (!updatedName) return displayWarning(\"Please Enter Valid Group Name\");\r\n\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/chat/group/update-name\",\r\n        { groupName: updatedName, chatId: groupInfo?._id },\r\n        config\r\n      );\r\n\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n        });\r\n      }\r\n      displaySuccess(\"Group Name Updated Successfully\");\r\n\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n      if (options?.enterKeyClicked) closeChildDialog();\r\n      else return \"profileUpdated\";\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Update Group Name\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Update Group Display Pic\r\n  const updateGroupDp = async (e) => {\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n\r\n    if (!isImageFile(image.name)) {\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Invalid Image File\",\r\n          message: \"Please Select an Image File (png/jpg/jpeg/svg/webp)\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    if (image.size >= TWO_MB) {\r\n      imgInput.current.value = \"\";\r\n      return displayWarning(\"Please Select an Image Smaller than 2 MB\", 4000);\r\n    }\r\n    dispatch(setLoading(true));\r\n    setUploading(true);\r\n    const config = getAxiosConfig({ loggedInUser, formData: true });\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"displayPic\", image);\r\n    formData.append(\"currentDP\", groupDP);\r\n    formData.append(\"cloudinary_id\", groupInfo?.cloudinary_id);\r\n    formData.append(\"chatId\", groupInfo?._id);\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/chat/group/update-dp\",\r\n        formData,\r\n        config\r\n      );\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n        });\r\n      }\r\n      displaySuccess(\"Group DP Updated Successfully\");\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n      updateView(data);\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Update Group DP\");\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const deleteGroupDp = async () => {\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/delete-dp`,\r\n        {\r\n          currentDP: groupDP,\r\n          cloudinary_id: groupInfo?.cloudinary_id,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n        });\r\n      }\r\n      displaySuccess(\"Group DP Deleted Successfully\");\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Delete Group DP\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const exitGroup = async () => {\r\n    if (groupMembers?.length === 1) return deleteGroup();\r\n\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/remove`,\r\n        {\r\n          userToBeRemoved: loggedInUser?._id,\r\n          isGroupAdmin: isUserGroupAdmin,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n        });\r\n      }\r\n      dispatch(\r\n        displayToast({\r\n          message: `Exited From '${data?.chatName}' Group`,\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      updateView(null);\r\n      dispatch(hideDialog());\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Exit Group\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  const deleteGroup = async () => {\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const deleteGroupPromise = axios.put(\r\n        `/api/chat/group/delete`,\r\n        {\r\n          currentDP: groupInfo?.chatDisplayPic,\r\n          cloudinary_id: groupInfo?.cloudinary_id,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n      const deleteMessagesPromise = messages?.length\r\n        ? axios.put(\r\n            `/api/message/delete`,\r\n            {\r\n              messageIds: JSON.stringify(messages?.map((m) => m._id)),\r\n              isDeleteGroupRequest: true,\r\n            },\r\n            config\r\n          )\r\n        : Promise.resolve();\r\n\r\n      // Parallel execution of independent promises\r\n      await Promise.all([deleteGroupPromise, deleteMessagesPromise]);\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp deleted\", {\r\n          admin: loggedInUser,\r\n          deletedGroup: groupInfo,\r\n        });\r\n      }\r\n      displaySuccess(\"Group Deleted Successfully\");\r\n      dispatch(setLoading(false));\r\n      updateView(null);\r\n      dispatch(hideDialog());\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Delete Group\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Open confirm dialogs\r\n  const openExitGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>\r\n        {groupMembers?.length === 1\r\n          ? `Since you're the only group member, this group will be \r\n            DELETED if you exit. Are you sure you want to exit?`\r\n          : `This group will be removed from your chats. \r\n             Are you sure you want to exit this group?`}\r\n      </>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Exit Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Exiting...\",\r\n      action: exitGroup,\r\n    });\r\n  };\r\n\r\n  const openDeleteGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>\r\n        All messages and files related to this group will be deleted and this\r\n        group will be removed from the chats of ALL MEMBERS. Are you sure you\r\n        want to delete this group?\r\n      </>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Delete Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteGroup,\r\n    });\r\n  };\r\n\r\n  // Open edit name dialog\r\n  const openEditGroupNameDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <EditNameBody\r\n        originalName={groupInfo?.chatName}\r\n        getUpdatedName={getUpdatedName}\r\n        placeholder=\"Enter New Group Name\"\r\n      />\r\n    );\r\n    displayChildDialog({\r\n      title: \"Edit Group Name\",\r\n      nolabel: \"CANCEL\",\r\n      yeslabel: \"SAVE\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: updateGroupName,\r\n    });\r\n  };\r\n\r\n  // Open delete photo confirm dialog\r\n  const openDeletePhotoConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(<>Are you sure you want to delete this display pic?</>);\r\n    displayChildDialog({\r\n      title: \"Delete Display Pic\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteGroupDp,\r\n    });\r\n  };\r\n\r\n  // To retreive added members from `AddMembersToGroup` dialog\r\n  let addedMembers = [];\r\n  const getAddedMembers = (updatedMembers) => {\r\n    addedMembers = updatedMembers;\r\n  };\r\n\r\n  const addMembersToGroup = async () => {\r\n    if (!isUserGroupAdmin)\r\n      return displayWarning(\"Only Admin Can Add Members to Group\");\r\n\r\n    if (!addedMembers?.length)\r\n      return displayWarning(\"Please Select Atleast 1 Member to Add\");\r\n\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/chat/group/add\",\r\n        {\r\n          usersToBeAdded: JSON.stringify(addedMembers),\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n        });\r\n      }\r\n      displaySuccess(\"Successfully Added Member/s to Group\");\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Add Members to Group\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Open Add members dialog\r\n  const openAddMembersDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(<AddMembersToGroup getAddedMembers={getAddedMembers} />);\r\n    displayChildDialog({\r\n      title: \"Add Group Members\",\r\n      nolabel: \"Cancel\",\r\n      yeslabel: \"Add\",\r\n      loadingYeslabel: \"Adding...\",\r\n      action: addMembersToGroup,\r\n    });\r\n  };\r\n\r\n  const openViewMembersDialog = () => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    setChildDialogBody(<ViewGroupMembers />);\r\n    displayChildDialog({\r\n      title: ``,\r\n    });\r\n  };\r\n\r\n  const displayFullSizeImage = (e) => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    setChildDialogBody(<FullSizeImage event={e} />);\r\n    displayChildDialog({\r\n      isFullScreen: true,\r\n      title: e.target?.alt || \"Display Pic\",\r\n    });\r\n  };\r\n\r\n  const openEditGroupDpMenu = (e) => {\r\n    setEditGroupDpMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div className=\"groupDialog d-flex flex-column row\">\r\n      {/* View/Edit Display Pic */}\r\n      {loading && uploading ? (\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n          <CircularProgress\r\n            size={60}\r\n            style={{ margin: \"20px 0px\", color: \"lightblue\" }}\r\n          />\r\n          <span style={{ marginBottom: \"45px\" }} className=\"text-light h1\">\r\n            {\" Updating Photo...\"}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <section className=\"dialogField d-flex position-relative mb-4\">\r\n          <CustomTooltip title=\"View DP\" placement=\"right\" arrow>\r\n            <img\r\n              className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle pointer\"\r\n              src={groupDP || \"GroupDp\"}\r\n              style={{ width: \"120px\", height: \"120px\" }}\r\n              onClick={displayFullSizeImage}\r\n              alt={groupName}\r\n            />\r\n          </CustomTooltip>\r\n\r\n          <CustomTooltip title=\"Edit Group DP\" placement=\"right\" arrow>\r\n            <i\r\n              id=\"editProfilePic\"\r\n              tabIndex={2}\r\n              onKeyDown={clickOnKeydown}\r\n              className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n              onClick={openEditGroupDpMenu}\r\n            >\r\n              <Edit className=\"text-light fs-6\" />\r\n            </i>\r\n          </CustomTooltip>\r\n          {/* Edit/Delete display pic menu */}\r\n          <EditPicMenu\r\n            anchor={editGroupDpMenuAnchor}\r\n            setAnchor={setEditGroupDpMenuAnchor}\r\n            selectProfilePic={() => imgInput.current.click()}\r\n            openDeletePhotoConfirmDialog={openDeletePhotoConfirmDialog}\r\n            deletePhotoCondition={!groupDP?.endsWith(\"group_mbuvht.png\")}\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={updateGroupDp}\r\n            name=\"displayPic\"\r\n            id=\"groupInfo__displayPic\"\r\n            ref={imgInput}\r\n            className={`d-none`}\r\n            disabled={loading}\r\n          />\r\n        </section>\r\n      )}\r\n\r\n      {/* Group Name */}\r\n      <section className={`dialogField text-center mb-3`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-10px\" }}>\r\n          <CustomTooltip\r\n            title={groupName?.length > 24 ? groupName : \"\"}\r\n            placement=\"top\"\r\n            arrow\r\n          >\r\n            <div\r\n              className=\"w-100 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"28px\", lineHeight: \"30px\" }}\r\n            >\r\n              {truncateString(groupName, 25, 21)}\r\n            </div>\r\n          </CustomTooltip>\r\n          <CustomTooltip title=\"Edit Group Name\" placement=\"top\" arrow>\r\n            <IconButton\r\n              tabIndex={3}\r\n              onKeyDown={clickOnKeydown}\r\n              onClick={openEditGroupNameDialog}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: -8,\r\n                top: 0,\r\n                \":hover\": { backgroundColor: \"#aaaaaa30\" },\r\n              }}\r\n            >\r\n              <Edit className=\"text-light\" />\r\n            </IconButton>\r\n          </CustomTooltip>\r\n        </div>\r\n      </section>\r\n\r\n      {/* No of members */}\r\n      <section\r\n        className={`dialogField text-center mb-3 text-light text-opacity-75`}\r\n        style={{ marginTop: \"-5px\", borderRadius: \"10px\" }}\r\n      >\r\n        {`${groupMembers?.length} Member${groupMembers?.length > 1 ? \"s\" : \"\"}`}\r\n      </section>\r\n\r\n      {/* View Members */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <button\r\n          className={`${btnClassName} btn-outline-primary`}\r\n          onClick={openViewMembersDialog}\r\n        >\r\n          <InfoOutlined\r\n            className=\"text-light\"\r\n            style={{ marginLeft: \"-15px\" }}\r\n          />\r\n          <span className=\"ms-2\">View Members</span>\r\n        </button>\r\n      </section>\r\n\r\n      {/* Add Members (only for admins) */}\r\n      {isUserGroupAdmin && (\r\n        <section className={`dialogField text-center mb-2`}>\r\n          <button\r\n            className={`${btnClassName} btn-outline-success`}\r\n            onClick={openAddMembersDialog}\r\n          >\r\n            <PersonAdd className=\"text-light\" style={{ marginLeft: \"-20px\" }} />\r\n            <span className=\"ms-2\">Add Members</span>\r\n          </button>\r\n        </section>\r\n      )}\r\n\r\n      {/* Exit Group */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <button\r\n          className={`${btnClassName} btn-outline-danger`}\r\n          onClick={() => {\r\n            if (\r\n              isUserGroupAdmin &&\r\n              admins?.length === 1 &&\r\n              groupMembers?.length !== 1\r\n            ) {\r\n              return displayWarning(\r\n                `Every group must have atleast 1 admin. Since \r\n              you're the only group admin, you won't be allowed\r\n              to exit until you make someone else as the admin.`,\r\n                10000\r\n              );\r\n            }\r\n            openExitGroupConfirmDialog();\r\n          }}\r\n        >\r\n          <Logout className=\"text-light\" style={{ marginLeft: \"-30px\" }} />\r\n          <span className=\"ms-2\">Exit Group</span>\r\n        </button>\r\n      </section>\r\n\r\n      {/* Delete Group (only for admins) */}\r\n      {isUserGroupAdmin && (\r\n        <section className={`dialogField text-center mb-2`}>\r\n          <button\r\n            className={`${btnClassName} btn-outline-danger`}\r\n            onClick={openDeleteGroupConfirmDialog}\r\n          >\r\n            <Delete className=\"text-light\" style={{ marginLeft: \"-20px\" }} />\r\n            <span className=\"ms-2\">Delete Group</span>\r\n          </button>\r\n        </section>\r\n      )}\r\n\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupInfoBody;\r\n","import { Skeleton } from \"@mui/material\";\r\n\r\nconst LoadingMsgs = ({ count }: { count: number }) => {\r\n  const skeletonStyle = { backgroundColor: \"#777\" };\r\n  return (\r\n    <>\r\n      {[...Array(count)].map((e, i) => (\r\n        <div\r\n          key={`loadingMsg${i}`}\r\n          className={`loadingMsg d-flex flex-column align-items-${\r\n            i % 2 ? \"start\" : \"end\"\r\n          } mb-2 mx-4`}\r\n        >\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className={`loadingSender col-3 mb-1`}\r\n            style={skeletonStyle}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className={`loadingContent col-5`}\r\n            style={skeletonStyle}\r\n          />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadingMsgs;\r\n","import {\r\n  Audiotrack,\r\n  Description,\r\n  Download,\r\n  Downloading,\r\n  PictureAsPdf,\r\n  PlayArrow,\r\n  PlayCircle,\r\n  Videocam,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  getFileSizeString,\r\n  isImageOrGifFile,\r\n  truncateString,\r\n} from \"../../utils/appUtils\";\r\nimport animationData from \"../../animations/app-loading.json\";\r\nimport LottieAnimation from \"./LottieAnimation\";\r\nimport { useRef } from \"react\";\r\nimport { MsgAttachmentProps } from \"../../utils/AppTypes\";\r\n\r\nconst IMG_BASE_URL = process.env.REACT_APP_CLOUDINARY_BASE_URL;\r\n\r\nconst MsgAttachment = ({\r\n  msgSent,\r\n  isEditMode,\r\n  fileEditIcons,\r\n  downloadingFileId,\r\n  loadingMediaId,\r\n  isPreview,\r\n  fileData,\r\n}: MsgAttachmentProps) => {\r\n  const previewStyles = `${\r\n    isPreview && !isEditMode\r\n      ? \"py-4 border border-4 border-secondary previewFile\"\r\n      : \"p-2\"\r\n  }`;\r\n  const iconStyles = `${isPreview && !isEditMode ? \"fs-1\" : \"fs-2\"}`;\r\n\r\n  let { fileUrl, file_id, file_name, size } = fileData;\r\n  const fileContents = file_name.split(\"===\") || [];\r\n  file_name = fileContents[0] || file_name;\r\n  const isMediaFile = fileContents[1]?.includes(\":\");\r\n  const mediaContents = isMediaFile ? fileContents[1].split(\"+++\") : [];\r\n  const mediaFileType = mediaContents[1];\r\n  const mediaFileSize = getFileSizeString(mediaContents[2]);\r\n  const loadingGif = useRef(null);\r\n\r\n  let fileSize = mediaContents[0] || parseInt(fileContents[1]) || size || \"\";\r\n\r\n  if (!isMediaFile) {\r\n    fileSize = getFileSizeString(fileSize);\r\n  }\r\n\r\n  const isDownloadingFile = downloadingFileId === file_id;\r\n  const fileType =\r\n    mediaFileType?.startsWith(\"video/\") ||\r\n    /(\\.mp4|\\.mov|\\.ogv|\\.webm)$/.test(file_name)\r\n      ? \"Video\"\r\n      : mediaFileType?.startsWith(\"audio/\") ||\r\n        /(\\.mp3|\\.ogg|\\.wav)$/.test(file_name)\r\n      ? \"Audio\"\r\n      : /(\\.doc|\\.docx)$/.test(file_name)\r\n      ? \"Word Doc\"\r\n      : /(\\.ppt|\\.pptx)$/.test(file_name)\r\n      ? \"PPT\"\r\n      : /(\\.xlsx|\\.csv|\\.xls)$/.test(file_name)\r\n      ? \"Spreadsheet\"\r\n      : /(\\.pdf)$/.test(file_name)\r\n      ? \"PDF\"\r\n      : file_name.substring(file_name.lastIndexOf(\".\") + 1)?.toUpperCase();\r\n\r\n  const attachmentHeader = (\r\n    <>\r\n      {isEditMode ? (\r\n        <span\r\n          className=\"d-flex justify-content-center w-100 mx-auto\"\r\n          style={{ zIndex: 6 }}\r\n        >\r\n          {fileEditIcons}\r\n        </span>\r\n      ) : (\r\n        <span\r\n          data-download={file_id}\r\n          className={`downloadIcon ${isDownloadingFile ? \"downloading\" : \"\"} ${\r\n            isPreview || !msgSent ? \"d-none\" : \"\"\r\n          }`}\r\n          title={isDownloadingFile ? \"Downloading...\" : \"Download File\"}\r\n        >\r\n          {isDownloadingFile ? (\r\n            <Downloading />\r\n          ) : (\r\n            <Download data-download={file_id} />\r\n          )}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n  const fileNameWrapper = (\r\n    <span className={`${isPreview && !isEditMode ? \"fs-4\" : \"fs-6\"}`}>\r\n      &nbsp;&nbsp;\r\n      <span title={file_name}>{truncateString(file_name + \"\", 40, 37)}</span>\r\n    </span>\r\n  );\r\n  const fileInfo = (\r\n    <>\r\n      {fileNameWrapper}\r\n      <div\r\n        className={`${isPreview && !isEditMode ? \"fs-5 mt-4\" : \"\"}`}\r\n        style={{ marginBottom: isPreview && !isEditMode ? -10 : 0 }}\r\n      >\r\n        {`${fileType} : ${fileSize}`}\r\n      </div>\r\n    </>\r\n  );\r\n  const hideWhileLoadingMedia =\r\n    loadingMediaId === file_id ? \"invisible\" : \"visible\";\r\n\r\n  const displayWhileLoadingMedia =\r\n    loadingMediaId === file_id ? \"visible\" : \"invisible\";\r\n\r\n  return (\r\n    <>\r\n      {fileUrl?.startsWith(IMG_BASE_URL) || isImageOrGifFile(file_name) ? (\r\n        <span className=\"d-inline-block msgImageWrapper mb-2 position-relative\">\r\n          <img\r\n            src={fileUrl}\r\n            alt={file_name}\r\n            title={file_name}\r\n            data-image-id={file_id}\r\n            className={`msgImageFile d-inline-block`}\r\n          />\r\n          {isEditMode && (\r\n            <span className=\"position-absolute top-0 start-0\">\r\n              {fileEditIcons}\r\n            </span>\r\n          )}\r\n        </span>\r\n      ) : (\r\n        <div\r\n          className=\"pointer\"\r\n          style={{\r\n            margin: \"0px 0px -8px 0px\",\r\n            width:\r\n              isPreview && !isEditMode ? \"clamp(270px, 50vmin, 600px)\" : \"100%\",\r\n          }}\r\n        >\r\n          {fileType === \"PDF\" ? (\r\n            <div className={`${previewStyles} msgFile pdfFile text-light`}>\r\n              <div>\r\n                {!isEditMode && <PictureAsPdf className={iconStyles} />}\r\n                {attachmentHeader}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          ) : fileType === \"Spreadsheet\" ? (\r\n            <div className={`${previewStyles} msgFile excelFile bg-success`}>\r\n              <div>\r\n                {!isEditMode && <Description className={iconStyles} />}\r\n                {attachmentHeader}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          ) : fileType === \"PPT\" ? (\r\n            <div className={`${previewStyles} msgFile pptFile text-light`}>\r\n              <div>\r\n                {!isEditMode && <Description className={iconStyles} />}\r\n                {attachmentHeader}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          ) : fileType === \"Word Doc\" ? (\r\n            <div\r\n              className={`${previewStyles} msgFile wordFile`}\r\n              style={{ borderRadius: isEditMode ? 10 : 5 }}\r\n            >\r\n              <div>\r\n                {!isEditMode && <Description className={iconStyles} />}\r\n                {attachmentHeader}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          ) : fileType === \"Video\" ? (\r\n            <div className={`${previewStyles} msgFile mediaFile`}>\r\n              <div>\r\n                {attachmentHeader}\r\n                {!isEditMode && ` ${mediaFileSize}`}\r\n              </div>\r\n              {fileNameWrapper}\r\n              <div\r\n                data-video={file_id}\r\n                data-video-name={file_name}\r\n                title=\"Click to Play\"\r\n                className=\"mediaMsg bg-gradient py-5\"\r\n              >\r\n                <PlayCircle\r\n                  data-video={file_id}\r\n                  data-video-name={file_name}\r\n                  className={`playMedia ${hideWhileLoadingMedia}`}\r\n                  style={{ fontSize: 40 }}\r\n                />\r\n                <LottieAnimation\r\n                  ref={loadingGif}\r\n                  className={`position-absolute ${displayWhileLoadingMedia}`}\r\n                  style={{\r\n                    marginBottom: 0,\r\n                    height: 50,\r\n                    color: \"white\",\r\n                  }}\r\n                  animationData={animationData}\r\n                />\r\n                <span\r\n                  data-video={file_id}\r\n                  data-video-name={file_name}\r\n                  className=\"mediaDuration videoDuration text-light\"\r\n                >\r\n                  <Videocam data-video={file_id} data-video-name={file_name} />\r\n                  &nbsp;&nbsp;{fileSize}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ) : fileType === \"Audio\" ? (\r\n            <div\r\n              className={`${previewStyles} msgFile mediaFile bg-dark bg-opacity-75`}\r\n            >\r\n              <div>\r\n                {attachmentHeader}\r\n                {!isEditMode && ` ${mediaFileSize}`}\r\n              </div>\r\n              {fileNameWrapper}\r\n              <div\r\n                data-audio={file_id}\r\n                data-audio-name={file_name}\r\n                className=\"mediaMsg bg-gradient px-4 py-2\"\r\n                title=\"Click to Play\"\r\n              >\r\n                <PlayArrow\r\n                  data-audio={file_id}\r\n                  data-audio-name={file_name}\r\n                  className={`playMedia ${hideWhileLoadingMedia}`}\r\n                />\r\n                <LottieAnimation\r\n                  ref={loadingGif}\r\n                  className={`position-absolute ${displayWhileLoadingMedia}`}\r\n                  style={{\r\n                    marginBottom: 0,\r\n                    height: 30,\r\n                    color: \"white\",\r\n                  }}\r\n                  animationData={animationData}\r\n                />\r\n                <span\r\n                  data-audio={file_id}\r\n                  data-audio-name={file_name}\r\n                  className=\"mediaDuration audioDuration text-light\"\r\n                >\r\n                  <Audiotrack\r\n                    data-audio={file_id}\r\n                    data-audio-name={file_name}\r\n                    style={{ fontSize: 20 }}\r\n                  />\r\n                  &nbsp;{fileSize}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={`${previewStyles} msgFile otherFile`}>\r\n              <div>\r\n                {!isEditMode && <Description className={iconStyles} />}\r\n                {attachmentHeader}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MsgAttachment;\r\n","import { Close } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport MsgAttachment from \"./MsgAttachment\";\r\n\r\nconst PLACEHOLDER_IMG = process.env.REACT_APP_PLACEHOLDER_IMG_URL;\r\n\r\ninterface Props {\r\n  isEditMode: boolean;\r\n  attachmentData: any;\r\n  CustomTooltip: any;\r\n  fileEditIcons: any;\r\n}\r\n\r\nconst AttachmentPreview = ({\r\n  isEditMode,\r\n  attachmentData,\r\n  CustomTooltip,\r\n  fileEditIcons,\r\n}: Props) => {\r\n  const {\r\n    attachment: { name, type, size },\r\n    attachmentPreviewUrl,\r\n  } = attachmentData;\r\n\r\n  const FILE_WRAPPER_CLASS = `${\r\n    isEditMode ? \"h-100\" : \"mt-4 h-50\"\r\n  } d-flex justify-content-center align-items-center`;\r\n  const ATTACHMENT_STYLE = {\r\n    borderRadius: 7,\r\n    width: \"calc(100%)\",\r\n    maxHeight: isEditMode ? 200 : 250,\r\n  };\r\n  const editIconsWrapper = (\r\n    <span className=\"position-absolute top-0 start-0 m-1\" style={{ zIndex: 6 }}>\r\n      {fileEditIcons}\r\n    </span>\r\n  );\r\n\r\n  const previewTitle = type.startsWith(\"application/\") ? \"Attached File\" : name;\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-black bg-gradient bg-opacity-75 h-100 d-flex flex-column justify-content-start align-items-center\"\r\n      style={{ borderRadius: 10 }}\r\n    >\r\n      {/* Discard Attachment button */}\r\n      {!isEditMode && (\r\n        <CustomTooltip\r\n          title=\"Discard Attachment\"\r\n          placement=\"bottom-start\"\r\n          arrow\r\n        >\r\n          <IconButton\r\n            data-discard-file={true}\r\n            sx={{\r\n              position: \"absolute\",\r\n              left: 15,\r\n              top: 12,\r\n              color: \"#999999\",\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n          >\r\n            <Close data-discard-file={true} />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      )}\r\n\r\n      {/* Attached File Name */}\r\n      {!isEditMode && (\r\n        <CustomTooltip\r\n          title={previewTitle?.length > 23 ? previewTitle : \"\"}\r\n          placement=\"top\"\r\n          arrow\r\n        >\r\n          <span\r\n            className={`mt-5 mb-2`}\r\n            style={{ color: \"lightblue\", fontSize: 25, zIndex: 5 }}\r\n          >\r\n            {truncateString(previewTitle, 23, 20) || \"Attached File\"}\r\n          </span>\r\n        </CustomTooltip>\r\n      )}\r\n\r\n      <>\r\n        {type?.startsWith(\"image/\") ? (\r\n          <div className={`${FILE_WRAPPER_CLASS} position-relative`}>\r\n            {editIconsWrapper}\r\n            <img\r\n              style={ATTACHMENT_STYLE}\r\n              src={attachmentPreviewUrl || PLACEHOLDER_IMG}\r\n              alt=\"msgAttachment\"\r\n            />\r\n          </div>\r\n        ) : type?.startsWith(\"audio/\") ? (\r\n          <div\r\n            className={`${FILE_WRAPPER_CLASS} flex-column`}\r\n            style={{ width: \"clamp(190px, 48vw, 290px)\" }}\r\n          >\r\n            <span className=\"m-2\" style={{ zIndex: 6 }}>\r\n              {fileEditIcons}\r\n            </span>\r\n            <audio\r\n              src={attachmentPreviewUrl || \"\"}\r\n              controls\r\n              autoPlay\r\n              style={ATTACHMENT_STYLE}\r\n            >\r\n              {name}\r\n            </audio>\r\n          </div>\r\n        ) : type?.startsWith(\"video/\") ? (\r\n          <div className={`${FILE_WRAPPER_CLASS} position-relative`}>\r\n            {editIconsWrapper}\r\n            <video\r\n              src={attachmentPreviewUrl || \"\"}\r\n              controls\r\n              autoPlay\r\n              style={ATTACHMENT_STYLE}\r\n            >\r\n              {name}\r\n            </video>\r\n          </div>\r\n        ) : (\r\n          <MsgAttachment\r\n            isEditMode={isEditMode}\r\n            fileEditIcons={fileEditIcons}\r\n            isPreview={true}\r\n            fileData={{\r\n              fileUrl: attachmentPreviewUrl,\r\n              file_id: \"\",\r\n              file_name: name,\r\n              size,\r\n            }}\r\n          />\r\n        )}\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttachmentPreview;\r\n","import {\r\n  AttachFile,\r\n  Close,\r\n  Delete,\r\n  Done,\r\n  DoneAll,\r\n  Edit,\r\n  KeyboardArrowDown,\r\n} from \"@mui/icons-material\";\r\nimport { Avatar, CircularProgress, IconButton } from \"@mui/material\";\r\nimport { forwardRef, useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport {\r\n  msgTimeStringOf,\r\n  msgDateStringOf,\r\n  dateStringOf,\r\n  setCaretPosition,\r\n} from \"../../utils/appUtils\";\r\nimport AttachmentPreview from \"./AttachmentPreview\";\r\nimport MsgAttachment from \"./MsgAttachment\";\r\n\r\nconst IconButtonSx = {\r\n  color: \"lightblue\",\r\n  \":hover\": { backgroundColor: \"#cccccc20\" },\r\n};\r\n\r\nconst Message = forwardRef(\r\n  (\r\n    {\r\n      downloadingFileId,\r\n      loadingMediaId,\r\n      msgEditMode,\r\n      clickedMsgId,\r\n      msgFileRemoved,\r\n      CustomTooltip,\r\n      msgSent,\r\n      currMsg,\r\n      prevMsg,\r\n      attachmentData,\r\n    },\r\n    editableMsgRef\r\n  ) => {\r\n    const msgContentRef = useRef(null); // Local ref (in non-edit mode)\r\n    const { loggedInUser, selectedChat } = useSelector(selectAppState);\r\n    const { fileUrl, file_id, file_name } = currMsg;\r\n    const { _id, profilePic, name, email } = currMsg?.sender;\r\n    const isLoggedInUser = _id === loggedInUser._id;\r\n    const senderData = `${profilePic}===${name}===${email}`;\r\n    const currMsgId = isLoggedInUser ? currMsg?._id : null;\r\n    const isClickedMsgCurrMsg = clickedMsgId === currMsgId;\r\n    const isSameSender = _id === prevMsg?.sender._id;\r\n    const currMsgDate = new Date(currMsg.createdAt);\r\n    const prevMsgDate = new Date(prevMsg?.createdAt);\r\n    const isOtherDay = dateStringOf(currMsgDate) !== dateStringOf(prevMsgDate);\r\n    const showCurrSender =\r\n      !isLoggedInUser &&\r\n      selectedChat?.isGroupChat &&\r\n      (!isSameSender || isOtherDay);\r\n    const isEditMode = msgEditMode && isClickedMsgCurrMsg;\r\n\r\n    const fileEditIcons = (\r\n      <>\r\n        <CustomTooltip title=\"Remove Attachment\" placement=\"top\" arrow>\r\n          <IconButton\r\n            data-remove-msg-file={true}\r\n            className={`m-1 bg-black bg-opacity-75`}\r\n            sx={IconButtonSx}\r\n          >\r\n            <Delete data-remove-msg-file={true} style={{ fontSize: 20 }} />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n        <CustomTooltip title=\"Change Attachment\" placement=\"top\" arrow>\r\n          <IconButton\r\n            data-edit-msg-file={true}\r\n            className={`m-1 bg-black bg-opacity-75`}\r\n            sx={IconButtonSx}\r\n          >\r\n            <Edit data-edit-msg-file={true} style={{ fontSize: 20 }} />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      </>\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (msgContentRef?.current) {\r\n        msgContentRef.current.innerHTML = currMsg?.content;\r\n      }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      if (isEditMode) {\r\n        setCaretPosition(editableMsgRef?.current);\r\n      }\r\n    }, [msgEditMode]);\r\n\r\n    return (\r\n      <>\r\n        <section\r\n          className={`msgRow d-flex justify-content-${\r\n            isLoggedInUser ? \"end\" : \"start\"\r\n          }`}\r\n          style={{ marginTop: isSameSender ? 3 : 10 }}\r\n        >\r\n          {showCurrSender ? (\r\n            <CustomTooltip title={`View Profile`} placement=\"top-start\" arrow>\r\n              <Avatar\r\n                src={profilePic}\r\n                alt={name}\r\n                data-sender={senderData}\r\n                className=\"senderAvatar pointer\"\r\n              />\r\n            </CustomTooltip>\r\n          ) : (\r\n            selectedChat?.isGroupChat && <span style={{ width: 30 }}></span>\r\n          )}\r\n          <div\r\n            className={`msgBox d-flex flex-column text-start p-2 rounded-3\r\n          mx-2 mx-md-3 ${isLoggedInUser ? \"yourMsg\" : \"receiversMsg\"}`}\r\n            data-msg={currMsgId}\r\n            data-file-exists={file_id}\r\n          >\r\n            {isEditMode ? (\r\n              <div\r\n                className=\"d-flex justify-content-end\"\r\n                style={{ margin: \"-5px -5px 3px 0px\" }}\r\n              >\r\n                {(!currMsg?.fileUrl ||\r\n                  (msgFileRemoved && !attachmentData?.attachment)) && (\r\n                  <CustomTooltip title=\"Attach File\" placement=\"top-end\" arrow>\r\n                    <IconButton\r\n                      data-attach-msg-file={true}\r\n                      className={`me-1`}\r\n                      sx={{ ...IconButtonSx, transform: \"rotateZ(45deg)\" }}\r\n                    >\r\n                      <AttachFile\r\n                        data-attach-msg-file={true}\r\n                        style={{ fontSize: 20 }}\r\n                      />\r\n                    </IconButton>\r\n                  </CustomTooltip>\r\n                )}\r\n                <CustomTooltip title=\"Discard Draft\" placement=\"top-end\" arrow>\r\n                  <IconButton\r\n                    data-discard-draft={true}\r\n                    className={``}\r\n                    sx={IconButtonSx}\r\n                  >\r\n                    <Close data-discard-draft={true} style={{ fontSize: 20 }} />\r\n                  </IconButton>\r\n                </CustomTooltip>\r\n                <CustomTooltip title=\"Update Message\" placement=\"top-end\" arrow>\r\n                  <IconButton\r\n                    data-update-msg={true}\r\n                    data-msg-created-at={currMsg?.createdAt}\r\n                    className={`ms-1`}\r\n                    sx={IconButtonSx}\r\n                  >\r\n                    <Done\r\n                      data-update-msg={true}\r\n                      data-msg-created-at={currMsg?.createdAt}\r\n                      style={{ fontSize: 20 }}\r\n                    />\r\n                  </IconButton>\r\n                </CustomTooltip>\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {showCurrSender && (\r\n              <span data-sender={senderData} className=\"msgSender pointer\">\r\n                {name}\r\n              </span>\r\n            )}\r\n            {isLoggedInUser && msgSent && !msgEditMode && (\r\n              <span\r\n                data-msg={currMsgId}\r\n                data-file-exists={file_id}\r\n                title=\"Edit/Delete Message\"\r\n                className={`msgOptionsIcon text-light position-absolute \r\n              top-0 end-0 w-25 h-100`}\r\n              >\r\n                <KeyboardArrowDown\r\n                  data-msg={currMsgId}\r\n                  data-file-exists={file_id}\r\n                  style={{ fontSize: 22 }}\r\n                  className=\"position-absolute top-0 end-0\"\r\n                />\r\n              </span>\r\n            )}\r\n            {currMsg?.fileUrl && !isEditMode && (\r\n              <MsgAttachment\r\n                msgSent={msgSent}\r\n                isEditMode={isEditMode}\r\n                fileEditIcons={fileEditIcons}\r\n                downloadingFileId={downloadingFileId}\r\n                loadingMediaId={loadingMediaId}\r\n                fileData={{\r\n                  msgId: currMsgId,\r\n                  fileUrl,\r\n                  file_id,\r\n                  file_name,\r\n                }}\r\n              />\r\n            )}\r\n            {isEditMode && attachmentData?.attachment && (\r\n              <AttachmentPreview\r\n                isEditMode={isEditMode}\r\n                attachmentData={attachmentData}\r\n                CustomTooltip={CustomTooltip}\r\n                fileEditIcons={fileEditIcons}\r\n              />\r\n            )}\r\n            {currMsg?.fileUrl &&\r\n              isEditMode &&\r\n              !attachmentData?.attachment &&\r\n              !msgFileRemoved && (\r\n                <MsgAttachment\r\n                  msgSent={msgSent}\r\n                  isEditMode={isEditMode}\r\n                  fileEditIcons={fileEditIcons}\r\n                  downloadingFileId={downloadingFileId}\r\n                  loadingMediaId={loadingMediaId}\r\n                  fileData={{\r\n                    msgId: currMsgId,\r\n                    fileUrl,\r\n                    file_id,\r\n                    file_name,\r\n                  }}\r\n                />\r\n              )}\r\n            <div\r\n              data-msg={currMsgId}\r\n              data-file-exists={file_id}\r\n              className={`msgContent d-flex ${\r\n                file_id || attachmentData?.attachment ? \"mt-2\" : \"\"\r\n              }`}\r\n            >\r\n              <span\r\n                id={`${currMsg?._id}---content`}\r\n                className=\"w-100\"\r\n                style={{ outline: \"none\" }}\r\n                contentEditable={isEditMode}\r\n                data-msg-created-at={currMsg?.createdAt}\r\n                ref={isEditMode ? editableMsgRef : msgContentRef}\r\n              ></span>\r\n              <span\r\n                data-msg={currMsgId}\r\n                data-file-exists={file_id}\r\n                className=\"msgTime text-end d-flex align-items-end justify-content-end\"\r\n              >\r\n                {msgTimeStringOf(currMsgDate)}\r\n                {isLoggedInUser && (\r\n                  <>\r\n                    {msgSent ? (\r\n                      <DoneAll\r\n                        data-msg={currMsgId}\r\n                        data-file-exists={file_id}\r\n                        className=\"text-info fs-6 ms-1\"\r\n                      />\r\n                    ) : (\r\n                      <CircularProgress\r\n                        size={10}\r\n                        className=\"sendStatusIcon ms-1\"\r\n                      />\r\n                    )}\r\n                  </>\r\n                )}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {isOtherDay && (\r\n          <div className={`msgDate mt-3 mb-2 mx-auto py-1 px-3 rounded-3`}>\r\n            {msgDateStringOf(currMsgDate)}\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n);\r\nexport default Message;\r\n","import { Delete, Edit } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\n\r\nconst MsgOptionsMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  editMsgHandler,\r\n  openDeleteMsgConfirmDialog,\r\n}) => {\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={editMsgHandler}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Edit />\r\n        </ListItemIcon>\r\n        <MenuItemText>Edit Message</MenuItemText>\r\n      </MenuItem>\r\n      <MenuItem sx={menuItemProps} onClick={openDeleteMsgConfirmDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Delete />\r\n        </ListItemIcon>\r\n        <MenuItemText>Delete Message</MenuItemText>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MsgOptionsMenu;\r\n","import { useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport letsChatAnimData from \"../animations/letsChatGif.json\";\r\nimport { selectAppState } from \"../store/slices/AppSlice\";\r\nimport { truncateString } from \"../utils/appUtils\";\r\nimport LottieAnimation from \"./utils/LottieAnimation\";\r\n\r\nconst WelcomeBanner = ({ isNewUser }) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const letsChatGif = useRef(null);\r\n  return (\r\n    <div className=\"d-flex flex-column justify-content-start align-items-center h-100\">\r\n      {!isNewUser && (\r\n        <h2 className=\"mx-3 mt-1\">\r\n          Hello{\" \"}\r\n          <span\r\n            className=\"fw-bold\"\r\n            style={{ color: \"#A798F2\" }}\r\n          >{`${truncateString(\r\n            loggedInUser?.name?.split(\" \")[0],\r\n            12,\r\n            9\r\n          )?.toUpperCase()}`}</span>{\" \"}\r\n          👋\r\n        </h2>\r\n      )}\r\n      <LottieAnimation\r\n        ref={letsChatGif}\r\n        className={\"d-inline-block mt-3\"}\r\n        style={{ marginBottom: 50, height: \"50%\" }}\r\n        animationData={letsChatAnimData}\r\n      />\r\n      <p className=\"h4 mx-5 mb-3\" style={{ marginTop: -40, color: \"#99C5EE\" }}>\r\n        Create one-to-one chats, group chats, send/edit/delete text messages and\r\n        files to get 'Chat-Zoned'😉.\r\n      </p>\r\n      <p className=\"h2\" style={{ color: \"#DDBEF9\" }}>\r\n        Happy Chatting!😀\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomeBanner;\r\n","import { ArrowBack, Close } from \"@mui/icons-material\";\r\nimport { Avatar, IconButton } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../store/slices/AppSlice\";\r\nimport { getOneToOneChatReceiver, truncateString } from \"../utils/appUtils\";\r\n\r\nconst MsgsHeader = ({\r\n  closeChat,\r\n  openGroupInfoDialog,\r\n  openViewProfileDialog,\r\n  hideEmojiPicker,\r\n  CustomTooltip,\r\n}) => {\r\n  const { loggedInUser, selectedChat } = useSelector(selectAppState);\r\n  const chatName = selectedChat?.isGroupChat\r\n    ? selectedChat?.chatName\r\n    : getOneToOneChatReceiver(loggedInUser, selectedChat?.users)?.name;\r\n  return (\r\n    <section\r\n      className={`messagesHeader pointer-event d-flex justify-content-start \r\n            position-relative w-100 fw-bold bg-info bg-opacity-10 py-2`}\r\n      onClick={hideEmojiPicker}\r\n    >\r\n      <CustomTooltip title=\"Go Back\" placement=\"bottom-start\" arrow>\r\n        <IconButton\r\n          onClick={closeChat}\r\n          className={`d-flex d-md-none ms-3`}\r\n          sx={{\r\n            color: \"#999999\",\r\n            \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n          }}\r\n        >\r\n          <ArrowBack />\r\n        </IconButton>\r\n      </CustomTooltip>\r\n      <CustomTooltip\r\n        title={selectedChat?.isGroupChat ? \"Group Info\" : \"View Profile\"}\r\n        placement=\"bottom-start\"\r\n        arrow\r\n      >\r\n        <IconButton\r\n          sx={{\r\n            margin: \"-8px\",\r\n            \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n          }}\r\n          className=\"pointer ms-0 ms-md-4\"\r\n          onClick={\r\n            selectedChat?.isGroupChat\r\n              ? openGroupInfoDialog\r\n              : openViewProfileDialog\r\n          }\r\n        >\r\n          <Avatar\r\n            src={\r\n              selectedChat?.isGroupChat\r\n                ? selectedChat?.chatDisplayPic\r\n                : getOneToOneChatReceiver(loggedInUser, selectedChat?.users)\r\n                    ?.profilePic || \"\"\r\n            }\r\n            alt={\"receiverAvatar\"}\r\n          />\r\n        </IconButton>\r\n      </CustomTooltip>\r\n\r\n      <span className=\"ms-2 mt-1 fs-4 text-info\" title={chatName}>\r\n        {truncateString(chatName, 22, 17)}\r\n      </span>\r\n\r\n      <CustomTooltip title=\"Close Chat\" placement=\"bottom-end\" arrow>\r\n        <IconButton\r\n          onClick={closeChat}\r\n          className=\"d-none d-md-flex\"\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 15,\r\n            top: 8,\r\n            color: \"#999999\",\r\n            \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n          }}\r\n        >\r\n          <Close />\r\n        </IconButton>\r\n      </CustomTooltip>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MsgsHeader;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport {\r\n  debounce,\r\n  FIVE_MB,\r\n  getAxiosConfig,\r\n  isImageOrGifFile,\r\n  parseInnerHTML,\r\n  setCaretPosition,\r\n} from \"../utils/appUtils\";\r\nimport { AttachFile, EmojiEmotions, Send } from \"@mui/icons-material\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport axios from \"../utils/axios\";\r\nimport ViewProfileBody from \"./dialogs/ViewProfileBody\";\r\nimport GroupInfoBody from \"./dialogs/GroupInfoBody\";\r\nimport LoadingMsgs from \"./utils/LoadingMsgs\";\r\nimport FullSizeImage from \"./utils/FullSizeImage\";\r\nimport Message from \"./utils/Message\";\r\nimport MsgOptionsMenu from \"./menus/MsgOptionsMenu\";\r\nimport io from \"socket.io-client\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setClientSocket,\r\n  setFetchMsgs,\r\n  setGroupInfo,\r\n  setLoggedInUser,\r\n  setSelectedChat,\r\n  setSocketConnected,\r\n  toggleRefresh,\r\n} from \"../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../store/slices/FormfieldSlice\";\r\nimport { displayToast } from \"../store/slices/ToastSlice\";\r\nimport {\r\n  displayDialog,\r\n  setShowDialogActions,\r\n} from \"../store/slices/CustomDialogSlice\";\r\nimport AttachmentPreview from \"./utils/AttachmentPreview\";\r\nimport WelcomeBanner from \"./WelcomeBanner\";\r\nimport MsgsHeader from \"./MsgsHeader\";\r\nimport TypingIndicator from \"./utils/TypingIndicator\";\r\nimport EmojiPicker from \"emoji-picker-react\";\r\n\r\nconst arrowStyles = { color: \"#111\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 16,\r\n  padding: \"5px 10px\",\r\n  borderRadius: 5,\r\n  border: \"1px solid #555\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst iconStyles = {\r\n  margin: \"4px 0px\",\r\n  padding: \"5px\",\r\n  color: \"#999999\",\r\n  \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n};\r\n\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\nconst SOCKET_ENDPOINT = process.env.REACT_APP_SERVER_BASE_URL;\r\nlet msgFileAlreadyExists = false;\r\nlet currentlyTyping = false;\r\nlet preventStopTyping = true;\r\n\r\nconst MessagesView = ({\r\n  loadingMsgs,\r\n  setLoadingMsgs,\r\n  setDialogBody,\r\n  deletePersistedNotifs,\r\n  isNewUser,\r\n  typingChatUser,\r\n}) => {\r\n  const {\r\n    loggedInUser,\r\n    selectedChat,\r\n    fetchMsgs,\r\n    clientSocket,\r\n    isSocketConnected,\r\n  } = useSelector(selectAppState);\r\n  const { disableIfLoading } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n  const [sending, setSending] = useState(false);\r\n  const [msgFileRemoved, setMsgFileRemoved] = useState(false);\r\n  const [enableMsgSend, setEnableMsgSend] = useState(false);\r\n  const [fileAttached, setFileAttached] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [clickedMsgId, setClickedMsgId] = useState(\"\");\r\n  const [dontScrollToBottom, setDontScrollToBottom] = useState(false);\r\n  const [attachmentData, setAttachmentData] = useState({\r\n    attachment: \"\",\r\n    attachmentPreviewUrl: \"\",\r\n  });\r\n  const msgListBottom = useRef(null);\r\n  const msgFileInput = useRef(null);\r\n  const msgContent = useRef(null);\r\n  const editableMsgContent = useRef(null);\r\n  const [downloadingFileId, setDownloadingFileId] = useState(\"\");\r\n  const [loadingMediaId, setLoadingMediaId] = useState(\"\");\r\n  const [msgEditMode, setMsgEditMode] = useState(false);\r\n  const [msgOptionsMenuAnchor, setMsgOptionsMenuAnchor] = useState(null);\r\n\r\n  const resetMsgInput = (options) => {\r\n    setAttachmentData({\r\n      attachment: \"\",\r\n      attachmentPreviewUrl: \"\",\r\n    });\r\n    msgFileInput.current.value = \"\";\r\n    setFileAttached(false);\r\n    if (options?.discardAttachmentOnly) return;\r\n    setEnableMsgSend(false);\r\n    msgContent.current.innerHTML = \"\";\r\n  };\r\n\r\n  // Emoji picker config\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const onEmojiIconClick = () => {\r\n    preventStopTyping = true;\r\n    setShowEmojiPicker(!showEmojiPicker);\r\n  };\r\n  const hideEmojiPicker = () => {\r\n    if (showEmojiPicker) setShowEmojiPicker(false);\r\n  };\r\n  const onEmojiClick = (event, emojiObject) => {\r\n    msgContent.current.innerHTML += emojiObject.emoji;\r\n    setCaretPosition(msgContent.current);\r\n    setEnableMsgSend(true);\r\n  };\r\n\r\n  const selectAttachment = () => {\r\n    preventStopTyping = true;\r\n    hideEmojiPicker();\r\n    msgFileInput.current?.click();\r\n  };\r\n\r\n  const discardAttachment = () =>\r\n    resetMsgInput({ discardAttachmentOnly: true });\r\n\r\n  const persistUpdatedUser = (updatedUser) => {\r\n    // localStorage persists updated user even after page refresh\r\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\r\n    dispatch(setLoggedInUser(updatedUser));\r\n  };\r\n\r\n  const displayError = (\r\n    error = \"Oops! Something went wrong\",\r\n    title = \"Operation Failed\"\r\n  ) => {\r\n    dispatch(\r\n      displayToast({\r\n        title,\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"bottom-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const displaySuccess = (message = \"Operation Successful\") => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"success\",\r\n        duration: 1500,\r\n        position: \"bottom-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const closeChat = () => {\r\n    setLoadingMsgs(false);\r\n    dispatch(setSelectedChat(null));\r\n    resetMsgInput();\r\n    setMsgFileRemoved(false);\r\n    setMsgEditMode(false);\r\n    setDontScrollToBottom(false);\r\n  };\r\n\r\n  const viewMedia = (src, fileData) => {\r\n    if (!src || !fileData) return;\r\n    const { fileName, isAudio } = fileData;\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(\r\n      <FullSizeImage\r\n        audioSrc={isAudio ? src : null}\r\n        videoSrc={!isAudio ? src : null}\r\n      />\r\n    );\r\n    dispatch(\r\n      displayDialog({\r\n        isFullScreen: true,\r\n        title: fileName || `${isAudio ? \"Audio\" : \"Video\"} File`,\r\n      })\r\n    );\r\n    setLoadingMediaId(\"\");\r\n  };\r\n\r\n  const displayFullSizeImage = (e) => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<FullSizeImage event={e} />);\r\n    dispatch(\r\n      displayDialog({\r\n        isFullScreen: true,\r\n        title: e.target?.alt || \"Display Pic\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const loadMedia = async (fileId, options) => {\r\n    if (!fileId || !options) return;\r\n    setLoadingMediaId(fileId);\r\n    const { fileName, isAudio } = options;\r\n    const config = getAxiosConfig({ loggedInUser, blob: true });\r\n    try {\r\n      const { data } = await axios.get(`/api/message/files/${fileId}`, config);\r\n\r\n      const mediaSrc = URL.createObjectURL(new Blob([data]));\r\n      viewMedia(mediaSrc, { fileName, isAudio });\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Load Media\");\r\n      setLoadingMediaId(\"\");\r\n    }\r\n  };\r\n\r\n  const downloadFile = async (fileId) => {\r\n    if (!fileId) return;\r\n    setDownloadingFileId(fileId);\r\n    setSending(true);\r\n    const config = getAxiosConfig({ loggedInUser, blob: true });\r\n    try {\r\n      const { data } = await axios.get(`/api/message/files/${fileId}`, config);\r\n\r\n      const link = document.createElement(\"a\");\r\n      link.href = URL.createObjectURL(new Blob([data]));\r\n      link.setAttribute(\"download\", fileId.split(\"---\")[1] || fileId);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n\r\n      setDownloadingFileId(\"\");\r\n      setSending(false);\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Download File\");\r\n      setDownloadingFileId(\"\");\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const fetchMessages = async (options) => {\r\n    setLoadingMsgs(true);\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat?._id}`,\r\n        config\r\n      );\r\n      setMessages(\r\n        data.map((msg) => {\r\n          msg[\"sent\"] = true;\r\n          return msg;\r\n        })\r\n      );\r\n      setLoadingMsgs(false);\r\n      if (fetchMsgs) dispatch(setFetchMsgs(false));\r\n      if (options?.updatingMsg) displaySuccess(\"Message Updated Successfully\");\r\n      setSending(false);\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Fetch Messages\");\r\n      setLoadingMsgs(false);\r\n      if (fetchMsgs) dispatch(setFetchMsgs(false));\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    preventStopTyping = false;\r\n    emitStopTyping();\r\n    hideEmojiPicker();\r\n    if (!attachmentData.attachment && !msgContent.current?.innerHTML) return;\r\n\r\n    const msgData = {\r\n      ...attachmentData,\r\n      content: msgContent.current?.innerHTML || \"\",\r\n    };\r\n    const isNonImageFile = !isImageOrGifFile(msgData.attachment?.name);\r\n\r\n    const newMsg = {\r\n      _id: Date.now(),\r\n      sender: {\r\n        _id: loggedInUser?._id,\r\n        profilePic: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n      },\r\n      fileUrl: msgData?.attachmentPreviewUrl,\r\n      file_id: \"\",\r\n      file_name:\r\n        msgData?.attachment?.name +\r\n        `${\r\n          msgData?.mediaDuration\r\n            ? `===${msgData.mediaDuration}`\r\n            : isNonImageFile\r\n            ? `===${msgData.attachment?.size || \"\"}`\r\n            : \"\"\r\n        }`,\r\n      content: msgData?.content,\r\n      createdAt: new Date().toISOString(),\r\n      sent: false,\r\n    };\r\n    setDontScrollToBottom(false);\r\n    setMessages([newMsg, ...messages]);\r\n    resetMsgInput();\r\n    setSending(true);\r\n    const config = getAxiosConfig({ loggedInUser, formData: true });\r\n\r\n    try {\r\n      // Upload img/gif to cloudinary, and all other files to aws s3\r\n      const apiUrl = isNonImageFile\r\n        ? `/api/message/upload-to-s3`\r\n        : `/api/message/`;\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"attachment\", msgData.attachment);\r\n      formData.append(\"mediaDuration\", msgData?.mediaDuration);\r\n      formData.append(\"content\", msgData.content);\r\n      formData.append(\"chatId\", selectedChat?._id);\r\n      const { data } = await axios.post(apiUrl, formData, config);\r\n\r\n      if (isSocketConnected) clientSocket?.emit(\"new msg sent\", data);\r\n      fetchMessages();\r\n      dispatch(toggleRefresh());\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Send Message\");\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const deleteMessage = async () => {\r\n    dispatch(setLoading(true));\r\n    setSending(true);\r\n    const config = getAxiosConfig({ loggedInUser });\r\n\r\n    try {\r\n      await axios.put(\r\n        `/api/message/delete`,\r\n        { messageIds: JSON.stringify([clickedMsgId]) },\r\n        config\r\n      );\r\n      if (isSocketConnected) {\r\n        clientSocket?.emit(\"msg deleted\", {\r\n          deletedMsgId: clickedMsgId,\r\n          senderId: loggedInUser?._id,\r\n          chat: selectedChat,\r\n        });\r\n      }\r\n      displaySuccess(\"Message Deleted Successfully\");\r\n      setMessages(messages.filter((msg) => msg?._id !== clickedMsgId));\r\n      dispatch(setLoading(false));\r\n      dispatch(toggleRefresh());\r\n      setSending(false);\r\n      return \"msgActionDone\";\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Delete Message\");\r\n      dispatch(setLoading(false));\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const updateMessage = async (updatedMsgContent, msgDate) => {\r\n    if (\r\n      !(\r\n        attachmentData.attachment ||\r\n        (msgFileAlreadyExists && !msgFileRemoved)\r\n      ) &&\r\n      !parseInnerHTML(updatedMsgContent)\r\n    ) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"A Message Must Contain Either a File or some Text Content\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    setMsgEditMode(false);\r\n    setDontScrollToBottom(true);\r\n\r\n    const msgData = {\r\n      ...attachmentData,\r\n      content: updatedMsgContent || \"\",\r\n    };\r\n    const isNonImageFile = !isImageOrGifFile(msgData.attachment?.name);\r\n\r\n    const updatedMsg = {\r\n      _id: Date.now(),\r\n      sender: {\r\n        _id: loggedInUser?._id,\r\n        profilePic: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n      },\r\n      fileUrl: msgData?.attachmentPreviewUrl,\r\n      file_id: \"\",\r\n      file_name:\r\n        msgData?.attachment?.name +\r\n        `${\r\n          msgData?.mediaDuration\r\n            ? `===${msgData.mediaDuration}`\r\n            : isNonImageFile\r\n            ? `===${msgData.attachment?.size || \"\"}`\r\n            : \"\"\r\n        }`,\r\n      content: msgData?.content,\r\n      createdAt: msgDate,\r\n      sent: false,\r\n    };\r\n    setMessages(\r\n      messages.map((msg) => (msg._id === clickedMsgId ? updatedMsg : msg))\r\n    );\r\n    discardAttachment();\r\n    setSending(true);\r\n    const config = getAxiosConfig({ loggedInUser, formData: true });\r\n\r\n    try {\r\n      // Upload img/gif to cloudinary, and all other files to aws s3\r\n      const apiUrl = isNonImageFile\r\n        ? `/api/message/update-in-s3`\r\n        : `/api/message/update`;\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"attachment\", msgData.attachment);\r\n      formData.append(\"msgFileRemoved\", msgFileRemoved);\r\n      formData.append(\"mediaDuration\", msgData?.mediaDuration);\r\n      formData.append(\"updatedContent\", msgData.content);\r\n      formData.append(\"messageId\", clickedMsgId);\r\n      const { data } = await axios.put(apiUrl, formData, config);\r\n\r\n      if (isSocketConnected) clientSocket?.emit(\"msg updated\", data);\r\n      fetchMessages({ updatingMsg: true });\r\n      dispatch(toggleRefresh());\r\n      setMsgFileRemoved(false);\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Update Message\");\r\n      setSending(false);\r\n      setMsgFileRemoved(false);\r\n    }\r\n  };\r\n\r\n  const editMsgHandler = () => setMsgEditMode(true);\r\n\r\n  const setMediaDuration = (mediaUrl, msgFile) => {\r\n    const media = new Audio(mediaUrl);\r\n    media.onloadedmetadata = () => {\r\n      const { duration } = media;\r\n      const minutes = parseInt(duration / 60);\r\n      const seconds = parseInt(duration % 60);\r\n      setAttachmentData({\r\n        attachment: msgFile,\r\n        attachmentPreviewUrl: mediaUrl,\r\n        mediaDuration: `${minutes}:${\r\n          seconds < 10 ? `0${seconds}` : seconds\r\n        }+++${msgFile.type}`,\r\n      });\r\n      setFileAttached(true);\r\n    };\r\n  };\r\n\r\n  const handleMsgFileInputChange = (e) => {\r\n    const msgFile = e.target.files[0];\r\n    if (!msgFile) return;\r\n\r\n    if (msgFile.size >= FIVE_MB) {\r\n      msgFileInput.current.value = \"\";\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Select a File Smaller than 5 MB\",\r\n          type: \"warning\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    const fileUrl = URL.createObjectURL(msgFile);\r\n    if (/^(video\\/|audio\\/)/.test(msgFile.type)) {\r\n      setMediaDuration(fileUrl, msgFile);\r\n    } else {\r\n      setAttachmentData({\r\n        attachment: msgFile,\r\n        attachmentPreviewUrl: fileUrl,\r\n      });\r\n      setFileAttached(true);\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    msgListBottom.current?.scrollIntoView();\r\n  };\r\n\r\n  // Initializing Client Socket\r\n  useEffect(() => {\r\n    dispatch(\r\n      setClientSocket(io(SOCKET_ENDPOINT, { transports: [\"websocket\"] }))\r\n    );\r\n  }, []);\r\n\r\n  // Socket event handlers\r\n  const newMsgSocketEventHandler = () => {\r\n    // off() prevents on() from executing multiple times\r\n    clientSocket\r\n      .off(\"new msg received\")\r\n      .on(\"new msg received\", (newMsg, notifications) => {\r\n        const { chat } = newMsg;\r\n        dispatch(toggleRefresh());\r\n        if (selectedChat && chat && selectedChat._id === chat._id) {\r\n          newMsg[\"sent\"] = true;\r\n          setMessages([newMsg, ...messages]);\r\n          deletePersistedNotifs([newMsg._id]);\r\n        } else {\r\n          const updatedUser = {\r\n            ...loggedInUser,\r\n            notifications: notifications?.reverse(),\r\n          };\r\n          persistUpdatedUser(updatedUser);\r\n        }\r\n      });\r\n  };\r\n\r\n  const deletedMsgSocketEventHandler = () => {\r\n    clientSocket\r\n      .off(\"remove deleted msg\")\r\n      .on(\"remove deleted msg\", (deletedMsgData) => {\r\n        const { deletedMsgId, chat } = deletedMsgData;\r\n        dispatch(toggleRefresh());\r\n        if (selectedChat && chat && selectedChat._id === chat._id) {\r\n          setMessages(messages.filter((m) => m?._id !== deletedMsgId));\r\n        } else {\r\n          // Remove notification of 'deleted msg' from global state\r\n          // and localStorage\r\n          const notifs = loggedInUser.notifications;\r\n          const updatedUser = {\r\n            ...loggedInUser,\r\n            notifications: notifs.filter((n) => n._id !== deletedMsgId),\r\n          };\r\n          persistUpdatedUser(updatedUser);\r\n        }\r\n      });\r\n  };\r\n\r\n  const updatedMsgSocketEventHandler = () => {\r\n    clientSocket\r\n      .off(\"update modified msg\")\r\n      .on(\"update modified msg\", (updatedMsg) => {\r\n        if (!updatedMsg) return;\r\n        const { chat } = updatedMsg;\r\n        dispatch(toggleRefresh());\r\n        if (selectedChat && chat && selectedChat._id === chat._id) {\r\n          updatedMsg[\"sent\"] = true;\r\n          updatedMsg[\"chat\"] = updatedMsg.chat?._id;\r\n          setTimeout(() => {\r\n            // Only updating msg content using 'document' method\r\n            // as updating 'messages' state will re-render all\r\n            // msgs and scroll to bottom, which may prevent the\r\n            // receiver to edit or view his/her msg, causing bad UX\r\n            if (parseInnerHTML(updatedMsg.content)) {\r\n              document.getElementById(`${updatedMsg._id}---content`).innerHTML =\r\n                updatedMsg.content;\r\n            }\r\n          }, 10);\r\n          // Updating 'state' is the only way to update attachment\r\n        }\r\n      });\r\n  };\r\n\r\n  // Listening to all socket events\r\n  useEffect(() => {\r\n    if (!clientSocket) return;\r\n\r\n    if (!isSocketConnected && clientSocket) {\r\n      clientSocket.emit(\"init user\", loggedInUser?._id);\r\n      clientSocket.on(\"user connected\", () => {\r\n        // console.log(\"socket connected\");\r\n        dispatch(setSocketConnected(true));\r\n      });\r\n    }\r\n    newMsgSocketEventHandler();\r\n    deletedMsgSocketEventHandler();\r\n    updatedMsgSocketEventHandler();\r\n  });\r\n\r\n  // Discard msg update draft\r\n  const discardMsgDraft = () => {\r\n    discardAttachment();\r\n    setMsgEditMode(false);\r\n    setSending(true);\r\n    setMessages([]);\r\n    // To execute after the entire code is run\r\n    setTimeout(() => {\r\n      setMessages(messages);\r\n      setSending(false);\r\n      // To execute after all the messages have been mapped\r\n      setTimeout(() => {\r\n        document.getElementById(clickedMsgId)?.scrollIntoView();\r\n      }, 10);\r\n    }, 0);\r\n    setMsgFileRemoved(false);\r\n    return \"msgActionDone\";\r\n  };\r\n\r\n  // Open discard draft confirm dialog\r\n  const openDiscardDraftConfirmDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<>Are you sure you want to discard this draft?</>);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Discard Draft\",\r\n        nolabel: \"NO\",\r\n        yeslabel: \"YES\",\r\n        loadingYeslabel: \"Discarding...\",\r\n        action: discardMsgDraft,\r\n      })\r\n    );\r\n  };\r\n\r\n  // Message input handlers\r\n  const emitTyping = () => {\r\n    if (isSocketConnected && !currentlyTyping) {\r\n      clientSocket?.emit(\"typing\", selectedChat, loggedInUser);\r\n      currentlyTyping = true;\r\n    }\r\n  };\r\n\r\n  const emitStopTyping = () => {\r\n    if (isSocketConnected && currentlyTyping) {\r\n      clientSocket?.emit(\"stop typing\", selectedChat, loggedInUser);\r\n      currentlyTyping = false;\r\n    }\r\n  };\r\n\r\n  const onInputFocus = () => {\r\n    preventStopTyping = false;\r\n  };\r\n\r\n  const onInputBlur = () => {\r\n    setTimeout(() => {\r\n      if (!preventStopTyping) emitStopTyping();\r\n    }, 1000);\r\n  };\r\n\r\n  const msgInputHandler = debounce((e) => {\r\n    const isNonEmptyInput = Boolean(parseInnerHTML(e.target.innerHTML));\r\n    setEnableMsgSend(isNonEmptyInput);\r\n    if (!isNonEmptyInput) emitStopTyping();\r\n    if (isNonEmptyInput) emitTyping();\r\n  }, 500);\r\n\r\n  const msgKeydownHandler = (e) => {\r\n    hideEmojiPicker();\r\n    if (\r\n      e.key === \"Enter\" &&\r\n      !e.shiftKey &&\r\n      (enableMsgSend || fileAttached || msgEditMode)\r\n    ) {\r\n      e.preventDefault();\r\n      if (msgEditMode) {\r\n        const msgDate =\r\n          e.target.dataset.msgCreatedAt ||\r\n          e.target.parentNode.dataset.msgCreatedAt;\r\n        updateMessage(editableMsgContent?.current?.innerHTML, msgDate);\r\n      } else {\r\n        sendMessage();\r\n      }\r\n    }\r\n  };\r\n\r\n  // Msgs click handler ('Event Delegation' applied here)\r\n  const msgsClickHandler = (e) => {\r\n    const { dataset } = e.target;\r\n    const parentDataset = e.target.parentNode.dataset;\r\n    const senderData = (dataset.sender || parentDataset.sender)?.split(\"===\");\r\n    const msgId = dataset.msg || parentDataset.msg;\r\n    const videoId = dataset.video || parentDataset.video;\r\n    const audioId = dataset.audio || parentDataset.audio;\r\n    const fileId = dataset.download || parentDataset.download;\r\n    const updateEditedMsg = dataset.updateMsg || parentDataset.updateMsg;\r\n    const attachMsgFileClicked =\r\n      dataset.attachMsgFile || parentDataset.attachMsgFile;\r\n    const removeMsgFileClicked =\r\n      dataset.removeMsgFile || parentDataset.removeMsgFile;\r\n    const editMsgFileClicked = dataset.editMsgFile || parentDataset.editMsgFile;\r\n    const discardDraftClicked =\r\n      dataset.discardDraft || parentDataset.discardDraft;\r\n\r\n    hideEmojiPicker();\r\n    if (fileId) {\r\n      downloadFile(fileId);\r\n    } else if (videoId) {\r\n      // Load video\r\n      loadMedia(videoId, {\r\n        fileName: dataset.videoName || parentDataset.videoName,\r\n        isAudio: false,\r\n      });\r\n    } else if (audioId) {\r\n      // Load audio\r\n      loadMedia(audioId, {\r\n        fileName: dataset.audioName || parentDataset.audioName,\r\n        isAudio: true,\r\n      });\r\n    } else if (dataset.imageId) {\r\n      displayFullSizeImage(e);\r\n    } else if (senderData?.length) {\r\n      // Open view profile dialog\r\n      const props = {\r\n        memberProfilePic: senderData[0],\r\n        memberName: senderData[1],\r\n        memberEmail: senderData[2],\r\n      };\r\n      openViewProfileDialog(props);\r\n    } else if (msgId && !msgEditMode) {\r\n      msgFileAlreadyExists = Boolean(\r\n        dataset.fileExists || parentDataset.fileExists\r\n      );\r\n      setClickedMsgId(msgId);\r\n      openMsgOptionsMenu(e);\r\n    } else if (attachMsgFileClicked || editMsgFileClicked) {\r\n      selectAttachment();\r\n    } else if (removeMsgFileClicked) {\r\n      setMsgFileRemoved(true);\r\n      discardAttachment();\r\n    } else if (discardDraftClicked) {\r\n      openDiscardDraftConfirmDialog();\r\n    } else if (updateEditedMsg) {\r\n      const msgDate = dataset.msgCreatedAt || parentDataset.msgCreatedAt;\r\n      updateMessage(editableMsgContent?.current?.innerHTML, msgDate);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!dontScrollToBottom) scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (fetchMsgs) {\r\n      fetchMessages();\r\n      if (isSocketConnected) clientSocket?.emit(\"join chat\", selectedChat?._id);\r\n    }\r\n  }, [fetchMsgs]);\r\n\r\n  const openViewProfileDialog = (props) => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(props ? <ViewProfileBody {...props} /> : <ViewProfileBody />);\r\n    dispatch(displayDialog({ title: \"View Profile\" }));\r\n  };\r\n\r\n  const openGroupInfoDialog = () => {\r\n    // Open group info dialog\r\n    dispatch(setGroupInfo(selectedChat));\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<GroupInfoBody messages={messages} />);\r\n    dispatch(displayDialog({ title: \"Group Info\" }));\r\n  };\r\n\r\n  // Open delete msg confirm dialog\r\n  const openDeleteMsgConfirmDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<>Are you sure you want to delete this message?</>);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Delete Message\",\r\n        nolabel: \"NO\",\r\n        yeslabel: \"YES\",\r\n        loadingYeslabel: \"Deleting...\",\r\n        action: deleteMessage,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (msgContent?.current) msgContent.current.innerHTML = \"\";\r\n  }, [selectedChat]);\r\n\r\n  const openMsgOptionsMenu = (e) => {\r\n    if (sending) return;\r\n    setMsgOptionsMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`chatpageDiv chatpageView messagesView col text-light mx-0 mx-md-1 ${\r\n        selectedChat ? \"d-flex\" : \"d-none d-md-flex\"\r\n      } flex-column p-2 user-select-none`}\r\n    >\r\n      {selectedChat ? (\r\n        <>\r\n          <MsgsHeader\r\n            closeChat={closeChat}\r\n            openGroupInfoDialog={openGroupInfoDialog}\r\n            openViewProfileDialog={openViewProfileDialog}\r\n            hideEmojiPicker={hideEmojiPicker}\r\n            CustomTooltip={CustomTooltip}\r\n          />\r\n          <section\r\n            className={`messagesBody position-relative ${\r\n              downloadingFileId || loadingMediaId ? \"pe-none\" : \"pe-auto\"\r\n            } d-flex flex-column m-1 p-2`}\r\n            onClick={(e) => {\r\n              const { dataset } = e.target;\r\n              const parentDataset = e.target.parentNode.dataset;\r\n              const discardFileClicked =\r\n                dataset.discardFile || parentDataset.discardFile;\r\n              if (discardFileClicked) discardAttachment();\r\n            }}\r\n          >\r\n            {/* Messages list */}\r\n            <div className=\"messages rounded-3 d-flex flex-column\">\r\n              <div\r\n                // Event delegation\r\n                onClick={msgsClickHandler}\r\n                onKeyDown={msgKeydownHandler}\r\n                className={`msgArea overflow-auto ${\r\n                  fileAttached && !msgEditMode ? \"d-none\" : \"d-flex\"\r\n                } flex-column-reverse`}\r\n              >\r\n                <div className=\"msgListBottom\" ref={msgListBottom}></div>\r\n                {loadingMsgs && !sending ? (\r\n                  <LoadingMsgs count={8} />\r\n                ) : (\r\n                  messages.map((m, i, msgs) => (\r\n                    <Message\r\n                      downloadingFileId={downloadingFileId}\r\n                      loadingMediaId={loadingMediaId}\r\n                      msgEditMode={msgEditMode}\r\n                      clickedMsgId={clickedMsgId}\r\n                      msgFileRemoved={msgFileRemoved}\r\n                      attachmentData={attachmentData}\r\n                      ref={editableMsgContent}\r\n                      CustomTooltip={CustomTooltip}\r\n                      key={m._id}\r\n                      msgSent={m.sent}\r\n                      currMsg={m}\r\n                      prevMsg={i < msgs.length - 1 ? msgs[i + 1] : null}\r\n                    />\r\n                  ))\r\n                )}\r\n              </div>\r\n            </div>\r\n            {/* Edit/Delete Message menu */}\r\n            <MsgOptionsMenu\r\n              anchor={msgOptionsMenuAnchor}\r\n              setAnchor={setMsgOptionsMenuAnchor}\r\n              clickedMsg={clickedMsgId}\r\n              editMsgHandler={editMsgHandler}\r\n              openDeleteMsgConfirmDialog={openDeleteMsgConfirmDialog}\r\n            />\r\n            {fileAttached && !msgEditMode && (\r\n              <AttachmentPreview\r\n                attachmentData={attachmentData}\r\n                discardAttachment={discardAttachment}\r\n                CustomTooltip={CustomTooltip}\r\n              />\r\n            )}\r\n            {/* Typing indicator */}\r\n            <span className={`${typingChatUser ? \"d-inline-block\" : \"d-none\"}`}>\r\n              <TypingIndicator\r\n                typingChatUser={typingChatUser}\r\n                showAvatar={true}\r\n              />\r\n            </span>\r\n            {/* New Message Input */}\r\n            <div\r\n              className={`msgInputDiv d-flex position-absolute ${\r\n                msgEditMode || sending ? \"pe-none\" : \"pe-auto\"\r\n              }`}\r\n            >\r\n              <span\r\n                className={`d-flex attachFile ${disableIfLoading} pointer bg-dark`}\r\n              >\r\n                <IconButton\r\n                  onClick={onEmojiIconClick}\r\n                  className={`d-flex ms-2 me-1 my-1`}\r\n                  sx={iconStyles}\r\n                >\r\n                  <EmojiEmotions style={{ fontSize: 28 }} />\r\n                </IconButton>\r\n                <CustomTooltip title=\"Attach File\" placement=\"top-start\" arrow>\r\n                  <IconButton\r\n                    onClick={selectAttachment}\r\n                    className={`d-flex my-2`}\r\n                    sx={{ ...iconStyles, transform: \"rotateZ(45deg)\" }}\r\n                  >\r\n                    <AttachFile style={{ fontSize: 22 }} />\r\n                  </IconButton>\r\n                </CustomTooltip>\r\n                {/* Emoji Picker */}\r\n                {showEmojiPicker && (\r\n                  <span className=\"emojiPicker position-absolute start-0\">\r\n                    <EmojiPicker\r\n                      onEmojiClick={onEmojiClick}\r\n                      disableAutoFocus={true}\r\n                      native={true}\r\n                      searchPlaceholder={\"Search an emoji...\"}\r\n                    />\r\n                  </span>\r\n                )}\r\n                {/* Attachment File input */}\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"*\"\r\n                  onChange={handleMsgFileInputChange}\r\n                  name=\"attachment\"\r\n                  id=\"attachMsgFile\"\r\n                  ref={msgFileInput}\r\n                  className={`d-none`}\r\n                  disabled={loadingMsgs}\r\n                />\r\n              </span>\r\n              {/* Content/text input */}\r\n              <div\r\n                onFocus={onInputFocus}\r\n                onBlur={onInputBlur}\r\n                onInput={msgInputHandler}\r\n                onKeyDown={msgKeydownHandler}\r\n                onClick={hideEmojiPicker}\r\n                ref={msgContent}\r\n                className={`msgInput ${\r\n                  fileAttached && !msgEditMode ? \"addCaption\" : \"\"\r\n                } w-100 text-start d-flex bg-dark px-2 justify-content-start`}\r\n                contentEditable={true}\r\n                style={{\r\n                  borderRadius:\r\n                    enableMsgSend || (fileAttached && !msgEditMode)\r\n                      ? \"0px\"\r\n                      : \"0px 7px 7px 0px\",\r\n                }}\r\n              ></div>\r\n              {/* Send button */}\r\n              {enableMsgSend || (fileAttached && !msgEditMode) ? (\r\n                <span\r\n                  className={`d-inline-block btn btn-dark btn-sm sendButton ${disableIfLoading} pointer`}\r\n                  onClick={sendMessage}\r\n                >\r\n                  <IconButton\r\n                    className={`d-flex my-1 mx-0 mx-md-0`}\r\n                    sx={{ margin: \"4px 0px\", padding: \"5px\", color: \"#999999\" }}\r\n                  >\r\n                    <Send style={{ fontSize: 20 }} />\r\n                  </IconButton>\r\n                </span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n          </section>\r\n        </>\r\n      ) : (\r\n        <WelcomeBanner isNewUser={isNewUser} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesView;\r\n","import { useEffect, useState } from \"react\";\r\nimport { NavigateFunction, useNavigate } from \"react-router-dom\";\r\nimport ChatpageHeader from \"../components/ChatpageHeader\";\r\nimport CustomDialog from \"../components/utils/CustomDialog\";\r\nimport ChatListView from \"../components/ChatListView\";\r\nimport MessagesView from \"../components/MessagesView\";\r\nimport { displayToast } from \"../store/slices/ToastSlice\";\r\nimport {\r\n  selectAppState,\r\n  setDeleteNotifsOfChat,\r\n  setGroupInfo,\r\n  setLoggedInUser,\r\n  setSelectedChat,\r\n  toggleRefresh,\r\n} from \"../store/slices/AppSlice\";\r\nimport {\r\n  hideDialog,\r\n  selectCustomDialogState,\r\n} from \"../store/slices/CustomDialogSlice\";\r\nimport { getAxiosConfig, truncateString } from \"../utils/appUtils\";\r\nimport axios from \"../utils/axios\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/storeHooks\";\r\nimport {\r\n  ChatType,\r\n  GroupInfo,\r\n  MessageType,\r\n  ToastData,\r\n  UserType,\r\n} from \"../utils/AppTypes\";\r\nimport { AxiosRequestConfig } from \"axios\";\r\n\r\nconst ChatsPage = () => {\r\n  const {\r\n    loggedInUser,\r\n    deleteNotifsOfChat,\r\n    clientSocket,\r\n    selectedChat,\r\n    isSocketConnected,\r\n  } = useAppSelector(selectAppState);\r\n  const { dialogData, showDialogActions } = useAppSelector(\r\n    selectCustomDialogState\r\n  );\r\n  const dispatch = useAppDispatch();\r\n  const navigate: NavigateFunction = useNavigate();\r\n  const [loadingMsgs, setLoadingMsgs] = useState(false);\r\n  const [dialogBody, setDialogBody] = useState(<></>);\r\n  const [chats, setChats] = useState([] as ChatType[]);\r\n  const [typingChatUsers, setTypingChatUsers] = useState([] as string[]);\r\n\r\n  useEffect(() => {\r\n    // localStorage persists data even after page refresh, unlike state\r\n    const user = JSON.parse(localStorage.getItem(\"loggedInUser\") as string);\r\n    if (!user) {\r\n      navigate(\"/\");\r\n      return;\r\n    }\r\n\r\n    if (Date.now() >= parseInt(user.expiryTime)) {\r\n      navigate(\"/\");\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Session Expired\",\r\n          message: \"Please Login Again\",\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n      return;\r\n    }\r\n\r\n    dispatch(setLoggedInUser(user));\r\n    dispatch(hideDialog());\r\n    dispatch(setSelectedChat(null));\r\n  }, []);\r\n\r\n  const getTypingUserName = (typingUser: UserType) =>\r\n    truncateString(typingUser?.name?.toString().split(\" \")[0], 12, 9) || \" \";\r\n\r\n  const getTypingChatId = (chatUser: string) =>\r\n    chatUser?.toString().split(\"---\")[0];\r\n\r\n  const displayInfo = (message = \"Operation Executed\") => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"info\",\r\n        duration: 5000,\r\n        position: \"bottom-center\",\r\n      } as ToastData)\r\n    );\r\n  };\r\n\r\n  const groupSocketEventHandlers = () => {\r\n    clientSocket\r\n      .off(\"display updated grp\")\r\n      .on(\r\n        \"display updated grp\",\r\n        (updatedGroupData: {\r\n          updatedGroup: ChatType;\r\n          createdAdmin: UserType;\r\n          dismissedAdmin: UserType;\r\n        }) => {\r\n          const { updatedGroup, createdAdmin, dismissedAdmin } =\r\n            updatedGroupData;\r\n          dispatch(toggleRefresh());\r\n          if (!updatedGroup) return;\r\n          const { _id, chatName, removedUser } = updatedGroup;\r\n          const isLoggedInUserRemoved = removedUser?._id === loggedInUser?._id;\r\n          const isGroupInfoDialogOpen =\r\n            dialogData.isOpen && dialogData.title === \"Group Info\";\r\n\r\n          if (selectedChat?._id === _id) {\r\n            let groupData = updatedGroup as ChatType;\r\n            if (isLoggedInUserRemoved) {\r\n              dispatch(hideDialog());\r\n              groupData = null;\r\n            }\r\n            dispatch(setSelectedChat(groupData));\r\n            dispatch(setGroupInfo(groupData as GroupInfo));\r\n            if (\r\n              isGroupInfoDialogOpen &&\r\n              createdAdmin?._id === loggedInUser?._id\r\n            ) {\r\n              displayInfo(`You are now an Admin of '${chatName}' group`);\r\n            }\r\n            if (\r\n              isGroupInfoDialogOpen &&\r\n              dismissedAdmin?._id === loggedInUser?._id\r\n            ) {\r\n              displayInfo(`You are no longer an Admin of '${chatName}' group`);\r\n            }\r\n          }\r\n          if (isLoggedInUserRemoved) {\r\n            displayInfo(`You have been removed from '${chatName}' group`);\r\n          }\r\n        }\r\n      );\r\n\r\n    clientSocket\r\n      .off(\"remove deleted grp\")\r\n      .on(\"remove deleted grp\", (deletedGroup: ChatType) => {\r\n        dispatch(toggleRefresh());\r\n        if (!deletedGroup) return;\r\n        if (selectedChat?._id === deletedGroup?._id) {\r\n          dispatch(hideDialog());\r\n          dispatch(setSelectedChat(null));\r\n          dispatch(setGroupInfo(null));\r\n        }\r\n        displayInfo(`'${deletedGroup.chatName}' Group Deleted by Admin`);\r\n      });\r\n\r\n    clientSocket.off(\"display new grp\").on(\"display new grp\", () => {\r\n      dispatch(toggleRefresh());\r\n    });\r\n  };\r\n\r\n  const typingSocketEventHandler = () => {\r\n    clientSocket\r\n      .off(\"display typing\")\r\n      .on(\"display typing\", (chat: ChatType, typingUser: UserType) => {\r\n        if (!chat || !typingUser) return;\r\n        setTypingChatUsers([\r\n          ...typingChatUsers,\r\n          `${chat._id}---${getTypingUserName(typingUser)}---${\r\n            typingUser.profilePic\r\n          }---${chat.isGroupChat}`,\r\n        ]);\r\n      });\r\n\r\n    clientSocket\r\n      .off(\"hide typing\")\r\n      .on(\"hide typing\", (chat: ChatType, typingUser: UserType) => {\r\n        if (!chat || !typingUser) return;\r\n        setTypingChatUsers(\r\n          typingChatUsers.filter(\r\n            (chatUser) =>\r\n              chatUser !==\r\n              `${chat._id}---${getTypingUserName(typingUser)}---${\r\n                typingUser.profilePic\r\n              }---${chat.isGroupChat}`\r\n          )\r\n        );\r\n      });\r\n  };\r\n\r\n  // Listening to socket events\r\n  useEffect(() => {\r\n    if (!clientSocket || !isSocketConnected) return;\r\n    groupSocketEventHandlers();\r\n    typingSocketEventHandler();\r\n  });\r\n\r\n  const deletePersistedNotifs = async (notifsToBeDeleted: string[]) => {\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      await axios.put(\r\n        `/api/user/delete/notifications`,\r\n        { notificationIds: JSON.stringify(notifsToBeDeleted) },\r\n        config as AxiosRequestConfig\r\n      );\r\n    } catch (error) {\r\n      console.log(\"Couldn't Delete Notifications : \", (error as Error).message);\r\n    }\r\n  };\r\n\r\n  const deleteNotifications = (clickedChatId: string) => {\r\n    // Delete notifs from global state and localStorage\r\n    const notifs = [...(loggedInUser?.notifications as MessageType[])];\r\n    const notifsToBeDeleted = [];\r\n    if (!notifs) return;\r\n    for (let i = 0; i < notifs.length; ++i) {\r\n      if ((notifs[i]?.chat as ChatType)?._id === clickedChatId) {\r\n        const deletedNotif = notifs.splice(i, 1)[0];\r\n        notifsToBeDeleted.push(deletedNotif?._id);\r\n        // After deleting element at 'i', next element (i+1) shifts back\r\n        // to 'i' index\r\n        --i;\r\n      }\r\n    }\r\n    const updatedUser = { ...loggedInUser, notifications: notifs };\r\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\r\n    dispatch(setLoggedInUser(updatedUser as UserType));\r\n\r\n    // Delete notifs that were persisted in mongodb\r\n    deletePersistedNotifs(notifsToBeDeleted as string[]);\r\n    dispatch(setDeleteNotifsOfChat(\"\"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!deleteNotifsOfChat) return;\r\n    deleteNotifications(deleteNotifsOfChat);\r\n  }, [deleteNotifsOfChat]);\r\n\r\n  return (\r\n    <>\r\n      {loggedInUser && (\r\n        <div className={`chatpage`}>\r\n          {/* Header component */}\r\n          <ChatpageHeader chats={chats} setDialogBody={setDialogBody} />\r\n\r\n          <section className={`row g-1`}>\r\n            {/* Chat List component */}\r\n            <ChatListView\r\n              chats={chats}\r\n              setChats={setChats}\r\n              loadingMsgs={loadingMsgs}\r\n              setDialogBody={setDialogBody}\r\n              typingChatUsers={typingChatUsers}\r\n            />\r\n\r\n            {/* Chat Messages component */}\r\n            <MessagesView\r\n              loadingMsgs={loadingMsgs}\r\n              setLoadingMsgs={setLoadingMsgs}\r\n              setDialogBody={setDialogBody}\r\n              deletePersistedNotifs={deletePersistedNotifs}\r\n              isNewUser={chats?.length === 0}\r\n              typingChatUser={typingChatUsers.find(\r\n                (u) => getTypingChatId(u) === selectedChat?._id\r\n              )}\r\n            />\r\n          </section>\r\n\r\n          {/* App Parent Dialog */}\r\n          <CustomDialog\r\n            dialogData={dialogData}\r\n            showDialogActions={showDialogActions}\r\n            showDialogClose={true}\r\n          >\r\n            {dialogBody}\r\n          </CustomDialog>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatsPage;\r\n"],"names":["menuPaperProps","elevation","sx","overflow","maxHeight","filter","borderRadius","backgroundColor","mt","menuItemProps","color","fontSize","menuIconProps","children","menuAnchor","setMenuAnchor","transformOrigin","anchorOrigin","isMenuOpen","Boolean","closeMenu","anchorEl","open","onClose","onClick","PaperProps","style","marginBottom","chats","anchor","setAnchor","loggedInUser","useSelector","selectAppState","dispatch","useDispatch","notifs","notifications","notifGroups","forEach","notif","notifChat","chat","chatId","_id","chatName","isGroupChat","getOneToOneChatReceiver","users","name","notifGroupId","vertical","horizontal","Object","keys","length","e","chatNotifId","target","dataset","notifGroup","parentNode","split","chatToBeOpened","find","setSelectedChat","setFetchMsgs","setDeleteNotifsOfChat","setGroupInfo","map","fromGroup","includes","notifCount","MenuItem","title","className","truncateString","getUpdatedState","selectFormfieldState","loading","disableIfLoading","formLabelClassName","formFieldClassName","inputFieldClassName","useState","showPassword","setShowPassword","currentPassword","newPassword","confirmNewPassword","changePasswordData","setChangePasswordData","handleChangeFor","prop","value","useEffect","onEnterKeyDown","key","submitUpdatedPassword","htmlFor","type","onChange","onKeyDown","required","autoFocus","id","disabled","placeholder","PasswordVisibilityToggle","originalName","getUpdatedName","setName","width","submitUpdatedName","selectProfilePic","openDeletePhotoConfirmDialog","deletePhotoCondition","ListItemIcon","Upload","Delete","arrowStyles","tooltipStyles","styled","placement","arrow","Tooltip","classes","popper","theme","tooltipClasses","btnHoverStyle","btnCustomStyle","fontFamily","dialogData","showDialogActions","showDialogClose","closeDialog","useAppSelector","useAppDispatch","navigate","useNavigate","isFullScreen","isOpen","nolabel","yeslabel","loadingYeslabel","action","handleDialogClose","hideDialog","handleYes","result","Dialog","fullScreen","backgroundImage","DialogTitle","fontWeight","marginTop","marginRight","IconButton","position","right","top","Close","DialogContent","DialogActions","Button","KeyboardDoubleArrowLeft","margin","CircularProgress","size","KeyboardDoubleArrowRight","marginLeft","showChildDialogActions","showChildDialogClose","childDialogData","setChildDialogData","childDialogBody","setChildDialogBody","displayChildDialog","options","closeChildDialog","data","setChildDialogMethods","CustomTooltip","getCustomTooltip","maxWidth","padding","border","childDialogMethods","selectChildDialogState","profilePicUrl","profilePic","email","profileData","setProfileData","editProfilePicMenuAnchor","setEditProfilePicMenuAnchor","editedName","displayWarning","message","duration","displayToast","displayError","error","response","displaySuccess","uploading","setUploading","imgInput","useRef","isGuestUser","persistUpdatedUser","updatedUser","localStorage","setItem","JSON","stringify","setLoggedInUser","clickOnKeydown","click","handleImgInputChange","image","files","isImageFile","TWO_MB","current","setLoading","config","getAxiosConfig","formData","FormData","append","cloudinary_id","axios","token","expiryTime","deleteProfilePic","currentProfilePic","updatedValue","updateProfileName","enterKeyPressed","newUserName","src","alt","tabIndex","Edit","endsWith","accept","ref","wordWrap","truncateWords","editPasswordData","setDialogBody","updatedState","updatePassword","removeItem","logout","setShowDialogActions","displayDialog","Person","ManageAccounts","Key","Logout","user","truncateValues","max","index","Avatar","listOf","dpRadius","count","skeletonStyle","Array","i","Skeleton","variant","height","forwardRef","props","inputRef","searchHandler","clearInput","typing","setTyping","Search","trim","replace","cursor","focus","Clear","isDrawerOpen","setIsDrawerOpen","searchQuery","setSearchQuery","searchResults","setSearchResults","searchUserInput","handleClose","searchUsers","debounce","query","createOrRetrieveChat","userId","Drawer","borderTopRightRadius","borderBottomRightRadius","transitionDuration","ChevronLeft","overflowY","overflowX","appGif","animateNotif","setAnimateNotif","notificationsMenuAnchor","setNotificationsMenuAnchor","profileSettingsMenuAnchor","setProfileSettingsMenuAnchor","timeout","setTimeout","clearTimeout","LottieAnimation","animationData","Notifications","groupInfo","refresh","clientSocket","isSocketConnected","chatDisplayPicUrl","editGroupDpMenuAnchor","setEditGroupDpMenuAnchor","createGroupChat","chatDisplayPic","emit","admin","newGroup","toggleRefresh","preventDefault","process","URL","createObjectURL","getAddedMembers","forCreateGroup","groupData","setGroupData","fetching","setFetching","groupMembers","isMemberSelected","setIsMemberSelected","addedMembers","setAddedMembers","setShowDialogClose","openNewGroupDialog","setDialogAction","membersNotAdded","addedMember","m","flex","Chip","avatar","label","onDelete","u","unselectUser","selectedUser","typingChatUser","showAvatar","typingGif","typingUserData","toString","typingUserName","bottom","typingAnimData","lastMsgFileType","chatNotifCount","selectedChat","receiverEmail","lastMessage","tooltipTitle","lastMsgContent","content","replaceAll","lastMsgDate","Date","createdAt","lastMsgDateString","msgDateStringOf","lastMsgFileUrl","fileUrl","fileContents","file_name","lastMsgFileName","lastMsgData","fileType","test","startsWith","msgTimeStringOf","dateStringOf","sender","DoneAll","Image","GifBox","VideoFile","AudioFile","PictureAsPdf","Description","FILE_STYLES","event","audioSrc","videoSrc","autoPlay","controls","objectFit","iconWrapperStyles","GroupAdd","setChats","loadingMsgs","typingChatUsers","filteredChats","setFilteredChats","searchChatInput","fetchChats","mappedChats","receiver","undefined","searchChats","chatNameInput","toLowerCase","parentDataset","clickedChatId","hasNotifs","displayFullSizeImage","clickedChat","memberProfilePic","memberName","memberEmail","isLoggedInUser","isGroupAdmin","KeyboardArrowDown","clickedMember","isLoggedInUserGroupAdmin","groupAdmins","some","clickedMemberName","styledMemberName","updateView","openChat","makeGroupAdmin","updater","updatedGroup","createdAdmin","dismissAsAdmin","dismissedAdmin","removeFromGroup","userToBeRemoved","Message","InfoOutlined","AdminPanelSettings","GroupRemove","filteredMembersCache","admins","setClickedMember","memberOptionsMenuAnchor","setMemberOptionsMenuAnchor","member","every","setFilteredMembers","filterMemberInput","filteredMembers","filterMembers","memberNameInput","openMemberOptionsMenu","messages","deleteNotifications","groupDP","groupName","isUserGroupAdmin","btnClassName","updatedName","updateGroupName","enterKeyClicked","updateGroupDp","deleteGroupDp","currentDP","exitGroup","deleteGroup","deleteGroupPromise","deleteMessagesPromise","messageIds","isDeleteGroupRequest","Promise","resolve","all","deletedGroup","updatedMembers","addMembersToGroup","usersToBeAdded","lineHeight","PersonAdd","msgSent","isEditMode","fileEditIcons","downloadingFileId","loadingMediaId","isPreview","fileData","previewStyles","iconStyles","file_id","isMediaFile","mediaContents","mediaFileType","mediaFileSize","getFileSizeString","loadingGif","fileSize","parseInt","isDownloadingFile","substring","lastIndexOf","toUpperCase","attachmentHeader","zIndex","Downloading","Download","fileNameWrapper","fileInfo","hideWhileLoadingMedia","displayWhileLoadingMedia","isImageOrGifFile","PlayCircle","Videocam","PlayArrow","Audiotrack","attachmentData","attachment","attachmentPreviewUrl","FILE_WRAPPER_CLASS","ATTACHMENT_STYLE","editIconsWrapper","previewTitle","left","IconButtonSx","editableMsgRef","msgEditMode","clickedMsgId","msgFileRemoved","currMsg","prevMsg","msgContentRef","senderData","currMsgId","isClickedMsgCurrMsg","isSameSender","currMsgDate","prevMsgDate","isOtherDay","showCurrSender","innerHTML","setCaretPosition","transform","AttachFile","Done","msgId","outline","contentEditable","editMsgHandler","openDeleteMsgConfirmDialog","isNewUser","letsChatGif","letsChatAnimData","closeChat","openGroupInfoDialog","openViewProfileDialog","hideEmojiPicker","ArrowBack","msgFileAlreadyExists","currentlyTyping","preventStopTyping","setLoadingMsgs","deletePersistedNotifs","fetchMsgs","sending","setSending","setMsgFileRemoved","enableMsgSend","setEnableMsgSend","fileAttached","setFileAttached","setMessages","setClickedMsgId","dontScrollToBottom","setDontScrollToBottom","setAttachmentData","msgListBottom","msgFileInput","msgContent","editableMsgContent","setDownloadingFileId","setLoadingMediaId","setMsgEditMode","msgOptionsMenuAnchor","setMsgOptionsMenuAnchor","resetMsgInput","discardAttachmentOnly","showEmojiPicker","setShowEmojiPicker","selectAttachment","discardAttachment","viewMedia","fileName","isAudio","loadMedia","fileId","blob","mediaSrc","Blob","downloadFile","link","document","createElement","href","setAttribute","body","appendChild","remove","fetchMessages","msg","updatingMsg","sendMessage","emitStopTyping","msgData","isNonImageFile","newMsg","now","mediaDuration","toISOString","sent","apiUrl","deleteMessage","deletedMsgId","senderId","updateMessage","updatedMsgContent","msgDate","parseInnerHTML","updatedMsg","setClientSocket","io","transports","on","setSocketConnected","off","reverse","deletedMsgData","n","getElementById","discardMsgDraft","scrollIntoView","msgInputHandler","isNonEmptyInput","msgKeydownHandler","shiftKey","msgCreatedAt","scrollToBottom","openMsgOptionsMenu","discardFile","videoId","video","audioId","audio","download","updateEditedMsg","updateMsg","attachMsgFileClicked","attachMsgFile","removeMsgFileClicked","removeMsgFile","editMsgFileClicked","editMsgFile","discardDraftClicked","discardDraft","videoName","audioName","imageId","fileExists","msgs","clickedMsg","EmojiEmotions","onEmojiClick","emojiObject","emoji","disableAutoFocus","native","searchPlaceholder","msgFile","FIVE_MB","mediaUrl","media","Audio","onloadedmetadata","minutes","seconds","setMediaDuration","onFocus","onBlur","onInput","Send","deleteNotifsOfChat","selectCustomDialogState","dialogBody","setTypingChatUsers","parse","getItem","getTypingUserName","typingUser","displayInfo","updatedGroupData","removedUser","isLoggedInUserRemoved","isGroupInfoDialogOpen","chatUser","notifsToBeDeleted","notificationIds","console","log","deletedNotif","splice","push"],"sourceRoot":""}