{"version":3,"file":"static/js/274.b8db2f5c.chunk.js","mappings":"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","sources":["components/utils/Menu.jsx","components/utils/MenuItemText.jsx","components/menus/NotificationsMenu.jsx","components/dialogs/ChangePasswordBody.jsx","components/dialogs/EditNameBody.jsx","components/menus/EditPicMenu.jsx","components/utils/CustomTooltip.jsx","components/utils/CustomDialog.jsx","components/utils/ChildDialog.jsx","components/dialogs/EditProfileBody.jsx","components/menus/ProfileSettingsMenu.jsx","components/utils/UserListItem.jsx","components/utils/LoadingList.jsx","components/utils/SearchInput.jsx","components/utils/SearchUsersDrawer.jsx","components/ChatpageHeader.jsx","components/dialogs/NewGroupBody.jsx","components/dialogs/AddMembersToGroup.jsx","components/utils/ChatListItem.jsx","components/utils/FullSizeImage.jsx","components/ChatListView.jsx","components/dialogs/ViewProfileBody.jsx","components/utils/GroupMemberItem.jsx","components/menus/MemberOptionsMenu.jsx","components/dialogs/ViewGroupMembers.jsx","components/dialogs/GroupInfoBody.jsx","components/utils/LoadingMsgs.jsx","components/utils/Message.jsx","components/menus/MsgOptionsMenu.jsx","components/MessagesView.jsx","pages/ChatsPage.jsx"],"sourcesContent":["import { Menu as MuiMenu } from \"@mui/material\";\r\n\r\nexport const menuPaperProps = {\r\n  elevation: 0,\r\n  sx: {\r\n    overflow: \"auto\",\r\n    maxHeight: 250,\r\n    filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\r\n    borderRadius: 2,\r\n    backgroundColor: \"#404040\",\r\n    mt: 1,\r\n  },\r\n};\r\n\r\nexport const menuItemProps = {\r\n  \":hover\": { backgroundColor: \"#505050\" },\r\n  color: \"#e0e0e0\",\r\n  fontSize: \"19px\",\r\n};\r\n\r\nexport const menuIconProps = { color: \"lightblue\" };\r\n\r\nconst Menu = ({\r\n  children,\r\n  menuAnchor,\r\n  setMenuAnchor,\r\n  transformOrigin,\r\n  anchorOrigin,\r\n}) => {\r\n  const isMenuOpen = Boolean(menuAnchor);\r\n\r\n  const closeMenu = () => {\r\n    setMenuAnchor(null);\r\n  };\r\n\r\n  return (\r\n    <MuiMenu\r\n      anchorEl={menuAnchor}\r\n      open={isMenuOpen}\r\n      onClose={closeMenu}\r\n      onClick={closeMenu}\r\n      PaperProps={menuPaperProps}\r\n      transformOrigin={transformOrigin}\r\n      anchorOrigin={anchorOrigin}\r\n    >\r\n      {children}\r\n    </MuiMenu>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\n\r\nconst MenuItemText = ({ children }) => {\r\n  return <span style={{ marginBottom: \"3px\" }}>{children}</span>;\r\n};\r\n\r\nexport default MenuItemText;\r\n","import { Logout, ManageAccounts } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport { useState } from \"react\";\r\nimport { AppState } from \"../../context/ContextProvider\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\n\r\nconst NotificationsMenu = ({ anchor, setAnchor }) => {\r\n  const { loggedInUser, setLoggedInUser } = AppState();\r\n  const notifs = loggedInUser?.notifications;\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      {notifs?.length ? (\r\n        notifs.map((n) => (\r\n          <MenuItem\r\n            key={n._id}\r\n            sx={menuItemProps}\r\n            onClick={() => {}}\r\n          ></MenuItem>\r\n        ))\r\n      ) : (\r\n        <MenuItem sx={menuItemProps}>\r\n          <MenuItemText>No notifications</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default NotificationsMenu;\r\n","import { useEffect, useState } from \"react\";\r\nimport { AppState } from \"../../context/ContextProvider\";\r\nimport PasswordVisibilityToggle from \"../utils/PasswordVisibilityToggle\";\r\n\r\nconst ChangePasswordBody = ({ getUpdatedState }) => {\r\n  const { formClassNames } = AppState();\r\n\r\n  const {\r\n    loading,\r\n    disableIfLoading,\r\n    formLabelClassName,\r\n    formFieldClassName,\r\n    inputFieldClassName,\r\n  } = formClassNames;\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [changePasswordData, setChangePasswordData] = useState({\r\n    currentPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmNewPassword: \"\",\r\n  });\r\n\r\n  const { currentPassword, newPassword, confirmNewPassword } =\r\n    changePasswordData;\r\n\r\n  const handleChangeFor = (prop) => (e) => {\r\n    setChangePasswordData({ ...changePasswordData, [prop]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Return updated state to profile settings menu\r\n    getUpdatedState(changePasswordData);\r\n  }, [changePasswordData]);\r\n\r\n  return (\r\n    <>\r\n      {/* Current Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 mt-3 col-md-6 order-md-2`}\r\n      >\r\n        <label htmlFor=\"current_password\" className={`${formLabelClassName}`}>\r\n          Current Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={currentPassword}\r\n            onChange={handleChangeFor(\"currentPassword\")}\r\n            required\r\n            autoFocus\r\n            name=\"currentPassword\"\r\n            id=\"current_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Used While Signing In\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n      {/* New Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 col-md-6 order-md-2`}\r\n      >\r\n        <label htmlFor=\"new_password\" className={`${formLabelClassName}`}>\r\n          New Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={newPassword}\r\n            onChange={handleChangeFor(\"newPassword\")}\r\n            required\r\n            name=\"newPassword\"\r\n            id=\"new_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Different from Current\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n      {/* Confirm New Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 col-md-6 order-md-2`}\r\n      >\r\n        <label\r\n          htmlFor=\"confirm_new_password\"\r\n          className={`${formLabelClassName}`}\r\n        >\r\n          Confirm New Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={confirmNewPassword}\r\n            onChange={handleChangeFor(\"confirmNewPassword\")}\r\n            required\r\n            name=\"confirmNewPassword\"\r\n            id=\"confirm_new_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Exactly as Above\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordBody;\r\n","import { useEffect, useState } from \"react\";\r\nimport { AppState } from \"../../context/ContextProvider\";\r\n\r\nconst EditNameBody = ({ originalName, getUpdatedName, placeholder }) => {\r\n  const { formClassNames } = AppState();\r\n  const { loading, formFieldClassName, inputFieldClassName } = formClassNames;\r\n  const [name, setName] = useState(originalName);\r\n\r\n  useEffect(() => {\r\n    getUpdatedName(name);\r\n  }, [name]);\r\n\r\n  return (\r\n    <section\r\n      className={`${formFieldClassName} mx-auto`}\r\n      style={{ width: \"clamp(250px, 60vw, 360px)\" }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        name=\"editname\"\r\n        autoFocus\r\n        className={`${inputFieldClassName} mt-1`}\r\n        disabled={loading}\r\n        placeholder={placeholder}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditNameBody;\r\n","import { Delete, Upload } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\n\r\nconst EditPicMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  selectProfilePic,\r\n  openDeletePhotoConfirmDialog,\r\n  deletePhotoCondition,\r\n}) => {\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={selectProfilePic}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Upload />\r\n        </ListItemIcon>\r\n        <MenuItemText>Upload Photo</MenuItemText>\r\n      </MenuItem>\r\n      {deletePhotoCondition && (\r\n        <MenuItem sx={menuItemProps} onClick={openDeletePhotoConfirmDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <Delete />\r\n          </ListItemIcon>\r\n          <MenuItemText>Delete Photo</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default EditPicMenu;\r\n","import { styled } from \"@mui/material/styles\";\r\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\r\n\r\nconst getCustomTooltip = (arrowStyles, tooltipStyles) =>\r\n  styled(({ className, ...props }) => (\r\n    <Tooltip {...props} arrow classes={{ popper: className }} />\r\n  ))(({ theme }) => ({\r\n    [`& .${tooltipClasses.arrow}`]: { ...arrowStyles },\r\n    [`& .${tooltipClasses.tooltip}`]: { ...tooltipStyles },\r\n  }));\r\n\r\nexport default getCustomTooltip;\r\n","import {\r\n  Close,\r\n  KeyboardDoubleArrowLeft,\r\n  KeyboardDoubleArrowRight,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AppState } from \"../../context/ContextProvider\";\r\n\r\nexport const btnHoverStyle = {\r\n  \":hover\": { backgroundColor: \"#93c2f727\" },\r\n};\r\nexport const btnCustomStyle = {\r\n  fontSize: \"19px\",\r\n  color: \"#8cc2ff\",\r\n  fontFamily: \"Mirza\",\r\n  borderRadius: \"10px\",\r\n};\r\n\r\nconst CustomDialog = ({\r\n  children,\r\n  dialogData,\r\n  handleDialogClose,\r\n  showDialogActions,\r\n  showDialogClose,\r\n}) => {\r\n  const { formClassNames, setSelectedChat, closeDialog } = AppState();\r\n  const {\r\n    isFullScreen,\r\n    isOpen,\r\n    title,\r\n    nolabel,\r\n    yeslabel,\r\n    loadingYeslabel,\r\n    action,\r\n  } = dialogData;\r\n  const { loading, disableIfLoading } = formClassNames;\r\n  const navigate = useNavigate();\r\n\r\n  const handleYes = async () => {\r\n    const result = await action();\r\n    if (\r\n      result === \"profileUpdated\" ||\r\n      result === \"membersUpdated\" ||\r\n      result === \"msgActionDone\"\r\n    ) {\r\n      handleDialogClose();\r\n    } else if (result === \"createdGroup\") {\r\n      handleDialogClose();\r\n      // Close Parent Dialog as well\r\n      closeDialog();\r\n    } else if (result === \"pwdUpdated\" || result === \"loggingOut\") {\r\n      handleDialogClose();\r\n      setSelectedChat(null);\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen={Boolean(isFullScreen)}\r\n      PaperProps={{\r\n        sx: {\r\n          borderRadius: 2,\r\n          backgroundImage: \"linear-gradient(0deg,#353535,#444)\",\r\n        },\r\n      }}\r\n      className={`user-select-none ${disableIfLoading}`}\r\n      open={isOpen}\r\n      onClose={handleDialogClose}\r\n    >\r\n      <DialogTitle\r\n        style={{ fontSize: \"26px\", color: \"#ffffff\", fontFamily: \"Mirza\" }}\r\n      >\r\n        <span\r\n          className=\"d-flex\"\r\n          style={{ marginTop: \"-5px\", marginRight: \"10px\" }}\r\n        >\r\n          {title}\r\n        </span>\r\n        {showDialogClose && (\r\n          <IconButton\r\n            onClick={handleDialogClose}\r\n            disabled={loading}\r\n            sx={{\r\n              position: \"absolute\",\r\n              right: 8,\r\n              top: 8,\r\n              color: \"#999999\",\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        )}\r\n      </DialogTitle>\r\n      <DialogContent\r\n        style={{ fontSize: \"19px\", color: \"#e0e0e0\", fontFamily: \"Mirza\" }}\r\n      >\r\n        {children}\r\n      </DialogContent>\r\n      {showDialogActions && (\r\n        <DialogActions>\r\n          <Button\r\n            sx={btnHoverStyle}\r\n            disabled={loading}\r\n            style={btnCustomStyle}\r\n            onClick={handleDialogClose}\r\n          >\r\n            {nolabel === \"Back\" ? (\r\n              <span>\r\n                <KeyboardDoubleArrowLeft\r\n                  className=\"btnArrowIcons\"\r\n                  style={{\r\n                    margin: \"0px 5px 2px 0px\",\r\n                  }}\r\n                />\r\n                Back\r\n              </span>\r\n            ) : (\r\n              nolabel\r\n            )}\r\n          </Button>\r\n          <Button\r\n            sx={btnHoverStyle}\r\n            disabled={loading}\r\n            style={btnCustomStyle}\r\n            onClick={handleYes}\r\n          >\r\n            {loading && yeslabel !== \"Next\" ? (\r\n              <>\r\n                <CircularProgress size={25} style={{ marginRight: \"12px\" }} />\r\n                <span style={{ marginRight: \"22px\" }}>{loadingYeslabel}</span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {yeslabel === \"Next\" ? (\r\n                  <span>\r\n                    Next\r\n                    <KeyboardDoubleArrowRight\r\n                      className=\"btnArrowIcons\"\r\n                      style={{\r\n                        marginLeft: \"4px\",\r\n                      }}\r\n                    />\r\n                  </span>\r\n                ) : (\r\n                  yeslabel\r\n                )}\r\n              </>\r\n            )}\r\n          </Button>\r\n        </DialogActions>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CustomDialog;\r\n","import { useEffect, useState } from \"react\";\r\nimport CustomDialog from \"./CustomDialog\";\r\n\r\nconst ChildDialog = ({\r\n  getChildDialogMethods,\r\n  showChildDialogActions = true,\r\n  showChildDialogClose = false,\r\n}) => {\r\n  // Child Dialog config\r\n  const [childDialogData, setChildDialogData] = useState({\r\n    isOpen: false,\r\n    title: \"Child Dialog\",\r\n    nolabel: \"NO\",\r\n    yeslabel: \"YES\",\r\n    loadingYeslabel: \"Updating...\",\r\n    action: () => {},\r\n  });\r\n  const [childDialogBody, setChildDialogBody] = useState(<></>);\r\n\r\n  const displayChildDialog = (options) => {\r\n    setChildDialogData({ ...options, isOpen: true });\r\n  };\r\n  const closeChildDialog = (data) => {\r\n    setChildDialogData({ ...data, isOpen: false });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChildDialogMethods({\r\n      setChildDialogBody,\r\n      displayChildDialog,\r\n      closeChildDialog,\r\n    });\r\n  }, [childDialogData]);\r\n\r\n  return (\r\n    <CustomDialog\r\n      dialogData={childDialogData}\r\n      handleDialogClose={closeChildDialog}\r\n      showDialogActions={showChildDialogActions}\r\n      showDialogClose={showChildDialogClose}\r\n    >\r\n      {childDialogBody}\r\n    </CustomDialog>\r\n  );\r\n};\r\n\r\nexport default ChildDialog;\r\n","import { Edit } from \"@mui/icons-material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"../../utils/axios\";\r\nimport { AppState } from \"../../context/ContextProvider\";\r\nimport EditNameBody from \"./EditNameBody\";\r\nimport { CircularProgress, IconButton } from \"@mui/material\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#111\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst EditProfileBody = () => {\r\n  const {\r\n    formClassNames,\r\n    loggedInUser,\r\n    setLoggedInUser,\r\n    displayToast,\r\n    childDialogMethods,\r\n    getChildDialogMethods,\r\n  } = AppState();\r\n\r\n  const { loading, setLoading, disableIfLoading } = formClassNames;\r\n  const { setChildDialogBody, displayChildDialog } = childDialogMethods;\r\n\r\n  const [profileData, setProfileData] = useState({\r\n    profilePicUrl: loggedInUser?.profilePic,\r\n    name: loggedInUser?.name,\r\n    email: loggedInUser?.email,\r\n  });\r\n  const [editProfilePicMenuAnchor, setEditProfilePicMenuAnchor] =\r\n    useState(null);\r\n\r\n  useEffect(() => {\r\n    setProfileData({\r\n      ...profileData,\r\n      profilePicUrl: loggedInUser?.profilePic,\r\n      name: loggedInUser?.name,\r\n    });\r\n  }, [loggedInUser]);\r\n\r\n  // For profile pic upload loading indicator\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const { profilePicUrl, name, email } = profileData;\r\n  const imgInput = useRef();\r\n  const isGuestUser = loggedInUser?.email === \"guest.user@gmail.com\";\r\n\r\n  const persistUpdatedUser = (updatedUser) => {\r\n    // Session storage persists updated user even after page refresh\r\n    sessionStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\r\n    setLoggedInUser(updatedUser);\r\n  };\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") {\r\n      e.target.click();\r\n    }\r\n  };\r\n\r\n  // Update Profile Pic\r\n  const handleImgInputChange = async (e) => {\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n\r\n    if (image.size >= 2097152) {\r\n      imgInput.current.value = \"\";\r\n      return displayToast({\r\n        message: \"Please Select an Image Smaller than 2 MB\",\r\n        type: \"warning\",\r\n        duration: 4000,\r\n        position: \"top-center\",\r\n      });\r\n    }\r\n    setLoading(true);\r\n    setUploading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"profilePic\", image);\r\n    formData.append(\"currentProfilePic\", loggedInUser?.profilePic);\r\n    formData.append(\"cloudinary_id\", loggedInUser?.cloudinary_id);\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/update/profile-pic\",\r\n        formData,\r\n        config\r\n      );\r\n\r\n      displayToast({\r\n        message: \"ProfilePic Updated Successfully.\",\r\n        type: \"success\",\r\n        duration: 3000,\r\n        position: \"bottom-center\",\r\n      });\r\n      setLoading(false);\r\n      setUploading(false);\r\n      persistUpdatedUser({ ...data, token: loggedInUser.token });\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"ProfilePic Update Failed\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"top-center\",\r\n      });\r\n      setLoading(false);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const deleteProfilePic = async () => {\r\n    setLoading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/delete/profile-pic\",\r\n        {\r\n          currentProfilePic: loggedInUser?.profilePic,\r\n          cloudinary_id: loggedInUser?.cloudinary_id,\r\n        },\r\n        config\r\n      );\r\n\r\n      displayToast({\r\n        message: \"ProfilePic Deleted Successfully.\",\r\n        type: \"success\",\r\n        duration: 4000,\r\n        position: \"bottom-center\",\r\n      });\r\n      setLoading(false);\r\n      persistUpdatedUser({ ...data, token: loggedInUser.token });\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"ProfilePic Deletion Failed\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"top-center\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Edited Name config\r\n  let editedName;\r\n\r\n  const getUpdatedName = (updatedName) => {\r\n    editedName = updatedName;\r\n  };\r\n\r\n  const updateProfileName = async () => {\r\n    if (!editedName) {\r\n      return displayToast({\r\n        message: \"Please Enter a Valid Name\",\r\n        type: \"warning\",\r\n        duration: 3000,\r\n        position: \"top-center\",\r\n      });\r\n    }\r\n    setLoading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser?.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/update/name\",\r\n        { newUserName: editedName },\r\n        config\r\n      );\r\n\r\n      displayToast({\r\n        message: \"Name Updated Successfully.\",\r\n        type: \"success\",\r\n        duration: 3000,\r\n        position: \"bottom-center\",\r\n      });\r\n\r\n      setLoading(false);\r\n      persistUpdatedUser({ ...data, token: loggedInUser.token });\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"Name Update Failed\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"top-center\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Open edit name dialog\r\n  const openEditNameDialog = () => {\r\n    setChildDialogBody(\r\n      <EditNameBody\r\n        originalName={loggedInUser?.name}\r\n        getUpdatedName={getUpdatedName}\r\n        placeholder=\"Enter New Name\"\r\n      />\r\n    );\r\n    displayChildDialog({\r\n      title: \"Edit Name\",\r\n      nolabel: \"CANCEL\",\r\n      yeslabel: \"SAVE\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: updateProfileName,\r\n    });\r\n  };\r\n\r\n  // Open delete photo confirm dialog\r\n  const openDeletePhotoConfirmDialog = () => {\r\n    setChildDialogBody(<>Are you sure you want to delete this profile pic?</>);\r\n    displayChildDialog({\r\n      title: \"Delete Profile Pic\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteProfilePic,\r\n    });\r\n  };\r\n\r\n  const openEditProfilePicMenu = (e) => {\r\n    setEditProfilePicMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* View/Edit Profile Pic */}\r\n      {loading && uploading ? (\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n          <CircularProgress\r\n            size={75}\r\n            style={{ margin: \"30px 0px\", color: \"lightblue\" }}\r\n          />\r\n          <span style={{ marginBottom: \"45px\" }} className=\"text-light h1\">\r\n            {\" Updating Photo...\"}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <section className=\"dialogField d-flex position-relative mb-4\">\r\n          <img\r\n            className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n            id=\"viewedit__profilePic\"\r\n            src={profilePicUrl}\r\n            alt=\"profilePic\"\r\n          />\r\n          {!isGuestUser && (\r\n            <CustomTooltip title=\"Edit Profile Pic\" placement=\"right\" arrow>\r\n              <i\r\n                id=\"editProfilePic\"\r\n                tabIndex={2}\r\n                onKeyDown={clickOnKeydown}\r\n                className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n                onClick={openEditProfilePicMenu}\r\n              >\r\n                <Edit className=\"text-light fs-6\" />\r\n              </i>\r\n            </CustomTooltip>\r\n          )}\r\n          {/* Edit/Delete profile pic menu */}\r\n          <EditPicMenu\r\n            anchor={editProfilePicMenuAnchor}\r\n            setAnchor={setEditProfilePicMenuAnchor}\r\n            selectProfilePic={() => imgInput.current.click()}\r\n            openDeletePhotoConfirmDialog={openDeletePhotoConfirmDialog}\r\n            deletePhotoCondition={\r\n              !loggedInUser?.profilePic?.endsWith(\"user_dqzjdz.png\")\r\n            }\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            accept=\".png, .jpg, .jpeg .svg\"\r\n            onChange={handleImgInputChange}\r\n            name=\"profilepic\"\r\n            id=\"editProfilePic\"\r\n            ref={imgInput}\r\n            className={`d-none`}\r\n            disabled={loading}\r\n          />\r\n        </section>\r\n      )}\r\n      {/* View Name */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-15px\" }}>\r\n          <CustomTooltip\r\n            title={name?.length > 24 ? name : \"\"}\r\n            placement=\"top-start\"\r\n            arrow\r\n          >\r\n            <div\r\n              className=\"w-100 h1 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"35px\" }}\r\n            >\r\n              {truncateString(name, 25, 21)}\r\n            </div>\r\n          </CustomTooltip>\r\n          {!isGuestUser && (\r\n            <CustomTooltip title=\"Edit Name\" placement=\"top\" arrow>\r\n              <IconButton\r\n                tabIndex={3}\r\n                onKeyDown={clickOnKeydown}\r\n                onClick={openEditNameDialog}\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  right: -8,\r\n                  top: 6,\r\n                  \":hover\": {\r\n                    backgroundColor: \"#aaaaaa30\",\r\n                  },\r\n                }}\r\n              >\r\n                <Edit className=\"text-light\" />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n          )}\r\n        </div>\r\n      </section>\r\n      {/* View Email */}\r\n      <section\r\n        className={`dialogField text-center mb-2`}\r\n        style={{ marginTop: \"-10px\" }}\r\n      >\r\n        <CustomTooltip\r\n          title={email?.length > 24 ? email : \"\"}\r\n          placement=\"bottom\"\r\n          arrow\r\n        >\r\n          <span className=\"h4\" style={{ color: \"lightblue\" }}>\r\n            {truncateString(email, 25, 21)}\r\n          </span>\r\n        </CustomTooltip>\r\n      </section>\r\n      {/* Child confirmation dialog */}\r\n      <ChildDialog getChildDialogMethods={getChildDialogMethods} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfileBody;\r\n","import { Key, Logout, ManageAccounts, Person } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport { AppState } from \"../../context/ContextProvider\";\r\nimport axios from \"../../utils/axios\";\r\nimport ChangePasswordBody from \"../dialogs/ChangePasswordBody\";\r\nimport EditProfileBody from \"../dialogs/EditProfileBody\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\n\r\nconst ProfileSettingsMenu = ({ anchor, setAnchor }) => {\r\n  const {\r\n    loggedInUser,\r\n    setLoggedInUser,\r\n    displayDialog,\r\n    displayToast,\r\n    setDialogBody,\r\n    setShowDialogActions,\r\n    formClassNames,\r\n  } = AppState();\r\n\r\n  const { setLoading } = formClassNames;\r\n  const isGuestUser = loggedInUser?.email === \"guest.user@gmail.com\";\r\n\r\n  let editPasswordData;\r\n\r\n  const getUpdatedState = (updatedState) => {\r\n    editPasswordData = updatedState;\r\n  };\r\n\r\n  const openLogoutConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setDialogBody(<>Are you sure you want to log out?</>);\r\n    displayDialog({\r\n      title: \"Logout Confirmation\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Logging Out...\",\r\n      action: () => {\r\n        sessionStorage.removeItem(\"loggedInUser\");\r\n        setLoggedInUser(null);\r\n        displayToast({\r\n          message: \"Logged Out\",\r\n          type: \"info\",\r\n          duration: 2000,\r\n          position: \"bottom-center\",\r\n        });\r\n        return \"loggingOut\";\r\n      },\r\n    });\r\n  };\r\n\r\n  const openEditProfileDialog = () => {\r\n    setShowDialogActions(false);\r\n    setDialogBody(<EditProfileBody />);\r\n    displayDialog({\r\n      title: isGuestUser ? \"View Profile\" : \"Edit Profile\",\r\n    });\r\n  };\r\n\r\n  const openEditPasswordDialog = () => {\r\n    setShowDialogActions(true);\r\n    setDialogBody(<ChangePasswordBody getUpdatedState={getUpdatedState} />);\r\n    displayDialog({\r\n      title: \"Change Password\",\r\n      nolabel: \"CANCEL\",\r\n      yeslabel: \"SAVE\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: async () => {\r\n        const { currentPassword, newPassword, confirmNewPassword } =\r\n          editPasswordData;\r\n\r\n        if (!currentPassword || !newPassword || !confirmNewPassword) {\r\n          return displayToast({\r\n            message: \"Please Enter All the Fields\",\r\n            type: \"warning\",\r\n            duration: 5000,\r\n            position: \"top-center\",\r\n          });\r\n        }\r\n        if (currentPassword === newPassword) {\r\n          return displayToast({\r\n            message: \"New Password Must Differ from Current Password\",\r\n            type: \"warning\",\r\n            duration: 5000,\r\n            position: \"top-center\",\r\n          });\r\n        }\r\n        if (newPassword !== confirmNewPassword) {\r\n          return displayToast({\r\n            message: \"New Password Must Match Confirm New Password\",\r\n            type: \"warning\",\r\n            duration: 5000,\r\n            position: \"top-center\",\r\n          });\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${loggedInUser.token}`,\r\n          },\r\n        };\r\n\r\n        try {\r\n          await axios.put(\r\n            \"/api/user/update/password\",\r\n            { currentPassword, newPassword },\r\n            config\r\n          );\r\n          displayToast({\r\n            message:\r\n              \"Password Updated Successfully. Please Login Again with Updated Password.\",\r\n            type: \"success\",\r\n            duration: 5000,\r\n            position: \"bottom-center\",\r\n          });\r\n\r\n          setLoading(false);\r\n          sessionStorage.removeItem(\"loggedInUser\");\r\n          setLoggedInUser(null);\r\n          return \"pwdUpdated\";\r\n        } catch (error) {\r\n          displayToast({\r\n            title: \"Password Update Failed\",\r\n            message: error.response?.data?.message || error.message,\r\n            type: \"error\",\r\n            duration: 5000,\r\n            position: \"top-center\",\r\n          });\r\n          setLoading(false);\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={openEditProfileDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          {isGuestUser ? <Person /> : <ManageAccounts />}\r\n        </ListItemIcon>\r\n        <MenuItemText>{isGuestUser ? \"View\" : \"Edit\"} Profile</MenuItemText>\r\n      </MenuItem>\r\n      {!isGuestUser && (\r\n        <MenuItem sx={menuItemProps} onClick={openEditPasswordDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <Key />\r\n          </ListItemIcon>\r\n          <MenuItemText>Change Password</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n      <MenuItem sx={menuItemProps} onClick={openLogoutConfirmDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Logout />\r\n        </ListItemIcon>\r\n        <MenuItemText>Logout</MenuItemText>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default ProfileSettingsMenu;\r\n","import { truncateString } from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#E6480C\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  borderRadius: 5,\r\n  backgroundColor: \"#E6480C\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst UserListItem = ({ user, truncateValues }) => {\r\n  const { _id, name, email, profilePic } = user;\r\n  const [max, index] = truncateValues;\r\n\r\n  return (\r\n    <div\r\n      data-user={_id}\r\n      className={`userListItem user-select-none d-flex text-light justify-content-start align-items-center pointer px-3`}\r\n    >\r\n      <CustomTooltip\r\n        data-user={_id}\r\n        title={`${name} (${email})`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <img\r\n          src={profilePic}\r\n          alt={_id}\r\n          data-user={_id}\r\n          className={`img-fluid listItemAvatar userListAvatar rounded-circle`}\r\n        />\r\n      </CustomTooltip>\r\n      <div\r\n        data-user={_id}\r\n        className=\"userListData d-flex flex-column align-items-start px-2\"\r\n      >\r\n        <p data-user={_id} className=\"userListName fs-4 fw-bold text-info\">\r\n          {truncateString(name, max, index)}\r\n        </p>\r\n        <p data-user={_id} className=\"userListEmail\">\r\n          {truncateString(email, max, index)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n","import { Skeleton } from \"@mui/material\";\r\n\r\nconst LoadingList = ({ dpRadius, count }) => {\r\n  const skeletonStyle = { backgroundColor: \"#999\" };\r\n  return (\r\n    <>\r\n      {[...Array(count)].map((e, i) => (\r\n        <div key={i} className=\"loadingListItem row\">\r\n          <Skeleton\r\n            variant=\"circular\"\r\n            className=\"loadingDp rounded-circle\"\r\n            style={{\r\n              ...skeletonStyle,\r\n              width: dpRadius,\r\n              height: dpRadius,\r\n            }}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className=\"loadingTitle col-5\"\r\n            style={skeletonStyle}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className=\"loadingDesc col-7\"\r\n            style={skeletonStyle}\r\n          />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadingList;\r\n","import { Clear, Search } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { forwardRef, useState } from \"react\";\r\nimport { AppState } from \"../../context/ContextProvider\";\r\n\r\nconst SearchInput = forwardRef((props, inputRef) => {\r\n  const { formClassNames } = AppState();\r\n  const { searchHandler, autoFocus, placeholder, clearInput } = props;\r\n\r\n  const { disableIfLoading, formFieldClassName, inputFieldClassName } =\r\n    formClassNames;\r\n  // To display/hide clear search (<Close />) icon when typing\r\n  const [typing, setTyping] = useState(false);\r\n\r\n  return (\r\n    <section className={`${formFieldClassName} pt-3 pb-2 mx-1`}>\r\n      {/* Input box */}\r\n      <div className=\"input-group\">\r\n        <span\r\n          className={`input-group-text ${disableIfLoading} bg-black bg-gradient border-secondary text-light rounded-pill rounded-end`}\r\n        >\r\n          <Search className=\"mx-0\" style={{ marginTop: \"3px\" }} />\r\n        </span>\r\n        <input\r\n          type=\"text\"\r\n          ref={inputRef}\r\n          onChange={(e) => {\r\n            setTyping(Boolean(e.target.value.trim()));\r\n            searchHandler(e);\r\n          }}\r\n          autoFocus={autoFocus}\r\n          placeholder={placeholder}\r\n          className={`${inputFieldClassName\r\n            .replace(\"text-center\", \"text-start\")\r\n            .replace(\"pill\", \"0\")} border-start-0 border-end-0 d-inline-block`}\r\n          style={{ cursor: \"auto\", fontSize: \"18px\" }}\r\n        />\r\n        {/* Clear icon button */}\r\n        <span\r\n          className={`input-group-text ${disableIfLoading} bg-black bg-gradient border-secondary text-light rounded-pill rounded-start border-start-0`}\r\n        >\r\n          <IconButton\r\n            onClick={() => {\r\n              inputRef.current.value = \"\";\r\n              setTyping(false); // Hide '<Close />' icon\r\n              inputRef.current.focus();\r\n              clearInput();\r\n            }}\r\n            className={`${typing ? \"d-inline-block\" : \"d-none\"}`}\r\n            style={{\r\n              padding: \"0px 9px 3px 9px\",\r\n              margin: \"-7px\",\r\n              color: \"#999999\",\r\n            }}\r\n            sx={{\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n          >\r\n            <Clear style={{ fontSize: \"19px\" }} />\r\n          </IconButton>\r\n        </span>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default SearchInput;\r\n","import { ChevronLeft } from \"@mui/icons-material\";\r\nimport { Drawer, IconButton } from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { AppState } from \"../../context/ContextProvider\";\r\nimport axios from \"../../utils/axios\";\r\nimport { debounce, truncateString } from \"../../utils/appUtils\";\r\nimport UserListItem from \"./UserListItem\";\r\nimport LoadingList from \"./LoadingList\";\r\nimport SearchInput from \"./SearchInput\";\r\n\r\nconst SearchUsersDrawer = ({ setFetchMsgs, isDrawerOpen, setIsDrawerOpen }) => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const {\r\n    formClassNames,\r\n    loggedInUser,\r\n    displayToast,\r\n    setSelectedChat,\r\n    refresh,\r\n    setRefresh,\r\n  } = AppState();\r\n  const searchUserInput = useRef(null);\r\n\r\n  const { loading, setLoading } = formClassNames;\r\n\r\n  useEffect(() => {\r\n    if (isDrawerOpen) {\r\n      setSearchResults([]);\r\n      setLoading(false);\r\n      setSearchQuery(\"\");\r\n    }\r\n  }, [isDrawerOpen]);\r\n\r\n  const handleClose = () => {\r\n    setIsDrawerOpen(false);\r\n  };\r\n\r\n  // Debouncing fetchUsers method to limit the no. of API calls\r\n  const searchUsers = debounce(async (e) => {\r\n    const query = e.target?.value?.trim();\r\n    setSearchQuery(query);\r\n    if (!query) return setSearchResults([]);\r\n\r\n    setLoading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`/api/user?search=${query}`, config);\r\n\r\n      setLoading(false);\r\n      setSearchResults(data);\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"Couldn't Fetch Users\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"bottom-left\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  }, 800);\r\n\r\n  // Create/Retreive chat when a user item is clicked\r\n  const createOrRetrieveChat = async (userId) => {\r\n    handleClose();\r\n    setLoading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\r\n\r\n      setLoading(false);\r\n      setSelectedChat(data);\r\n      setFetchMsgs(true);\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"Couldn't Create/Retrieve Chat\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 4000,\r\n        position: \"bottom-center\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        PaperProps={{\r\n          sx: {\r\n            borderTopRightRadius: 10,\r\n            borderBottomRightRadius: 10,\r\n            backgroundImage: \"linear-gradient(0deg,#222,#444)\",\r\n            padding: \"10px\",\r\n            width: \"350px\",\r\n          },\r\n        }}\r\n        anchor=\"left\"\r\n        open={isDrawerOpen}\r\n        onClose={handleClose}\r\n        transitionDuration={350}\r\n      >\r\n        <div className=\"d-flex justify-content-center\">\r\n          <span\r\n            className=\"text-center h2 mt-1 user-select-none text-light\"\r\n            style={{ marginTop: \"0px\" }}\r\n          >\r\n            Search Users\r\n            <IconButton\r\n              onClick={handleClose}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: 8,\r\n                top: 5,\r\n                color: \"#999999\",\r\n                \":hover\": {\r\n                  backgroundColor: \"#aaaaaa20\",\r\n                },\r\n              }}\r\n            >\r\n              <ChevronLeft className=\"text-light m-1\" />\r\n            </IconButton>\r\n          </span>\r\n        </div>\r\n        {/* Search Bar */}\r\n        <SearchInput\r\n          ref={searchUserInput}\r\n          searchHandler={searchUsers}\r\n          autoFocus={true}\r\n          placeholder=\"Search by Name or Email\"\r\n          clearInput={() => {\r\n            setSearchQuery(\"\");\r\n            setSearchResults([]);\r\n            searchUserInput.current.focus();\r\n          }}\r\n        />\r\n        {/* Search Results */}\r\n        <section\r\n          className=\"position-relative mx-1 my-2 h-100\"\r\n          style={{ overflowY: \"auto\", overflowX: \"hidden\" }}\r\n        >\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={(e) => {\r\n              const userId = e.target.dataset.user;\r\n              if (!userId) return;\r\n              createOrRetrieveChat(userId);\r\n            }}\r\n          >\r\n            {loading ? (\r\n              <LoadingList dpRadius={\"42px\"} count={8} />\r\n            ) : searchResults.length > 0 ? (\r\n              searchResults.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  truncateValues={[27, 24]}\r\n                />\r\n              ))\r\n            ) : searchQuery && !loading ? (\r\n              <p className=\"text-light text-center fs-5 mt-3 mx-5\">\r\n                No results found for '\r\n                <span className=\"text-info\">\r\n                  {truncateString(searchQuery, 30, 26)}\r\n                </span>\r\n                '\r\n              </p>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        </section>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchUsersDrawer;\r\n","import { Notifications, Search } from \"@mui/icons-material\";\r\nimport { Avatar, IconButton } from \"@mui/material\";\r\nimport { useRef, useState } from \"react\";\r\nimport { AppState } from \"../context/ContextProvider\";\r\nimport NotificationsMenu from \"./menus/NotificationsMenu\";\r\nimport ProfileSettingsMenu from \"./menus/ProfileSettingsMenu\";\r\nimport SearchUsersDrawer from \"./utils/SearchUsersDrawer\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport animationData from \"../animations/chat-gif.json\";\r\nimport LottieAnimation from \"./utils/LottieAnimation\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#777\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  backgroundColor: \"#777\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\n// const SOCKET_ENDPOINT = \"http://localhost:5000\";\r\nconst SOCKET_ENDPOINT = \"https://chat-zoned.herokuapp.com\";\r\n\r\nconst clientSocket = io(SOCKET_ENDPOINT, { transports: [\"websocket\"] });\r\n\r\nconst ChatpageHeader = ({ setFetchMsgs }) => {\r\n  const { loggedInUser } = AppState();\r\n  const appGif = useRef();\r\n\r\n  const [notificationsMenuAnchor, setNotificationsMenuAnchor] = useState(null);\r\n  const [profileSettingsMenuAnchor, setProfileSettingsMenuAnchor] =\r\n    useState(null);\r\n\r\n  const openNotificationMenu = (e) => {\r\n    setNotificationsMenuAnchor(e.target);\r\n  };\r\n\r\n  const openProfileSettingsMenu = (e) => {\r\n    setProfileSettingsMenuAnchor(e.target);\r\n  };\r\n\r\n  // For opening/closing 'search users' left drawer\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n\r\n  return (\r\n    <header\r\n      className={`chatpageDiv d-flex justify-content-between align-items-center user-select-none`}\r\n    >\r\n      {/* Search Users to create/access chat */}\r\n      <CustomTooltip\r\n        title=\"Search Users to Start or Open a Chat\"\r\n        placement=\"bottom-start\"\r\n        arrow\r\n      >\r\n        <button\r\n          style={{ borderRadius: \"20px\" }}\r\n          className={`btn btn-outline-secondary text-light px-3`}\r\n          onClick={() => setIsDrawerOpen(true)}\r\n        >\r\n          <Search className={`me-1`} />\r\n          <span className={`d-none d-md-inline mb-1 fs-5`}>Search Users</span>\r\n        </button>\r\n      </CustomTooltip>\r\n      <SearchUsersDrawer\r\n        setFetchMsgs={setFetchMsgs}\r\n        isDrawerOpen={isDrawerOpen}\r\n        setIsDrawerOpen={setIsDrawerOpen}\r\n      />\r\n\r\n      {/* App Logo */}\r\n      <div className={`d-flex align-items-center ms-3 ms-md-0`}>\r\n        <LottieAnimation\r\n          ref={appGif}\r\n          className={\"d-none d-sm-inline-block mt-2 me-sm-1 me-md-2\"}\r\n          style={{ width: \"35px\", height: \"35px\" }}\r\n          animationData={animationData}\r\n        />\r\n        <span style={{ color: \"orange\" }} className=\"fs-3 fw-bold mt-1\">\r\n          CHAT ZONED\r\n        </span>\r\n      </div>\r\n\r\n      {/* User notification and profile settings icons */}\r\n      <div>\r\n        <CustomTooltip title=\"Notifications\" placement=\"bottom-end\" arrow>\r\n          <IconButton\r\n            onClick={openNotificationMenu}\r\n            sx={{\r\n              color: \"#999999\",\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n          >\r\n            <Notifications className={`text-light`} />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n        <CustomTooltip\r\n          title=\"Profile Settings\"\r\n          size=\"small\"\r\n          placement=\"bottom-end\"\r\n          arrow\r\n        >\r\n          <IconButton\r\n            className=\"mx-md-3 mx-lg-4\"\r\n            sx={{\r\n              color: \"#999999\",\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n            onClick={openProfileSettingsMenu}\r\n          >\r\n            <Avatar\r\n              alt=\"LoggedInUser\"\r\n              className=\"img-fluid\"\r\n              src={loggedInUser?.profilePic}\r\n            />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n        <NotificationsMenu\r\n          anchor={notificationsMenuAnchor}\r\n          setAnchor={setNotificationsMenuAnchor}\r\n        />\r\n        <ProfileSettingsMenu\r\n          anchor={profileSettingsMenuAnchor}\r\n          setAnchor={setProfileSettingsMenuAnchor}\r\n        />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default ChatpageHeader;\r\n","import { useRef, useState } from \"react\";\r\nimport { AppState } from \"../../context/ContextProvider\";\r\nimport { Edit, KeyboardDoubleArrowLeft } from \"@mui/icons-material\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport { DEFAULT_GROUP_DP } from \"../../utils/appUtils\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport axios from \"../../utils/axios\";\r\nimport { Button, CircularProgress, DialogActions } from \"@mui/material\";\r\nimport { btnCustomStyle, btnHoverStyle } from \"../utils/CustomDialog\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#111\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst NewGroupBody = ({ closeChildDialog }) => {\r\n  const {\r\n    formClassNames,\r\n    displayToast,\r\n    loggedInUser,\r\n    refresh,\r\n    setRefresh,\r\n    groupInfo,\r\n    setGroupInfo,\r\n    closeDialog,\r\n  } = AppState();\r\n  const {\r\n    loading,\r\n    setLoading,\r\n    disableIfLoading,\r\n    formFieldClassName,\r\n    inputFieldClassName,\r\n    formLabelClassName,\r\n  } = formClassNames;\r\n\r\n  const { chatDisplayPicUrl, chatName } = groupInfo;\r\n  const [editGroupDpMenuAnchor, setEditGroupDpMenuAnchor] = useState(null);\r\n  const imgInput = useRef();\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") {\r\n      e.target.click();\r\n    }\r\n  };\r\n\r\n  // Create group chat\r\n  const createGroupChat = async () => {\r\n    if (!groupInfo) return;\r\n    const { chatDisplayPic, chatName, users } = groupInfo;\r\n\r\n    if (!chatName) {\r\n      return displayToast({\r\n        message: \"Please Enter a Group Name\",\r\n        type: \"warning\",\r\n        duration: 3000,\r\n        position: \"top-center\",\r\n      });\r\n    }\r\n    if (users?.length < 2) {\r\n      return displayToast({\r\n        message: \"Please Add Atleast 2 Members\",\r\n        type: \"warning\",\r\n        duration: 3000,\r\n        position: \"top-center\",\r\n      });\r\n    }\r\n\r\n    setLoading(true);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"displayPic\", chatDisplayPic);\r\n      formData.append(\"chatName\", chatName);\r\n      formData.append(\"users\", JSON.stringify(users?.map((user) => user?._id)));\r\n\r\n      await axios.post(\"/api/chat/group\", formData, config);\r\n\r\n      displayToast({\r\n        message: \"Group Created Successfully\",\r\n        type: \"success\",\r\n        duration: 2000,\r\n        position: \"bottom-center\",\r\n      });\r\n\r\n      setLoading(false);\r\n      setRefresh(!refresh);\r\n      closeChildDialog();\r\n      // Close Parent Dialog as well\r\n      closeDialog();\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"Couldn't Create Group\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"top-center\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleImgInputChange = (e) => {\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n\r\n    if (image.size >= 2097152) {\r\n      imgInput.current.value = \"\";\r\n      return displayToast({\r\n        message: \"Please Select an Image Smaller than 2 MB\",\r\n        type: \"warning\",\r\n        duration: 4000,\r\n        position: \"top-center\",\r\n      });\r\n    }\r\n    setGroupInfo({\r\n      ...groupInfo,\r\n      chatDisplayPic: image,\r\n      chatDisplayPicUrl: URL.createObjectURL(image),\r\n    });\r\n  };\r\n\r\n  const handleReset = (e) => {\r\n    e.preventDefault();\r\n    setGroupInfo({\r\n      ...groupInfo,\r\n      chatDisplayPic: null,\r\n      chatDisplayPicUrl: DEFAULT_GROUP_DP,\r\n    });\r\n    imgInput.current.value = \"\";\r\n  };\r\n\r\n  const openEditGroupDpMenu = (e) => {\r\n    setEditGroupDpMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Select Display Pic */}\r\n      <section className=\"newGroup d-flex position-relative mb-4\">\r\n        <img\r\n          className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n          src={chatDisplayPicUrl}\r\n          alt=\"displayPic\"\r\n        />\r\n        <CustomTooltip title=\"Edit Group Display Pic\" placement=\"right\" arrow>\r\n          <i\r\n            id=\"editGroupDPTooltip\"\r\n            tabIndex={2}\r\n            onKeyDown={clickOnKeydown}\r\n            className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n            onClick={openEditGroupDpMenu}\r\n          >\r\n            <Edit className=\"text-light fs-6\" />\r\n          </i>\r\n        </CustomTooltip>\r\n        {/* Edit/Delete profile pic menu */}\r\n        <EditPicMenu\r\n          anchor={editGroupDpMenuAnchor}\r\n          setAnchor={setEditGroupDpMenuAnchor}\r\n          selectProfilePic={() => imgInput.current.click()}\r\n          openDeletePhotoConfirmDialog={handleReset}\r\n          deletePhotoCondition={\r\n            !chatDisplayPicUrl?.endsWith(\"group_mbuvht.png\")\r\n          }\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          accept=\".png, .jpg, .jpeg .svg\"\r\n          onChange={handleImgInputChange}\r\n          name=\"groupdp\"\r\n          id=\"editGroupDp\"\r\n          ref={imgInput}\r\n          className={`d-none`}\r\n          disabled={loading}\r\n        />\r\n      </section>\r\n      {/* Group Name input */}\r\n      <section className={`${formFieldClassName}`}>\r\n        <label htmlFor=\"groupName\" className={`${formLabelClassName}`}>\r\n          Group Name <span className=\"required\">*</span>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={chatName}\r\n          onChange={(e) => {\r\n            setGroupInfo({ ...groupInfo, chatName: e.target.value });\r\n          }}\r\n          required\r\n          autoFocus\r\n          name=\"groupname\"\r\n          id=\"groupName\"\r\n          className={`${inputFieldClassName}`}\r\n          disabled={loading}\r\n          placeholder=\"Eg: The Avengers\"\r\n        />\r\n      </section>\r\n      <DialogActions className=\"mt-3\" style={{ marginBottom: \"-17px\" }}>\r\n        <Button\r\n          sx={btnHoverStyle}\r\n          disabled={loading}\r\n          style={btnCustomStyle}\r\n          onClick={closeChildDialog}\r\n        >\r\n          <span>\r\n            <KeyboardDoubleArrowLeft\r\n              className=\"btnArrowIcons\"\r\n              style={{\r\n                margin: \"0px 5px 2px 0px\",\r\n              }}\r\n            />\r\n            Back\r\n          </span>\r\n        </Button>\r\n        <Button\r\n          sx={btnHoverStyle}\r\n          disabled={loading}\r\n          style={btnCustomStyle}\r\n          onClick={createGroupChat}\r\n        >\r\n          {loading ? (\r\n            <>\r\n              <CircularProgress size={25} style={{ marginRight: \"10px\" }} />\r\n              <span>Creating...</span>\r\n            </>\r\n          ) : (\r\n            <>Create Group</>\r\n          )}\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewGroupBody;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { AppState } from \"../../context/ContextProvider\";\r\nimport {} from \"@mui/icons-material\";\r\nimport { Avatar, Chip } from \"@mui/material\";\r\nimport axios from \"../../utils/axios\";\r\nimport { debounce, truncateString } from \"../../utils/appUtils\";\r\nimport UserListItem from \"../utils/UserListItem\";\r\nimport SearchInput from \"../utils/SearchInput\";\r\nimport NewGroupBody from \"./NewGroupBody\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport LoadingList from \"../utils/LoadingList\";\r\n\r\nconst AddMembersToGroup = ({ getAddedMembers, forCreateGroup }) => {\r\n  const {\r\n    loggedInUser,\r\n    displayToast,\r\n    setDialogAction,\r\n    childDialogMethods,\r\n    getChildDialogMethods,\r\n    groupInfo,\r\n    setGroupInfo,\r\n  } = AppState();\r\n  const [groupData, setGroupData] = useState(groupInfo);\r\n  const [fetching, setFetching] = useState(false);\r\n  const groupMembers = groupData?.users;\r\n  const [isMemberSelected, setIsMemberSelected] = useState(false);\r\n  const [addedMembers, setAddedMembers] = useState([]);\r\n\r\n  const searchUserInput = useRef(null);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const { setChildDialogBody, displayChildDialog, closeChildDialog } =\r\n    childDialogMethods;\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setGroupData(groupInfo);\r\n  }, [groupInfo]);\r\n\r\n  // For 'create group chat'\r\n  const openNewGroupDialog = () => {\r\n    if (addedMembers?.length < 2) {\r\n      return displayToast({\r\n        message: \"Please Add Atleast 2 Members\",\r\n        type: \"warning\",\r\n        duration: 3000,\r\n        position: \"top-center\",\r\n      });\r\n    }\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(false);\r\n    setGroupInfo(groupData);\r\n    setChildDialogBody(<NewGroupBody closeChildDialog={closeChildDialog} />);\r\n    displayChildDialog({\r\n      title: \"Create New Group\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSearchResults([]);\r\n    setSearchQuery(\"\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // For create group: [Next >>] button\r\n    if (forCreateGroup) setDialogAction(openNewGroupDialog);\r\n  }, [groupData]);\r\n\r\n  useEffect(() => {\r\n    // For add more group members\r\n    if (!forCreateGroup) getAddedMembers([...addedMembers]);\r\n  }, [addedMembers]);\r\n\r\n  const searchUsers = debounce(async (e) => {\r\n    const query = e.target?.value?.trim();\r\n    setSearchQuery(query);\r\n    if (!query) return setSearchResults([]);\r\n\r\n    setFetching(true);\r\n    if (isMemberSelected) setIsMemberSelected(false);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n    try {\r\n      const { data } = await axios.get(`/api/user?search=${query}`, config);\r\n\r\n      // Remove all the already added members from search results\r\n      let membersNotAdded = [...data];\r\n      groupMembers.forEach((addedMember) => {\r\n        membersNotAdded = membersNotAdded.filter(\r\n          (m) => m._id !== addedMember._id\r\n        );\r\n      });\r\n\r\n      setFetching(false);\r\n      setSearchResults(membersNotAdded);\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"Couldn't Fetch Users\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"bottom-left\",\r\n      });\r\n      setFetching(false);\r\n    }\r\n  }, 800);\r\n\r\n  const unselectUser = (user) => {\r\n    if (!user) return;\r\n    setGroupData({\r\n      ...groupData,\r\n      users: groupMembers.filter((u) => u._id !== user._id),\r\n    });\r\n    // Remove user from added member list\r\n    setAddedMembers(addedMembers.filter((u) => u._id !== user._id));\r\n    // Add removed user to search result list\r\n    setSearchResults([user, ...searchResults]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"addGroupMembers d-flex flex-column\">\r\n      {/* Selected Users tag list */}\r\n      <section\r\n        className=\"mx-auto px-3 py-2 overflow-auto d-flex flex-wrap\"\r\n        style={{\r\n          flex: \"0.33\",\r\n          borderRadius: \"15px\",\r\n          backgroundColor: \"#303030\",\r\n        }}\r\n      >\r\n        {addedMembers?.map((user) => (\r\n          <Chip\r\n            key={user?._id}\r\n            className=\"userChip text-light bg-success rounded-pill fs-6\"\r\n            avatar={\r\n              <Avatar\r\n                className=\"userChipAvatar\"\r\n                alt={user?.name}\r\n                src={user?.profilePic}\r\n              />\r\n            }\r\n            label={truncateString(user?.name?.split(\" \")[0], 12, 8)}\r\n            onDelete={() => unselectUser(user)}\r\n          />\r\n        ))}\r\n      </section>\r\n      {/* Search Bar */}\r\n      <SearchInput\r\n        ref={searchUserInput}\r\n        searchHandler={searchUsers}\r\n        autoFocus={true}\r\n        placeholder=\"Search Members\"\r\n        clearInput={() => {\r\n          setSearchQuery(\"\");\r\n          setSearchResults([]);\r\n          searchUserInput.current.focus();\r\n        }}\r\n      />\r\n      {/* Search Results */}\r\n      <section\r\n        className=\"position-relative mx-auto mt-2 overflow-auto\"\r\n        style={{ flex: \"1\", marginBottom: \"-10px\" }}\r\n      >\r\n        <div\r\n          // 'Event delegation' (add only one event listener for\r\n          // parent element instead of adding for each child element)\r\n          onClick={(e) => {\r\n            const userId = e.target.dataset.user;\r\n            if (!userId) return;\r\n\r\n            if (!isMemberSelected) setIsMemberSelected(true);\r\n            // Add selected user to tag list\r\n            const selectedUser = searchResults.find((u) => u._id === userId);\r\n            setGroupData({\r\n              ...groupData,\r\n              users: [...groupMembers, selectedUser],\r\n            });\r\n            // Add selected user to added member list\r\n            setAddedMembers([...addedMembers, selectedUser]);\r\n            // Remove selected user from search result list\r\n            setSearchResults(searchResults.filter((u) => u._id !== userId));\r\n          }}\r\n        >\r\n          {fetching ? (\r\n            <LoadingList dpRadius={\"43px\"} count={4} />\r\n          ) : searchResults.length > 0 ? (\r\n            searchResults.map((user) => (\r\n              <UserListItem\r\n                key={user._id}\r\n                user={user}\r\n                truncateValues={[21, 18]}\r\n              />\r\n            ))\r\n          ) : (\r\n            searchQuery &&\r\n            !fetching && (\r\n              <p className=\"text-light text-center fs-5 mt-3 mx-5\">\r\n                {isMemberSelected ? \"No Other Users \" : \"No Results \"}\r\n                Found for '\r\n                <span className=\"text-info\">\r\n                  {truncateString(searchQuery, 25, 22)}\r\n                </span>\r\n                '\r\n              </p>\r\n            )\r\n          )}\r\n        </div>\r\n      </section>\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        getChildDialogMethods={getChildDialogMethods}\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMembersToGroup;\r\n","import {\r\n  Article,\r\n  AudioFile,\r\n  DoneAll,\r\n  GifBox,\r\n  Image,\r\n  PictureAsPdf,\r\n  VideoFile,\r\n} from \"@mui/icons-material\";\r\nimport { AppState } from \"../../context/ContextProvider\";\r\nimport {\r\n  dateStringOf,\r\n  msgDateStringOf,\r\n  msgTimeStringOf,\r\n  truncateString,\r\n} from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#E6480C\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  borderRadius: 5,\r\n  backgroundColor: \"#E6480C\",\r\n};\r\n\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ChatListItem = ({ chat }) => {\r\n  const { selectedChat, loggedInUser } = AppState();\r\n  const {\r\n    _id,\r\n    chatName,\r\n    receiverEmail,\r\n    isGroupChat,\r\n    lastMessage,\r\n    chatDisplayPic,\r\n  } = chat;\r\n\r\n  const tooltipTitle = isGroupChat\r\n    ? `Group: ${chatName}\\n(${chat?.users?.length} Members)`\r\n    : `${chatName}\\n${receiverEmail}`;\r\n\r\n  const lastMsgContent = lastMessage?.content\r\n    ?.replaceAll(\"<br>\", \"\\n\")\r\n    .replaceAll(\"&nbsp;\", \" \")\r\n    .replaceAll(\"<div>\", \"\\n\")\r\n    .replaceAll(\"</div>\", \"\\n\");\r\n\r\n  const lastMsgDate = new Date(lastMessage?.createdAt);\r\n  const lastMsgDateString = msgDateStringOf(lastMsgDate);\r\n\r\n  const lastMsgFile = lastMessage?.fileUrl;\r\n  let lastMsgFileType;\r\n\r\n  if (lastMsgFile) {\r\n    lastMsgFileType = /.png|.jpg|.jpeg|.svg$/.test(lastMsgFile)\r\n      ? \"image\"\r\n      : /.gif$/.test(lastMsgFile)\r\n      ? \"gif\"\r\n      : /.mp4$/.test(lastMsgFile)\r\n      ? \"video\"\r\n      : /.mp3$/.test(lastMsgFile)\r\n      ? \"audio\"\r\n      : /.pdf$/.test(lastMsgFile)\r\n      ? \"pdf\"\r\n      : \"otherFile\";\r\n  }\r\n  return (\r\n    <div\r\n      data-chat={_id}\r\n      className={`chatListItem user-select-none text-light pointer ${\r\n        selectedChat?._id === _id ? \"isSelected\" : \"\"\r\n      } d-flex justify-content-start align-items-center`}\r\n    >\r\n      {/* Chat Display Pic */}\r\n      <CustomTooltip\r\n        title={`View ${isGroupChat ? \"Group DP\" : \"Profile Pic\"}`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <img\r\n          src={chatDisplayPic}\r\n          alt={chatName}\r\n          data-chat={_id}\r\n          className={`img-fluid listItemAvatar chatListAvatar rounded-circle`}\r\n        />\r\n      </CustomTooltip>\r\n      {/* Chat Data */}\r\n      <div\r\n        data-chat={_id}\r\n        className=\"chatListData d-flex flex-column align-items-start px-2\"\r\n      >\r\n        {/* Chat Name */}\r\n        <p\r\n          data-chat={_id}\r\n          title={tooltipTitle}\r\n          className=\"chatListName fs-5 fw-bold text-info\"\r\n        >\r\n          {truncateString(chatName, 23, 20)}\r\n        </p>\r\n        {lastMessage && (\r\n          <span className=\"lastMsgDate\">\r\n            {lastMsgDateString === \"Today\"\r\n              ? msgTimeStringOf(lastMsgDate)\r\n              : lastMsgDateString !== \"Yesterday\"\r\n              ? dateStringOf(lastMsgDate)\r\n              : \"Yesterday\"}\r\n          </span>\r\n        )}\r\n        {/* Last Message Data */}\r\n        {(lastMessage || lastMessage === null || isGroupChat) && (\r\n          <p data-chat={_id} className=\"chatListLastMessage\">\r\n            <span data-chat={_id} className=\"text-warning\">\r\n              <>\r\n                {lastMessage === null ||\r\n                (isGroupChat && !lastMessage) ||\r\n                (!isGroupChat &&\r\n                  lastMessage?.sender?._id !== loggedInUser?._id) ? (\r\n                  \"\"\r\n                ) : lastMessage?.sender?._id === loggedInUser?._id ? (\r\n                  <>\r\n                    {isGroupChat ? (\r\n                      <>You: </>\r\n                    ) : (\r\n                      <DoneAll\r\n                        className=\"me-1 fs-5\"\r\n                        style={{ color: \"lightblue\" }}\r\n                      />\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  truncateString(\r\n                    lastMessage?.sender?.name?.split(\" \")[0],\r\n                    12,\r\n                    8\r\n                  ) + \": \"\r\n                )}\r\n              </>\r\n            </span>\r\n            {lastMsgFile ? (\r\n              <span data-chat={_id}>\r\n                {lastMsgFileType === \"image\" ? (\r\n                  <span data-chat={_id}>\r\n                    <Image className=\"fileIcon\" /> Photo\r\n                  </span>\r\n                ) : lastMsgFileType === \"gif\" ? (\r\n                  <span data-chat={_id}>\r\n                    <GifBox className=\"fileIcon\" /> Gif\r\n                  </span>\r\n                ) : lastMsgFileType === \"video\" ? (\r\n                  <span data-chat={_id}>\r\n                    <VideoFile className=\"fileIcon\" /> Video\r\n                  </span>\r\n                ) : lastMsgFileType === \"audio\" ? (\r\n                  <span data-chat={_id}>\r\n                    <AudioFile className=\"fileIcon\" /> Audio\r\n                  </span>\r\n                ) : lastMsgFileType === \"pdf\" ? (\r\n                  <span data-chat={_id}>\r\n                    <PictureAsPdf className=\"fileIcon\" /> Pdf\r\n                  </span>\r\n                ) : (\r\n                  <span data-chat={_id}>\r\n                    <Article className=\"fileIcon\" /> File\r\n                  </span>\r\n                )}\r\n              </span>\r\n            ) : (\r\n              <span data-chat={_id} title={lastMsgContent}>\r\n                {lastMessage === null\r\n                  ? \" Last Message was deleted\"\r\n                  : isGroupChat && !lastMessage\r\n                  ? `New Group Created`\r\n                  : truncateString(lastMsgContent || \"\", 29, 26)}\r\n              </span>\r\n            )}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListItem;\r\n","const FullSizeImage = ({ event, audioSrc, videoSrc }) => {\r\n  const fileStyle = { width: \"90vw\", height: \"82vh\" };\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      {audioSrc ? (\r\n        <audio style={fileStyle} controls>\r\n          <source src={audioSrc} type=\"audio/mpeg\"></source>\r\n          <source src={audioSrc} type=\"audio/ogg\"></source>\r\n          <source src={audioSrc} type=\"audio/wav\"></source>\r\n          Your browser does not support the audio tag.\r\n        </audio>\r\n      ) : videoSrc ? (\r\n        <video style={fileStyle} controls>\r\n          <source src={videoSrc} type=\"video/mp4\"></source>\r\n          <source src={videoSrc} type=\"video/webm\"></source>\r\n          <source src={videoSrc} type=\"video/ogg\"></source>\r\n          Your browser does not support the video tag.\r\n        </video>\r\n      ) : (\r\n        <img\r\n          src={event.target?.src || \"fullSizeImgSrc\"}\r\n          alt={event.target?.alt || \"fullSizeImg\"}\r\n          className=\"img-fluid d-inline-block mx-auto\"\r\n          style={{ ...fileStyle, objectFit: \"contain\" }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullSizeImage;\r\n","import { GroupAdd } from \"@mui/icons-material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { AppState } from \"../context/ContextProvider\";\r\nimport {\r\n  debounce,\r\n  DEFAULT_GROUP_DP,\r\n  getOneOnOneChatReceiver,\r\n} from \"../utils/appUtils\";\r\nimport axios from \"../utils/axios\";\r\nimport AddMembersToGroup from \"./dialogs/AddMembersToGroup\";\r\nimport ChatListItem from \"./utils/ChatListItem\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport FullSizeImage from \"./utils/FullSizeImage\";\r\nimport LoadingList from \"./utils/LoadingList\";\r\nimport SearchInput from \"./utils/SearchInput\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#777\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 16,\r\n  backgroundColor: \"#777\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\n// const SOCKET_ENDPOINT = \"http://localhost:5000\";\r\nconst SOCKET_ENDPOINT = \"https://chat-zoned.herokuapp.com\";\r\n\r\nconst clientSocket = io(SOCKET_ENDPOINT, { transports: [\"websocket\"] });\r\n\r\nconst ChatListView = ({ loadingMsgs, setFetchMsgs }) => {\r\n  const {\r\n    selectedChat,\r\n    loggedInUser,\r\n    setSelectedChat,\r\n    displayDialog,\r\n    displayToast,\r\n    setDialogBody,\r\n    setShowDialogActions,\r\n    refresh,\r\n    setGroupInfo,\r\n  } = AppState();\r\n\r\n  const [chats, setChats] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filteredChats, setFilteredChats] = useState(chats);\r\n  const searchChatInput = useRef();\r\n\r\n  const openCreateGroupChatDialog = () => {\r\n    setGroupInfo({\r\n      chatDisplayPic: null,\r\n      chatDisplayPicUrl: DEFAULT_GROUP_DP,\r\n      chatName: \"\",\r\n      users: [],\r\n    });\r\n    setShowDialogActions(true);\r\n    setDialogBody(<AddMembersToGroup forCreateGroup={true} />);\r\n    displayDialog({\r\n      title: \"Add Group Members\",\r\n      nolabel: \"Cancel\",\r\n      yeslabel: \"Next\",\r\n      action: null,\r\n    });\r\n  };\r\n\r\n  const displayFullSizeImage = (e) => {\r\n    setShowDialogActions(false);\r\n    setDialogBody(<FullSizeImage event={e} />);\r\n    displayDialog({\r\n      isFullScreen: true,\r\n      title: e.target?.alt || \"Display Pic\",\r\n    });\r\n  };\r\n\r\n  const fetchChats = async () => {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${loggedInUser?.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`/api/chat`, config);\r\n\r\n      const mappedChats = data.map((chat) => {\r\n        const { isGroupChat, users } = chat;\r\n\r\n        if (!isGroupChat) {\r\n          const receiver = getOneOnOneChatReceiver(loggedInUser, users);\r\n          return {\r\n            ...chat,\r\n            chatName: receiver?.name,\r\n            receiverEmail: receiver?.email,\r\n            chatDisplayPic: receiver?.profilePic,\r\n          };\r\n        }\r\n        return chat;\r\n      });\r\n      setChats(mappedChats);\r\n      setFilteredChats(mappedChats);\r\n      if (loading) setLoading(false);\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"Couldn't Fetch Chats\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"bottom-center\",\r\n      });\r\n      if (loading) setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Debouncing filterChats method to limit the no. of fn calls\r\n  const searchChats = debounce((e) => {\r\n    const chatNameInput = e.target?.value?.toLowerCase().trim();\r\n    if (!chatNameInput) {\r\n      return setFilteredChats(chats);\r\n    }\r\n    setFilteredChats(\r\n      chats.filter((chat) =>\r\n        chat?.chatName?.toLowerCase().includes(chatNameInput)\r\n      )\r\n    );\r\n  }, 600);\r\n\r\n  useEffect(() => {\r\n    fetchChats();\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <div\r\n      className={`chatpageDiv chatpageView chatListView text-light ${\r\n        selectedChat ? \"d-none d-md-flex\" : \"d-flex\"\r\n      } flex-column user-select-none col-md-5 col-lg-4 mx-1 p-2`}\r\n      style={{ pointerEvents: loadingMsgs ? \"none\" : \"auto\" }}\r\n    >\r\n      <section className=\"position-relative\">\r\n        <p className=\"chatListHeader fw-bold fs-3 rounded-pill bg-info bg-opacity-10 py-2\">\r\n          CHATS\r\n          {/* Create Group Chat */}\r\n          <CustomTooltip\r\n            title=\"Create New Group Chat\"\r\n            placement=\"bottom-end\"\r\n            arrow\r\n          >\r\n            <button\r\n              className={`btnCreateGroup pointer btn btn-outline-secondary text-light px-3`}\r\n              onClick={openCreateGroupChatDialog}\r\n            >\r\n              <GroupAdd />\r\n            </button>\r\n          </CustomTooltip>\r\n        </p>\r\n      </section>\r\n      {/* Search Bar */}\r\n      {chats?.length > 0 && (\r\n        <section className=\"searchChat\">\r\n          <SearchInput\r\n            ref={searchChatInput}\r\n            searchHandler={searchChats}\r\n            autoFocus={false}\r\n            placeholder=\"Search Chat\"\r\n            clearInput={() => setFilteredChats(chats)}\r\n          />\r\n        </section>\r\n      )}\r\n      {/* Chat list */}\r\n      <section className=\"chatList m-1 p-1 overflow-auto position-relative\">\r\n        {loading ? (\r\n          <LoadingList dpRadius={\"49px\"} count={8} />\r\n        ) : filteredChats?.length > 0 ? (\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={(e) => {\r\n              const chatId = e.target?.dataset?.chat;\r\n              if (!chatId) return;\r\n\r\n              if (e.target?.className?.includes(\"chatListAvatar\")) {\r\n                return displayFullSizeImage(e);\r\n              }\r\n              const clickedChat = filteredChats.find(\r\n                (chat) => chat._id === chatId\r\n              );\r\n              if (clickedChat._id === selectedChat?._id) return;\r\n              setSelectedChat(clickedChat);\r\n              setFetchMsgs(true); // To fetch selected chat msgs\r\n              if (clickedChat?.isGroupChat) setGroupInfo(clickedChat);\r\n            }}\r\n          >\r\n            {filteredChats\r\n              .filter(\r\n                (chat) => chat.lastMessage !== undefined || chat.isGroupChat\r\n              )\r\n              .map((chat) => (\r\n                <ChatListItem key={chat._id} chat={chat} />\r\n              ))}\r\n          </div>\r\n        ) : (\r\n          <span className=\"d-inline-block w-100 text-light h4 mt-5 mx-auto\">\r\n            No Chats Found\r\n          </span>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListView;\r\n","import { getOneOnOneChatReceiver, truncateString } from \"../../utils/appUtils\";\r\nimport { AppState } from \"../../context/ContextProvider\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nconst arrowStyles = {\r\n  color: \"#111\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ViewProfileBody = ({ memberProfilePic, memberName, memberEmail }) => {\r\n  const { loggedInUser, selectedChat } = AppState();\r\n  let name, email, profilePic;\r\n\r\n  if (memberProfilePic && memberName && memberEmail) {\r\n    name = memberName;\r\n    email = memberEmail;\r\n    profilePic = memberProfilePic;\r\n  } else {\r\n    const receiver = getOneOnOneChatReceiver(loggedInUser, selectedChat?.users);\r\n    name = receiver?.name;\r\n    email = receiver?.email;\r\n    profilePic = receiver?.profilePic;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* View Profile Pic */}\r\n      <section className=\"dialogField d-flex position-relative mb-4\">\r\n        <img\r\n          className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n          id=\"view_profilePic\"\r\n          src={profilePic}\r\n          alt={name}\r\n        />\r\n      </section>\r\n      {/* View Name */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-15px\" }}>\r\n          <CustomTooltip\r\n            title={name?.length > 24 ? name : \"\"}\r\n            placement=\"top\"\r\n            arrow\r\n          >\r\n            <div\r\n              className=\"w-100 h1 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"35px\" }}\r\n            >\r\n              {truncateString(name, 25, 21)}\r\n            </div>\r\n          </CustomTooltip>\r\n        </div>\r\n      </section>\r\n      {/* View Email */}\r\n      <section\r\n        className={`dialogField text-center mb-2`}\r\n        style={{ marginTop: \"-10px\" }}\r\n      >\r\n        <CustomTooltip\r\n          title={email?.length > 24 ? email : \"\"}\r\n          placement=\"bottom\"\r\n          arrow\r\n        >\r\n          <span className=\"h4\" style={{ color: \"lightblue\" }}>\r\n            {truncateString(email, 25, 21)}\r\n          </span>\r\n        </CustomTooltip>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewProfileBody;\r\n","import { KeyboardArrowDown } from \"@mui/icons-material\";\r\nimport { Badge, IconButton } from \"@mui/material\";\r\nimport { AppState } from \"../../context/ContextProvider\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#E6480C\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  borderRadius: 10,\r\n  backgroundColor: \"#E6480C\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst GroupMemberItem = ({ user, truncateValues }) => {\r\n  const { loggedInUser } = AppState();\r\n  const { _id, name, email, profilePic } = user;\r\n  const [max, index] = truncateValues;\r\n  const isLoggedInUser = _id === loggedInUser?._id;\r\n\r\n  return (\r\n    <div\r\n      data-user={_id}\r\n      className={`groupMemberItem position-relative user-select-none d-flex text-light justify-content-start align-items-center px-3 ${\r\n        !isLoggedInUser && \"pointer\"\r\n      }`}\r\n    >\r\n      {user?.isGroupAdmin && (\r\n        <span\r\n          className={`adminBadge position-absolute fw-light badge rounded-3 bg-success`}\r\n          style={{ cursor: \"auto\" }}\r\n        >\r\n          Admin\r\n        </span>\r\n      )}\r\n      {!isLoggedInUser && (\r\n        <span\r\n          data-user={_id}\r\n          className=\"memberSettingsIcon text-light position-absolute rounded-circle\"\r\n        >\r\n          <KeyboardArrowDown data-user={_id} />\r\n        </span>\r\n      )}\r\n      <CustomTooltip\r\n        data-user={_id}\r\n        title={`${isLoggedInUser ? \"\" : `${name} (${email})`}`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <img\r\n          src={profilePic}\r\n          alt={_id}\r\n          data-user={_id}\r\n          className={`img-fluid listItemAvatar groupMemberAvatar rounded-circle`}\r\n        />\r\n      </CustomTooltip>\r\n      <div\r\n        data-user={_id}\r\n        className=\"groupMemberData d-flex flex-column align-items-start px-2\"\r\n      >\r\n        <p data-user={_id} className=\"groupMemberName fw-bold text-info\">\r\n          {isLoggedInUser ? \"You\" : truncateString(name, max, index)}\r\n        </p>\r\n        <p data-user={_id} className=\"groupMemberEmail\">\r\n          {truncateString(email, max, index)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupMemberItem;\r\n","import {\r\n  AdminPanelSettings,\r\n  GroupRemove,\r\n  InfoOutlined,\r\n  Message,\r\n} from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport { AppState } from \"../../context/ContextProvider\";\r\nimport axios from \"../../utils/axios\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport ViewProfileBody from \"../dialogs/ViewProfileBody\";\r\n\r\nconst MemberOptionsMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  clickedMember,\r\n  setShowDialogActions,\r\n  setShowDialogClose,\r\n  childDialogMethods,\r\n}) => {\r\n  const {\r\n    loggedInUser,\r\n    displayToast,\r\n    refresh,\r\n    setRefresh,\r\n    closeDialog,\r\n    formClassNames,\r\n    setSelectedChat,\r\n    groupInfo,\r\n    setGroupInfo,\r\n  } = AppState();\r\n\r\n  const { setChildDialogBody, displayChildDialog } = childDialogMethods;\r\n  const { setLoading } = formClassNames;\r\n  const isLoggedInUserGroupAdmin = groupInfo?.groupAdmins?.some(\r\n    (admin) => admin?._id === loggedInUser?._id\r\n  );\r\n  const clickedMemberName = truncateString(\r\n    clickedMember?.name?.split(\" \")[0],\r\n    12,\r\n    9\r\n  );\r\n  const styledMemberName = (\r\n    <span style={{ color: \"violet\", fontSize: \"22px\" }}>\r\n      {clickedMemberName}\r\n    </span>\r\n  );\r\n  const updateView = (data) => {\r\n    setRefresh(!refresh);\r\n    setSelectedChat(data);\r\n  };\r\n\r\n  // Create/Retreive chat when 'Message Member' is clicked\r\n  const openChat = async () => {\r\n    closeDialog(); // Close all dialogs by closing parent dialog\r\n    setLoading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        `/api/chat`,\r\n        { userId: clickedMember?._id },\r\n        config\r\n      );\r\n\r\n      setLoading(false);\r\n      updateView(data);\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"Couldn't Create/Retrieve Chat\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 4000,\r\n        position: \"bottom-center\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const openViewProfileDialog = () => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    setChildDialogBody(\r\n      <ViewProfileBody\r\n        memberProfilePic={clickedMember?.profilePic}\r\n        memberName={clickedMember?.name}\r\n        memberEmail={clickedMember?.email}\r\n      />\r\n    );\r\n    displayChildDialog({\r\n      title: \"View Profile\",\r\n    });\r\n  };\r\n\r\n  const makeGroupAdmin = async () => {\r\n    setLoading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        `/api/chat/group/make-admin`,\r\n        { userId: clickedMember?._id, chatId: groupInfo?._id },\r\n        config\r\n      );\r\n\r\n      displayToast({\r\n        message: `${clickedMemberName} is now a Group Admin`,\r\n        type: \"success\",\r\n        duration: 4000,\r\n        position: \"bottom-center\",\r\n      });\r\n      setGroupInfo(data);\r\n      updateView(data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"Make Group Admin Failed\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 4000,\r\n        position: \"bottom-center\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const dismissAsAdmin = async () => {\r\n    setLoading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/dismiss-admin`,\r\n        { userId: clickedMember?._id, chatId: groupInfo?._id },\r\n        config\r\n      );\r\n\r\n      displayToast({\r\n        message: `${clickedMemberName} is no longer a Group Admin`,\r\n        type: \"info\",\r\n        duration: 4000,\r\n        position: \"bottom-center\",\r\n      });\r\n      setLoading(false);\r\n      setGroupInfo(data);\r\n      updateView(data);\r\n      return \"membersUpdated\";\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"Dismiss As Group Admin Failed\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 4000,\r\n        position: \"bottom-center\",\r\n      });\r\n      setLoading(false);\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  const removeFromGroup = async () => {\r\n    setLoading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/remove`,\r\n        {\r\n          userToBeRemoved: clickedMember?._id,\r\n          isGroupAdmin: clickedMember?.isGroupAdmin,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      displayToast({\r\n        message: `${clickedMemberName} removed from Group`,\r\n        type: \"info\",\r\n        duration: 4000,\r\n        position: \"bottom-center\",\r\n      });\r\n      setLoading(false);\r\n      setGroupInfo(data);\r\n      updateView(data);\r\n      return \"membersUpdated\";\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"Remove From Group Failed\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 4000,\r\n        position: \"bottom-center\",\r\n      });\r\n      setLoading(false);\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  // Confirmation dialogs\r\n  const openDismissAsAdminConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>Are you sure you want to dismiss {styledMemberName} as group admin?</>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Dismiss As Admin\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: dismissAsAdmin,\r\n    });\r\n  };\r\n\r\n  const openRemoveFromGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>Are you sure you want to remove {styledMemberName} from this group?</>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Remove From Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: removeFromGroup,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      {/* Message X */}\r\n      <MenuItem sx={menuItemProps} onClick={openChat}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Message />\r\n        </ListItemIcon>\r\n        <MenuItemText>{`Message ${\r\n          clickedMemberName || \"Member\"\r\n        }`}</MenuItemText>\r\n      </MenuItem>\r\n      {/* View X */}\r\n      <MenuItem sx={menuItemProps} onClick={openViewProfileDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <InfoOutlined />\r\n        </ListItemIcon>\r\n        <MenuItemText>{`View ${clickedMemberName || \"Member\"}`}</MenuItemText>\r\n      </MenuItem>\r\n      {/* Make Group Admin / Dismiss as Admin */}\r\n      {isLoggedInUserGroupAdmin && (\r\n        <MenuItem\r\n          sx={menuItemProps}\r\n          onClick={\r\n            clickedMember?.isGroupAdmin\r\n              ? openDismissAsAdminConfirmDialog\r\n              : makeGroupAdmin\r\n          }\r\n        >\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <AdminPanelSettings />\r\n          </ListItemIcon>\r\n          <MenuItemText>\r\n            {clickedMember?.isGroupAdmin\r\n              ? \"Dismiss as Admin\"\r\n              : \"Make Group Admin\"}\r\n          </MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n      {/* Remove X */}\r\n      {isLoggedInUserGroupAdmin && (\r\n        <MenuItem sx={menuItemProps} onClick={openRemoveFromGroupConfirmDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <GroupRemove />\r\n          </ListItemIcon>\r\n          <MenuItemText>{`Remove ${\r\n            clickedMemberName || \"Member\"\r\n          }`}</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MemberOptionsMenu;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { debounce } from \"../../utils/appUtils\";\r\nimport SearchInput from \"../utils/SearchInput\";\r\nimport GroupMemberItem from \"../utils/GroupMemberItem\";\r\nimport { AppState } from \"../../context/ContextProvider\";\r\nimport MemberOptionsMenu from \"../menus/MemberOptionsMenu\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\n\r\nconst ViewGroupMembers = () => {\r\n  const { loggedInUser, childDialogMethods, getChildDialogMethods, groupInfo } =\r\n    AppState();\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n  const groupMembers = groupInfo?.users;\r\n  const admins = groupInfo?.groupAdmins;\r\n  const [clickedMember, setClickedMember] = useState(null);\r\n  const [memberOptionsMenuAnchor, setMemberOptionsMenuAnchor] = useState(null);\r\n  // LoggedInUser and Group Admins should be at the top\r\n  const sortMembers = () => {\r\n    return [\r\n      loggedInUser,\r\n      ...admins?.filter((a) => a?._id !== loggedInUser?._id),\r\n      ...groupMembers?.filter(\r\n        (u) =>\r\n          u?._id !== loggedInUser?._id &&\r\n          admins?.every((a) => a?._id !== u?._id)\r\n      ),\r\n    ].map((member) => {\r\n      return {\r\n        ...member,\r\n        isGroupAdmin: admins?.some((a) => a?._id === member?._id),\r\n      };\r\n    });\r\n  };\r\n\r\n  // Update the member list whenever groupInfo is updated\r\n  useEffect(() => {\r\n    setFilteredMembers(sortMembers());\r\n  }, [groupInfo]);\r\n\r\n  const filterMemberInput = useRef(null);\r\n  const [filteredMembers, setFilteredMembers] = useState(sortMembers());\r\n\r\n  // Debouncing filterMembers method to limit the no. of fn calls\r\n  const filterMembers = debounce((e) => {\r\n    const memberNameInput = e.target?.value?.toLowerCase().trim();\r\n    if (!memberNameInput) {\r\n      return setFilteredMembers(sortMembers());\r\n    }\r\n    setFilteredMembers(\r\n      filteredMembers?.filter(\r\n        (user) =>\r\n          user?.name?.toLowerCase().includes(memberNameInput) ||\r\n          user?.email?.toLowerCase().includes(memberNameInput)\r\n      )\r\n    );\r\n  }, 600);\r\n\r\n  const openMemberOptionsMenu = (e) => {\r\n    setMemberOptionsMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"addGroupMembers d-flex flex-column\"\r\n      style={{ height: \"75vh\" }}\r\n    >\r\n      {/* Member Count */}\r\n      <p className=\"h3 text-center text-light\" style={{ marginTop: \"5px\" }}>\r\n        {`${groupMembers?.length} Member${groupMembers?.length > 1 ? \"s\" : \"\"}`}\r\n      </p>\r\n      {/* Search Bar */}\r\n      <section className=\"searchChat\" style={{ marginTop: \"-15px\" }}>\r\n        <SearchInput\r\n          ref={filterMemberInput}\r\n          searchHandler={filterMembers}\r\n          autoFocus={false}\r\n          placeholder=\"Search Member\"\r\n          clearInput={() => setFilteredMembers(sortMembers())}\r\n        />\r\n      </section>\r\n      {/* Member list */}\r\n      <section className=\"chatList p-1 overflow-auto position-relative\">\r\n        {filteredMembers?.length > 0 ? (\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={(e) => {\r\n              const userId = e.target?.dataset?.user;\r\n              if (userId) {\r\n                // Don't display member options menu for loggedInUser\r\n                if (loggedInUser?._id === userId) return;\r\n\r\n                setClickedMember(\r\n                  filteredMembers?.find((m) => m?._id === userId)\r\n                );\r\n                openMemberOptionsMenu(e);\r\n              }\r\n            }}\r\n          >\r\n            {filteredMembers.map((member) => (\r\n              <GroupMemberItem\r\n                key={member._id}\r\n                user={member}\r\n                truncateValues={[21, 18]}\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <span className=\"d-inline-block w-100 text-center text-light h5 mt-4 mx-auto\">\r\n            No Members Found\r\n          </span>\r\n        )}\r\n      </section>\r\n      <MemberOptionsMenu\r\n        anchor={memberOptionsMenuAnchor}\r\n        setAnchor={setMemberOptionsMenuAnchor}\r\n        clickedMember={clickedMember}\r\n        setShowDialogActions={setShowDialogActions}\r\n        setShowDialogClose={setShowDialogClose}\r\n        childDialogMethods={childDialogMethods}\r\n      />\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        getChildDialogMethods={getChildDialogMethods}\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewGroupMembers;\r\n","import { useRef, useState } from \"react\";\r\nimport { AppState } from \"../../context/ContextProvider\";\r\nimport {\r\n  Delete,\r\n  Edit,\r\n  InfoOutlined,\r\n  Logout,\r\n  PersonAdd,\r\n} from \"@mui/icons-material\";\r\nimport { CircularProgress, IconButton } from \"@mui/material\";\r\nimport axios from \"../../utils/axios\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport EditNameBody from \"./EditNameBody\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport AddMembersToGroup from \"./AddMembersToGroup\";\r\nimport ViewGroupMembers from \"./ViewGroupMembers\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport FullSizeImage from \"../utils/FullSizeImage\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#111\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst GroupInfoBody = ({ messages }) => {\r\n  const {\r\n    formClassNames,\r\n    loggedInUser,\r\n    displayToast,\r\n    refresh,\r\n    setRefresh,\r\n    setSelectedChat,\r\n    childDialogMethods,\r\n    getChildDialogMethods,\r\n    groupInfo,\r\n    setGroupInfo,\r\n    closeDialog,\r\n  } = AppState();\r\n\r\n  const { loading, setLoading, disableIfLoading } = formClassNames;\r\n  const { setChildDialogBody, displayChildDialog } = childDialogMethods;\r\n\r\n  const groupDP = groupInfo?.chatDisplayPic;\r\n  const groupName = groupInfo?.chatName;\r\n  const groupMembers = groupInfo?.users;\r\n  const admins = groupInfo?.groupAdmins;\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [editGroupDpMenuAnchor, setEditGroupDpMenuAnchor] = useState(null);\r\n  const isUserGroupAdmin = admins?.some(\r\n    (admin) => admin?._id === loggedInUser?._id\r\n  );\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n  const imgInput = useRef(null);\r\n  const btnClassName = \"w-100 btn text-light fs-5\";\r\n\r\n  const updateView = (data) => {\r\n    setGroupInfo(data);\r\n    setRefresh(!refresh);\r\n    setSelectedChat(data); // To update messages view\r\n  };\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") {\r\n      e.target.click();\r\n    }\r\n  };\r\n\r\n  // To retreive added members from `AddMembersToGroup` dialog\r\n  let updatedName = \"\";\r\n  const getUpdatedName = (updatedValue) => {\r\n    updatedName = updatedValue;\r\n  };\r\n\r\n  const updateGroupName = async () => {\r\n    if (!updatedName) {\r\n      return displayToast({\r\n        message: \"Please Enter Valid Group Name\",\r\n        type: \"warning\",\r\n        duration: 3000,\r\n        position: \"top-center\",\r\n      });\r\n    }\r\n    setLoading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser?.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/chat/group/update-name\",\r\n        { groupName: updatedName, chatId: groupInfo?._id },\r\n        config\r\n      );\r\n\r\n      displayToast({\r\n        message: \"Group Name Updated Successfully\",\r\n        type: \"success\",\r\n        duration: 3000,\r\n        position: \"bottom-center\",\r\n      });\r\n\r\n      setLoading(false);\r\n      updateView(data);\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"Couldn't Update Group Name\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 4000,\r\n        position: \"top-center\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update Group Display Pic\r\n  const handleImgInputChange = async (e) => {\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n\r\n    if (image.size >= 2097152) {\r\n      imgInput.current.value = \"\";\r\n      return displayToast({\r\n        message: \"Please Select an Image Smaller than 2 MB\",\r\n        type: \"warning\",\r\n        duration: 4000,\r\n        position: \"top-center\",\r\n      });\r\n    }\r\n    setLoading(true);\r\n    setUploading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"displayPic\", image);\r\n    formData.append(\"currentDP\", groupDP);\r\n    formData.append(\"cloudinary_id\", groupInfo?.cloudinary_id);\r\n    formData.append(\"chatId\", groupInfo?._id);\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/chat/group/update-dp\",\r\n        formData,\r\n        config\r\n      );\r\n\r\n      displayToast({\r\n        message: \"Group DP Updated Successfully\",\r\n        type: \"success\",\r\n        duration: 3000,\r\n        position: \"bottom-center\",\r\n      });\r\n      setLoading(false);\r\n      setUploading(false);\r\n      updateView(data);\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"Couldn't Update Group DP\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 4000,\r\n        position: \"top-center\",\r\n      });\r\n      setLoading(false);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const deleteGroupDp = async () => {\r\n    setLoading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/delete-dp`,\r\n        {\r\n          currentDP: groupDP,\r\n          cloudinary_id: groupInfo?.cloudinary_id,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      displayToast({\r\n        message: \"Group DP Deleted Successfully\",\r\n        type: \"success\",\r\n        duration: 3000,\r\n        position: \"bottom-center\",\r\n      });\r\n      setLoading(false);\r\n      updateView(data);\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"Couldn't Delete Group DP\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 4000,\r\n        position: \"top-center\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const exitGroup = async () => {\r\n    if (groupMembers?.length === 1) {\r\n      return deleteGroup();\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/remove`,\r\n        {\r\n          userToBeRemoved: loggedInUser?._id,\r\n          isGroupAdmin: isUserGroupAdmin,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      displayToast({\r\n        message: `Exited From '${data?.chatName}' Group`,\r\n        type: \"info\",\r\n        duration: 4000,\r\n        position: \"bottom-center\",\r\n      });\r\n      setLoading(false);\r\n      updateView(null);\r\n      closeDialog();\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"Couldn't Exit Group\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 4000,\r\n        position: \"bottom-center\",\r\n      });\r\n      setLoading(false);\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  const deleteGroup = async () => {\r\n    setLoading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const deleteGroupPromise = axios.put(\r\n        `/api/chat/group/delete`,\r\n        {\r\n          currentDP: groupInfo?.chatDisplayPic,\r\n          cloudinary_id: groupInfo?.cloudinary_id,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n      const deleteMessagesPromise = messages?.length\r\n        ? axios.put(\r\n            `/api/message/delete`,\r\n            {\r\n              messageIds: JSON.stringify(messages?.map((m) => m._id)),\r\n              isDeleteGroupRequest: true,\r\n            },\r\n            config\r\n          )\r\n        : Promise.resolve();\r\n\r\n      // Parallel execution of independent promises\r\n      await Promise.all([deleteGroupPromise, deleteMessagesPromise]);\r\n\r\n      displayToast({\r\n        message: \"Group Deleted Successfully\",\r\n        type: \"success\",\r\n        duration: 3000,\r\n        position: \"bottom-center\",\r\n      });\r\n      setLoading(false);\r\n      updateView(null);\r\n      closeDialog();\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"Couldn't Delete Group\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 4000,\r\n        position: \"top-center\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Open confirm dialogs\r\n  const openExitGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>\r\n        {groupMembers?.length === 1\r\n          ? `Since you're the only group member, this group will be \r\n            DELETED if you exit. Are you sure you want to exit?`\r\n          : `This group will be removed from your chats. \r\n             Are you sure you want to exit this group?`}\r\n      </>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Exit Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Exiting...\",\r\n      action: exitGroup,\r\n    });\r\n  };\r\n\r\n  const openDeleteGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>\r\n        All messages and files related to this group will be deleted and this\r\n        group will be removed from the chats of ALL MEMBERS. Are you sure you\r\n        want to delete this group?\r\n      </>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Delete Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteGroup,\r\n    });\r\n  };\r\n\r\n  // Open edit name dialog\r\n  const openEditGroupNameDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <EditNameBody\r\n        originalName={groupInfo?.chatName}\r\n        getUpdatedName={getUpdatedName}\r\n        placeholder=\"Enter New Group Name\"\r\n      />\r\n    );\r\n    displayChildDialog({\r\n      title: \"Edit Group Name\",\r\n      nolabel: \"CANCEL\",\r\n      yeslabel: \"SAVE\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: updateGroupName,\r\n    });\r\n  };\r\n\r\n  // Open delete photo confirm dialog\r\n  const openDeletePhotoConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(<>Are you sure you want to delete this display pic?</>);\r\n    displayChildDialog({\r\n      title: \"Delete Display Pic\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteGroupDp,\r\n    });\r\n  };\r\n\r\n  // To retreive added members from `AddMembersToGroup` dialog\r\n  let addedMembers = [];\r\n  const getAddedMembers = (updatedMembers) => {\r\n    addedMembers = updatedMembers;\r\n  };\r\n\r\n  const addMembersToGroup = async () => {\r\n    if (!isUserGroupAdmin) {\r\n      return displayToast({\r\n        message: \"Only Admin Can Add Members to Group\",\r\n        type: \"warning\",\r\n        duration: 3000,\r\n        position: \"top-center\",\r\n      });\r\n    }\r\n    if (!addedMembers?.length) {\r\n      return displayToast({\r\n        message: \"Please Select Atleast 1 Member to Add\",\r\n        type: \"warning\",\r\n        duration: 3000,\r\n        position: \"top-center\",\r\n      });\r\n    }\r\n    setLoading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser?.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/chat/group/add\",\r\n        {\r\n          usersToBeAdded: JSON.stringify(addedMembers),\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      displayToast({\r\n        message: \"Successfully Added Member/s to Group\",\r\n        type: \"success\",\r\n        duration: 3000,\r\n        position: \"bottom-center\",\r\n      });\r\n\r\n      setLoading(false);\r\n      updateView(data);\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"Couldn't Add Members to Group\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 4000,\r\n        position: \"top-center\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Open Add members dialog\r\n  const openAddMembersDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(<AddMembersToGroup getAddedMembers={getAddedMembers} />);\r\n    displayChildDialog({\r\n      title: \"Add Group Members\",\r\n      nolabel: \"Cancel\",\r\n      yeslabel: \"Add\",\r\n      loadingYeslabel: \"Adding...\",\r\n      action: addMembersToGroup,\r\n    });\r\n  };\r\n\r\n  const openViewMembersDialog = () => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    setChildDialogBody(<ViewGroupMembers />);\r\n    displayChildDialog({\r\n      title: ``,\r\n    });\r\n  };\r\n\r\n  const displayFullSizeImage = (e) => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    setChildDialogBody(<FullSizeImage event={e} />);\r\n    displayChildDialog({\r\n      title: e.target?.alt || \"Display Pic\",\r\n    });\r\n  };\r\n\r\n  const openEditGroupDpMenu = (e) => {\r\n    setEditGroupDpMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div className=\"groupDialog d-flex flex-column row\">\r\n      {/* View/Edit Display Pic */}\r\n      {loading && uploading ? (\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n          <CircularProgress\r\n            size={60}\r\n            style={{ margin: \"20px 0px\", color: \"lightblue\" }}\r\n          />\r\n          <span style={{ marginBottom: \"45px\" }} className=\"text-light h1\">\r\n            {\" Updating Photo...\"}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <section className=\"dialogField d-flex position-relative mb-4\">\r\n          <CustomTooltip title=\"View DP\" placement=\"right\" arrow>\r\n            <img\r\n              className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle pointer\"\r\n              id=\"groupInfo__displayPic\"\r\n              src={groupDP || \"GroupDp\"}\r\n              style={{ width: \"120px\", height: \"120px\" }}\r\n              onClick={displayFullSizeImage}\r\n              alt={groupName}\r\n            />\r\n          </CustomTooltip>\r\n\r\n          <CustomTooltip title=\"Edit Group DP\" placement=\"right\" arrow>\r\n            <i\r\n              id=\"editProfilePic\"\r\n              tabIndex={2}\r\n              onKeyDown={clickOnKeydown}\r\n              className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n              onClick={openEditGroupDpMenu}\r\n            >\r\n              <Edit className=\"text-light fs-6\" />\r\n            </i>\r\n          </CustomTooltip>\r\n          {/* Edit/Delete display pic menu */}\r\n          <EditPicMenu\r\n            anchor={editGroupDpMenuAnchor}\r\n            setAnchor={setEditGroupDpMenuAnchor}\r\n            selectProfilePic={() => imgInput.current.click()}\r\n            openDeletePhotoConfirmDialog={openDeletePhotoConfirmDialog}\r\n            deletePhotoCondition={!groupDP?.endsWith(\"group_mbuvht.png\")}\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            accept=\".png, .jpg, .jpeg .svg\"\r\n            onChange={handleImgInputChange}\r\n            name=\"displayPic\"\r\n            id=\"groupInfo__displayPic\"\r\n            ref={imgInput}\r\n            className={`d-none`}\r\n            disabled={loading}\r\n          />\r\n        </section>\r\n      )}\r\n\r\n      {/* Group Name */}\r\n      <section className={`dialogField text-center mb-3`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-10px\" }}>\r\n          <CustomTooltip\r\n            title={groupName?.length > 24 ? groupName : \"\"}\r\n            placement=\"top\"\r\n            arrow\r\n          >\r\n            <div\r\n              className=\"w-100 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"30px\", lineHeight: \"30px\" }}\r\n            >\r\n              {truncateString(groupName, 25, 21)}\r\n            </div>\r\n          </CustomTooltip>\r\n          <CustomTooltip title=\"Edit Group Name\" placement=\"top\" arrow>\r\n            <IconButton\r\n              tabIndex={3}\r\n              onKeyDown={clickOnKeydown}\r\n              onClick={openEditGroupNameDialog}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: -8,\r\n                top: 0,\r\n                \":hover\": {\r\n                  backgroundColor: \"#aaaaaa30\",\r\n                },\r\n              }}\r\n            >\r\n              <Edit className=\"text-light\" />\r\n            </IconButton>\r\n          </CustomTooltip>\r\n        </div>\r\n      </section>\r\n\r\n      {/* No of members */}\r\n      <section\r\n        className={`dialogField text-center mb-3`}\r\n        style={{ marginTop: \"-10px\", borderRadius: \"10px\" }}\r\n      >\r\n        {`Group : ${groupMembers?.length} Member${\r\n          groupMembers?.length > 1 ? \"s\" : \"\"\r\n        }`}\r\n      </section>\r\n\r\n      {/* View Members */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <button\r\n          className={`${btnClassName} btn-outline-primary`}\r\n          onClick={openViewMembersDialog}\r\n        >\r\n          <InfoOutlined\r\n            className=\"text-light\"\r\n            style={{ marginLeft: \"-15px\" }}\r\n          />\r\n          <span className=\"ms-2\">View Members</span>\r\n        </button>\r\n      </section>\r\n\r\n      {/* Add Members (only for admins) */}\r\n      {isUserGroupAdmin && (\r\n        <section className={`dialogField text-center mb-2`}>\r\n          <button\r\n            className={`${btnClassName} btn-outline-success`}\r\n            onClick={openAddMembersDialog}\r\n          >\r\n            <PersonAdd className=\"text-light\" style={{ marginLeft: \"-20px\" }} />\r\n            <span className=\"ms-2\">Add Members</span>\r\n          </button>\r\n        </section>\r\n      )}\r\n\r\n      {/* Exit Group */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <button\r\n          className={`${btnClassName} btn-outline-danger`}\r\n          onClick={() => {\r\n            if (\r\n              isUserGroupAdmin &&\r\n              admins?.length === 1 &&\r\n              groupMembers?.length !== 1\r\n            ) {\r\n              return displayToast({\r\n                message: `Every group must have atleast 1 admin. Since \r\n                you're the only group admin, you won't be allowed\r\n                to exit until you make someone else as the admin.`,\r\n                type: \"warning\",\r\n                duration: 10000,\r\n                position: \"top-center\",\r\n              });\r\n            }\r\n            openExitGroupConfirmDialog();\r\n          }}\r\n        >\r\n          <Logout className=\"text-light\" style={{ marginLeft: \"-30px\" }} />\r\n          <span className=\"ms-2\">Exit Group</span>\r\n        </button>\r\n      </section>\r\n\r\n      {/* Delete Group (only for admins) */}\r\n      {isUserGroupAdmin && (\r\n        <section className={`dialogField text-center mb-2`}>\r\n          <button\r\n            className={`${btnClassName} btn-outline-danger`}\r\n            onClick={openDeleteGroupConfirmDialog}\r\n          >\r\n            <Delete className=\"text-light\" style={{ marginLeft: \"-20px\" }} />\r\n            <span className=\"ms-2\">Delete Group</span>\r\n          </button>\r\n        </section>\r\n      )}\r\n\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        getChildDialogMethods={getChildDialogMethods}\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupInfoBody;\r\n","import { Skeleton } from \"@mui/material\";\r\n\r\nconst LoadingMsgs = ({ count }) => {\r\n  const skeletonStyle = {\r\n    backgroundColor: \"#777\",\r\n  };\r\n  return (\r\n    <>\r\n      {[...Array(count)].map((e, i) => (\r\n        <div\r\n          key={i}\r\n          className={`loadingMsg d-flex flex-column align-items-${\r\n            i % 2 ? \"start\" : \"end\"\r\n          } mb-2 mx-4`}\r\n        >\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className={`loadingSender col-3 mb-1`}\r\n            style={skeletonStyle}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className={`loadingContent col-5`}\r\n            style={skeletonStyle}\r\n          />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadingMsgs;\r\n","import { DoneAll, KeyboardArrowDown } from \"@mui/icons-material\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { AppState } from \"../../context/ContextProvider\";\r\nimport {\r\n  msgTimeStringOf,\r\n  msgDateStringOf,\r\n  dateStringOf,\r\n} from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#E6480C\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 16,\r\n  borderRadius: 5,\r\n  backgroundColor: \"#E6480C\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst Message = ({ msgSent, currMsg, prevMsg }) => {\r\n  const msgContentRef = useRef(null);\r\n  const { loggedInUser, selectedChat } = AppState();\r\n  const { _id, profilePic, name, email } = currMsg?.sender;\r\n  const isLoggedInUser = _id === loggedInUser._id;\r\n  const senderData = `${profilePic}===${name}===${email}`;\r\n  const currMsgId = isLoggedInUser ? currMsg?._id : null;\r\n  const isSameSender = _id === prevMsg?.sender._id;\r\n  const currMsgDate = new Date(currMsg.createdAt);\r\n  const prevMsgDate = new Date(prevMsg?.createdAt);\r\n  const isOtherDay = dateStringOf(currMsgDate) !== dateStringOf(prevMsgDate);\r\n  const showCurrSender =\r\n    !isLoggedInUser &&\r\n    selectedChat?.isGroupChat &&\r\n    (!isSameSender || isOtherDay);\r\n\r\n  useEffect(() => {\r\n    msgContentRef.current.innerHTML = currMsg?.content;\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <section\r\n        className={`msgRow d-flex justify-content-${\r\n          isLoggedInUser ? \"end\" : \"start\"\r\n        }`}\r\n        style={{ marginTop: isSameSender ? \"3px\" : \"10px\" }}\r\n      >\r\n        {showCurrSender ? (\r\n          <CustomTooltip title={`View Profile`} placement=\"top-start\" arrow>\r\n            <img\r\n              src={profilePic}\r\n              alt={name}\r\n              data-sender={senderData}\r\n              className=\"senderAvatar rounded-circle pointer\"\r\n            />\r\n          </CustomTooltip>\r\n        ) : (\r\n          selectedChat?.isGroupChat && <span style={{ width: \"30px\" }}></span>\r\n        )}\r\n        <div\r\n          className={`msgBox d-flex flex-column text-start p-2 rounded-3\r\n          mx-2 mx-md-3 ${isLoggedInUser ? \"yourMsg\" : \"receiversMsg\"}`}\r\n          data-msg={currMsgId}\r\n        >\r\n          {showCurrSender && (\r\n            <span data-sender={senderData} className=\"msgSender pointer\">\r\n              {name}\r\n            </span>\r\n          )}\r\n          {isLoggedInUser && msgSent && (\r\n            <span\r\n              data-msg={currMsgId}\r\n              className={`msgOptionsIcon text-light position-absolute \r\n              top-0 end-0 w-25 h-100`}\r\n            >\r\n              <KeyboardArrowDown\r\n                data-msg={currMsgId}\r\n                style={{ fontSize: 22 }}\r\n                className=\"position-absolute top-0 end-0\"\r\n              />\r\n            </span>\r\n          )}\r\n          <div data-msg={currMsgId} className=\"msgContent d-flex\">\r\n            <span ref={msgContentRef}></span>\r\n            <span\r\n              data-msg={currMsgId}\r\n              className=\"msgTime text-end d-flex align-items-end justify-content-end\"\r\n            >\r\n              {msgTimeStringOf(currMsgDate)}\r\n              {isLoggedInUser && (\r\n                <>\r\n                  {msgSent ? (\r\n                    <DoneAll className=\"text-info fs-6 ms-1\" />\r\n                  ) : (\r\n                    <CircularProgress\r\n                      size={10}\r\n                      className=\"sendStatusIcon ms-1\"\r\n                    />\r\n                  )}\r\n                </>\r\n              )}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {isOtherDay && (\r\n        <div className={`msgDate mt-3 mb-2 mx-auto py-1 px-3 rounded-3`}>\r\n          {msgDateStringOf(currMsgDate)}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import { Delete, Edit } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\n\r\nconst MsgOptionsMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  openEditMsgDialog,\r\n  openDeleteMsgConfirmDialog,\r\n}) => {\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={openEditMsgDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Edit />\r\n        </ListItemIcon>\r\n        <MenuItemText>Edit Message</MenuItemText>\r\n      </MenuItem>\r\n      <MenuItem sx={menuItemProps} onClick={openDeleteMsgConfirmDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Delete />\r\n        </ListItemIcon>\r\n        <MenuItemText>Delete Message</MenuItemText>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MsgOptionsMenu;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { Avatar, IconButton } from \"@mui/material\";\r\nimport { AppState } from \"../context/ContextProvider\";\r\nimport { getOneOnOneChatReceiver, truncateString } from \"../utils/appUtils\";\r\nimport { ArrowBack, AttachFile, Close, Send } from \"@mui/icons-material\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport animationData from \"../animations/letsChatGif.json\";\r\nimport LottieAnimation from \"./utils/LottieAnimation\";\r\nimport axios from \"../utils/axios\";\r\nimport ViewProfileBody from \"./dialogs/ViewProfileBody\";\r\nimport GroupInfoBody from \"./dialogs/GroupInfoBody\";\r\nimport LoadingMsgs from \"./utils/LoadingMsgs\";\r\nimport FullSizeImage from \"./utils/FullSizeImage\";\r\nimport Message from \"./utils/Message\";\r\nimport MsgOptionsMenu from \"./menus/MsgOptionsMenu\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#777\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 16,\r\n  backgroundColor: \"#777\",\r\n};\r\nconst iconStyles = {\r\n  margin: \"4px 0px\",\r\n  padding: \"5px\",\r\n  color: \"#999999\",\r\n  \":hover\": {\r\n    backgroundColor: \"#aaaaaa20\",\r\n  },\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\n// const SOCKET_ENDPOINT = \"http://localhost:5000\";\r\nconst SOCKET_ENDPOINT = \"https://chat-zoned.herokuapp.com\";\r\n\r\nconst clientSocket = io(SOCKET_ENDPOINT, { transports: [\"websocket\"] });\r\n\r\nconst MessagesView = ({\r\n  loadingMsgs,\r\n  setLoadingMsgs,\r\n  fetchMsgs,\r\n  setFetchMsgs,\r\n}) => {\r\n  const letsChatGif = useRef(null);\r\n\r\n  const {\r\n    formClassNames,\r\n    selectedChat,\r\n    loggedInUser,\r\n    displayToast,\r\n    setSelectedChat,\r\n    setGroupInfo,\r\n    refresh,\r\n    setRefresh,\r\n    displayDialog,\r\n    setDialogBody,\r\n    setShowDialogActions,\r\n  } = AppState();\r\n\r\n  const { disableIfLoading, setLoading } = formClassNames;\r\n\r\n  const closeChat = () => {\r\n    setLoadingMsgs(false);\r\n    setSelectedChat(null);\r\n    resetMsgInput();\r\n  };\r\n  const [sending, setSending] = useState(false);\r\n  const [enableMsgSend, setEnableMsgSend] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [clickedMsg, setClickedMsg] = useState(\"\");\r\n  const [newMsgData, setNewMsgData] = useState({\r\n    attachment: null,\r\n    attachmentPreviewUrl: \"\",\r\n  });\r\n  const msgListBottom = useRef(null);\r\n  const msgFileInput = useRef(null);\r\n  const msgContent = useRef(null);\r\n  const [msgOptionsMenuAnchor, setMsgOptionsMenuAnchor] = useState(null);\r\n\r\n  const chatName = selectedChat?.isGroupChat\r\n    ? selectedChat?.chatName\r\n    : getOneOnOneChatReceiver(loggedInUser, selectedChat?.users)?.name;\r\n\r\n  const viewAudio = (audioSrc, fileName) => {\r\n    if (!audioSrc) return;\r\n    setShowDialogActions(false);\r\n    setDialogBody(<FullSizeImage audioSrc={audioSrc} />);\r\n    displayDialog({\r\n      title: fileName || \"Audio File\",\r\n    });\r\n  };\r\n\r\n  const viewVideo = (videoSrc, fileName) => {\r\n    if (!videoSrc) return;\r\n    setShowDialogActions(false);\r\n    setDialogBody(<FullSizeImage videoSrc={videoSrc} />);\r\n    displayDialog({\r\n      title: fileName || \"Video File\",\r\n    });\r\n  };\r\n\r\n  const fetchMessages = async () => {\r\n    setLoadingMsgs(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat?._id}`,\r\n        config\r\n      );\r\n      setMessages(\r\n        data.map((msg) => {\r\n          msg[\"sent\"] = true;\r\n          return msg;\r\n        })\r\n      );\r\n      setLoadingMsgs(false);\r\n      if (fetchMsgs) setFetchMsgs(false);\r\n      setSending(false);\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"Couldn't Fetch Messages\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"bottom-center\",\r\n      });\r\n      setLoadingMsgs(false);\r\n      if (fetchMsgs) setFetchMsgs(false);\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!newMsgData.attachment && !msgContent.current?.innerHTML) return;\r\n\r\n    const msgData = {\r\n      ...newMsgData,\r\n      content:\r\n        msgContent.current?.innerHTML ||\r\n        newMsgData?.attachment?.name ||\r\n        \"No content\",\r\n    };\r\n\r\n    const newMsg = {\r\n      _id: new Date().getTime(),\r\n      sender: {\r\n        _id: loggedInUser?._id,\r\n        profilePic: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n      },\r\n      fileUrl: msgData?.attachmentPreviewUrl,\r\n      file_id: \"\",\r\n      file_name: msgData?.attachment?.name,\r\n      content: msgData?.content,\r\n      createdAt: new Date().toISOString(),\r\n      sent: false,\r\n    };\r\n\r\n    setMessages([newMsg, ...messages]);\r\n    resetMsgInput();\r\n    setSending(true);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      // Upload img/gif to cloudinary, and all other files to aws s3\r\n      const apiUrl = /(\\.png|\\.jpg|\\.jpeg|\\.gif|\\.svg)$/.test(\r\n        msgData.attachment?.name\r\n      )\r\n        ? `/api/message`\r\n        : `/api/message/upload-to-s3`;\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"attachment\", msgData.attachment);\r\n      formData.append(\"content\", msgData.content);\r\n      formData.append(\"chatId\", selectedChat?._id);\r\n      const { data } = await axios.post(apiUrl, formData, config);\r\n\r\n      clientSocket?.emit(\"new msg sent\", data);\r\n      fetchMessages();\r\n      setRefresh(!refresh);\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"Couldn't Send Messages\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"bottom-center\",\r\n      });\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const deleteMessage = async () => {\r\n    setLoading(true);\r\n    setSending(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      await axios.put(\r\n        `/api/message/delete`,\r\n        {\r\n          messageIds: JSON.stringify([clickedMsg]),\r\n        },\r\n        config\r\n      );\r\n\r\n      clientSocket?.emit(\"msg deleted\", {\r\n        deletedMsgId: clickedMsg,\r\n        senderId: loggedInUser?._id,\r\n        chat: selectedChat,\r\n      });\r\n      displayToast({\r\n        message: \"Message Deleted Successfully\",\r\n        type: \"success\",\r\n        duration: 3000,\r\n        position: \"bottom-center\",\r\n      });\r\n      setMessages(messages.filter((msg) => msg?._id !== clickedMsg));\r\n      setLoading(false);\r\n      setRefresh(!refresh);\r\n      return \"msgActionDone\";\r\n    } catch (error) {\r\n      displayToast({\r\n        title: \"Couldn't Delete Message\",\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 4000,\r\n        position: \"top-center\",\r\n      });\r\n      setLoading(false);\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const updateMessage = async () => {};\r\n\r\n  const handleMsgFileInputChange = (e) => {\r\n    const msgFile = e.target.files[0];\r\n    if (!msgFile) return;\r\n\r\n    if (msgFile.size >= 3145728) {\r\n      msgFileInput.current.value = \"\";\r\n      return displayToast({\r\n        message: \"Please Select a File Smaller than 3 MB\",\r\n        type: \"warning\",\r\n        duration: 4000,\r\n        position: \"top-center\",\r\n      });\r\n    }\r\n    setEnableMsgSend(true);\r\n    setNewMsgData({\r\n      ...newMsgData,\r\n      attachment: msgFile,\r\n      attachmentPreviewUrl: URL.createObjectURL(msgFile),\r\n    });\r\n  };\r\n\r\n  const resetMsgInput = () => {\r\n    setNewMsgData({\r\n      attachment: null,\r\n      attachmentPreviewUrl: \"\",\r\n    });\r\n    setEnableMsgSend(false);\r\n    msgContent.current.innerHTML = \"\";\r\n    msgFileInput.current.value = \"\";\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    msgListBottom.current?.scrollIntoView({ behaviour: \"smooth\" });\r\n  };\r\n\r\n  // Socket client config\r\n  useEffect(() => {\r\n    if (!clientSocket)\r\n      return console.log(\"socket not defined : \", clientSocket);\r\n\r\n    clientSocket.emit(\"init user\", loggedInUser?._id);\r\n    clientSocket.on(\"user connected\", () => {\r\n      console.log(\"socket connected\");\r\n    });\r\n  }, []);\r\n\r\n  // Listening to socket events\r\n  useEffect(() => {\r\n    if (!clientSocket)\r\n      return console.log(\"socket not defined : \", clientSocket);\r\n\r\n    clientSocket.on(\"new msg received\", (newMsg) => {\r\n      setRefresh(!refresh);\r\n      if (selectedChat) setMessages([newMsg, ...messages]);\r\n    });\r\n\r\n    clientSocket.on(\"remove deleted msg\", (deletedMsgId) => {\r\n      setRefresh(!refresh);\r\n      if (selectedChat)\r\n        setMessages(messages.filter((msg) => msg?._id !== deletedMsgId));\r\n    });\r\n\r\n    clientSocket.on(\"update updated msg\", (updatedMsg) => {\r\n      setRefresh(!refresh);\r\n      if (selectedChat)\r\n        setMessages(\r\n          messages.map((msg) => {\r\n            return msg?._id === updatedMsg?._id ? updatedMsg : msg;\r\n          })\r\n        );\r\n    });\r\n  });\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (fetchMsgs) {\r\n      fetchMessages();\r\n      clientSocket?.emit(\"join chat\", selectedChat?._id);\r\n    }\r\n  }, [fetchMsgs]);\r\n\r\n  const openViewProfileDialog = (props) => {\r\n    setShowDialogActions(false);\r\n    setDialogBody(props ? <ViewProfileBody {...props} /> : <ViewProfileBody />);\r\n    displayDialog({\r\n      title: \"View Profile\",\r\n    });\r\n  };\r\n\r\n  const openGroupInfoDialog = () => {\r\n    // Open group info dialog\r\n    setGroupInfo(selectedChat);\r\n    setShowDialogActions(false);\r\n    setDialogBody(<GroupInfoBody messages={messages} />);\r\n    displayDialog({\r\n      title: \"Group Info\",\r\n    });\r\n  };\r\n\r\n  // Open delete photo confirm dialog\r\n  const openDeleteMsgConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setDialogBody(<>Are you sure you want to delete this message?</>);\r\n    displayDialog({\r\n      title: \"Delete Message\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteMessage,\r\n    });\r\n  };\r\n\r\n  const openMsgOptionsMenu = (e) => {\r\n    setMsgOptionsMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`chatpageDiv chatpageView messagesView col text-light mx-0 mx-md-1 ${\r\n        selectedChat ? \"d-flex\" : \"d-none d-md-flex\"\r\n      } flex-column p-2 user-select-none`}\r\n    >\r\n      {selectedChat ? (\r\n        <>\r\n          <section className=\"messagesHeader d-flex justify-content-start position-relative w-100 fw-bold fs-4 bg-info bg-opacity-10 py-2\">\r\n            <CustomTooltip title=\"Go Back\" placement=\"bottom-start\" arrow>\r\n              <IconButton\r\n                onClick={closeChat}\r\n                className={`d-flex d-md-none ms-3`}\r\n                sx={{\r\n                  color: \"#999999\",\r\n                  \":hover\": {\r\n                    backgroundColor: \"#aaaaaa20\",\r\n                  },\r\n                }}\r\n              >\r\n                <ArrowBack />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n            <CustomTooltip\r\n              title={selectedChat?.isGroupChat ? \"Group Info\" : \"View Profile\"}\r\n              placement=\"bottom-start\"\r\n              arrow\r\n            >\r\n              <IconButton\r\n                sx={{\r\n                  margin: \"-8px\",\r\n                  \":hover\": {\r\n                    backgroundColor: \"#aaaaaa20\",\r\n                  },\r\n                }}\r\n                className=\"pointer ms-1 ms-md-4\"\r\n                onClick={\r\n                  selectedChat?.isGroupChat\r\n                    ? openGroupInfoDialog\r\n                    : openViewProfileDialog\r\n                }\r\n              >\r\n                <Avatar\r\n                  src={\r\n                    selectedChat?.isGroupChat\r\n                      ? selectedChat?.chatDisplayPic\r\n                      : getOneOnOneChatReceiver(\r\n                          loggedInUser,\r\n                          selectedChat?.users\r\n                        )?.profilePic || \"\"\r\n                  }\r\n                  alt={\"receiverAvatar\"}\r\n                />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n\r\n            <span className=\"ms-3 mt-1 text-info\" title={chatName}>\r\n              {truncateString(chatName, 22, 17)}\r\n            </span>\r\n\r\n            <CustomTooltip title=\"Close Chat\" placement=\"bottom-end\" arrow>\r\n              <IconButton\r\n                onClick={closeChat}\r\n                className=\"d-none d-md-flex\"\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  right: 15,\r\n                  top: 8,\r\n                  color: \"#999999\",\r\n                  \":hover\": {\r\n                    backgroundColor: \"#aaaaaa20\",\r\n                  },\r\n                }}\r\n              >\r\n                <Close />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n          </section>\r\n          <section className=\"messagesBody m-1 p-2 position-relative d-flex flex-column\">\r\n            {/* Messages list */}\r\n            <div className=\"messages rounded-3 d-flex flex-column\">\r\n              <div\r\n                // Event delegation\r\n                onClick={(e) => {\r\n                  const senderData = e.target?.dataset?.sender?.split(\"===\");\r\n                  const msgId = e.target?.dataset?.msg;\r\n                  if (senderData?.length) {\r\n                    // Open view profile dialog\r\n                    const props = {\r\n                      memberProfilePic: senderData[0],\r\n                      memberName: senderData[1],\r\n                      memberEmail: senderData[2],\r\n                    };\r\n                    return openViewProfileDialog(props);\r\n                  }\r\n                  if (msgId) {\r\n                    setClickedMsg(msgId);\r\n                    openMsgOptionsMenu(e);\r\n                  }\r\n                }}\r\n                className=\"msgArea overflow-auto d-flex flex-column-reverse\"\r\n              >\r\n                <div className=\"msgListBottom\" ref={msgListBottom}></div>\r\n                {loadingMsgs && !sending ? (\r\n                  <LoadingMsgs count={8} />\r\n                ) : (\r\n                  messages.map((m, i, msgs) => (\r\n                    <Message\r\n                      key={m._id}\r\n                      msgSent={m.sent}\r\n                      currMsg={m}\r\n                      prevMsg={i < msgs.length - 1 ? msgs[i + 1] : null}\r\n                    />\r\n                  ))\r\n                )}\r\n              </div>\r\n            </div>\r\n            {/* Edit/Delete Message menu */}\r\n            <MsgOptionsMenu\r\n              anchor={msgOptionsMenuAnchor}\r\n              setAnchor={setMsgOptionsMenuAnchor}\r\n              clickedMsg={clickedMsg}\r\n              openEditMsgDialog={() => {}}\r\n              openDeleteMsgConfirmDialog={openDeleteMsgConfirmDialog}\r\n            />\r\n            {/* New Message Input */}\r\n            <div className=\"msgInputDiv d-flex position-absolute\">\r\n              <span\r\n                className={`d-inline-block attachFile ${disableIfLoading} pointer bg-dark`}\r\n              >\r\n                <CustomTooltip\r\n                  title=\"Attach File\"\r\n                  placement=\"bottom-start\"\r\n                  arrow\r\n                >\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      msgFileInput.current?.click();\r\n                    }}\r\n                    className={`d-flex ms-2 my-1`}\r\n                    sx={{ ...iconStyles, transform: \"rotateZ(45deg)\" }}\r\n                  >\r\n                    <AttachFile style={{ fontSize: 22 }} />\r\n                  </IconButton>\r\n                </CustomTooltip>\r\n                {/* Attachment File input */}\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"*\"\r\n                  onChange={handleMsgFileInputChange}\r\n                  name=\"attachment\"\r\n                  id=\"attachMsgFile\"\r\n                  ref={msgFileInput}\r\n                  className={`d-none`}\r\n                  disabled={loadingMsgs}\r\n                />\r\n              </span>\r\n              {/* Content/text input */}\r\n              <div\r\n                onInput={(e) => {\r\n                  const input = e.target.innerHTML;\r\n                  setEnableMsgSend(Boolean(input));\r\n                }}\r\n                ref={msgContent}\r\n                className={`msgInput border-0 w-100 text-start ${\r\n                  !enableMsgSend ? \"disabledSend\" : \"\"\r\n                } d-flex bg-dark px-3 py-2 justify-content-start`}\r\n                contentEditable={true}\r\n              ></div>\r\n              {/* Send button */}\r\n              <span\r\n                className={`d-inline-block sendButton ${disableIfLoading} pointer bg-dark`}\r\n              >\r\n                {enableMsgSend ? (\r\n                  <IconButton\r\n                    onClick={sendMessage}\r\n                    className={`d-flex my-1 mx-2 mx-md-3`}\r\n                    sx={iconStyles}\r\n                  >\r\n                    <Send style={{ fontSize: 20 }} />\r\n                  </IconButton>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </span>\r\n            </div>\r\n          </section>\r\n        </>\r\n      ) : (\r\n        <div className=\"d-flex flex-column justify-content-start align-items-center h-100\">\r\n          <h2 className=\"mx-3 mt-1\">\r\n            Hello{\" \"}\r\n            <span\r\n              className=\"fw-bold\"\r\n              style={{ color: \"#A798F2\" }}\r\n            >{`${loggedInUser?.name?.split(\" \")[0]?.toUpperCase()}`}</span>{\" \"}\r\n            👋\r\n          </h2>\r\n          <LottieAnimation\r\n            ref={letsChatGif}\r\n            className={\"d-inline-block mt-3\"}\r\n            style={{ marginBottom: \"50px\", height: \"50%\" }}\r\n            animationData={animationData}\r\n          />\r\n          <p\r\n            className=\"h4 mx-5\"\r\n            style={{ marginTop: \"-20px\", color: \"#99C5EE\" }}\r\n          >\r\n            Search or Click a Chat, Search a User, or Create a Group to start or\r\n            open a chat.\r\n          </p>\r\n          <p className=\"h2\" style={{ color: \"#99C5EE\" }}>\r\n            Happy Chatting!😀\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesView;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AppState } from \"../context/ContextProvider\";\r\nimport ChatpageHeader from \"../components/ChatpageHeader\";\r\nimport CustomDialog from \"../components/utils/CustomDialog\";\r\nimport ChatListView from \"../components/ChatListView\";\r\nimport MessagesView from \"../components/MessagesView\";\r\n\r\nconst ChatsPage = () => {\r\n  const {\r\n    loggedInUser,\r\n    setLoggedInUser,\r\n    dialogBody,\r\n    dialogData,\r\n    closeDialog,\r\n    showDialogActions,\r\n    setSelectedChat,\r\n  } = AppState();\r\n\r\n  const navigate = useNavigate();\r\n  const [fetchMsgs, setFetchMsgs] = useState(false);\r\n  const [loadingMsgs, setLoadingMsgs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Session storage persists data even after page refresh, unlike state\r\n    const user = JSON.parse(sessionStorage.getItem(\"loggedInUser\"));\r\n    if (!user) return navigate(\"/\");\r\n    setLoggedInUser(user);\r\n    closeDialog();\r\n    setSelectedChat(null);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loggedInUser && (\r\n        <div className={`chatpage`}>\r\n          {/* Header component */}\r\n          <ChatpageHeader setFetchMsgs={setFetchMsgs} />\r\n\r\n          <section className={`row g-1`}>\r\n            {/* Chat List component */}\r\n            <ChatListView\r\n              loadingMsgs={loadingMsgs}\r\n              setFetchMsgs={setFetchMsgs}\r\n            />\r\n\r\n            {/* Chat Messages component */}\r\n            <MessagesView\r\n              loadingMsgs={loadingMsgs}\r\n              setLoadingMsgs={setLoadingMsgs}\r\n              fetchMsgs={fetchMsgs}\r\n              setFetchMsgs={setFetchMsgs}\r\n            />\r\n          </section>\r\n\r\n          {/* Alert dialog */}\r\n          <CustomDialog\r\n            dialogData={dialogData}\r\n            handleDialogClose={closeDialog}\r\n            showDialogActions={showDialogActions}\r\n            showDialogClose={true}\r\n          >\r\n            {dialogBody}\r\n          </CustomDialog>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatsPage;\r\n"],"names":["menuPaperProps","elevation","sx","overflow","maxHeight","filter","borderRadius","backgroundColor","mt","menuItemProps","color","fontSize","menuIconProps","children","menuAnchor","setMenuAnchor","transformOrigin","anchorOrigin","isMenuOpen","Boolean","closeMenu","anchorEl","open","onClose","onClick","PaperProps","style","marginBottom","anchor","setAnchor","AppState","loggedInUser","notifs","setLoggedInUser","notifications","vertical","horizontal","length","map","n","MenuItem","_id","getUpdatedState","formClassNames","loading","disableIfLoading","formLabelClassName","formFieldClassName","inputFieldClassName","useState","showPassword","setShowPassword","currentPassword","newPassword","confirmNewPassword","changePasswordData","setChangePasswordData","handleChangeFor","prop","e","target","value","useEffect","className","htmlFor","type","onChange","required","autoFocus","name","id","disabled","placeholder","PasswordVisibilityToggle","originalName","getUpdatedName","setName","width","selectProfilePic","openDeletePhotoConfirmDialog","deletePhotoCondition","ListItemIcon","Upload","Delete","arrowStyles","tooltipStyles","styled","props","Tooltip","arrow","classes","popper","theme","tooltipClasses","btnHoverStyle","btnCustomStyle","fontFamily","dialogData","handleDialogClose","showDialogActions","showDialogClose","setSelectedChat","closeDialog","isFullScreen","isOpen","title","nolabel","yeslabel","loadingYeslabel","action","navigate","useNavigate","handleYes","result","Dialog","fullScreen","backgroundImage","DialogTitle","marginTop","marginRight","IconButton","position","right","top","Close","DialogContent","DialogActions","Button","KeyboardDoubleArrowLeft","margin","CircularProgress","size","KeyboardDoubleArrowRight","marginLeft","getChildDialogMethods","showChildDialogActions","showChildDialogClose","childDialogData","setChildDialogData","childDialogBody","setChildDialogBody","displayChildDialog","options","closeChildDialog","data","CustomTooltip","getCustomTooltip","maxWidth","border","displayToast","childDialogMethods","setLoading","profilePicUrl","profilePic","email","profileData","setProfileData","editProfilePicMenuAnchor","setEditProfilePicMenuAnchor","editedName","uploading","setUploading","imgInput","useRef","isGuestUser","persistUpdatedUser","updatedUser","sessionStorage","setItem","JSON","stringify","clickOnKeydown","key","click","handleImgInputChange","image","files","current","message","duration","config","headers","Authorization","token","formData","FormData","append","cloudinary_id","axios","response","deleteProfilePic","currentProfilePic","updatedName","updateProfileName","newUserName","src","alt","placement","tabIndex","onKeyDown","Edit","endsWith","accept","ref","truncateString","editPasswordData","displayDialog","setDialogBody","setShowDialogActions","updatedState","Person","ManageAccounts","removeItem","Key","Logout","user","truncateValues","max","index","dpRadius","count","skeletonStyle","Array","i","Skeleton","variant","height","forwardRef","inputRef","searchHandler","clearInput","typing","setTyping","Search","trim","replace","cursor","focus","padding","Clear","setFetchMsgs","isDrawerOpen","setIsDrawerOpen","searchQuery","setSearchQuery","searchResults","setSearchResults","searchUserInput","refresh","setRefresh","handleClose","searchUsers","debounce","query","createOrRetrieveChat","userId","Drawer","borderTopRightRadius","borderBottomRightRadius","transitionDuration","ChevronLeft","overflowY","overflowX","dataset","io","transports","appGif","notificationsMenuAnchor","setNotificationsMenuAnchor","profileSettingsMenuAnchor","setProfileSettingsMenuAnchor","LottieAnimation","animationData","Notifications","Avatar","groupInfo","setGroupInfo","chatDisplayPicUrl","chatName","editGroupDpMenuAnchor","setEditGroupDpMenuAnchor","createGroupChat","chatDisplayPic","users","preventDefault","DEFAULT_GROUP_DP","URL","createObjectURL","getAddedMembers","forCreateGroup","setDialogAction","groupData","setGroupData","fetching","setFetching","groupMembers","isMemberSelected","setIsMemberSelected","addedMembers","setAddedMembers","setShowDialogClose","openNewGroupDialog","membersNotAdded","forEach","addedMember","m","flex","Chip","avatar","label","split","onDelete","u","unselectUser","selectedUser","find","lastMsgFileType","chat","selectedChat","receiverEmail","isGroupChat","lastMessage","tooltipTitle","lastMsgContent","content","replaceAll","lastMsgDate","Date","createdAt","lastMsgDateString","msgDateStringOf","lastMsgFile","fileUrl","test","msgTimeStringOf","dateStringOf","sender","DoneAll","Image","GifBox","VideoFile","AudioFile","PictureAsPdf","Article","event","audioSrc","videoSrc","fileStyle","controls","objectFit","loadingMsgs","chats","setChats","filteredChats","setFilteredChats","searchChatInput","fetchChats","mappedChats","receiver","getOneOnOneChatReceiver","searchChats","chatNameInput","toLowerCase","includes","pointerEvents","GroupAdd","chatId","displayFullSizeImage","clickedChat","undefined","memberProfilePic","memberName","memberEmail","isLoggedInUser","isGroupAdmin","KeyboardArrowDown","clickedMember","isLoggedInUserGroupAdmin","groupAdmins","some","admin","clickedMemberName","styledMemberName","updateView","openChat","makeGroupAdmin","dismissAsAdmin","removeFromGroup","userToBeRemoved","Message","InfoOutlined","AdminPanelSettings","GroupRemove","admins","setClickedMember","memberOptionsMenuAnchor","setMemberOptionsMenuAnchor","sortMembers","a","every","member","setFilteredMembers","filterMemberInput","filteredMembers","filterMembers","memberNameInput","openMemberOptionsMenu","messages","groupDP","groupName","isUserGroupAdmin","btnClassName","updatedValue","updateGroupName","deleteGroupDp","currentDP","exitGroup","deleteGroup","deleteGroupPromise","deleteMessagesPromise","messageIds","isDeleteGroupRequest","Promise","resolve","all","updatedMembers","addMembersToGroup","usersToBeAdded","lineHeight","PersonAdd","msgSent","currMsg","prevMsg","msgContentRef","senderData","currMsgId","isSameSender","currMsgDate","prevMsgDate","isOtherDay","showCurrSender","innerHTML","openEditMsgDialog","openDeleteMsgConfirmDialog","iconStyles","clientSocket","setLoadingMsgs","fetchMsgs","letsChatGif","closeChat","resetMsgInput","sending","setSending","enableMsgSend","setEnableMsgSend","setMessages","clickedMsg","setClickedMsg","attachment","attachmentPreviewUrl","newMsgData","setNewMsgData","msgListBottom","msgFileInput","msgContent","msgOptionsMenuAnchor","setMsgOptionsMenuAnchor","fetchMessages","msg","sendMessage","msgData","newMsg","getTime","file_id","file_name","toISOString","sent","apiUrl","emit","deleteMessage","deletedMsgId","senderId","console","log","on","updatedMsg","scrollIntoView","behaviour","scrollToBottom","openViewProfileDialog","ArrowBack","msgId","openMsgOptionsMenu","msgs","transform","AttachFile","msgFile","onInput","input","contentEditable","Send","toUpperCase","dialogBody","parse","getItem"],"sourceRoot":""}