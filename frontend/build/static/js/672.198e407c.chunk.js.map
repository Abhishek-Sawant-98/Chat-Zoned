{"version":3,"file":"static/js/672.198e407c.chunk.js","mappings":"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","sources":["components/authentication/Login.tsx","../node_modules/@mui/icons-material/esm/AddAPhoto.js","components/authentication/Register.tsx","pages/HomePage.tsx","../node_modules/@emotion/react/dist/emotion-react.browser.esm.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import { ChangeEventHandler, useState } from \"react\";\r\nimport axios from \"../../utils/axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport PasswordVisibilityToggle from \"../utils/PasswordVisibilityToggle\";\r\nimport { setLoggedInUser } from \"../../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { getAxiosConfig } from \"../../utils/appUtils\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/storeHooks\";\r\nimport {\r\n  AxiosErrorType,\r\n  ButtonEventHandler,\r\n  ToastData,\r\n} from \"../../utils/AppTypes\";\r\nimport { AxiosRequestConfig } from \"axios\";\r\n\r\nconst Login = () => {\r\n  const {\r\n    loading,\r\n    disableIfLoading,\r\n    formLabelClassName,\r\n    formFieldClassName,\r\n    inputFieldClassName,\r\n    btnSubmitClassName,\r\n    btnResetClassName,\r\n  } = useAppSelector(selectFormfieldState);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const [userCredentials, setUserCredentials] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const { email, password } = userCredentials;\r\n\r\n  const handleChangeFor =\r\n    (prop: string): ChangeEventHandler<HTMLInputElement> =>\r\n    (e) => {\r\n      setUserCredentials({\r\n        ...userCredentials,\r\n        [prop]: e.target.value,\r\n      });\r\n    };\r\n\r\n  const handleLogin: ButtonEventHandler = async (e: MouseEvent) => {\r\n    e.preventDefault();\r\n    // return dispatch(setLoading(true));\r\n    if (!email || !password) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Enter All the Fields\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n    }\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({});\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/user/login\",\r\n        { email, password },\r\n        config as AxiosRequestConfig\r\n      );\r\n      // Success toast : login successful\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Login Successful\",\r\n          message: \"Your login session will expire in 15 days\",\r\n          type: \"success\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n\r\n      localStorage.setItem(\"loggedInUser\", JSON.stringify(data));\r\n      dispatch(setLoggedInUser(data));\r\n      dispatch(setLoading(false));\r\n      navigate(\"/chats\");\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Login Failed\",\r\n          message:\r\n            (error as AxiosErrorType).response?.data?.message ||\r\n            (error as Error).message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const handleReset: ButtonEventHandler = (e: MouseEvent) => {\r\n    e.preventDefault();\r\n    setUserCredentials({\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n\r\n  const setGuestCredentials: ButtonEventHandler = (e: MouseEvent) => {\r\n    e.preventDefault();\r\n    setUserCredentials({\r\n      email: \"guest.user@gmail.com\",\r\n      password: \"guest@987\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={`app__form user-select-none row`}\r\n      style={{ pointerEvents: loading ? \"none\" : \"auto\" }}\r\n    >\r\n      {/* Email input */}\r\n      <section className={`${formFieldClassName} mb-2 col-md-6`}>\r\n        <label htmlFor=\"login__email\" className={`${formLabelClassName}`}>\r\n          Email ID <span className=\"required\">*</span>\r\n        </label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={handleChangeFor(\"email\")}\r\n          required\r\n          autoFocus\r\n          name=\"email\"\r\n          id=\"login__email\"\r\n          className={`${inputFieldClassName}`}\r\n          placeholder=\"Used While Registering\"\r\n        />\r\n      </section>\r\n      {/* Password input */}\r\n      <section className={`${formFieldClassName} mb-4 col-md-6`}>\r\n        <label htmlFor=\"login__password\" className={`${formLabelClassName}`}>\r\n          Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={password}\r\n            onChange={handleChangeFor(\"password\")}\r\n            required\r\n            name=\"password\"\r\n            id=\"login__password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            placeholder=\"Hope You Remember\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n      <section\r\n        className={`${formFieldClassName} mb-3 d-flex justify-content-between`}\r\n      >\r\n        {/* Login button */}\r\n        <button\r\n          type=\"submit\"\r\n          name=\"btnLogin\"\r\n          id=\"login__btnLogin\"\r\n          onClick={handleLogin}\r\n          className={`${btnSubmitClassName}`}\r\n        >\r\n          {loading ? (\r\n            <>\r\n              <CircularProgress\r\n                size={25}\r\n                style={{ color: \"white\", margin: \"0px 15px 0px -20px\" }}\r\n              />\r\n              Signing in...\r\n            </>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </button>\r\n        {/* Reset button */}\r\n        <button\r\n          type=\"reset\"\r\n          name=\"btnReset\"\r\n          id=\"login__btnReset\"\r\n          onClick={handleReset}\r\n          className={`${btnResetClassName}`}\r\n        >\r\n          Reset\r\n        </button>\r\n      </section>\r\n      {/* Get guest user credentials button */}\r\n      <section className={`${formFieldClassName} mb-2`}>\r\n        <button\r\n          name=\"btnGetGuestCredentials\"\r\n          id=\"login__btnGetGuestCredentials\"\r\n          onClick={setGuestCredentials}\r\n          className={`btn btn-outline-success w-100 fs-4 p-1 rounded-pill`}\r\n        >\r\n          Get Guest Credentials\r\n        </button>\r\n      </section>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 4V1h2v3h3v2H5v3H3V6H0V4h3zm3 6V7h3V4h7l1.83 2H21c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2V10h3zm7 9c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-3.2-5c0 1.77 1.43 3.2 3.2 3.2s3.2-1.43 3.2-3.2-1.43-3.2-3.2-3.2-3.2 1.43-3.2 3.2z\"\n}), 'AddAPhoto');","import { AddAPhoto } from \"@mui/icons-material\";\r\nimport {\r\n  useState,\r\n  useRef,\r\n  ChangeEventHandler,\r\n  LegacyRef,\r\n  ChangeEvent,\r\n} from \"react\";\r\nimport { NavigateFunction, useNavigate } from \"react-router-dom\";\r\nimport axios from \"../../utils/axios\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport PasswordVisibilityToggle from \"../utils/PasswordVisibilityToggle\";\r\nimport { getAxiosConfig, isImageFile, TWO_MB } from \"../../utils/appUtils\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { setLoggedInUser } from \"../../store/slices/AppSlice\";\r\nimport {\r\n  AxiosErrorType,\r\n  ButtonEventHandler,\r\n  falsyType,\r\n  ToastData,\r\n} from \"../../utils/AppTypes\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/storeHooks\";\r\nimport { AxiosRequestConfig } from \"axios\";\r\n\r\nconst DEFAULT_USER_DP = process.env.REACT_APP_DEFAULT_USER_DP;\r\n\r\ninterface UserData {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n  profilePic: Blob | string;\r\n  profilePicUrl: string | undefined;\r\n}\r\n\r\nconst Register = () => {\r\n  const {\r\n    loading,\r\n    disableIfLoading,\r\n    formLabelClassName,\r\n    formFieldClassName,\r\n    inputFieldClassName,\r\n    btnSubmitClassName,\r\n    btnResetClassName,\r\n  } = useAppSelector(selectFormfieldState);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const navigate: NavigateFunction = useNavigate();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const imgInput = useRef<HTMLInputElement>();\r\n\r\n  const [userData, setUserData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    profilePic: \"\",\r\n    profilePicUrl: DEFAULT_USER_DP,\r\n  } as UserData);\r\n\r\n  const { name, email, password, confirmPassword, profilePic, profilePicUrl } =\r\n    userData;\r\n\r\n  const handleChangeFor =\r\n    (prop: string): ChangeEventHandler<HTMLInputElement> =>\r\n    (e) => {\r\n      setUserData({ ...userData, [prop]: e.target.value });\r\n    };\r\n\r\n  const handleRegister: ButtonEventHandler = async (e: MouseEvent) => {\r\n    e.preventDefault();\r\n    // return dispatch(setLoading(true));\r\n\r\n    if (!name || !email || !password || !confirmPassword) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Enter All the Fields\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n    }\r\n\r\n    if (name.length > 25) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Name Must be Less than 25 characters\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n    }\r\n\r\n    // Validate email\r\n    if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Enter a Valid Email ID\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Passwords Do Not Match\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n    }\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ formData: true });\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"profilePic\", profilePic);\r\n    formData.append(\"name\", name);\r\n    formData.append(\"email\", email);\r\n    formData.append(\"password\", password);\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/user/register\",\r\n        formData,\r\n        config as AxiosRequestConfig\r\n      );\r\n      // Success toast : register successful\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Registration Successful\",\r\n          message: \"Your login session will expire in 15 days\",\r\n          type: \"success\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n      localStorage.setItem(\"loggedInUser\", JSON.stringify(data));\r\n      dispatch(setLoggedInUser(data));\r\n      dispatch(setLoading(false));\r\n      navigate(\"/chats\");\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Registration Failed\",\r\n          message:\r\n            (error as AxiosErrorType).response?.data?.message ||\r\n            (error as Error).message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const handleReset: ButtonEventHandler = (e: MouseEvent) => {\r\n    e.preventDefault();\r\n    setUserData({\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      profilePic: \"\",\r\n      profilePicUrl: DEFAULT_USER_DP,\r\n    });\r\n    if (!imgInput || !imgInput.current) return;\r\n    imgInput.current.value = \"\";\r\n  };\r\n\r\n  const handleImgInputChange: ChangeEventHandler<HTMLInputElement> = (e) => {\r\n    if (!e || !e.target || !e.target.files) return;\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n\r\n    if (!isImageFile(image.name)) {\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Invalid Image File\",\r\n          message: \"Please Select an Image File (png/jpg/jpeg/svg/webp)\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n    }\r\n\r\n    if (image.size >= TWO_MB) {\r\n      if (!imgInput || !imgInput.current) return;\r\n      imgInput.current.value = \"\";\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Select an Image Smaller than 2 MB\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n    }\r\n    setUserData({\r\n      ...userData,\r\n      profilePic: image,\r\n      profilePicUrl: URL.createObjectURL(image),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={`app__form user-select-none row ${disableIfLoading}`}\r\n      style={{ pointerEvents: loading ? \"none\" : \"auto\" }}\r\n    >\r\n      {/* Select Profile Pic */}\r\n      <section className=\"app__formfield position-relative mb-4\">\r\n        <img\r\n          className=\"userProfilePic img-fluid border border-2 border-primary rounded-circle mt-3\"\r\n          id=\"register__imgProfile\"\r\n          src={profilePicUrl}\r\n          alt=\"profilePic\"\r\n        />\r\n        <i\r\n          id=\"register__selectPic\"\r\n          className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n          onClick={() => {\r\n            if (!loading) imgInput?.current?.click();\r\n          }}\r\n        >\r\n          <AddAPhoto className=\"text-light fs-6\" />\r\n        </i>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleImgInputChange}\r\n          name=\"profilepic\"\r\n          id=\"register__img_input\"\r\n          ref={imgInput as LegacyRef<HTMLInputElement>}\r\n          className={`d-none`}\r\n        />\r\n      </section>\r\n      {/* Name input */}\r\n      <section className={`${formFieldClassName} mb-2 col-md-6 order-md-1`}>\r\n        <label htmlFor=\"register__username\" className={`${formLabelClassName}`}>\r\n          Name <span className=\"required\">*</span>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleChangeFor(\"name\")}\r\n          required\r\n          name=\"username\"\r\n          id=\"register__username\"\r\n          className={`${inputFieldClassName}`}\r\n          placeholder=\"Eg: John Titor\"\r\n        />\r\n      </section>\r\n      {/* Email input */}\r\n      <section className={`${formFieldClassName} mb-2 col-md-6 order-md-3`}>\r\n        <label htmlFor=\"register__email\" className={`${formLabelClassName}`}>\r\n          Email ID <span className=\"required\">*</span>\r\n        </label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={handleChangeFor(\"email\")}\r\n          required\r\n          name=\"email\"\r\n          id=\"register__email\"\r\n          className={`${inputFieldClassName}`}\r\n          placeholder=\"Eg: john.titor@yahoo.com\"\r\n        />\r\n      </section>\r\n      {/* Password input */}\r\n      <section className={`${formFieldClassName} mb-2 col-md-6 order-md-2`}>\r\n        <label htmlFor=\"register__password\" className={`${formLabelClassName}`}>\r\n          Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={password}\r\n            onChange={handleChangeFor(\"password\")}\r\n            required\r\n            name=\"password\"\r\n            id=\"register__password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            placeholder=\"Please Remember This\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n      {/* Confirm Password input */}\r\n      <section className={`${formFieldClassName} mb-4 col-md-6 order-md-4`}>\r\n        <label\r\n          htmlFor=\"register__confirmpassword\"\r\n          className={`${formLabelClassName}`}\r\n        >\r\n          Confirm Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={confirmPassword}\r\n            onChange={handleChangeFor(\"confirmPassword\")}\r\n            required\r\n            name=\"confirmpassword\"\r\n            id=\"register__confirmpassword\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            placeholder=\"Must Match the Above\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n      <section\r\n        className={`${formFieldClassName} mb-2 d-flex justify-content-between order-last`}\r\n      >\r\n        {/* Register button */}\r\n        <button\r\n          type=\"submit\"\r\n          name=\"btnRegister\"\r\n          id=\"register__btnRegister\"\r\n          onClick={handleRegister}\r\n          className={`${btnSubmitClassName}`}\r\n        >\r\n          {loading ? (\r\n            <>\r\n              <CircularProgress\r\n                size={25}\r\n                style={{ color: \"white\", margin: \"0px 15px 0px -20px\" }}\r\n              />\r\n              Signing Up...\r\n            </>\r\n          ) : (\r\n            \"Register\"\r\n          )}\r\n        </button>\r\n        {/* Reset button */}\r\n        <button\r\n          type=\"reset\"\r\n          name=\"btnReset\"\r\n          id=\"register__btnReset\"\r\n          onClick={handleReset}\r\n          className={`${btnResetClassName}`}\r\n        >\r\n          Reset\r\n        </button>\r\n      </section>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport Login from \"../components/authentication/Login\";\r\nimport Register from \"../components/authentication/Register\";\r\nimport LottieAnimation from \"../components/utils/LottieAnimation\";\r\nimport { NavigateFunction, useNavigate } from \"react-router-dom\";\r\nimport animationData from \"../animations/chat-gif.json\";\r\nimport { selectAppState } from \"../store/slices/AppSlice\";\r\nimport { selectFormfieldState } from \"../store/slices/FormfieldSlice\";\r\nimport type { UserType } from \"../utils/AppTypes\";\r\nimport { useAppSelector } from \"../store/storeHooks\";\r\n\r\nconst HomePage = () => {\r\n  const { loggedInUser } = useAppSelector(selectAppState);\r\n  const { disableIfLoading } = useAppSelector(selectFormfieldState);\r\n  const appGif = useRef<HTMLDivElement>();\r\n\r\n  const [showLogin, setShowLogin] = useState(true);\r\n  const navigate: NavigateFunction = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // localStorage persists data even after page refresh, unlike state\r\n    const user: UserType = JSON.parse(\r\n      localStorage.getItem(\"loggedInUser\") as string\r\n    );\r\n    if (user && Date.now() < user.expiryTime) navigate(\"/chats\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!loggedInUser && (\r\n        <section className=\"homepage container-fluid d-flex flex-column p-4\">\r\n          <section className=\"homepage__header container pt-0 pb-2 ps-1 pe-4 mb-2 user-select-none\">\r\n            <LottieAnimation\r\n              ref={appGif as React.Ref<HTMLDivElement>}\r\n              className={\"d-inline-block me-2\"}\r\n              style={{ width: \"35px\", height: \"35px\" }}\r\n              animationData={animationData}\r\n            />\r\n            <span className=\"d-inline-block mt-2\">CHAT ZONED</span>\r\n          </section>\r\n          <section\r\n            className={`app__body container p-2 mb-2 ${disableIfLoading}`}\r\n          >\r\n            <div className=\"container d-flex justify-content-between\">\r\n              <button\r\n                className={`app__btnToggle fs-4 btn ${\r\n                  showLogin ? \"btn-warning\" : \"text-light\"\r\n                } rounded-pill col m-1 ${disableIfLoading}`}\r\n                onMouseDown={() => setShowLogin(true)}\r\n              >\r\n                Login\r\n              </button>\r\n              <button\r\n                className={`app__btnToggle fs-4 btn ${\r\n                  showLogin ? \"text-light\" : \"btn-warning\"\r\n                } rounded-pill col m-1 ${disableIfLoading}`}\r\n                onMouseDown={() => setShowLogin(false)}\r\n              >\r\n                Register\r\n              </button>\r\n            </div>\r\n            <section\r\n              className={`app__form container text-light p-2 ${disableIfLoading}`}\r\n            >\r\n              {showLogin ? <Login /> : <Register />}\r\n            </section>\r\n          </section>\r\n        </section>\r\n      )}\r\n      {showLogin && (\r\n        <div className={`footer fs-5 w-75 text-light`}>\r\n          &copy; 2022 Made with 💙 by &nbsp;\r\n          <a\r\n            id=\"footerLink\"\r\n            className=\"text-decoration-none\"\r\n            href=\"https://github.com/Abhishek-Sawant-98\"\r\n            target=\"blank\"\r\n          >\r\n            <strong>Abhishek Sawant</strong>\r\n          </a>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import * as React from 'react';\nimport { createElement, useLayoutEffect, useContext, useRef, Fragment } from 'react';\nimport '@emotion/cache';\nimport { h as hasOwnProperty, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext, u as useInsertionEffectMaybe } from './emotion-element-cbed451f.browser.esm.js';\nexport { C as CacheProvider, T as ThemeContext, b as ThemeProvider, _ as __unsafe_useEmotionCache, a as useTheme, w as withEmotionCache, d as withTheme } from './emotion-element-cbed451f.browser.esm.js';\nimport '@babel/runtime/helpers/extends';\nimport '@emotion/weak-memoize';\nimport 'hoist-non-react-statics';\nimport '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport { insertStyles, registerStyles, getRegisteredStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\n\nvar pkg = {\n\tname: \"@emotion/react\",\n\tversion: \"11.9.0\",\n\tmain: \"dist/emotion-react.cjs.js\",\n\tmodule: \"dist/emotion-react.esm.js\",\n\tbrowser: {\n\t\t\"./dist/emotion-react.cjs.js\": \"./dist/emotion-react.browser.cjs.js\",\n\t\t\"./dist/emotion-react.esm.js\": \"./dist/emotion-react.browser.esm.js\"\n\t},\n\ttypes: \"types/index.d.ts\",\n\tfiles: [\n\t\t\"src\",\n\t\t\"dist\",\n\t\t\"jsx-runtime\",\n\t\t\"jsx-dev-runtime\",\n\t\t\"_isolated-hnrs\",\n\t\t\"types/*.d.ts\",\n\t\t\"macro.js\",\n\t\t\"macro.d.ts\",\n\t\t\"macro.js.flow\"\n\t],\n\tsideEffects: false,\n\tauthor: \"Emotion Contributors\",\n\tlicense: \"MIT\",\n\tscripts: {\n\t\t\"test:typescript\": \"dtslint types\"\n\t},\n\tdependencies: {\n\t\t\"@babel/runtime\": \"^7.13.10\",\n\t\t\"@emotion/babel-plugin\": \"^11.7.1\",\n\t\t\"@emotion/cache\": \"^11.7.1\",\n\t\t\"@emotion/serialize\": \"^1.0.3\",\n\t\t\"@emotion/utils\": \"^1.1.0\",\n\t\t\"@emotion/weak-memoize\": \"^0.2.5\",\n\t\t\"hoist-non-react-statics\": \"^3.3.1\"\n\t},\n\tpeerDependencies: {\n\t\t\"@babel/core\": \"^7.0.0\",\n\t\treact: \">=16.8.0\"\n\t},\n\tpeerDependenciesMeta: {\n\t\t\"@babel/core\": {\n\t\t\toptional: true\n\t\t},\n\t\t\"@types/react\": {\n\t\t\toptional: true\n\t\t}\n\t},\n\tdevDependencies: {\n\t\t\"@babel/core\": \"^7.13.10\",\n\t\t\"@emotion/css\": \"11.9.0\",\n\t\t\"@emotion/css-prettifier\": \"1.0.1\",\n\t\t\"@emotion/server\": \"11.4.0\",\n\t\t\"@emotion/styled\": \"11.8.1\",\n\t\t\"@types/react\": \"^16.9.11\",\n\t\tdtslint: \"^4.2.1\",\n\t\t\"html-tag-names\": \"^1.1.2\",\n\t\treact: \"16.14.0\",\n\t\t\"svg-tag-names\": \"^1.1.1\",\n\t\ttypescript: \"^4.5.5\"\n\t},\n\trepository: \"https://github.com/emotion-js/emotion/tree/main/packages/react\",\n\tpublishConfig: {\n\t\taccess: \"public\"\n\t},\n\t\"umd:main\": \"dist/emotion-react.umd.min.js\",\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t\"./index.js\",\n\t\t\t\"./jsx-runtime.js\",\n\t\t\t\"./jsx-dev-runtime.js\",\n\t\t\t\"./_isolated-hnrs.js\"\n\t\t],\n\t\tumdName: \"emotionReact\"\n\t}\n};\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return createElement.apply(null, createElementArgArray);\n};\n\nvar useInsertionEffect = React['useInsertion' + 'Effect'] ? React['useInsertion' + 'Effect'] : useLayoutEffect;\nvar warnedAboutCssPropForGlobal = false; // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n  var serialized = serializeStyles([styles], undefined, useContext(ThemeContext));\n  // but it is based on a constant that will never change at runtime\n  // it's effectively like having two implementations and switching them out\n  // so it's not actually breaking anything\n\n\n  var sheetRef = useRef();\n  useInsertionEffect(function () {\n    var key = cache.key + \"-global\"; // use case of https://github.com/emotion-js/emotion/issues/2675\n\n    var sheet = new cache.sheet.constructor({\n      key: key,\n      nonce: cache.sheet.nonce,\n      container: cache.sheet.container,\n      speedy: cache.sheet.isSpeedy\n    });\n    var rehydrating = false; // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion=\\\"\" + key + \" \" + serialized.name + \"\\\"]\");\n\n    if (cache.sheet.tags.length) {\n      sheet.before = cache.sheet.tags[0];\n    }\n\n    if (node !== null) {\n      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s\n\n      node.setAttribute('data-emotion', key);\n      sheet.hydrate([node]);\n    }\n\n    sheetRef.current = [sheet, rehydrating];\n    return function () {\n      sheet.flush();\n    };\n  }, [cache]);\n  useInsertionEffect(function () {\n    var sheetRefCurrent = sheetRef.current;\n    var sheet = sheetRefCurrent[0],\n        rehydrating = sheetRefCurrent[1];\n\n    if (rehydrating) {\n      sheetRefCurrent[1] = false;\n      return;\n    }\n\n    if (serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(cache, serialized.next, true);\n    }\n\n    if (sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n      sheet.before = element;\n      sheet.flush();\n    }\n\n    cache.insert(\"\", serialized, sheet, false);\n  }, [cache, serialized.name]);\n  return null;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Global.displayName = 'EmotionGlobal';\n}\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            if (process.env.NODE_ENV !== 'production' && arg.styles !== undefined && arg.name !== undefined) {\n              console.error('You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n' + '`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.');\n            }\n\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serializedArr = _ref.serializedArr;\n  var rules = useInsertionEffectMaybe(function () {\n\n    for (var i = 0; i < serializedArr.length; i++) {\n      var res = insertStyles(cache, serializedArr[i], false);\n    }\n  });\n\n  return null;\n};\n\nvar ClassNames = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  var hasRendered = false;\n  var serializedArr = [];\n\n  var css = function css() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('css can only be used during render');\n    }\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`\n\n    registerStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var cx = function cx() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('cx can only be used during render');\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  var content = {\n    css: css,\n    cx: cx,\n    theme: useContext(ThemeContext)\n  };\n  var ele = props.children(content);\n  hasRendered = true;\n  return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(Insertion, {\n    cache: cache,\n    serializedArr: serializedArr\n  }), ele);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  ClassNames.displayName = 'EmotionClassNames';\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var isBrowser = \"object\" !== 'undefined'; // #1727 for some reason Jest evaluates modules twice if some consuming module gets mocked with jest.mock\n\n  var isJest = typeof jest !== 'undefined';\n\n  if (isBrowser && !isJest) {\n    // globalThis has wide browser support - https://caniuse.com/?search=globalThis, Node.js 12 and later\n    var globalContext = // $FlowIgnore\n    typeof globalThis !== 'undefined' ? globalThis // eslint-disable-line no-undef\n    : isBrowser ? window : global;\n    var globalKey = \"__EMOTION_REACT_\" + pkg.version.split('.')[0] + \"__\";\n\n    if (globalContext[globalKey]) {\n      console.warn('You are loading @emotion/react when it is already loaded. Running ' + 'multiple instances may cause problems. This can happen if multiple ' + 'versions are used, or if multiple builds of the same version are ' + 'used.');\n    }\n\n    globalContext[globalKey] = true;\n  }\n}\n\nexport { ClassNames, Global, jsx as createElement, css, jsx, keyframes };\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["useAppSelector","selectFormfieldState","loading","disableIfLoading","formLabelClassName","formFieldClassName","inputFieldClassName","btnSubmitClassName","btnResetClassName","dispatch","useAppDispatch","useState","showPassword","setShowPassword","navigate","useNavigate","email","password","userCredentials","setUserCredentials","handleChangeFor","prop","e","target","value","handleLogin","preventDefault","displayToast","message","type","duration","position","setLoading","config","getAxiosConfig","axios","data","title","localStorage","setItem","JSON","stringify","setLoggedInUser","response","className","style","pointerEvents","htmlFor","onChange","required","autoFocus","name","id","placeholder","PasswordVisibilityToggle","onClick","CircularProgress","size","color","margin","createSvgIcon","_jsx","d","DEFAULT_USER_DP","process","imgInput","useRef","confirmPassword","profilePic","profilePicUrl","userData","setUserData","handleRegister","length","test","formData","FormData","append","src","alt","current","click","AddAPhoto","accept","files","image","isImageFile","TWO_MB","URL","createObjectURL","ref","loggedInUser","selectAppState","appGif","showLogin","setShowLogin","useEffect","user","parse","getItem","Date","now","expiryTime","LottieAnimation","width","height","animationData","onMouseDown","href","React","useLayoutEffect","css","_len","arguments","args","Array","_key","serializeStyles","keyframes","insertable","apply","styles","anim","toString","this","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties"],"sourceRoot":""}