{"version":3,"file":"static/js/124.013d2c09.chunk.js","mappings":"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","sources":["components/utils/Menu.jsx","components/utils/MenuItemText.jsx","components/menus/NotificationsMenu.jsx","components/dialogs/ChangePasswordBody.jsx","components/dialogs/EditNameBody.jsx","components/menus/EditPicMenu.jsx","components/utils/CustomTooltip.jsx","components/utils/CustomDialog.jsx","components/utils/ChildDialog.jsx","components/dialogs/EditProfileBody.jsx","components/menus/ProfileSettingsMenu.jsx","components/utils/UserListItem.jsx","components/utils/LoadingList.jsx","components/utils/SearchInput.jsx","components/utils/SearchUsersDrawer.jsx","components/ChatpageHeader.jsx","components/dialogs/NewGroupBody.jsx","components/dialogs/AddMembersToGroup.jsx","components/utils/ChatListItem.jsx","components/utils/FullSizeImage.jsx","components/ChatListView.jsx","components/dialogs/ViewProfileBody.jsx","components/utils/GroupMemberItem.jsx","components/menus/MemberOptionsMenu.jsx","components/dialogs/ViewGroupMembers.jsx","components/dialogs/GroupInfoBody.jsx","components/utils/LoadingMsgs.jsx","components/utils/MsgAttachment.jsx","components/utils/Message.jsx","components/menus/MsgOptionsMenu.jsx","components/utils/AttachmentPreview.jsx","components/MessagesView.jsx","pages/ChatsPage.jsx"],"sourcesContent":["import { Menu as MuiMenu } from \"@mui/material\";\r\n\r\nexport const menuPaperProps = {\r\n  elevation: 0,\r\n  sx: {\r\n    overflow: \"auto\",\r\n    maxHeight: 250,\r\n    filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\r\n    borderRadius: 2,\r\n    backgroundColor: \"#404040\",\r\n    mt: 1,\r\n  },\r\n};\r\n\r\nexport const menuItemProps = {\r\n  \":hover\": { backgroundColor: \"#505050\" },\r\n  color: \"#e0e0e0\",\r\n  fontSize: \"19px\",\r\n};\r\n\r\nexport const menuIconProps = { color: \"lightblue\" };\r\n\r\nconst Menu = ({\r\n  children,\r\n  menuAnchor,\r\n  setMenuAnchor,\r\n  transformOrigin,\r\n  anchorOrigin,\r\n}) => {\r\n  const isMenuOpen = Boolean(menuAnchor);\r\n\r\n  const closeMenu = () => {\r\n    setMenuAnchor(null);\r\n  };\r\n\r\n  return (\r\n    <MuiMenu\r\n      anchorEl={menuAnchor}\r\n      open={isMenuOpen}\r\n      onClose={closeMenu}\r\n      onClick={closeMenu}\r\n      PaperProps={menuPaperProps}\r\n      transformOrigin={transformOrigin}\r\n      anchorOrigin={anchorOrigin}\r\n    >\r\n      {children}\r\n    </MuiMenu>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","const MenuItemText = ({ children }) => {\r\n  return <span style={{ marginBottom: \"3px\" }}>{children}</span>;\r\n};\r\n\r\nexport default MenuItemText;\r\n","import { Logout, ManageAccounts } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\n\r\nconst NotificationsMenu = ({ anchor, setAnchor }) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n  const notifs = loggedInUser?.notifications;\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      {notifs?.length ? (\r\n        notifs.map((n) => (\r\n          <MenuItem\r\n            key={n._id}\r\n            sx={menuItemProps}\r\n            onClick={() => {}}\r\n          ></MenuItem>\r\n        ))\r\n      ) : (\r\n        <MenuItem sx={menuItemProps}>\r\n          <MenuItemText>No notifications</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default NotificationsMenu;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\nimport PasswordVisibilityToggle from \"../utils/PasswordVisibilityToggle\";\r\n\r\nconst ChangePasswordBody = ({ getUpdatedState }) => {\r\n  const {\r\n    loading,\r\n    disableIfLoading,\r\n    formLabelClassName,\r\n    formFieldClassName,\r\n    inputFieldClassName,\r\n  } = useSelector(selectFormfieldState);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [changePasswordData, setChangePasswordData] = useState({\r\n    currentPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmNewPassword: \"\",\r\n  });\r\n\r\n  const { currentPassword, newPassword, confirmNewPassword } =\r\n    changePasswordData;\r\n\r\n  const handleChangeFor = (prop) => (e) => {\r\n    setChangePasswordData({ ...changePasswordData, [prop]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Return updated state to profile settings menu\r\n    getUpdatedState(changePasswordData);\r\n  }, [changePasswordData]);\r\n\r\n  return (\r\n    <>\r\n      {/* Current Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 mt-3 col-md-6 order-md-2`}\r\n      >\r\n        <label htmlFor=\"current_password\" className={`${formLabelClassName}`}>\r\n          Current Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={currentPassword}\r\n            onChange={handleChangeFor(\"currentPassword\")}\r\n            required\r\n            autoFocus\r\n            name=\"currentPassword\"\r\n            id=\"current_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Used While Signing In\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n      {/* New Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 col-md-6 order-md-2`}\r\n      >\r\n        <label htmlFor=\"new_password\" className={`${formLabelClassName}`}>\r\n          New Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={newPassword}\r\n            onChange={handleChangeFor(\"newPassword\")}\r\n            required\r\n            name=\"newPassword\"\r\n            id=\"new_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Different from Current\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n      {/* Confirm New Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 col-md-6 order-md-2`}\r\n      >\r\n        <label\r\n          htmlFor=\"confirm_new_password\"\r\n          className={`${formLabelClassName}`}\r\n        >\r\n          Confirm New Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={confirmNewPassword}\r\n            onChange={handleChangeFor(\"confirmNewPassword\")}\r\n            required\r\n            name=\"confirmNewPassword\"\r\n            id=\"confirm_new_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Exactly as Above\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordBody;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\n\r\nconst EditNameBody = ({ originalName, getUpdatedName, placeholder }) => {\r\n  const { loading, formFieldClassName, inputFieldClassName } =\r\n    useSelector(selectFormfieldState);\r\n  const [name, setName] = useState(originalName);\r\n\r\n  useEffect(() => {\r\n    getUpdatedName(name);\r\n  }, [name]);\r\n\r\n  return (\r\n    <section\r\n      className={`${formFieldClassName} mx-auto`}\r\n      style={{ width: \"clamp(250px, 60vw, 360px)\" }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        name=\"editname\"\r\n        autoFocus\r\n        className={`${inputFieldClassName} mt-1`}\r\n        disabled={loading}\r\n        placeholder={placeholder}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditNameBody;\r\n","import { Delete, Upload } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\n\r\nconst EditPicMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  selectProfilePic,\r\n  openDeletePhotoConfirmDialog,\r\n  deletePhotoCondition,\r\n}) => {\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={selectProfilePic}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Upload />\r\n        </ListItemIcon>\r\n        <MenuItemText>Upload Photo</MenuItemText>\r\n      </MenuItem>\r\n      {deletePhotoCondition && (\r\n        <MenuItem sx={menuItemProps} onClick={openDeletePhotoConfirmDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <Delete />\r\n          </ListItemIcon>\r\n          <MenuItemText>Delete Photo</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default EditPicMenu;\r\n","import { styled } from \"@mui/material/styles\";\r\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\r\n\r\nconst getCustomTooltip = (arrowStyles, tooltipStyles) =>\r\n  styled(({ className, ...props }) => (\r\n    <Tooltip {...props} arrow classes={{ popper: className }} />\r\n  ))(({ theme }) => ({\r\n    [`& .${tooltipClasses.arrow}`]: { ...arrowStyles },\r\n    [`& .${tooltipClasses.tooltip}`]: { ...tooltipStyles },\r\n  }));\r\n\r\nexport default getCustomTooltip;\r\n","import {\r\n  Close,\r\n  KeyboardDoubleArrowLeft,\r\n  KeyboardDoubleArrowRight,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setSelectedChat } from \"../../store/slices/AppSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\n\r\nexport const btnHoverStyle = {\r\n  \":hover\": { backgroundColor: \"#93c2f727\" },\r\n};\r\nexport const btnCustomStyle = {\r\n  fontSize: 19,\r\n  color: \"#8cc2ff\",\r\n  fontFamily: \"Mirza\",\r\n  borderRadius: 10,\r\n};\r\n\r\nconst CustomDialog = ({\r\n  children,\r\n  dialogData,\r\n  showDialogActions,\r\n  showDialogClose,\r\n  closeDialog,\r\n}) => {\r\n  const { loading, disableIfLoading } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const {\r\n    isFullScreen,\r\n    isOpen,\r\n    title,\r\n    nolabel,\r\n    yeslabel,\r\n    loadingYeslabel,\r\n    action,\r\n  } = dialogData;\r\n\r\n  const handleDialogClose = () => {\r\n    if (closeDialog) return closeDialog();\r\n    dispatch(hideDialog());\r\n  };\r\n\r\n  const handleYes = async () => {\r\n    const result = await action();\r\n    if (\r\n      result === \"profileUpdated\" ||\r\n      result === \"membersUpdated\" ||\r\n      result === \"msgActionDone\"\r\n    ) {\r\n      handleDialogClose();\r\n    } else if (result === \"createdGroup\") {\r\n      handleDialogClose();\r\n      // Close Parent Dialog as well\r\n      dispatch(hideDialog());\r\n    } else if (result === \"pwdUpdated\" || result === \"loggingOut\") {\r\n      handleDialogClose();\r\n      dispatch(setSelectedChat(null));\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen={Boolean(isFullScreen)}\r\n      PaperProps={{\r\n        sx: {\r\n          borderRadius: 2,\r\n          backgroundImage: \"linear-gradient(0deg,#353535,#444)\",\r\n        },\r\n      }}\r\n      className={`user-select-none ${disableIfLoading}`}\r\n      open={isOpen}\r\n      onClose={handleDialogClose}\r\n    >\r\n      <DialogTitle\r\n        style={{ fontSize: 26, color: \"#ffffff\", fontFamily: \"Mirza\" }}\r\n      >\r\n        <span\r\n          className=\"d-flex\"\r\n          style={{ marginTop: -5, marginRight: 10 }}\r\n        >\r\n          {title}\r\n        </span>\r\n        {showDialogClose && (\r\n          <IconButton\r\n            onClick={handleDialogClose}\r\n            disabled={loading}\r\n            sx={{\r\n              position: \"absolute\",\r\n              right: 8,\r\n              top: 8,\r\n              color: \"#999999\",\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        )}\r\n      </DialogTitle>\r\n      <DialogContent\r\n        style={{ fontSize: 19, color: \"#e0e0e0\", fontFamily: \"Mirza\" }}\r\n      >\r\n        {children || <></>}\r\n      </DialogContent>\r\n      {showDialogActions && (\r\n        <DialogActions>\r\n          <Button\r\n            sx={btnHoverStyle}\r\n            disabled={loading}\r\n            style={btnCustomStyle}\r\n            onClick={handleDialogClose}\r\n          >\r\n            {nolabel === \"Back\" ? (\r\n              <span>\r\n                <KeyboardDoubleArrowLeft\r\n                  className=\"btnArrowIcons\"\r\n                  style={{\r\n                    margin: \"0px 5px 2px 0px\",\r\n                  }}\r\n                />\r\n                Back\r\n              </span>\r\n            ) : (\r\n              nolabel\r\n            )}\r\n          </Button>\r\n          <Button\r\n            sx={btnHoverStyle}\r\n            disabled={loading}\r\n            style={btnCustomStyle}\r\n            onClick={handleYes}\r\n          >\r\n            {loading && yeslabel !== \"Next\" ? (\r\n              <>\r\n                <CircularProgress size={25} style={{ marginRight: 12 }} />\r\n                <span style={{ marginRight: 22 }}>{loadingYeslabel}</span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {yeslabel === \"Next\" ? (\r\n                  <span>\r\n                    Next\r\n                    <KeyboardDoubleArrowRight\r\n                      className=\"btnArrowIcons\"\r\n                      style={{\r\n                        marginLeft: 4,\r\n                      }}\r\n                    />\r\n                  </span>\r\n                ) : (\r\n                  yeslabel\r\n                )}\r\n              </>\r\n            )}\r\n          </Button>\r\n        </DialogActions>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CustomDialog;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setChildDialogMethods } from \"../../store/slices/ChildDialogSlice\";\r\nimport CustomDialog from \"./CustomDialog\";\r\n\r\nconst ChildDialog = ({\r\n  showChildDialogActions = true,\r\n  showChildDialogClose = false,\r\n}) => {\r\n  // Child Dialog config\r\n  const [childDialogData, setChildDialogData] = useState({\r\n    isOpen: false,\r\n    title: \"Child Dialog\",\r\n    nolabel: \"NO\",\r\n    yeslabel: \"YES\",\r\n    loadingYeslabel: \"Updating...\",\r\n    action: () => {},\r\n  });\r\n  const [childDialogBody, setChildDialogBody] = useState(<></>);\r\n  const dispatch = useDispatch();\r\n  const displayChildDialog = (options) => {\r\n    setChildDialogData({ ...options, isOpen: true });\r\n  };\r\n  const closeChildDialog = (data) => {\r\n    setChildDialogData({ ...data, isOpen: false });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setChildDialogMethods({\r\n        setChildDialogBody,\r\n        displayChildDialog,\r\n        closeChildDialog,\r\n      })\r\n    );\r\n  }, [childDialogData]);\r\n\r\n  return (\r\n    <CustomDialog\r\n      dialogData={childDialogData}\r\n      closeDialog={closeChildDialog}\r\n      showDialogActions={showChildDialogActions}\r\n      showDialogClose={showChildDialogClose}\r\n    >\r\n      {childDialogBody}\r\n    </CustomDialog>\r\n  );\r\n};\r\n\r\nexport default ChildDialog;\r\n","import { Edit } from \"@mui/icons-material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"../../utils/axios\";\r\nimport EditNameBody from \"./EditNameBody\";\r\nimport { CircularProgress, IconButton } from \"@mui/material\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport { isImageFile, truncateString } from \"../../utils/appUtils\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { selectAppState, setLoggedInUser } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#111\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst EditProfileBody = () => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const { loading, disableIfLoading } = useSelector(selectFormfieldState);\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const dispatch = useDispatch();\r\n  const { setChildDialogBody, displayChildDialog } = childDialogMethods;\r\n\r\n  const [profileData, setProfileData] = useState({\r\n    profilePicUrl: loggedInUser?.profilePic,\r\n    name: loggedInUser?.name,\r\n    email: loggedInUser?.email,\r\n  });\r\n  const [editProfilePicMenuAnchor, setEditProfilePicMenuAnchor] =\r\n    useState(null);\r\n\r\n  useEffect(() => {\r\n    setProfileData({\r\n      ...profileData,\r\n      profilePicUrl: loggedInUser?.profilePic,\r\n      name: loggedInUser?.name,\r\n    });\r\n  }, [loggedInUser]);\r\n\r\n  // For profile pic upload loading indicator\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const { profilePicUrl, name, email } = profileData;\r\n  const imgInput = useRef();\r\n  const isGuestUser = loggedInUser?.email === \"guest.user@gmail.com\";\r\n\r\n  const persistUpdatedUser = (updatedUser) => {\r\n    // Session storage persists updated user even after page refresh\r\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\r\n    dispatch(setLoggedInUser(updatedUser));\r\n  };\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") {\r\n      e.target.click();\r\n    }\r\n  };\r\n\r\n  // Update Profile Pic\r\n  const handleImgInputChange = async (e) => {\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n\r\n    if (!isImageFile(image.name)) {\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Invalid Image File\",\r\n          message: \"Please Select an Image File (png/jpg/jpeg/svg)\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    if (image.size >= 2097152) {\r\n      imgInput.current.value = \"\";\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Select an Image Smaller than 2 MB\",\r\n          type: \"warning\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    dispatch(setLoading(true));\r\n    setUploading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"profilePic\", image);\r\n    formData.append(\"currentProfilePic\", loggedInUser?.profilePic);\r\n    formData.append(\"cloudinary_id\", loggedInUser?.cloudinary_id);\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/update/profile-pic\",\r\n        formData,\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"ProfilePic Updated Successfully.\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n      persistUpdatedUser({\r\n        ...data,\r\n        token: loggedInUser.token,\r\n        expiryTime: loggedInUser.expiryTime,\r\n      });\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"ProfilePic Update Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const deleteProfilePic = async () => {\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/delete/profile-pic\",\r\n        {\r\n          currentProfilePic: loggedInUser?.profilePic,\r\n          cloudinary_id: loggedInUser?.cloudinary_id,\r\n        },\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"ProfilePic Deleted Successfully.\",\r\n          type: \"success\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      persistUpdatedUser({\r\n        ...data,\r\n        token: loggedInUser.token,\r\n        expiryTime: loggedInUser.expiryTime,\r\n      });\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"ProfilePic Deletion Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Edited Name config\r\n  let editedName;\r\n\r\n  const getUpdatedName = (updatedName) => {\r\n    editedName = updatedName;\r\n  };\r\n\r\n  const updateProfileName = async () => {\r\n    if (!editedName) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Enter a Valid Name\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser?.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/update/name\",\r\n        { newUserName: editedName },\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Name Updated Successfully.\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      persistUpdatedUser({\r\n        ...data,\r\n        token: loggedInUser.token,\r\n        expiryTime: loggedInUser.expiryTime,\r\n      });\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Name Update Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Open edit name dialog\r\n  const openEditNameDialog = () => {\r\n    setChildDialogBody(\r\n      <EditNameBody\r\n        originalName={loggedInUser?.name}\r\n        getUpdatedName={getUpdatedName}\r\n        placeholder=\"Enter New Name\"\r\n      />\r\n    );\r\n    displayChildDialog({\r\n      title: \"Edit Name\",\r\n      nolabel: \"CANCEL\",\r\n      yeslabel: \"SAVE\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: updateProfileName,\r\n    });\r\n  };\r\n\r\n  // Open delete photo confirm dialog\r\n  const openDeletePhotoConfirmDialog = () => {\r\n    setChildDialogBody(<>Are you sure you want to delete this profile pic?</>);\r\n    displayChildDialog({\r\n      title: \"Delete Profile Pic\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteProfilePic,\r\n    });\r\n  };\r\n\r\n  const openEditProfilePicMenu = (e) => {\r\n    setEditProfilePicMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* View/Edit Profile Pic */}\r\n      {loading && uploading ? (\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n          <CircularProgress\r\n            size={75}\r\n            style={{ margin: \"30px 0px\", color: \"lightblue\" }}\r\n          />\r\n          <span style={{ marginBottom: \"45px\" }} className=\"text-light h1\">\r\n            {\" Updating Photo...\"}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <section className=\"dialogField d-flex position-relative mb-4\">\r\n          <img\r\n            className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n            id=\"viewedit__profilePic\"\r\n            src={profilePicUrl}\r\n            alt=\"profilePic\"\r\n          />\r\n          {!isGuestUser && (\r\n            <CustomTooltip title=\"Edit Profile Pic\" placement=\"right\" arrow>\r\n              <i\r\n                id=\"editProfilePic\"\r\n                tabIndex={2}\r\n                onKeyDown={clickOnKeydown}\r\n                className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n                onClick={openEditProfilePicMenu}\r\n              >\r\n                <Edit className=\"text-light fs-6\" />\r\n              </i>\r\n            </CustomTooltip>\r\n          )}\r\n          {/* Edit/Delete profile pic menu */}\r\n          <EditPicMenu\r\n            anchor={editProfilePicMenuAnchor}\r\n            setAnchor={setEditProfilePicMenuAnchor}\r\n            selectProfilePic={() => imgInput.current.click()}\r\n            openDeletePhotoConfirmDialog={openDeletePhotoConfirmDialog}\r\n            deletePhotoCondition={\r\n              !loggedInUser?.profilePic?.endsWith(\"user_dqzjdz.png\")\r\n            }\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            accept=\".png, .jpg, .jpeg, .svg\"\r\n            onChange={handleImgInputChange}\r\n            name=\"profilepic\"\r\n            id=\"editProfilePic\"\r\n            ref={imgInput}\r\n            className={`d-none`}\r\n            disabled={loading}\r\n          />\r\n        </section>\r\n      )}\r\n      {/* View Name */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-15px\" }}>\r\n          <CustomTooltip\r\n            title={name?.length > 24 ? name : \"\"}\r\n            placement=\"top-start\"\r\n            arrow\r\n          >\r\n            <div\r\n              className=\"w-100 h1 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"35px\" }}\r\n            >\r\n              {truncateString(name, 25, 21)}\r\n            </div>\r\n          </CustomTooltip>\r\n          {!isGuestUser && (\r\n            <CustomTooltip title=\"Edit Name\" placement=\"top\" arrow>\r\n              <IconButton\r\n                tabIndex={3}\r\n                onKeyDown={clickOnKeydown}\r\n                onClick={openEditNameDialog}\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  right: -8,\r\n                  top: 6,\r\n                  \":hover\": {\r\n                    backgroundColor: \"#aaaaaa30\",\r\n                  },\r\n                }}\r\n              >\r\n                <Edit className=\"text-light\" />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n          )}\r\n        </div>\r\n      </section>\r\n      {/* View Email */}\r\n      <section\r\n        className={`dialogField text-center mb-2`}\r\n        style={{ marginTop: \"-10px\" }}\r\n      >\r\n        <CustomTooltip\r\n          title={email?.length > 24 ? email : \"\"}\r\n          placement=\"bottom\"\r\n          arrow\r\n        >\r\n          <span className=\"h4\" style={{ color: \"lightblue\" }}>\r\n            {truncateString(email, 25, 21)}\r\n          </span>\r\n        </CustomTooltip>\r\n      </section>\r\n      {/* Child confirmation dialog */}\r\n      <ChildDialog />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfileBody;\r\n","import { Key, Logout, ManageAccounts, Person } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport axios from \"../../utils/axios\";\r\nimport ChangePasswordBody from \"../dialogs/ChangePasswordBody\";\r\nimport EditProfileBody from \"../dialogs/EditProfileBody\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectAppState, setLoggedInUser } from \"../../store/slices/AppSlice\";\r\nimport { setLoading } from \"../../store/slices/FormfieldSlice\";\r\nimport {\r\n  displayDialog,\r\n  setShowDialogActions,\r\n} from \"../../store/slices/CustomDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\n\r\nconst ProfileSettingsMenu = ({ anchor, setAnchor, setDialogBody }) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n\r\n  const isGuestUser = loggedInUser?.email === \"guest.user@gmail.com\";\r\n\r\n  let editPasswordData;\r\n\r\n  const getUpdatedState = (updatedState) => {\r\n    editPasswordData = updatedState;\r\n  };\r\n\r\n  const openLogoutConfirmDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<>Are you sure you want to log out?</>);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Logout Confirmation\",\r\n        nolabel: \"NO\",\r\n        yeslabel: \"YES\",\r\n        loadingYeslabel: \"Logging Out...\",\r\n        action: () => {\r\n          localStorage.removeItem(\"loggedInUser\");\r\n          dispatch(setLoggedInUser(null));\r\n          dispatch(\r\n            displayToast({\r\n              message: \"Logged Out\",\r\n              type: \"success\",\r\n              duration: 2000,\r\n              position: \"bottom-center\",\r\n            })\r\n          );\r\n          return \"loggingOut\";\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const openEditProfileDialog = () => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<EditProfileBody />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: isGuestUser ? \"View Profile\" : \"Edit Profile\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const openEditPasswordDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<ChangePasswordBody getUpdatedState={getUpdatedState} />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Change Password\",\r\n        nolabel: \"CANCEL\",\r\n        yeslabel: \"SAVE\",\r\n        loadingYeslabel: \"Saving...\",\r\n        action: async () => {\r\n          const { currentPassword, newPassword, confirmNewPassword } =\r\n            editPasswordData;\r\n\r\n          if (!currentPassword || !newPassword || !confirmNewPassword) {\r\n            return dispatch(\r\n              displayToast({\r\n                message: \"Please Enter All the Fields\",\r\n                type: \"warning\",\r\n                duration: 5000,\r\n                position: \"top-center\",\r\n              })\r\n            );\r\n          }\r\n          if (currentPassword === newPassword) {\r\n            return dispatch(\r\n              displayToast({\r\n                message: \"New Password Must Differ from Current Password\",\r\n                type: \"warning\",\r\n                duration: 5000,\r\n                position: \"top-center\",\r\n              })\r\n            );\r\n          }\r\n          if (newPassword !== confirmNewPassword) {\r\n            return dispatch(\r\n              displayToast({\r\n                message: \"New Password Must Match Confirm New Password\",\r\n                type: \"warning\",\r\n                duration: 5000,\r\n                position: \"top-center\",\r\n              })\r\n            );\r\n          }\r\n\r\n          dispatch(setLoading(true));\r\n\r\n          const config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${loggedInUser.token}`,\r\n            },\r\n          };\r\n\r\n          try {\r\n            await axios.put(\r\n              \"/api/user/update/password\",\r\n              { currentPassword, newPassword },\r\n              config\r\n            );\r\n            dispatch(\r\n              displayToast({\r\n                message:\r\n                  \"Password Updated Successfully. Please Login Again with Updated Password.\",\r\n                type: \"success\",\r\n                duration: 5000,\r\n                position: \"bottom-center\",\r\n              })\r\n            );\r\n\r\n            dispatch(setLoading(false));\r\n            localStorage.removeItem(\"loggedInUser\");\r\n            dispatch(setLoggedInUser(null));\r\n            return \"pwdUpdated\";\r\n          } catch (error) {\r\n            dispatch(\r\n              displayToast({\r\n                title: \"Password Update Failed\",\r\n                message: error.response?.data?.message || error.message,\r\n                type: \"error\",\r\n                duration: 5000,\r\n                position: \"top-center\",\r\n              })\r\n            );\r\n            dispatch(setLoading(false));\r\n          }\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={openEditProfileDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          {isGuestUser ? <Person /> : <ManageAccounts />}\r\n        </ListItemIcon>\r\n        <MenuItemText>{isGuestUser ? \"View\" : \"Edit\"} Profile</MenuItemText>\r\n      </MenuItem>\r\n      {!isGuestUser && (\r\n        <MenuItem sx={menuItemProps} onClick={openEditPasswordDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <Key />\r\n          </ListItemIcon>\r\n          <MenuItemText>Change Password</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n      <MenuItem sx={menuItemProps} onClick={openLogoutConfirmDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Logout />\r\n        </ListItemIcon>\r\n        <MenuItemText>Logout</MenuItemText>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default ProfileSettingsMenu;\r\n","import { truncateString } from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#E6480C\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  borderRadius: 5,\r\n  backgroundColor: \"#E6480C\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst UserListItem = ({ user, truncateValues }) => {\r\n  const { _id, name, email, profilePic } = user;\r\n  const [max, index] = truncateValues;\r\n\r\n  return (\r\n    <div\r\n      data-user={_id}\r\n      className={`userListItem user-select-none d-flex text-light justify-content-start align-items-center pointer px-3`}\r\n    >\r\n      <CustomTooltip\r\n        data-user={_id}\r\n        title={`${name} (${email})`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <img\r\n          src={profilePic}\r\n          alt={_id}\r\n          data-user={_id}\r\n          className={`img-fluid listItemAvatar userListAvatar rounded-circle`}\r\n        />\r\n      </CustomTooltip>\r\n      <div\r\n        data-user={_id}\r\n        className=\"userListData d-flex flex-column align-items-start px-2\"\r\n      >\r\n        <p data-user={_id} className=\"userListName fs-4 fw-bold text-info\">\r\n          {truncateString(name, max, index)}\r\n        </p>\r\n        <p data-user={_id} className=\"userListEmail\">\r\n          {truncateString(email, max, index)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n","import { Skeleton } from \"@mui/material\";\r\n\r\nconst LoadingList = ({ listOf, dpRadius, count }) => {\r\n  const skeletonStyle = { backgroundColor: \"#999\" };\r\n  return (\r\n    <>\r\n      {[...Array(count)].map((e, i) => (\r\n        <div key={`loadingListOf${listOf + i}`} className=\"loadingListItem row\">\r\n          <Skeleton\r\n            variant=\"circular\"\r\n            className=\"loadingDp rounded-circle\"\r\n            style={{\r\n              ...skeletonStyle,\r\n              width: dpRadius,\r\n              height: dpRadius,\r\n            }}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className=\"loadingTitle col-5\"\r\n            style={skeletonStyle}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className=\"loadingDesc col-7\"\r\n            style={skeletonStyle}\r\n          />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadingList;\r\n","import { Clear, Search } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { forwardRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\n\r\nconst SearchInput = forwardRef((props, inputRef) => {\r\n  const { searchHandler, autoFocus, placeholder, clearInput } = props;\r\n  const { disableIfLoading, formFieldClassName, inputFieldClassName } =\r\n    useSelector(selectFormfieldState);\r\n\r\n  // To display/hide clear search (<Close />) icon when typing\r\n  const [typing, setTyping] = useState(false);\r\n\r\n  return (\r\n    <section className={`${formFieldClassName} pt-3 pb-2 mx-1`}>\r\n      {/* Input box */}\r\n      <div className=\"input-group\">\r\n        <span\r\n          className={`input-group-text ${disableIfLoading} bg-black bg-gradient border-secondary text-light rounded-pill rounded-end`}\r\n        >\r\n          <Search className=\"mx-0\" style={{ marginTop: \"3px\" }} />\r\n        </span>\r\n        <input\r\n          type=\"text\"\r\n          ref={inputRef}\r\n          onChange={(e) => {\r\n            setTyping(Boolean(e.target.value.trim()));\r\n            searchHandler(e);\r\n          }}\r\n          autoFocus={autoFocus}\r\n          placeholder={placeholder}\r\n          className={`${inputFieldClassName\r\n            .replace(\"text-center\", \"text-start\")\r\n            .replace(\"pill\", \"0\")} border-start-0 border-end-0 d-inline-block`}\r\n          style={{ cursor: \"auto\", fontSize: \"18px\" }}\r\n        />\r\n        {/* Clear icon button */}\r\n        <span\r\n          className={`input-group-text ${disableIfLoading} bg-black bg-gradient border-secondary text-light rounded-pill rounded-start border-start-0`}\r\n        >\r\n          <IconButton\r\n            onClick={() => {\r\n              inputRef.current.value = \"\";\r\n              setTyping(false); // Hide '<Close />' icon\r\n              inputRef.current.focus();\r\n              clearInput();\r\n            }}\r\n            className={`${typing ? \"d-inline-block\" : \"d-none\"}`}\r\n            style={{\r\n              padding: \"0px 9px 3px 9px\",\r\n              margin: \"-7px\",\r\n              color: \"#999999\",\r\n            }}\r\n            sx={{\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n          >\r\n            <Clear style={{ fontSize: \"19px\" }} />\r\n          </IconButton>\r\n        </span>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default SearchInput;\r\n","import { ChevronLeft } from \"@mui/icons-material\";\r\nimport { Drawer, IconButton } from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"../../utils/axios\";\r\nimport { debounce, truncateString } from \"../../utils/appUtils\";\r\nimport UserListItem from \"./UserListItem\";\r\nimport LoadingList from \"./LoadingList\";\r\nimport SearchInput from \"./SearchInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectAppState, setSelectedChat } from \"../../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\n\r\nconst SearchUsersDrawer = ({ setFetchMsgs, isDrawerOpen, setIsDrawerOpen }) => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const { loading } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n\r\n  const searchUserInput = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isDrawerOpen) {\r\n      setSearchResults([]);\r\n      dispatch(setLoading(false));\r\n      setSearchQuery(\"\");\r\n    }\r\n  }, [isDrawerOpen]);\r\n\r\n  const handleClose = () => {\r\n    setIsDrawerOpen(false);\r\n  };\r\n\r\n  // Debouncing fetchUsers method to limit the no. of API calls\r\n  const searchUsers = debounce(async (e) => {\r\n    const query = e.target?.value?.trim();\r\n    setSearchQuery(query);\r\n    if (!query) return setSearchResults([]);\r\n\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`/api/user?search=${query}`, config);\r\n\r\n      dispatch(setLoading(false));\r\n      setSearchResults(data);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Users\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-left\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  }, 800);\r\n\r\n  // Create/Retreive chat when a user item is clicked\r\n  const createOrRetrieveChat = async (userId) => {\r\n    handleClose();\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\r\n\r\n      dispatch(setLoading(false));\r\n      dispatch(setSelectedChat(data));\r\n      setFetchMsgs(true);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Create/Retrieve Chat\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        PaperProps={{\r\n          sx: {\r\n            borderTopRightRadius: 10,\r\n            borderBottomRightRadius: 10,\r\n            backgroundImage: \"linear-gradient(0deg,#222,#444)\",\r\n            padding: \"10px\",\r\n            width: \"350px\",\r\n          },\r\n        }}\r\n        anchor=\"left\"\r\n        open={isDrawerOpen}\r\n        onClose={handleClose}\r\n        transitionDuration={350}\r\n      >\r\n        <div className=\"d-flex justify-content-center\">\r\n          <span\r\n            className=\"text-center h2 mt-1 user-select-none text-light\"\r\n            style={{ marginTop: \"0px\" }}\r\n          >\r\n            Search Users\r\n            <IconButton\r\n              onClick={handleClose}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: 8,\r\n                top: 5,\r\n                color: \"#999999\",\r\n                \":hover\": {\r\n                  backgroundColor: \"#aaaaaa20\",\r\n                },\r\n              }}\r\n            >\r\n              <ChevronLeft className=\"text-light m-1\" />\r\n            </IconButton>\r\n          </span>\r\n        </div>\r\n        {/* Search Bar */}\r\n        <SearchInput\r\n          ref={searchUserInput}\r\n          searchHandler={searchUsers}\r\n          autoFocus={true}\r\n          placeholder=\"Search by Name or Email\"\r\n          clearInput={() => {\r\n            setSearchQuery(\"\");\r\n            setSearchResults([]);\r\n            searchUserInput.current.focus();\r\n          }}\r\n        />\r\n        {/* Search Results */}\r\n        <section\r\n          className=\"position-relative mx-1 my-2 h-100\"\r\n          style={{ overflowY: \"auto\", overflowX: \"hidden\" }}\r\n        >\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={(e) => {\r\n              const userId = e.target.dataset.user;\r\n              if (!userId) return;\r\n              createOrRetrieveChat(userId);\r\n            }}\r\n          >\r\n            {loading ? (\r\n              <LoadingList listOf=\"User\" dpRadius={\"42px\"} count={8} />\r\n            ) : searchResults.length > 0 ? (\r\n              searchResults.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  truncateValues={[27, 24]}\r\n                />\r\n              ))\r\n            ) : searchQuery && !loading ? (\r\n              <p className=\"text-light text-center fs-5 mt-3 mx-5\">\r\n                No results found for '\r\n                <span className=\"text-info\">\r\n                  {truncateString(searchQuery, 30, 26)}\r\n                </span>\r\n                '\r\n              </p>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        </section>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchUsersDrawer;\r\n","import { Notifications, Search } from \"@mui/icons-material\";\r\nimport { Avatar, IconButton } from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport NotificationsMenu from \"./menus/NotificationsMenu\";\r\nimport ProfileSettingsMenu from \"./menus/ProfileSettingsMenu\";\r\nimport SearchUsersDrawer from \"./utils/SearchUsersDrawer\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport animationData from \"../animations/chat-gif.json\";\r\nimport LottieAnimation from \"./utils/LottieAnimation\";\r\nimport io from \"socket.io-client\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../store/slices/AppSlice\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#777\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  backgroundColor: \"#777\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ChatpageHeader = ({ setFetchMsgs, setDialogBody }) => {\r\n  const { loggedInUser, clientSocket } = useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n  const appGif = useRef();\r\n\r\n  const [notificationsMenuAnchor, setNotificationsMenuAnchor] = useState(null);\r\n  const [profileSettingsMenuAnchor, setProfileSettingsMenuAnchor] =\r\n    useState(null);\r\n\r\n  const openNotificationMenu = (e) => {\r\n    setNotificationsMenuAnchor(e.target);\r\n  };\r\n\r\n  const openProfileSettingsMenu = (e) => {\r\n    setProfileSettingsMenuAnchor(e.target);\r\n  };\r\n\r\n  // For opening/closing 'search users' left drawer\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n\r\n  return (\r\n    <header\r\n      className={`chatpageDiv d-flex justify-content-between align-items-center user-select-none`}\r\n    >\r\n      {/* Search Users to create/access chat */}\r\n      <CustomTooltip\r\n        title=\"Search Users to Start or Open a Chat\"\r\n        placement=\"bottom-start\"\r\n        arrow\r\n      >\r\n        <button\r\n          style={{ borderRadius: \"20px\" }}\r\n          className={`btn btn-outline-secondary text-light px-3`}\r\n          onClick={() => setIsDrawerOpen(true)}\r\n        >\r\n          <Search className={`me-1`} />\r\n          <span className={`d-none d-md-inline mb-1 fs-5`}>Search Users</span>\r\n        </button>\r\n      </CustomTooltip>\r\n      <SearchUsersDrawer\r\n        setFetchMsgs={setFetchMsgs}\r\n        isDrawerOpen={isDrawerOpen}\r\n        setIsDrawerOpen={setIsDrawerOpen}\r\n      />\r\n\r\n      {/* App Logo */}\r\n      <div className={`d-flex align-items-center ms-3 ms-md-0`}>\r\n        <LottieAnimation\r\n          ref={appGif}\r\n          className={\"d-none d-sm-inline-block mt-2 me-sm-1 me-md-2\"}\r\n          style={{ width: \"35px\", height: \"35px\" }}\r\n          animationData={animationData}\r\n        />\r\n        <span style={{ color: \"orange\" }} className=\"fs-3 fw-bold mt-1\">\r\n          CHAT ZONED\r\n        </span>\r\n      </div>\r\n\r\n      {/* User notification and profile settings icons */}\r\n      <div>\r\n        <CustomTooltip title=\"Notifications\" placement=\"bottom-end\" arrow>\r\n          <IconButton\r\n            onClick={openNotificationMenu}\r\n            sx={{\r\n              color: \"#999999\",\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n          >\r\n            <Notifications className={`text-light`} />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n        <CustomTooltip\r\n          title=\"Profile Settings\"\r\n          size=\"small\"\r\n          placement=\"bottom-end\"\r\n          arrow\r\n        >\r\n          <IconButton\r\n            className=\"mx-md-3 mx-lg-4\"\r\n            sx={{\r\n              color: \"#999999\",\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n            onClick={openProfileSettingsMenu}\r\n          >\r\n            <Avatar\r\n              alt=\"LoggedInUser\"\r\n              className=\"img-fluid\"\r\n              src={loggedInUser?.profilePic}\r\n            />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n        <NotificationsMenu\r\n          anchor={notificationsMenuAnchor}\r\n          setAnchor={setNotificationsMenuAnchor}\r\n        />\r\n        <ProfileSettingsMenu\r\n          anchor={profileSettingsMenuAnchor}\r\n          setAnchor={setProfileSettingsMenuAnchor}\r\n          setDialogBody={setDialogBody}\r\n        />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default ChatpageHeader;\r\n","import { useRef, useState } from \"react\";\r\nimport { Edit, KeyboardDoubleArrowLeft } from \"@mui/icons-material\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport { isImageFile } from \"../../utils/appUtils\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport axios from \"../../utils/axios\";\r\nimport { Button, CircularProgress, DialogActions } from \"@mui/material\";\r\nimport { btnCustomStyle, btnHoverStyle } from \"../utils/CustomDialog\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  toggleRefresh,\r\n} from \"../../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#111\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\nconst DEFAULT_GROUP_DP = process.env.REACT_APP_DEFAULT_GROUP_DP;\r\n\r\nconst NewGroupBody = ({ closeChildDialog }) => {\r\n  const { loggedInUser, refresh, groupInfo } = useSelector(selectAppState);\r\n  const {\r\n    loading,\r\n    disableIfLoading,\r\n    formFieldClassName,\r\n    inputFieldClassName,\r\n    formLabelClassName,\r\n  } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n\r\n  const { chatDisplayPicUrl, chatName } = groupInfo;\r\n  const [editGroupDpMenuAnchor, setEditGroupDpMenuAnchor] = useState(null);\r\n  const imgInput = useRef();\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") {\r\n      e.target.click();\r\n    }\r\n  };\r\n\r\n  // Create group chat\r\n  const createGroupChat = async () => {\r\n    if (!groupInfo) return;\r\n    const { chatDisplayPic, chatName, users } = groupInfo;\r\n\r\n    if (!chatName) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Enter a Group Name\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    if (users?.length < 2) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Add Atleast 2 Members\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    dispatch(setLoading(true));\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"displayPic\", chatDisplayPic);\r\n      formData.append(\"chatName\", chatName);\r\n      formData.append(\"users\", JSON.stringify(users?.map((user) => user?._id)));\r\n\r\n      await axios.post(\"/api/chat/group\", formData, config);\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Group Created Successfully\",\r\n          type: \"success\",\r\n          duration: 2000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      dispatch(toggleRefresh(!refresh));\r\n      closeChildDialog();\r\n      // Close Parent Dialog as well\r\n      dispatch(hideDialog());\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Create Group\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleImgInputChange = (e) => {\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n\r\n    if (!isImageFile(image.name)) {\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Invalid Image File\",\r\n          message: \"Please Select an Image File (png/jpg/jpeg/svg)\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    if (image.size >= 2097152) {\r\n      imgInput.current.value = \"\";\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Select an Image Smaller than 2 MB\",\r\n          type: \"warning\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    dispatch(\r\n      setGroupInfo({\r\n        ...groupInfo,\r\n        chatDisplayPic: image,\r\n        chatDisplayPicUrl: URL.createObjectURL(image),\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleReset = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      setGroupInfo({\r\n        ...groupInfo,\r\n        chatDisplayPic: null,\r\n        chatDisplayPicUrl: DEFAULT_GROUP_DP,\r\n      })\r\n    );\r\n    imgInput.current.value = \"\";\r\n  };\r\n\r\n  const openEditGroupDpMenu = (e) => {\r\n    setEditGroupDpMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Select Display Pic */}\r\n      <section className=\"newGroup d-flex position-relative mb-4\">\r\n        <img\r\n          className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n          src={chatDisplayPicUrl}\r\n          alt=\"displayPic\"\r\n        />\r\n        <CustomTooltip title=\"Edit Group Display Pic\" placement=\"right\" arrow>\r\n          <i\r\n            id=\"editGroupDPTooltip\"\r\n            tabIndex={2}\r\n            onKeyDown={clickOnKeydown}\r\n            className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n            onClick={openEditGroupDpMenu}\r\n          >\r\n            <Edit className=\"text-light fs-6\" />\r\n          </i>\r\n        </CustomTooltip>\r\n        {/* Edit/Delete profile pic menu */}\r\n        <EditPicMenu\r\n          anchor={editGroupDpMenuAnchor}\r\n          setAnchor={setEditGroupDpMenuAnchor}\r\n          selectProfilePic={() => imgInput.current.click()}\r\n          openDeletePhotoConfirmDialog={handleReset}\r\n          deletePhotoCondition={\r\n            !chatDisplayPicUrl?.endsWith(\"group_mbuvht.png\")\r\n          }\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          accept=\".png, .jpg, .jpeg, .svg\"\r\n          onChange={handleImgInputChange}\r\n          name=\"groupdp\"\r\n          id=\"editGroupDp\"\r\n          ref={imgInput}\r\n          className={`d-none`}\r\n          disabled={loading}\r\n        />\r\n      </section>\r\n      {/* Group Name input */}\r\n      <section className={`${formFieldClassName}`}>\r\n        <label htmlFor=\"groupName\" className={`${formLabelClassName}`}>\r\n          Group Name <span className=\"required\">*</span>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={chatName}\r\n          onChange={(e) => {\r\n            dispatch(setGroupInfo({ ...groupInfo, chatName: e.target.value }));\r\n          }}\r\n          required\r\n          autoFocus\r\n          name=\"groupname\"\r\n          id=\"groupName\"\r\n          className={`${inputFieldClassName}`}\r\n          disabled={loading}\r\n          placeholder=\"Eg: The Avengers\"\r\n        />\r\n      </section>\r\n      <DialogActions className=\"mt-3\" style={{ marginBottom: \"-17px\" }}>\r\n        <Button\r\n          sx={btnHoverStyle}\r\n          disabled={loading}\r\n          style={btnCustomStyle}\r\n          onClick={closeChildDialog}\r\n        >\r\n          <span>\r\n            <KeyboardDoubleArrowLeft\r\n              className=\"btnArrowIcons\"\r\n              style={{\r\n                margin: \"0px 5px 2px 0px\",\r\n              }}\r\n            />\r\n            Back\r\n          </span>\r\n        </Button>\r\n        <Button\r\n          sx={btnHoverStyle}\r\n          disabled={loading}\r\n          style={btnCustomStyle}\r\n          onClick={createGroupChat}\r\n        >\r\n          {loading ? (\r\n            <>\r\n              <CircularProgress size={25} style={{ marginRight: \"10px\" }} />\r\n              <span>Creating...</span>\r\n            </>\r\n          ) : (\r\n            <>Create Group</>\r\n          )}\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewGroupBody;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport {} from \"@mui/icons-material\";\r\nimport { Avatar, Chip } from \"@mui/material\";\r\nimport axios from \"../../utils/axios\";\r\nimport { debounce, truncateString } from \"../../utils/appUtils\";\r\nimport UserListItem from \"../utils/UserListItem\";\r\nimport SearchInput from \"../utils/SearchInput\";\r\nimport NewGroupBody from \"./NewGroupBody\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport LoadingList from \"../utils/LoadingList\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectAppState, setGroupInfo } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { setDialogAction } from \"../../store/slices/CustomDialogSlice\";\r\n\r\nconst AddMembersToGroup = ({ getAddedMembers, forCreateGroup }) => {\r\n  const { loggedInUser, groupInfo } = useSelector(selectAppState);\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const dispatch = useDispatch();\r\n\r\n  const [groupData, setGroupData] = useState(groupInfo);\r\n  const [fetching, setFetching] = useState(false);\r\n  const groupMembers = groupData?.users;\r\n  const [isMemberSelected, setIsMemberSelected] = useState(false);\r\n  const [addedMembers, setAddedMembers] = useState([]);\r\n\r\n  const searchUserInput = useRef(null);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const { setChildDialogBody, displayChildDialog, closeChildDialog } =\r\n    childDialogMethods;\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setGroupData(groupInfo);\r\n  }, [groupInfo]);\r\n\r\n  // For 'create group chat'\r\n  const openNewGroupDialog = () => {\r\n    if (addedMembers?.length < 2) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Add Atleast 2 Members\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(false);\r\n    dispatch(setGroupInfo(groupData));\r\n    setChildDialogBody(<NewGroupBody closeChildDialog={closeChildDialog} />);\r\n    displayChildDialog({\r\n      title: \"Create New Group\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSearchResults([]);\r\n    setSearchQuery(\"\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // For create group: [Next >>] button\r\n    if (forCreateGroup) dispatch(setDialogAction(openNewGroupDialog));\r\n  }, [groupData]);\r\n\r\n  useEffect(() => {\r\n    // For add more group members\r\n    if (!forCreateGroup) getAddedMembers([...addedMembers]);\r\n  }, [addedMembers]);\r\n\r\n  const searchUsers = debounce(async (e) => {\r\n    const query = e.target?.value?.trim();\r\n    setSearchQuery(query);\r\n    if (!query) return setSearchResults([]);\r\n\r\n    setFetching(true);\r\n    if (isMemberSelected) setIsMemberSelected(false);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n    try {\r\n      const { data } = await axios.get(`/api/user?search=${query}`, config);\r\n\r\n      // Remove all the already added members from search results\r\n      let membersNotAdded = [...data];\r\n      groupMembers.forEach((addedMember) => {\r\n        membersNotAdded = membersNotAdded.filter(\r\n          (m) => m._id !== addedMember._id\r\n        );\r\n      });\r\n\r\n      setFetching(false);\r\n      setSearchResults(membersNotAdded);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Users\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-left\",\r\n        })\r\n      );\r\n      setFetching(false);\r\n    }\r\n  }, 800);\r\n\r\n  const unselectUser = (user) => {\r\n    if (!user) return;\r\n    setGroupData({\r\n      ...groupData,\r\n      users: groupMembers.filter((u) => u._id !== user._id),\r\n    });\r\n    // Remove user from added member list\r\n    setAddedMembers(addedMembers.filter((u) => u._id !== user._id));\r\n    // Add removed user to search result list\r\n    setSearchResults([user, ...searchResults]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"addGroupMembers d-flex flex-column\">\r\n      {/* Selected Users tag list */}\r\n      <section\r\n        className=\"mx-auto px-3 py-2 overflow-auto d-flex flex-wrap\"\r\n        style={{\r\n          flex: \"0.33\",\r\n          borderRadius: \"15px\",\r\n          backgroundColor: \"#303030\",\r\n        }}\r\n      >\r\n        {addedMembers?.map((user) => (\r\n          <Chip\r\n            key={user?._id}\r\n            className=\"userChip text-light bg-success rounded-pill fs-6\"\r\n            avatar={\r\n              <Avatar\r\n                className=\"userChipAvatar\"\r\n                alt={user?.name}\r\n                src={user?.profilePic}\r\n              />\r\n            }\r\n            label={truncateString(user?.name?.split(\" \")[0], 12, 8)}\r\n            onDelete={() => unselectUser(user)}\r\n          />\r\n        ))}\r\n      </section>\r\n      {/* Search Bar */}\r\n      <SearchInput\r\n        ref={searchUserInput}\r\n        searchHandler={searchUsers}\r\n        autoFocus={true}\r\n        placeholder=\"Search Members\"\r\n        clearInput={() => {\r\n          setSearchQuery(\"\");\r\n          setSearchResults([]);\r\n          searchUserInput.current.focus();\r\n        }}\r\n      />\r\n      {/* Search Results */}\r\n      <section\r\n        className=\"position-relative mx-auto mt-2 overflow-auto\"\r\n        style={{ flex: \"1\", marginBottom: \"-10px\" }}\r\n      >\r\n        <div\r\n          // 'Event delegation' (add only one event listener for\r\n          // parent element instead of adding for each child element)\r\n          onClick={(e) => {\r\n            const userId = e.target.dataset.user;\r\n            if (!userId) return;\r\n\r\n            if (!isMemberSelected) setIsMemberSelected(true);\r\n            // Add selected user to tag list\r\n            const selectedUser = searchResults.find((u) => u._id === userId);\r\n            setGroupData({\r\n              ...groupData,\r\n              users: [...groupMembers, selectedUser],\r\n            });\r\n            // Add selected user to added member list\r\n            setAddedMembers([...addedMembers, selectedUser]);\r\n            // Remove selected user from search result list\r\n            setSearchResults(searchResults.filter((u) => u._id !== userId));\r\n          }}\r\n        >\r\n          {fetching ? (\r\n            <LoadingList listOf=\"Member\" dpRadius={\"43px\"} count={6} />\r\n          ) : searchResults.length > 0 ? (\r\n            searchResults.map((user) => (\r\n              <UserListItem\r\n                key={user._id}\r\n                user={user}\r\n                truncateValues={[21, 18]}\r\n              />\r\n            ))\r\n          ) : (\r\n            searchQuery &&\r\n            !fetching && (\r\n              <p className=\"text-light text-center fs-5 mt-3 mx-5\">\r\n                {isMemberSelected ? \"No Other Users \" : \"No Results \"}\r\n                Found for '\r\n                <span className=\"text-info\">\r\n                  {truncateString(searchQuery, 25, 22)}\r\n                </span>\r\n                '\r\n              </p>\r\n            )\r\n          )}\r\n        </div>\r\n      </section>\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMembersToGroup;\r\n","import {\r\n  Article,\r\n  AudioFile,\r\n  DoneAll,\r\n  GifBox,\r\n  Image,\r\n  PictureAsPdf,\r\n  VideoFile,\r\n} from \"@mui/icons-material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport {\r\n  dateStringOf,\r\n  isImageFile,\r\n  msgDateStringOf,\r\n  msgTimeStringOf,\r\n  truncateString,\r\n} from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#E6480C\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  borderRadius: 5,\r\n  backgroundColor: \"#E6480C\",\r\n};\r\n\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ChatListItem = ({ chat }) => {\r\n  const { selectedChat, loggedInUser } = useSelector(selectAppState);\r\n  const {\r\n    _id,\r\n    chatName,\r\n    receiverEmail,\r\n    isGroupChat,\r\n    lastMessage,\r\n    chatDisplayPic,\r\n  } = chat;\r\n\r\n  const tooltipTitle = isGroupChat\r\n    ? `Group: ${chatName}\\n(${chat?.users?.length} Members)`\r\n    : `${chatName}\\n${receiverEmail}`;\r\n\r\n  const lastMsgContent = lastMessage?.content\r\n    ?.replaceAll(\"<br>\", \"\\n\")\r\n    .replaceAll(\"&nbsp;\", \" \")\r\n    .replaceAll(\"<div>\", \"\\n\")\r\n    .replaceAll(\"</div>\", \"\\n\")\r\n    .replaceAll(\"<span>\", \"\")\r\n    .replaceAll(\"</span>\", \"\");\r\n\r\n  const lastMsgDate = new Date(lastMessage?.createdAt);\r\n  const lastMsgDateString = msgDateStringOf(lastMsgDate);\r\n\r\n  const lastMsgFile = lastMessage?.fileUrl;\r\n  const lastMsgFileName = lastMessage?.file_name?.split(\"===\")[0];\r\n  let lastMsgFileType;\r\n\r\n  if (lastMsgFile) {\r\n    lastMsgFileType = isImageFile(lastMsgFile)\r\n      ? \"image\"\r\n      : /(\\.gif)$/.test(lastMsgFile)\r\n      ? \"gif\"\r\n      : /(\\.mp4|\\.webm)$/.test(lastMsgFile)\r\n      ? \"video\"\r\n      : /(\\.mp3|\\.wav)$/.test(lastMsgFile)\r\n      ? \"audio\"\r\n      : /(\\.pdf)$/.test(lastMsgFile)\r\n      ? \"pdf\"\r\n      : \"otherFile\";\r\n  }\r\n  return (\r\n    <div\r\n      data-chat={_id}\r\n      className={`chatListItem user-select-none text-light pointer ${\r\n        selectedChat?._id === _id ? \"isSelected\" : \"\"\r\n      } d-flex justify-content-start align-items-center`}\r\n    >\r\n      {/* Chat Display Pic */}\r\n      <CustomTooltip\r\n        title={`View ${isGroupChat ? \"Group DP\" : \"Profile Pic\"}`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <img\r\n          src={chatDisplayPic}\r\n          alt={chatName}\r\n          data-chat={_id}\r\n          className={`img-fluid listItemAvatar chatListAvatar rounded-circle`}\r\n        />\r\n      </CustomTooltip>\r\n      {/* Chat Data */}\r\n      <div\r\n        data-chat={_id}\r\n        className=\"chatListData d-flex flex-column align-items-start px-2\"\r\n      >\r\n        {/* Chat Name */}\r\n        <p\r\n          data-chat={_id}\r\n          title={tooltipTitle}\r\n          className=\"chatListName fs-5 fw-bold text-info\"\r\n        >\r\n          {truncateString(chatName, 23, 20)}\r\n        </p>\r\n        {lastMessage && (\r\n          <span className=\"lastMsgDate\">\r\n            {lastMsgDateString === \"Today\"\r\n              ? msgTimeStringOf(lastMsgDate)\r\n              : lastMsgDateString !== \"Yesterday\"\r\n              ? dateStringOf(lastMsgDate)\r\n              : \"Yesterday\"}\r\n          </span>\r\n        )}\r\n        {/* Last Message Data */}\r\n        {(lastMessage || lastMessage === null || isGroupChat) && (\r\n          <p data-chat={_id} className=\"chatListLastMessage\">\r\n            <span data-chat={_id} className=\"text-warning\">\r\n              <>\r\n                {lastMessage === null ||\r\n                (isGroupChat && !lastMessage) ||\r\n                (!isGroupChat &&\r\n                  lastMessage?.sender?._id !== loggedInUser?._id) ? (\r\n                  \"\"\r\n                ) : lastMessage?.sender?._id === loggedInUser?._id ? (\r\n                  <>\r\n                    {isGroupChat ? (\r\n                      <>You: </>\r\n                    ) : (\r\n                      <DoneAll\r\n                        className=\"me-1 fs-5\"\r\n                        style={{ color: \"lightblue\" }}\r\n                      />\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  truncateString(\r\n                    lastMessage?.sender?.name?.split(\" \")[0],\r\n                    12,\r\n                    8\r\n                  ) + \": \"\r\n                )}\r\n              </>\r\n            </span>\r\n            {lastMsgFile ? (\r\n              <span data-chat={_id}>\r\n                {lastMsgFileType === \"image\" ? (\r\n                  <span data-chat={_id} title={lastMsgFileName}>\r\n                    <Image className=\"fileIcon\" />{\" \"}\r\n                    {truncateString(lastMsgContent, 25, 22) || \"Photo\"}\r\n                  </span>\r\n                ) : lastMsgFileType === \"gif\" ? (\r\n                  <span data-chat={_id} title={lastMsgFileName}>\r\n                    <GifBox className=\"fileIcon\" />{\" \"}\r\n                    {truncateString(lastMsgContent, 25, 22) || \"Gif\"}\r\n                  </span>\r\n                ) : lastMsgFileType === \"video\" ? (\r\n                  <span data-chat={_id} title={lastMsgFileName}>\r\n                    <VideoFile className=\"fileIcon\" />{\" \"}\r\n                    {truncateString(lastMsgContent, 25, 22) || \"Video\"}\r\n                  </span>\r\n                ) : lastMsgFileType === \"audio\" ? (\r\n                  <span data-chat={_id} title={lastMsgFileName}>\r\n                    <AudioFile className=\"fileIcon\" />{\" \"}\r\n                    {truncateString(lastMsgContent, 25, 22) || \"Audio\"}\r\n                  </span>\r\n                ) : lastMsgFileType === \"pdf\" ? (\r\n                  <span data-chat={_id} title={lastMsgFileName}>\r\n                    <PictureAsPdf className=\"fileIcon\" />{\" \"}\r\n                    {truncateString(lastMsgFileName, 22, 19) || \"Pdf\"}\r\n                  </span>\r\n                ) : (\r\n                  <span data-chat={_id} title={lastMsgFileName}>\r\n                    <Article className=\"fileIcon\" />{\" \"}\r\n                    {truncateString(lastMsgFileName, 22, 19) || \"File\"}\r\n                  </span>\r\n                )}\r\n              </span>\r\n            ) : (\r\n              <span data-chat={_id} title={lastMsgContent}>\r\n                {lastMessage === null\r\n                  ? \" Last Message was deleted\"\r\n                  : isGroupChat && !lastMessage\r\n                  ? `New Group Created`\r\n                  : truncateString(lastMsgContent, 25, 22)}\r\n              </span>\r\n            )}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListItem;\r\n","const FILE_STYLES = { width: \"90vw\", height: \"82vh\" };\r\nconst PLACEHOLDER_IMG = process.env.REACT_APP_PLACEHOLDER_IMG_URL;\r\n\r\nconst FullSizeImage = ({ event, audioSrc, videoSrc }) => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      {audioSrc ? (\r\n        <audio src={audioSrc} style={FILE_STYLES} controls>\r\n          Your browser does not support the audio tag.\r\n        </audio>\r\n      ) : videoSrc ? (\r\n        <video src={videoSrc} style={FILE_STYLES} controls>\r\n          Your browser does not support the video tag.\r\n        </video>\r\n      ) : (\r\n        <img\r\n          src={event.target?.src || PLACEHOLDER_IMG}\r\n          alt={event.target?.alt || \"fullSizeImg\"}\r\n          className=\"img-fluid d-inline-block mx-auto\"\r\n          style={{ ...FILE_STYLES, objectFit: \"contain\" }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullSizeImage;\r\n","import { GroupAdd } from \"@mui/icons-material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { debounce, getOneOnOneChatReceiver } from \"../utils/appUtils\";\r\nimport axios from \"../utils/axios\";\r\nimport AddMembersToGroup from \"./dialogs/AddMembersToGroup\";\r\nimport ChatListItem from \"./utils/ChatListItem\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport FullSizeImage from \"./utils/FullSizeImage\";\r\nimport LoadingList from \"./utils/LoadingList\";\r\nimport SearchInput from \"./utils/SearchInput\";\r\nimport io from \"socket.io-client\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n} from \"../store/slices/AppSlice\";\r\nimport {\r\n  displayDialog,\r\n  setShowDialogActions,\r\n} from \"../store/slices/CustomDialogSlice\";\r\nimport { displayToast } from \"../store/slices/ToastSlice\";\r\n\r\nconst DEFAULT_GROUP_DP = process.env.REACT_APP_DEFAULT_GROUP_DP;\r\n\r\nconst arrowStyles = {\r\n  color: \"#777\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 16,\r\n  backgroundColor: \"#777\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ChatListView = ({ loadingMsgs, setFetchMsgs, setDialogBody }) => {\r\n  const { loggedInUser, selectedChat, refresh, clientSocket } =\r\n    useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n\r\n  const [chats, setChats] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filteredChats, setFilteredChats] = useState(chats);\r\n  const searchChatInput = useRef();\r\n\r\n  const openCreateGroupChatDialog = () => {\r\n    dispatch(\r\n      setGroupInfo({\r\n        chatDisplayPic: null,\r\n        chatDisplayPicUrl: DEFAULT_GROUP_DP,\r\n        chatName: \"\",\r\n        users: [],\r\n      })\r\n    );\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<AddMembersToGroup forCreateGroup={true} />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Add Group Members\",\r\n        nolabel: \"Cancel\",\r\n        yeslabel: \"Next\",\r\n        action: null,\r\n      })\r\n    );\r\n  };\r\n\r\n  const displayFullSizeImage = (e) => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<FullSizeImage event={e} />);\r\n    dispatch(\r\n      displayDialog({\r\n        isFullScreen: true,\r\n        title: e.target?.alt || \"Display Pic\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const fetchChats = async () => {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${loggedInUser?.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`/api/chat`, config);\r\n\r\n      const mappedChats = data.map((chat) => {\r\n        const { isGroupChat, users } = chat;\r\n\r\n        if (!isGroupChat) {\r\n          const receiver = getOneOnOneChatReceiver(loggedInUser, users);\r\n          return {\r\n            ...chat,\r\n            chatName: receiver?.name,\r\n            receiverEmail: receiver?.email,\r\n            chatDisplayPic: receiver?.profilePic,\r\n          };\r\n        }\r\n        return chat;\r\n      });\r\n      setChats(mappedChats);\r\n      setFilteredChats(mappedChats);\r\n      if (loading) setLoading(false);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Chats\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      if (loading) setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Debouncing filterChats method to limit the no. of fn calls\r\n  const searchChats = debounce((e) => {\r\n    const chatNameInput = e.target?.value?.toLowerCase().trim();\r\n    if (!chatNameInput) {\r\n      return setFilteredChats(chats);\r\n    }\r\n    setFilteredChats(\r\n      chats.filter((chat) =>\r\n        chat?.chatName?.toLowerCase().includes(chatNameInput)\r\n      )\r\n    );\r\n  }, 600);\r\n\r\n  useEffect(() => {\r\n    fetchChats();\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <div\r\n      className={`chatpageDiv chatpageView chatListView text-light ${\r\n        selectedChat ? \"d-none d-md-flex\" : \"d-flex\"\r\n      } flex-column user-select-none col-md-5 col-lg-4 mx-1 p-2`}\r\n      style={{ pointerEvents: loadingMsgs ? \"none\" : \"auto\" }}\r\n    >\r\n      <section className=\"position-relative\">\r\n        <p className=\"chatListHeader fw-bold fs-3 rounded-pill bg-info bg-opacity-10 py-2\">\r\n          CHATS\r\n          {/* Create Group Chat */}\r\n          <CustomTooltip\r\n            title=\"Create New Group Chat\"\r\n            placement=\"bottom-end\"\r\n            arrow\r\n          >\r\n            <button\r\n              className={`btnCreateGroup pointer btn btn-outline-secondary text-light px-3`}\r\n              onClick={openCreateGroupChatDialog}\r\n            >\r\n              <GroupAdd />\r\n            </button>\r\n          </CustomTooltip>\r\n        </p>\r\n      </section>\r\n      {/* Search Bar */}\r\n      {chats?.length > 0 && (\r\n        <section className=\"searchChat\">\r\n          <SearchInput\r\n            ref={searchChatInput}\r\n            searchHandler={searchChats}\r\n            autoFocus={false}\r\n            placeholder=\"Search Chat\"\r\n            clearInput={() => setFilteredChats(chats)}\r\n          />\r\n        </section>\r\n      )}\r\n      {/* Chat list */}\r\n      <section className=\"chatList m-1 p-1 overflow-auto position-relative\">\r\n        {loading ? (\r\n          <LoadingList listOf=\"Chat\" dpRadius={\"49px\"} count={8} />\r\n        ) : filteredChats?.length > 0 ? (\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={(e) => {\r\n              const chatId = e.target?.dataset?.chat;\r\n              if (!chatId) return;\r\n\r\n              if (e.target?.className?.includes(\"chatListAvatar\")) {\r\n                return displayFullSizeImage(e);\r\n              }\r\n              const clickedChat = filteredChats.find(\r\n                (chat) => chat._id === chatId\r\n              );\r\n              if (clickedChat._id === selectedChat?._id) return;\r\n              dispatch(setSelectedChat(clickedChat));\r\n              setFetchMsgs(true); // To fetch selected chat msgs\r\n              if (clickedChat?.isGroupChat) dispatch(setGroupInfo(clickedChat));\r\n            }}\r\n          >\r\n            {filteredChats\r\n              .filter(\r\n                (chat) => chat.lastMessage !== undefined || chat.isGroupChat\r\n              )\r\n              .map((chat) => (\r\n                <ChatListItem key={chat._id} chat={chat} />\r\n              ))}\r\n          </div>\r\n        ) : (\r\n          <span className=\"d-inline-block w-100 text-light h4 mt-5 mx-auto\">\r\n            No Chats Found\r\n          </span>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListView;\r\n","import { getOneOnOneChatReceiver, truncateString } from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nconst arrowStyles = {\r\n  color: \"#111\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ViewProfileBody = ({ memberProfilePic, memberName, memberEmail }) => {\r\n  const { loggedInUser, selectedChat } = useSelector(selectAppState);\r\n  let name, email, profilePic;\r\n\r\n  if (memberProfilePic && memberName && memberEmail) {\r\n    name = memberName;\r\n    email = memberEmail;\r\n    profilePic = memberProfilePic;\r\n  } else {\r\n    const receiver = getOneOnOneChatReceiver(loggedInUser, selectedChat?.users);\r\n    name = receiver?.name;\r\n    email = receiver?.email;\r\n    profilePic = receiver?.profilePic;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* View Profile Pic */}\r\n      <section className=\"dialogField d-flex position-relative mb-4\">\r\n        <img\r\n          className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n          id=\"view_profilePic\"\r\n          src={profilePic}\r\n          alt={name}\r\n        />\r\n      </section>\r\n      {/* View Name */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-15px\" }}>\r\n          <CustomTooltip\r\n            title={name?.length > 20 ? name : \"\"}\r\n            placement=\"top\"\r\n            arrow\r\n          >\r\n            <div\r\n              className=\"w-100 h1 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"35px\" }}\r\n            >\r\n              {truncateString(name, 25, 21)}\r\n            </div>\r\n          </CustomTooltip>\r\n        </div>\r\n      </section>\r\n      {/* View Email */}\r\n      <section\r\n        className={`dialogField text-center mb-2`}\r\n        style={{ marginTop: \"-10px\" }}\r\n      >\r\n        <CustomTooltip\r\n          title={email?.length > 20 ? email : \"\"}\r\n          placement=\"bottom\"\r\n          arrow\r\n        >\r\n          <span className=\"h4\" style={{ color: \"lightblue\" }}>\r\n            {truncateString(email, 25, 21)}\r\n          </span>\r\n        </CustomTooltip>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewProfileBody;\r\n","import { KeyboardArrowDown } from \"@mui/icons-material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#E6480C\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  borderRadius: 10,\r\n  backgroundColor: \"#E6480C\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst GroupMemberItem = ({ user, truncateValues }) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const { _id, name, email, profilePic } = user;\r\n  const [max, index] = truncateValues;\r\n  const isLoggedInUser = _id === loggedInUser?._id;\r\n\r\n  return (\r\n    <div\r\n      data-user={_id}\r\n      className={`groupMemberItem position-relative user-select-none d-flex text-light justify-content-start align-items-center px-3 ${\r\n        !isLoggedInUser && \"pointer\"\r\n      }`}\r\n    >\r\n      {user?.isGroupAdmin && (\r\n        <span\r\n          className={`adminBadge position-absolute fw-light badge rounded-3 bg-success`}\r\n          style={{ cursor: \"auto\" }}\r\n        >\r\n          Admin\r\n        </span>\r\n      )}\r\n      {!isLoggedInUser && (\r\n        <span\r\n          data-user={_id}\r\n          className=\"memberSettingsIcon text-light position-absolute rounded-circle\"\r\n        >\r\n          <KeyboardArrowDown data-user={_id} />\r\n        </span>\r\n      )}\r\n      <CustomTooltip\r\n        data-user={_id}\r\n        title={`${isLoggedInUser ? \"\" : `${name} (${email})`}`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <img\r\n          src={profilePic}\r\n          alt={_id}\r\n          data-user={_id}\r\n          className={`img-fluid listItemAvatar groupMemberAvatar rounded-circle`}\r\n        />\r\n      </CustomTooltip>\r\n      <div\r\n        data-user={_id}\r\n        className=\"groupMemberData d-flex flex-column align-items-start px-2\"\r\n      >\r\n        <p data-user={_id} className=\"groupMemberName fw-bold text-info\">\r\n          {isLoggedInUser ? \"You\" : truncateString(name, max, index)}\r\n        </p>\r\n        <p data-user={_id} className=\"groupMemberEmail\">\r\n          {truncateString(email, max, index)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupMemberItem;\r\n","import {\r\n  AdminPanelSettings,\r\n  GroupRemove,\r\n  InfoOutlined,\r\n  Message,\r\n} from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport axios from \"../../utils/axios\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport ViewProfileBody from \"../dialogs/ViewProfileBody\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n  toggleRefresh,\r\n} from \"../../store/slices/AppSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { setLoading } from \"../../store/slices/FormfieldSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\n\r\nconst MemberOptionsMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  clickedMember,\r\n  setShowDialogActions,\r\n  setShowDialogClose,\r\n  childDialogMethods,\r\n}) => {\r\n  const { loggedInUser, refresh, groupInfo } = useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n\r\n  const { setChildDialogBody, displayChildDialog } = childDialogMethods;\r\n  const isLoggedInUserGroupAdmin = groupInfo?.groupAdmins?.some(\r\n    (admin) => admin?._id === loggedInUser?._id\r\n  );\r\n  const clickedMemberName = truncateString(\r\n    clickedMember?.name?.split(\" \")[0],\r\n    12,\r\n    9\r\n  );\r\n  const styledMemberName = (\r\n    <span style={{ color: \"violet\", fontSize: \"22px\" }}>\r\n      {clickedMemberName}\r\n    </span>\r\n  );\r\n  const updateView = (data) => {\r\n    dispatch(toggleRefresh(!refresh));\r\n    dispatch(setSelectedChat(data));\r\n  };\r\n\r\n  // Create/Retreive chat when 'Message Member' is clicked\r\n  const openChat = async () => {\r\n    dispatch(hideDialog()); // Close all dialogs by closing parent dialog\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        `/api/chat`,\r\n        { userId: clickedMember?._id },\r\n        config\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Create/Retrieve Chat\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const openViewProfileDialog = () => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    setChildDialogBody(\r\n      <ViewProfileBody\r\n        memberProfilePic={clickedMember?.profilePic}\r\n        memberName={clickedMember?.name}\r\n        memberEmail={clickedMember?.email}\r\n      />\r\n    );\r\n    displayChildDialog({\r\n      title: \"View Profile\",\r\n    });\r\n  };\r\n\r\n  const makeGroupAdmin = async () => {\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        `/api/chat/group/make-admin`,\r\n        { userId: clickedMember?._id, chatId: groupInfo?._id },\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: `${clickedMemberName} is now a Group Admin`,\r\n          type: \"success\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setGroupInfo(data));\r\n      updateView(data);\r\n      dispatch(setLoading(false));\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Make Group Admin Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const dismissAsAdmin = async () => {\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/dismiss-admin`,\r\n        { userId: clickedMember?._id, chatId: groupInfo?._id },\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: `${clickedMemberName} is no longer a Group Admin`,\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      dispatch(setGroupInfo(data));\r\n      updateView(data);\r\n      return \"membersUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Dismiss As Group Admin Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  const removeFromGroup = async () => {\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/remove`,\r\n        {\r\n          userToBeRemoved: clickedMember?._id,\r\n          isGroupAdmin: clickedMember?.isGroupAdmin,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: `${clickedMemberName} removed from Group`,\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      dispatch(setGroupInfo(data));\r\n      updateView(data);\r\n      return \"membersUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Remove From Group Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  // Confirmation dialogs\r\n  const openDismissAsAdminConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>Are you sure you want to dismiss {styledMemberName} as group admin?</>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Dismiss As Admin\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: dismissAsAdmin,\r\n    });\r\n  };\r\n\r\n  const openRemoveFromGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>Are you sure you want to remove {styledMemberName} from this group?</>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Remove From Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: removeFromGroup,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      {/* Message X */}\r\n      <MenuItem sx={menuItemProps} onClick={openChat}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Message />\r\n        </ListItemIcon>\r\n        <MenuItemText>{`Message ${\r\n          clickedMemberName || \"Member\"\r\n        }`}</MenuItemText>\r\n      </MenuItem>\r\n      {/* View X */}\r\n      <MenuItem sx={menuItemProps} onClick={openViewProfileDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <InfoOutlined />\r\n        </ListItemIcon>\r\n        <MenuItemText>{`View ${clickedMemberName || \"Member\"}`}</MenuItemText>\r\n      </MenuItem>\r\n      {/* Make Group Admin / Dismiss as Admin */}\r\n      {isLoggedInUserGroupAdmin && (\r\n        <MenuItem\r\n          sx={menuItemProps}\r\n          onClick={\r\n            clickedMember?.isGroupAdmin\r\n              ? openDismissAsAdminConfirmDialog\r\n              : makeGroupAdmin\r\n          }\r\n        >\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <AdminPanelSettings />\r\n          </ListItemIcon>\r\n          <MenuItemText>\r\n            {clickedMember?.isGroupAdmin\r\n              ? \"Dismiss as Admin\"\r\n              : \"Make Group Admin\"}\r\n          </MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n      {/* Remove X */}\r\n      {isLoggedInUserGroupAdmin && (\r\n        <MenuItem sx={menuItemProps} onClick={openRemoveFromGroupConfirmDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <GroupRemove />\r\n          </ListItemIcon>\r\n          <MenuItemText>{`Remove ${\r\n            clickedMemberName || \"Member\"\r\n          }`}</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MemberOptionsMenu;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { debounce } from \"../../utils/appUtils\";\r\nimport SearchInput from \"../utils/SearchInput\";\r\nimport GroupMemberItem from \"../utils/GroupMemberItem\";\r\nimport MemberOptionsMenu from \"../menus/MemberOptionsMenu\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\n\r\nlet filteredMembersCache = [];\r\n\r\nconst ViewGroupMembers = () => {\r\n  const { loggedInUser, groupInfo } = useSelector(selectAppState);\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n  const groupMembers = groupInfo?.users;\r\n  const admins = groupInfo?.groupAdmins;\r\n  const [clickedMember, setClickedMember] = useState(null);\r\n  const [memberOptionsMenuAnchor, setMemberOptionsMenuAnchor] = useState(null);\r\n  // LoggedInUser and Group Admins should be at the top\r\n  const sortMembers = () => {\r\n    return [\r\n      loggedInUser,\r\n      ...admins?.filter((a) => a?._id !== loggedInUser?._id),\r\n      ...groupMembers?.filter(\r\n        (u) =>\r\n          u?._id !== loggedInUser?._id &&\r\n          admins?.every((a) => a?._id !== u?._id)\r\n      ),\r\n    ].map((member) => {\r\n      return {\r\n        ...member,\r\n        isGroupAdmin: admins?.some((a) => a?._id === member?._id),\r\n      };\r\n    });\r\n  };\r\n\r\n  // Update the member list whenever groupInfo is updated\r\n  useEffect(() => {\r\n    filteredMembersCache = sortMembers();\r\n    setFilteredMembers(filteredMembersCache);\r\n  }, [groupInfo]);\r\n\r\n  const filterMemberInput = useRef(null);\r\n  const [filteredMembers, setFilteredMembers] = useState(filteredMembersCache);\r\n\r\n  // Debouncing filterMembers method to limit the no. of fn calls\r\n  const filterMembers = debounce((e) => {\r\n    const memberNameInput = e.target?.value?.toLowerCase().trim();\r\n    if (!memberNameInput) {\r\n      return setFilteredMembers(filteredMembersCache);\r\n    }\r\n    setFilteredMembers(\r\n      filteredMembersCache?.filter(\r\n        (user) =>\r\n          user?.name?.toLowerCase().includes(memberNameInput) ||\r\n          user?.email?.toLowerCase().includes(memberNameInput)\r\n      )\r\n    );\r\n  }, 600);\r\n\r\n  const openMemberOptionsMenu = (e) => {\r\n    setMemberOptionsMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"addGroupMembers d-flex flex-column\"\r\n      style={{ height: \"75vh\" }}\r\n    >\r\n      {/* Member Count */}\r\n      <p className=\"h3 text-center text-light\" style={{ marginTop: \"5px\" }}>\r\n        {`${groupMembers?.length} Member${groupMembers?.length > 1 ? \"s\" : \"\"}`}\r\n      </p>\r\n      {/* Search Bar */}\r\n      <section className=\"searchChat\" style={{ marginTop: \"-15px\" }}>\r\n        <SearchInput\r\n          ref={filterMemberInput}\r\n          searchHandler={filterMembers}\r\n          autoFocus={false}\r\n          placeholder=\"Search Member\"\r\n          clearInput={() => setFilteredMembers(filteredMembersCache)}\r\n        />\r\n      </section>\r\n      {/* Member list */}\r\n      <section className=\"chatList p-1 overflow-auto position-relative\">\r\n        {filteredMembers?.length > 0 ? (\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={(e) => {\r\n              const userId = e.target?.dataset?.user;\r\n              if (userId) {\r\n                // Don't display member options menu for loggedInUser\r\n                if (loggedInUser?._id === userId) return;\r\n\r\n                setClickedMember(\r\n                  filteredMembers?.find((m) => m?._id === userId)\r\n                );\r\n                openMemberOptionsMenu(e);\r\n              }\r\n            }}\r\n          >\r\n            {filteredMembers.map((member) => (\r\n              <GroupMemberItem\r\n                key={member._id}\r\n                user={member}\r\n                truncateValues={[21, 18]}\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <span className=\"d-inline-block w-100 text-center text-light h5 mt-4 mx-auto\">\r\n            No Members Found\r\n          </span>\r\n        )}\r\n      </section>\r\n      <MemberOptionsMenu\r\n        anchor={memberOptionsMenuAnchor}\r\n        setAnchor={setMemberOptionsMenuAnchor}\r\n        clickedMember={clickedMember}\r\n        setShowDialogActions={setShowDialogActions}\r\n        setShowDialogClose={setShowDialogClose}\r\n        childDialogMethods={childDialogMethods}\r\n      />\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewGroupMembers;\r\n","import { useRef, useState } from \"react\";\r\nimport {\r\n  Delete,\r\n  Edit,\r\n  InfoOutlined,\r\n  Logout,\r\n  PersonAdd,\r\n} from \"@mui/icons-material\";\r\nimport { CircularProgress, IconButton } from \"@mui/material\";\r\nimport axios from \"../../utils/axios\";\r\nimport { isImageFile, truncateString } from \"../../utils/appUtils\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport EditNameBody from \"./EditNameBody\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport AddMembersToGroup from \"./AddMembersToGroup\";\r\nimport ViewGroupMembers from \"./ViewGroupMembers\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport FullSizeImage from \"../utils/FullSizeImage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n  toggleRefresh,\r\n} from \"../../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#111\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst GroupInfoBody = ({ messages }) => {\r\n  const { loggedInUser, refresh, groupInfo } = useSelector(selectAppState);\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const { loading, disableIfLoading } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n  const { setChildDialogBody, displayChildDialog } = childDialogMethods;\r\n\r\n  const groupDP = groupInfo?.chatDisplayPic;\r\n  const groupName = groupInfo?.chatName;\r\n  const groupMembers = groupInfo?.users;\r\n  const admins = groupInfo?.groupAdmins;\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [editGroupDpMenuAnchor, setEditGroupDpMenuAnchor] = useState(null);\r\n  const isUserGroupAdmin = admins?.some(\r\n    (admin) => admin?._id === loggedInUser?._id\r\n  );\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n  const imgInput = useRef(null);\r\n  const btnClassName = \"w-100 btn text-light fs-5\";\r\n\r\n  const updateView = (data) => {\r\n    dispatch(setGroupInfo(data));\r\n    dispatch(toggleRefresh(!refresh));\r\n    dispatch(setSelectedChat(data)); // To update messages view\r\n  };\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") {\r\n      e.target.click();\r\n    }\r\n  };\r\n\r\n  // To retreive added members from `AddMembersToGroup` dialog\r\n  let updatedName = \"\";\r\n  const getUpdatedName = (updatedValue) => {\r\n    updatedName = updatedValue;\r\n  };\r\n\r\n  const updateGroupName = async () => {\r\n    if (!updatedName) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Enter Valid Group Name\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser?.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/chat/group/update-name\",\r\n        { groupName: updatedName, chatId: groupInfo?._id },\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Group Name Updated Successfully\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Update Group Name\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Update Group Display Pic\r\n  const handleImgInputChange = async (e) => {\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n\r\n    if (!isImageFile(image.name)) {\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Invalid Image File\",\r\n          message: \"Please Select an Image File (png/jpg/jpeg/svg)\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    if (image.size >= 2097152) {\r\n      imgInput.current.value = \"\";\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Select an Image Smaller than 2 MB\",\r\n          type: \"warning\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    dispatch(setLoading(true));\r\n    setUploading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"displayPic\", image);\r\n    formData.append(\"currentDP\", groupDP);\r\n    formData.append(\"cloudinary_id\", groupInfo?.cloudinary_id);\r\n    formData.append(\"chatId\", groupInfo?._id);\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/chat/group/update-dp\",\r\n        formData,\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Group DP Updated Successfully\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n      updateView(data);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Update Group DP\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const deleteGroupDp = async () => {\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/delete-dp`,\r\n        {\r\n          currentDP: groupDP,\r\n          cloudinary_id: groupInfo?.cloudinary_id,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Group DP Deleted Successfully\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Delete Group DP\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const exitGroup = async () => {\r\n    if (groupMembers?.length === 1) {\r\n      return deleteGroup();\r\n    }\r\n\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/remove`,\r\n        {\r\n          userToBeRemoved: loggedInUser?._id,\r\n          isGroupAdmin: isUserGroupAdmin,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: `Exited From '${data?.chatName}' Group`,\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      updateView(null);\r\n      dispatch(hideDialog());\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Exit Group\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  const deleteGroup = async () => {\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const deleteGroupPromise = axios.put(\r\n        `/api/chat/group/delete`,\r\n        {\r\n          currentDP: groupInfo?.chatDisplayPic,\r\n          cloudinary_id: groupInfo?.cloudinary_id,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n      const deleteMessagesPromise = messages?.length\r\n        ? axios.put(\r\n            `/api/message/delete`,\r\n            {\r\n              messageIds: JSON.stringify(messages?.map((m) => m._id)),\r\n              isDeleteGroupRequest: true,\r\n            },\r\n            config\r\n          )\r\n        : Promise.resolve();\r\n\r\n      // Parallel execution of independent promises\r\n      await Promise.all([deleteGroupPromise, deleteMessagesPromise]);\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Group Deleted Successfully\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      updateView(null);\r\n      dispatch(hideDialog());\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Delete Group\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Open confirm dialogs\r\n  const openExitGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>\r\n        {groupMembers?.length === 1\r\n          ? `Since you're the only group member, this group will be \r\n            DELETED if you exit. Are you sure you want to exit?`\r\n          : `This group will be removed from your chats. \r\n             Are you sure you want to exit this group?`}\r\n      </>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Exit Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Exiting...\",\r\n      action: exitGroup,\r\n    });\r\n  };\r\n\r\n  const openDeleteGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>\r\n        All messages and files related to this group will be deleted and this\r\n        group will be removed from the chats of ALL MEMBERS. Are you sure you\r\n        want to delete this group?\r\n      </>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Delete Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteGroup,\r\n    });\r\n  };\r\n\r\n  // Open edit name dialog\r\n  const openEditGroupNameDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <EditNameBody\r\n        originalName={groupInfo?.chatName}\r\n        getUpdatedName={getUpdatedName}\r\n        placeholder=\"Enter New Group Name\"\r\n      />\r\n    );\r\n    displayChildDialog({\r\n      title: \"Edit Group Name\",\r\n      nolabel: \"CANCEL\",\r\n      yeslabel: \"SAVE\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: updateGroupName,\r\n    });\r\n  };\r\n\r\n  // Open delete photo confirm dialog\r\n  const openDeletePhotoConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(<>Are you sure you want to delete this display pic?</>);\r\n    displayChildDialog({\r\n      title: \"Delete Display Pic\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteGroupDp,\r\n    });\r\n  };\r\n\r\n  // To retreive added members from `AddMembersToGroup` dialog\r\n  let addedMembers = [];\r\n  const getAddedMembers = (updatedMembers) => {\r\n    addedMembers = updatedMembers;\r\n  };\r\n\r\n  const addMembersToGroup = async () => {\r\n    if (!isUserGroupAdmin) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Only Admin Can Add Members to Group\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    if (!addedMembers?.length) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Select Atleast 1 Member to Add\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser?.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/chat/group/add\",\r\n        {\r\n          usersToBeAdded: JSON.stringify(addedMembers),\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Successfully Added Member/s to Group\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Add Members to Group\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Open Add members dialog\r\n  const openAddMembersDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(<AddMembersToGroup getAddedMembers={getAddedMembers} />);\r\n    displayChildDialog({\r\n      title: \"Add Group Members\",\r\n      nolabel: \"Cancel\",\r\n      yeslabel: \"Add\",\r\n      loadingYeslabel: \"Adding...\",\r\n      action: addMembersToGroup,\r\n    });\r\n  };\r\n\r\n  const openViewMembersDialog = () => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    setChildDialogBody(<ViewGroupMembers />);\r\n    displayChildDialog({\r\n      title: ``,\r\n    });\r\n  };\r\n\r\n  const displayFullSizeImage = (e) => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    setChildDialogBody(<FullSizeImage event={e} />);\r\n    displayChildDialog({\r\n      title: e.target?.alt || \"Display Pic\",\r\n    });\r\n  };\r\n\r\n  const openEditGroupDpMenu = (e) => {\r\n    setEditGroupDpMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div className=\"groupDialog d-flex flex-column row\">\r\n      {/* View/Edit Display Pic */}\r\n      {loading && uploading ? (\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n          <CircularProgress\r\n            size={60}\r\n            style={{ margin: \"20px 0px\", color: \"lightblue\" }}\r\n          />\r\n          <span style={{ marginBottom: \"45px\" }} className=\"text-light h1\">\r\n            {\" Updating Photo...\"}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <section className=\"dialogField d-flex position-relative mb-4\">\r\n          <CustomTooltip title=\"View DP\" placement=\"right\" arrow>\r\n            <img\r\n              className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle pointer\"\r\n              id=\"groupInfo__displayPic\"\r\n              src={groupDP || \"GroupDp\"}\r\n              style={{ width: \"120px\", height: \"120px\" }}\r\n              onClick={displayFullSizeImage}\r\n              alt={groupName}\r\n            />\r\n          </CustomTooltip>\r\n\r\n          <CustomTooltip title=\"Edit Group DP\" placement=\"right\" arrow>\r\n            <i\r\n              id=\"editProfilePic\"\r\n              tabIndex={2}\r\n              onKeyDown={clickOnKeydown}\r\n              className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n              onClick={openEditGroupDpMenu}\r\n            >\r\n              <Edit className=\"text-light fs-6\" />\r\n            </i>\r\n          </CustomTooltip>\r\n          {/* Edit/Delete display pic menu */}\r\n          <EditPicMenu\r\n            anchor={editGroupDpMenuAnchor}\r\n            setAnchor={setEditGroupDpMenuAnchor}\r\n            selectProfilePic={() => imgInput.current.click()}\r\n            openDeletePhotoConfirmDialog={openDeletePhotoConfirmDialog}\r\n            deletePhotoCondition={!groupDP?.endsWith(\"group_mbuvht.png\")}\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            accept=\".png, .jpg, .jpeg, .svg\"\r\n            onChange={handleImgInputChange}\r\n            name=\"displayPic\"\r\n            id=\"groupInfo__displayPic\"\r\n            ref={imgInput}\r\n            className={`d-none`}\r\n            disabled={loading}\r\n          />\r\n        </section>\r\n      )}\r\n\r\n      {/* Group Name */}\r\n      <section className={`dialogField text-center mb-3`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-10px\" }}>\r\n          <CustomTooltip\r\n            title={groupName?.length > 24 ? groupName : \"\"}\r\n            placement=\"top\"\r\n            arrow\r\n          >\r\n            <div\r\n              className=\"w-100 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"30px\", lineHeight: \"30px\" }}\r\n            >\r\n              {truncateString(groupName, 25, 21)}\r\n            </div>\r\n          </CustomTooltip>\r\n          <CustomTooltip title=\"Edit Group Name\" placement=\"top\" arrow>\r\n            <IconButton\r\n              tabIndex={3}\r\n              onKeyDown={clickOnKeydown}\r\n              onClick={openEditGroupNameDialog}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: -8,\r\n                top: 0,\r\n                \":hover\": {\r\n                  backgroundColor: \"#aaaaaa30\",\r\n                },\r\n              }}\r\n            >\r\n              <Edit className=\"text-light\" />\r\n            </IconButton>\r\n          </CustomTooltip>\r\n        </div>\r\n      </section>\r\n\r\n      {/* No of members */}\r\n      <section\r\n        className={`dialogField text-center mb-3`}\r\n        style={{ marginTop: \"-10px\", borderRadius: \"10px\" }}\r\n      >\r\n        {`Group : ${groupMembers?.length} Member${\r\n          groupMembers?.length > 1 ? \"s\" : \"\"\r\n        }`}\r\n      </section>\r\n\r\n      {/* View Members */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <button\r\n          className={`${btnClassName} btn-outline-primary`}\r\n          onClick={openViewMembersDialog}\r\n        >\r\n          <InfoOutlined\r\n            className=\"text-light\"\r\n            style={{ marginLeft: \"-15px\" }}\r\n          />\r\n          <span className=\"ms-2\">View Members</span>\r\n        </button>\r\n      </section>\r\n\r\n      {/* Add Members (only for admins) */}\r\n      {isUserGroupAdmin && (\r\n        <section className={`dialogField text-center mb-2`}>\r\n          <button\r\n            className={`${btnClassName} btn-outline-success`}\r\n            onClick={openAddMembersDialog}\r\n          >\r\n            <PersonAdd className=\"text-light\" style={{ marginLeft: \"-20px\" }} />\r\n            <span className=\"ms-2\">Add Members</span>\r\n          </button>\r\n        </section>\r\n      )}\r\n\r\n      {/* Exit Group */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <button\r\n          className={`${btnClassName} btn-outline-danger`}\r\n          onClick={() => {\r\n            if (\r\n              isUserGroupAdmin &&\r\n              admins?.length === 1 &&\r\n              groupMembers?.length !== 1\r\n            ) {\r\n              return dispatch(\r\n                displayToast({\r\n                  message: `Every group must have atleast 1 admin. Since \r\n                you're the only group admin, you won't be allowed\r\n                to exit until you make someone else as the admin.`,\r\n                  type: \"warning\",\r\n                  duration: 10000,\r\n                  position: \"top-center\",\r\n                })\r\n              );\r\n            }\r\n            openExitGroupConfirmDialog();\r\n          }}\r\n        >\r\n          <Logout className=\"text-light\" style={{ marginLeft: \"-30px\" }} />\r\n          <span className=\"ms-2\">Exit Group</span>\r\n        </button>\r\n      </section>\r\n\r\n      {/* Delete Group (only for admins) */}\r\n      {isUserGroupAdmin && (\r\n        <section className={`dialogField text-center mb-2`}>\r\n          <button\r\n            className={`${btnClassName} btn-outline-danger`}\r\n            onClick={openDeleteGroupConfirmDialog}\r\n          >\r\n            <Delete className=\"text-light\" style={{ marginLeft: \"-20px\" }} />\r\n            <span className=\"ms-2\">Delete Group</span>\r\n          </button>\r\n        </section>\r\n      )}\r\n\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupInfoBody;\r\n","import { Skeleton } from \"@mui/material\";\r\n\r\nconst LoadingMsgs = ({ count }) => {\r\n  const skeletonStyle = {\r\n    backgroundColor: \"#777\",\r\n  };\r\n  return (\r\n    <>\r\n      {[...Array(count)].map((e, i) => (\r\n        <div\r\n          key={`loadingMsg${i}`}\r\n          className={`loadingMsg d-flex flex-column align-items-${\r\n            i % 2 ? \"start\" : \"end\"\r\n          } mb-2 mx-4`}\r\n        >\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className={`loadingSender col-3 mb-1`}\r\n            style={skeletonStyle}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className={`loadingContent col-5`}\r\n            style={skeletonStyle}\r\n          />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadingMsgs;\r\n","import {\r\n  Article,\r\n  Download,\r\n  Downloading,\r\n  PictureAsPdf,\r\n} from \"@mui/icons-material\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nconst ONE_MB = 1024 * 1024;\r\nconst ONE_KB = 1024;\r\nconst IMG_BASE_URL = process.env.REACT_APP_CLOUDINARY_BASE_URL;\r\n\r\nconst MsgAttachment = ({ msgSent, downloadingFileId, isPreview, fileData }) => {\r\n  const previewStyles = `${\r\n    isPreview\r\n      ? \"py-4 px-2 mx-5 border border-4 border-secondary previewFile\"\r\n      : \"\"\r\n  }`;\r\n  const iconStyles = `${isPreview ? \"fs-1\" : \"fs-2\"}`;\r\n\r\n  let { fileUrl, file_id, file_name, size } = fileData;\r\n  const fileContents = file_name.split(\"===\");\r\n  file_name = fileContents[0];\r\n  let fileSize = parseInt(fileContents[1]) || size || \"\";\r\n  fileSize = !fileSize\r\n    ? \"\"\r\n    : fileSize > ONE_MB\r\n    ? (fileSize / ONE_MB).toFixed(1) + \" MB\"\r\n    : fileSize > ONE_KB\r\n    ? (fileSize / ONE_KB).toFixed(0) + \" KB\"\r\n    : fileSize + \" B\";\r\n\r\n  const isDownloadingFile = downloadingFileId === file_id;\r\n  const displayAfterSending = isPreview || msgSent ? \"visible\" : \"invisible\";\r\n  const downloadIcon = (\r\n    <span\r\n      data-download={file_id}\r\n      className={`downloadIcon ${isDownloadingFile ? \"downloading\" : \"\"} ${\r\n        isPreview || !msgSent ? \"d-none\" : \"\"\r\n      }`}\r\n      title=\"Download File\"\r\n    >\r\n      {isDownloadingFile ? (\r\n        <Downloading />\r\n      ) : (\r\n        <Download data-download={file_id} />\r\n      )}\r\n    </span>\r\n  );\r\n  const attachment = (\r\n    <>\r\n      <div className={`${displayAfterSending}`}>\r\n        {file_name?.endsWith(\".pdf\") ? (\r\n          <PictureAsPdf className={iconStyles} />\r\n        ) : (\r\n          <Article className={iconStyles} />\r\n        )}\r\n        {downloadIcon}\r\n      </div>\r\n      <span className={`${isPreview ? \"fs-4\" : \"fs-6\"}  position-relative`}>\r\n        &nbsp;&nbsp;\r\n        <span className={`${displayAfterSending}`}>{file_name + \"\"}</span>\r\n      </span>\r\n      <div\r\n        className={`${\r\n          msgSent || isPreview ? \"d-none\" : \"\"\r\n        } w-100 h-100 position-absolute top-0 start-0`}\r\n      >\r\n        <CircularProgress className={`sendingFile`} />\r\n      </div>\r\n      <div\r\n        className={`${isPreview ? \"fs-5 mt-4\" : \"\"}`}\r\n        style={{ marginBottom: isPreview ? -10 : 0 }}\r\n      >\r\n        {fileSize}\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {fileUrl?.startsWith(IMG_BASE_URL) ? (\r\n        <span className=\"d-inline-block msgImageWrapper\">\r\n          <img\r\n            src={fileUrl}\r\n            alt={file_name}\r\n            title={file_name}\r\n            data-image-id={file_id}\r\n            className={`msgImageFile d-inline-block`}\r\n          />\r\n        </span>\r\n      ) : (\r\n        <>\r\n          {file_name?.endsWith(\".pdf\") ? (\r\n            <div className={`${previewStyles} msgFile pdfFile text-light`}>\r\n              {attachment}\r\n            </div>\r\n          ) : /(\\.xlsx|\\.csv|\\.xls)$/.test(file_name) ? (\r\n            <div\r\n              className={`${previewStyles} msgFile excelFile bg-success bg-opacity-75`}\r\n            >\r\n              {attachment}\r\n            </div>\r\n          ) : /(\\.ppt|\\.pptx)$/.test(file_name) ? (\r\n            <div\r\n              className={`${previewStyles} msgFile pptFile bg-warning text-black bg-opacity-75`}\r\n            >\r\n              {attachment}\r\n            </div>\r\n          ) : /(\\.doc|\\.docx)$/.test(file_name) ? (\r\n            <div\r\n              className={`${previewStyles} msgFile wordFile bg-primary bg-opacity-75`}\r\n            >\r\n              {attachment}\r\n            </div>\r\n          ) : /(\\.mp4|\\.webm)$/.test(file_name) ? (\r\n            <div className={`${previewStyles} msgFile videoFile`}>\r\n              {file_name}\r\n            </div>\r\n          ) : /(\\.mp3|\\.wav)$/.test(file_name) ? (\r\n            <div className={`${previewStyles} msgFile audioFile`}>\r\n              {file_name}\r\n            </div>\r\n          ) : (\r\n            <div className={`${previewStyles} msgFile otherFile`}>\r\n              {file_name}\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MsgAttachment;\r\n","import { DoneAll, KeyboardArrowDown } from \"@mui/icons-material\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport {\r\n  msgTimeStringOf,\r\n  msgDateStringOf,\r\n  dateStringOf,\r\n} from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport MsgAttachment from \"./MsgAttachment\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#E6480C\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 16,\r\n  borderRadius: 5,\r\n  backgroundColor: \"#E6480C\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst Message = ({ downloadingFileId, msgSent, currMsg, prevMsg }) => {\r\n  const { loggedInUser, selectedChat } = useSelector(selectAppState);\r\n  const msgContentRef = useRef(null);\r\n  const { _id, profilePic, name, email } = currMsg?.sender;\r\n  const isLoggedInUser = _id === loggedInUser._id;\r\n  const senderData = `${profilePic}===${name}===${email}`;\r\n  const currMsgId = isLoggedInUser ? currMsg?._id : null;\r\n  const isSameSender = _id === prevMsg?.sender._id;\r\n  const currMsgDate = new Date(currMsg.createdAt);\r\n  const prevMsgDate = new Date(prevMsg?.createdAt);\r\n  const isOtherDay = dateStringOf(currMsgDate) !== dateStringOf(prevMsgDate);\r\n  const showCurrSender =\r\n    !isLoggedInUser &&\r\n    selectedChat?.isGroupChat &&\r\n    (!isSameSender || isOtherDay);\r\n\r\n  useEffect(() => {\r\n    if (msgContentRef?.current)\r\n      msgContentRef.current.innerHTML = currMsg?.content;\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <section\r\n        className={`msgRow d-flex justify-content-${\r\n          isLoggedInUser ? \"end\" : \"start\"\r\n        }`}\r\n        style={{ marginTop: isSameSender ? \"3px\" : \"10px\" }}\r\n      >\r\n        {showCurrSender ? (\r\n          <CustomTooltip title={`View Profile`} placement=\"top-start\" arrow>\r\n            <img\r\n              src={profilePic}\r\n              alt={name}\r\n              data-sender={senderData}\r\n              className=\"senderAvatar rounded-circle pointer\"\r\n            />\r\n          </CustomTooltip>\r\n        ) : (\r\n          selectedChat?.isGroupChat && <span style={{ width: \"31px\" }}></span>\r\n        )}\r\n        <div\r\n          className={`msgBox d-flex flex-column text-start p-2 rounded-3\r\n          mx-2 mx-md-3 ${isLoggedInUser ? \"yourMsg\" : \"receiversMsg\"}`}\r\n          data-msg={currMsgId}\r\n        >\r\n          {showCurrSender && (\r\n            <span data-sender={senderData} className=\"msgSender pointer\">\r\n              {name}\r\n            </span>\r\n          )}\r\n          {isLoggedInUser && msgSent && (\r\n            <span\r\n              data-msg={currMsgId}\r\n              title=\"Edit/Delete Message\"\r\n              className={`msgOptionsIcon text-light position-absolute \r\n              top-0 end-0 w-25 h-100`}\r\n            >\r\n              <KeyboardArrowDown\r\n                data-msg={currMsgId}\r\n                style={{ fontSize: 22 }}\r\n                className=\"position-absolute top-0 end-0\"\r\n              />\r\n            </span>\r\n          )}\r\n          {currMsg?.fileUrl && (\r\n            <MsgAttachment\r\n              msgSent={msgSent}\r\n              downloadingFileId={downloadingFileId}\r\n              fileData={{\r\n                fileUrl: currMsg.fileUrl,\r\n                file_id: currMsg.file_id,\r\n                file_name: currMsg.file_name,\r\n              }}\r\n            />\r\n          )}\r\n          <div data-msg={currMsgId} className=\"msgContent d-flex\">\r\n            {currMsg?.content && <span ref={msgContentRef}></span>}\r\n            <span\r\n              data-msg={currMsgId}\r\n              className=\"msgTime text-end d-flex align-items-end justify-content-end\"\r\n            >\r\n              {msgTimeStringOf(currMsgDate)}\r\n              {isLoggedInUser && (\r\n                <>\r\n                  {msgSent ? (\r\n                    <DoneAll className=\"text-info fs-6 ms-1\" />\r\n                  ) : (\r\n                    <CircularProgress\r\n                      size={10}\r\n                      className=\"sendStatusIcon ms-1\"\r\n                    />\r\n                  )}\r\n                </>\r\n              )}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {isOtherDay && (\r\n        <div className={`msgDate mt-3 mb-2 mx-auto py-1 px-3 rounded-3`}>\r\n          {msgDateStringOf(currMsgDate)}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import { Delete, Edit } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\n\r\nconst MsgOptionsMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  openEditMsgDialog,\r\n  openDeleteMsgConfirmDialog,\r\n}) => {\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={openEditMsgDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Edit />\r\n        </ListItemIcon>\r\n        <MenuItemText>Edit Message</MenuItemText>\r\n      </MenuItem>\r\n      <MenuItem sx={menuItemProps} onClick={openDeleteMsgConfirmDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Delete />\r\n        </ListItemIcon>\r\n        <MenuItemText>Delete Message</MenuItemText>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MsgOptionsMenu;\r\n","import { Close } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport MsgAttachment from \"./MsgAttachment\";\r\n\r\nconst FILE_WRAPPER_CLASS =\r\n  \"mt-4 h-50 d-flex justify-content-center align-items-center\";\r\nconst ATTACHMENT_STYLE = {\r\n  borderRadius: 7,\r\n  width: \"clamp(290px, 90%, 700px)\",\r\n  maxHeight: 250,\r\n};\r\nconst PLACEHOLDER_IMG = process.env.REACT_APP_PLACEHOLDER_IMG_URL;\r\n\r\nconst AttachmentPreview = ({\r\n  attachmentData,\r\n  discardAttachment,\r\n  CustomTooltip,\r\n}) => {\r\n  const {\r\n    attachment: { name, type, size },\r\n    attachmentPreviewUrl,\r\n  } = attachmentData;\r\n\r\n  const previewTitle = type.startsWith(\"application/\") ? \"Attached File\" : name;\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-black bg-gradient bg-opacity-75 h-100 d-flex flex-column justify-content-start align-items-center\"\r\n      style={{ borderRadius: 10 }}\r\n    >\r\n      {/* Discard Attachment button */}\r\n      <CustomTooltip title=\"Discard Attachment\" placement=\"bottom-start\" arrow>\r\n        <IconButton\r\n          onClick={discardAttachment}\r\n          sx={{\r\n            position: \"absolute\",\r\n            left: 15,\r\n            top: 12,\r\n            color: \"#999999\",\r\n            \":hover\": {\r\n              backgroundColor: \"#aaaaaa20\",\r\n            },\r\n          }}\r\n        >\r\n          <Close />\r\n        </IconButton>\r\n      </CustomTooltip>\r\n      {/* Attached File Name */}\r\n      <CustomTooltip\r\n        title={previewTitle?.length > 23 ? previewTitle : \"\"}\r\n        placement=\"top\"\r\n        arrow\r\n      >\r\n        <span\r\n          className={`mt-5 mb-2`}\r\n          style={{ color: \"lightblue\", fontSize: 25, zIndex: 5 }}\r\n        >\r\n          {truncateString(previewTitle || \"Attached File\", 23, 20)}\r\n        </span>\r\n      </CustomTooltip>\r\n      <>\r\n        {type?.startsWith(\"image/\") ? (\r\n          <div className={`${FILE_WRAPPER_CLASS}`}>\r\n            <img\r\n              style={ATTACHMENT_STYLE}\r\n              src={attachmentPreviewUrl || PLACEHOLDER_IMG}\r\n              alt=\"msgAttachment\"\r\n            />\r\n          </div>\r\n        ) : type?.startsWith(\"audio/\") ? (\r\n          <div className={`${FILE_WRAPPER_CLASS}`} style={{ width: \"85%\" }}>\r\n            <audio\r\n              src={attachmentPreviewUrl || \"\"}\r\n              controls\r\n              autoPlay\r\n              style={ATTACHMENT_STYLE}\r\n            >\r\n              {name}\r\n            </audio>\r\n          </div>\r\n        ) : type?.startsWith(\"video/\") ? (\r\n          <div className={`${FILE_WRAPPER_CLASS}`}>\r\n            <video\r\n              src={attachmentPreviewUrl || \"\"}\r\n              controls\r\n              autoPlay\r\n              style={ATTACHMENT_STYLE}\r\n            >\r\n              {name}\r\n            </video>\r\n          </div>\r\n        ) : (\r\n          <div className={`${FILE_WRAPPER_CLASS}`}>\r\n            <MsgAttachment\r\n              isPreview={true}\r\n              fileData={{\r\n                fileUrl: attachmentPreviewUrl,\r\n                file_id: \"\",\r\n                file_name: name,\r\n                size,\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttachmentPreview;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { Avatar, IconButton } from \"@mui/material\";\r\nimport {\r\n  getOneOnOneChatReceiver,\r\n  isImageOrGifFile,\r\n  truncateString,\r\n} from \"../utils/appUtils\";\r\nimport { ArrowBack, AttachFile, Close, Send } from \"@mui/icons-material\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport animationData from \"../animations/letsChatGif.json\";\r\nimport LottieAnimation from \"./utils/LottieAnimation\";\r\nimport axios from \"../utils/axios\";\r\nimport ViewProfileBody from \"./dialogs/ViewProfileBody\";\r\nimport GroupInfoBody from \"./dialogs/GroupInfoBody\";\r\nimport LoadingMsgs from \"./utils/LoadingMsgs\";\r\nimport FullSizeImage from \"./utils/FullSizeImage\";\r\nimport Message from \"./utils/Message\";\r\nimport MsgOptionsMenu from \"./menus/MsgOptionsMenu\";\r\nimport io from \"socket.io-client\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setClientSocket,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n  setSocketConnected,\r\n  toggleRefresh,\r\n} from \"../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../store/slices/FormfieldSlice\";\r\nimport { displayToast } from \"../store/slices/ToastSlice\";\r\nimport {\r\n  displayDialog,\r\n  setShowDialogActions,\r\n} from \"../store/slices/CustomDialogSlice\";\r\nimport AttachmentPreview from \"./utils/AttachmentPreview\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#777\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 16,\r\n  backgroundColor: \"#777\",\r\n};\r\nconst iconStyles = {\r\n  margin: \"4px 0px\",\r\n  padding: \"5px\",\r\n  color: \"#999999\",\r\n  \":hover\": {\r\n    backgroundColor: \"#aaaaaa20\",\r\n  },\r\n};\r\n\r\nconst FILE_SIZE_LIMIT = 5 * 1024 * 1024;\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\nconst SOCKET_ENDPOINT = process.env.REACT_APP_SERVER_BASE_URL;\r\n\r\nconst MessagesView = ({\r\n  loadingMsgs,\r\n  setLoadingMsgs,\r\n  fetchMsgs,\r\n  setFetchMsgs,\r\n  setDialogBody,\r\n}) => {\r\n  const letsChatGif = useRef(null);\r\n  const {\r\n    loggedInUser,\r\n    selectedChat,\r\n    refresh,\r\n    clientSocket,\r\n    isSocketConnected,\r\n  } = useSelector(selectAppState);\r\n  const { disableIfLoading } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n  const [sending, setSending] = useState(false);\r\n  const [enableMsgSend, setEnableMsgSend] = useState(false);\r\n  const [fileAttached, setFileAttached] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [clickedMsg, setClickedMsg] = useState(\"\");\r\n  const [attachmentData, setAttachmentData] = useState({\r\n    attachment: null,\r\n    attachmentPreviewUrl: \"\",\r\n  });\r\n\r\n  const msgListBottom = useRef(null);\r\n  const msgFileInput = useRef(null);\r\n  const msgContent = useRef(null);\r\n  const [downloadingFileId, setDownloadingFileId] = useState(\"\");\r\n  const [msgOptionsMenuAnchor, setMsgOptionsMenuAnchor] = useState(null);\r\n\r\n  const chatName = selectedChat?.isGroupChat\r\n    ? selectedChat?.chatName\r\n    : getOneOnOneChatReceiver(loggedInUser, selectedChat?.users)?.name;\r\n\r\n  const resetMsgInput = (options) => {\r\n    setAttachmentData({\r\n      attachment: null,\r\n      attachmentPreviewUrl: \"\",\r\n    });\r\n    msgFileInput.current.value = \"\";\r\n    setFileAttached(false);\r\n    if (options?.discardAttachmentOnly) return;\r\n    setEnableMsgSend(false);\r\n    msgContent.current.innerHTML = \"\";\r\n  };\r\n\r\n  const closeChat = () => {\r\n    setLoadingMsgs(false);\r\n    dispatch(setSelectedChat(null));\r\n    resetMsgInput();\r\n  };\r\n\r\n  const viewAudioOrVideo = (src, fileData) => {\r\n    if (!src || !fileData) return;\r\n    const { fileName, isAudio } = fileData;\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(\r\n      <FullSizeImage\r\n        audioSrc={isAudio ? src : null}\r\n        videoSrc={!isAudio ? src : null}\r\n      />\r\n    );\r\n    dispatch(\r\n      displayDialog({\r\n        title: fileName || `${isAudio ? \"Audio\" : \"Video\"} File`,\r\n      })\r\n    );\r\n  };\r\n\r\n  const displayFullSizeImage = (e) => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<FullSizeImage event={e} />);\r\n    dispatch(\r\n      displayDialog({\r\n        isFullScreen: true,\r\n        title: e.target?.alt || \"Display Pic\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const downloadFile = async (fileId) => {\r\n    setDownloadingFileId(fileId);\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n      responseType: \"blob\",\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`/api/message/files/${fileId}`, config);\r\n\r\n      const link = document.createElement(\"a\");\r\n      link.href = URL.createObjectURL(new Blob([data]));\r\n      link.setAttribute(\"download\", fileId.split(\"---\")[1] || fileId);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n      setDownloadingFileId(\"\");\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Download File\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      setDownloadingFileId(\"\");\r\n    }\r\n  };\r\n\r\n  const fetchMessages = async () => {\r\n    setLoadingMsgs(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat?._id}`,\r\n        config\r\n      );\r\n      setMessages(\r\n        data.map((msg) => {\r\n          msg[\"sent\"] = true;\r\n          return msg;\r\n        })\r\n      );\r\n      setLoadingMsgs(false);\r\n      if (fetchMsgs) setFetchMsgs(false);\r\n      setSending(false);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Messages\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      setLoadingMsgs(false);\r\n      if (fetchMsgs) setFetchMsgs(false);\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!attachmentData.attachment && !msgContent.current?.innerHTML) return;\r\n\r\n    const msgData = {\r\n      ...attachmentData,\r\n      content: msgContent.current?.innerHTML || \"\",\r\n    };\r\n\r\n    const newMsg = {\r\n      _id: new Date().getTime(),\r\n      sender: {\r\n        _id: loggedInUser?._id,\r\n        profilePic: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n      },\r\n      fileUrl: msgData?.attachmentPreviewUrl,\r\n      file_id: \"\",\r\n      file_name: msgData?.attachment?.name,\r\n      content: msgData?.content,\r\n      createdAt: new Date().toISOString(),\r\n      sent: false,\r\n    };\r\n\r\n    setMessages([newMsg, ...messages]);\r\n    resetMsgInput();\r\n    setSending(true);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      // Upload img/gif to cloudinary, and all other files to aws s3\r\n      const apiUrl = isImageOrGifFile(msgData.attachment?.name)\r\n        ? `/api/message`\r\n        : `/api/message/upload-to-s3`;\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"attachment\", msgData.attachment);\r\n      formData.append(\"content\", msgData.content);\r\n      formData.append(\"chatId\", selectedChat?._id);\r\n      const { data } = await axios.post(apiUrl, formData, config);\r\n\r\n      clientSocket?.emit(\"new msg sent\", data);\r\n      fetchMessages();\r\n      dispatch(toggleRefresh(!refresh));\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Send Messages\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const deleteMessage = async () => {\r\n    dispatch(setLoading(true));\r\n    setSending(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      await axios.put(\r\n        `/api/message/delete`,\r\n        {\r\n          messageIds: JSON.stringify([clickedMsg]),\r\n        },\r\n        config\r\n      );\r\n\r\n      clientSocket?.emit(\"msg deleted\", {\r\n        deletedMsgId: clickedMsg,\r\n        senderId: loggedInUser?._id,\r\n        chat: selectedChat,\r\n      });\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Message Deleted Successfully\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      setMessages(messages.filter((msg) => msg?._id !== clickedMsg));\r\n      dispatch(setLoading(false));\r\n      dispatch(toggleRefresh(!refresh));\r\n      return \"msgActionDone\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Delete Message\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const updateMessage = async () => {};\r\n\r\n  const handleMsgFileInputChange = (e) => {\r\n    const msgFile = e.target.files[0];\r\n    if (!msgFile) return;\r\n\r\n    if (msgFile.size >= FILE_SIZE_LIMIT) {\r\n      msgFileInput.current.value = \"\";\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Select a File Smaller than 5 MB\",\r\n          type: \"warning\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    setFileAttached(true);\r\n    setAttachmentData({\r\n      ...attachmentData,\r\n      attachment: msgFile,\r\n      attachmentPreviewUrl: URL.createObjectURL(msgFile),\r\n    });\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    msgListBottom.current?.scrollIntoView({ behaviour: \"smooth\" });\r\n  };\r\n\r\n  // Socket client config\r\n  useEffect(() => {\r\n    dispatch(\r\n      setClientSocket(io(SOCKET_ENDPOINT, { transports: [\"websocket\"] }))\r\n    );\r\n  }, []);\r\n\r\n  // Listening to socket events\r\n  useEffect(() => {\r\n    if (!clientSocket) return;\r\n\r\n    if (!isSocketConnected && clientSocket) {\r\n      clientSocket.emit(\"init user\", loggedInUser?._id);\r\n      clientSocket.on(\"user connected\", () => {\r\n        console.log(\"socket connected\");\r\n        dispatch(setSocketConnected(true));\r\n      });\r\n    }\r\n\r\n    // .off() prevents .on() to execute multiple times\r\n    clientSocket.off(\"new msg received\").on(\"new msg received\", (newMsg) => {\r\n      const { chat } = newMsg;\r\n      dispatch(toggleRefresh(!refresh));\r\n      if (selectedChat && chat && selectedChat._id === chat._id)\r\n        setMessages([newMsg, ...messages]);\r\n    });\r\n\r\n    clientSocket\r\n      .off(\"remove deleted msg\")\r\n      .on(\"remove deleted msg\", (deletedMsgData) => {\r\n        const { deletedMsgId, chat } = deletedMsgData;\r\n        dispatch(toggleRefresh(!refresh));\r\n        if (selectedChat && chat && selectedChat._id === chat._id)\r\n          setMessages(messages.filter((msg) => msg?._id !== deletedMsgId));\r\n      });\r\n\r\n    clientSocket\r\n      .off(\"update modified msg\")\r\n      .on(\"update modified msg\", (updatedMsg) => {\r\n        const { chat } = updatedMsg;\r\n        dispatch(toggleRefresh(!refresh));\r\n        if (selectedChat && chat && selectedChat._id === chat._id)\r\n          setMessages(\r\n            messages.map((msg) => {\r\n              return msg?._id === updatedMsg?._id ? updatedMsg : msg;\r\n            })\r\n          );\r\n      });\r\n\r\n    clientSocket.off(\"display new grp\").on(\"display new grp\", () => {\r\n      dispatch(toggleRefresh(!refresh));\r\n    });\r\n  });\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (fetchMsgs) {\r\n      fetchMessages();\r\n      clientSocket?.emit(\"join chat\", selectedChat?._id);\r\n    }\r\n  }, [fetchMsgs]);\r\n\r\n  const openViewProfileDialog = (props) => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(props ? <ViewProfileBody {...props} /> : <ViewProfileBody />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"View Profile\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const openGroupInfoDialog = () => {\r\n    // Open group info dialog\r\n    dispatch(setGroupInfo(selectedChat));\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<GroupInfoBody messages={messages} />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Group Info\",\r\n      })\r\n    );\r\n  };\r\n\r\n  // Open delete photo confirm dialog\r\n  const openDeleteMsgConfirmDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<>Are you sure you want to delete this message?</>);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Delete Message\",\r\n        nolabel: \"NO\",\r\n        yeslabel: \"YES\",\r\n        loadingYeslabel: \"Deleting...\",\r\n        action: deleteMessage,\r\n      })\r\n    );\r\n  };\r\n\r\n  const openMsgOptionsMenu = (e) => {\r\n    setMsgOptionsMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`chatpageDiv chatpageView messagesView col text-light mx-0 mx-md-1 ${\r\n        selectedChat ? \"d-flex\" : \"d-none d-md-flex\"\r\n      } flex-column p-2 user-select-none`}\r\n    >\r\n      {selectedChat ? (\r\n        <>\r\n          <section className=\"messagesHeader d-flex justify-content-start position-relative w-100 fw-bold fs-4 bg-info bg-opacity-10 py-2\">\r\n            <CustomTooltip title=\"Go Back\" placement=\"bottom-start\" arrow>\r\n              <IconButton\r\n                onClick={closeChat}\r\n                className={`d-flex d-md-none ms-3`}\r\n                sx={{\r\n                  color: \"#999999\",\r\n                  \":hover\": {\r\n                    backgroundColor: \"#aaaaaa20\",\r\n                  },\r\n                }}\r\n              >\r\n                <ArrowBack />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n            <CustomTooltip\r\n              title={selectedChat?.isGroupChat ? \"Group Info\" : \"View Profile\"}\r\n              placement=\"bottom-start\"\r\n              arrow\r\n            >\r\n              <IconButton\r\n                sx={{\r\n                  margin: \"-8px\",\r\n                  \":hover\": {\r\n                    backgroundColor: \"#aaaaaa20\",\r\n                  },\r\n                }}\r\n                className=\"pointer ms-1 ms-md-4\"\r\n                onClick={\r\n                  selectedChat?.isGroupChat\r\n                    ? openGroupInfoDialog\r\n                    : openViewProfileDialog\r\n                }\r\n              >\r\n                <Avatar\r\n                  src={\r\n                    selectedChat?.isGroupChat\r\n                      ? selectedChat?.chatDisplayPic\r\n                      : getOneOnOneChatReceiver(\r\n                          loggedInUser,\r\n                          selectedChat?.users\r\n                        )?.profilePic || \"\"\r\n                  }\r\n                  alt={\"receiverAvatar\"}\r\n                />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n\r\n            <span className=\"ms-3 mt-1 fs-3 text-info\" title={chatName}>\r\n              {truncateString(chatName, 22, 17)}\r\n            </span>\r\n\r\n            <CustomTooltip title=\"Close Chat\" placement=\"bottom-end\" arrow>\r\n              <IconButton\r\n                onClick={closeChat}\r\n                className=\"d-none d-md-flex\"\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  right: 15,\r\n                  top: 8,\r\n                  color: \"#999999\",\r\n                  \":hover\": {\r\n                    backgroundColor: \"#aaaaaa20\",\r\n                  },\r\n                }}\r\n              >\r\n                <Close />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n          </section>\r\n          <section className=\"messagesBody m-1 p-2 position-relative d-flex flex-column\">\r\n            {/* Messages list */}\r\n            <div className=\"messages rounded-3 d-flex flex-column\">\r\n              <div\r\n                // Event delegation\r\n                onClick={(e) => {\r\n                  const fileId = e.target?.dataset?.download;\r\n                  if (fileId) {\r\n                    return downloadFile(fileId);\r\n                  }\r\n                  if (e.target?.dataset?.imageId) {\r\n                    return displayFullSizeImage(e);\r\n                  }\r\n                  const senderData = e.target?.dataset?.sender?.split(\"===\");\r\n                  const msgId = e.target?.dataset?.msg;\r\n                  if (senderData?.length) {\r\n                    // Open view profile dialog\r\n                    const props = {\r\n                      memberProfilePic: senderData[0],\r\n                      memberName: senderData[1],\r\n                      memberEmail: senderData[2],\r\n                    };\r\n                    return openViewProfileDialog(props);\r\n                  }\r\n                  if (msgId) {\r\n                    setClickedMsg(msgId);\r\n                    openMsgOptionsMenu(e);\r\n                  }\r\n                }}\r\n                className={`msgArea overflow-auto ${\r\n                  fileAttached ? \"d-none\" : \"d-flex\"\r\n                } flex-column-reverse`}\r\n              >\r\n                <div className=\"msgListBottom\" ref={msgListBottom}></div>\r\n                {loadingMsgs && !sending ? (\r\n                  <LoadingMsgs count={8} />\r\n                ) : (\r\n                  messages.map((m, i, msgs) => (\r\n                    <Message\r\n                      downloadingFileId={downloadingFileId}\r\n                      key={m._id}\r\n                      msgSent={m.sent}\r\n                      currMsg={m}\r\n                      prevMsg={i < msgs.length - 1 ? msgs[i + 1] : null}\r\n                    />\r\n                  ))\r\n                )}\r\n              </div>\r\n            </div>\r\n            {/* Edit/Delete Message menu */}\r\n            <MsgOptionsMenu\r\n              anchor={msgOptionsMenuAnchor}\r\n              setAnchor={setMsgOptionsMenuAnchor}\r\n              clickedMsg={clickedMsg}\r\n              openEditMsgDialog={() => {}}\r\n              openDeleteMsgConfirmDialog={openDeleteMsgConfirmDialog}\r\n            />\r\n            {fileAttached && (\r\n              <AttachmentPreview\r\n                attachmentData={attachmentData}\r\n                discardAttachment={() =>\r\n                  resetMsgInput({ discardAttachmentOnly: true })\r\n                }\r\n                CustomTooltip={CustomTooltip}\r\n              />\r\n            )}\r\n            {/* New Message Input */}\r\n            <div className=\"msgInputDiv d-flex position-absolute\">\r\n              <span\r\n                className={`d-inline-block attachFile ${disableIfLoading} pointer bg-dark`}\r\n              >\r\n                <CustomTooltip\r\n                  title=\"Attach File\"\r\n                  placement=\"bottom-start\"\r\n                  arrow\r\n                >\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      msgFileInput.current?.click();\r\n                    }}\r\n                    className={`d-flex ms-2 my-2`}\r\n                    sx={{ ...iconStyles, transform: \"rotateZ(45deg)\" }}\r\n                  >\r\n                    <AttachFile style={{ fontSize: 22 }} />\r\n                  </IconButton>\r\n                </CustomTooltip>\r\n                {/* Attachment File input */}\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"*\"\r\n                  onChange={handleMsgFileInputChange}\r\n                  name=\"attachment\"\r\n                  id=\"attachMsgFile\"\r\n                  ref={msgFileInput}\r\n                  className={`d-none`}\r\n                  disabled={loadingMsgs}\r\n                />\r\n              </span>\r\n              {/* Content/text input */}\r\n              <div\r\n                onInput={(e) => {\r\n                  const input = e.target.innerHTML;\r\n                  setEnableMsgSend(Boolean(input));\r\n                }}\r\n                ref={msgContent}\r\n                className={`msgInput w-100 text-start d-flex bg-dark px-3 justify-content-start`}\r\n                contentEditable={true}\r\n                style={{\r\n                  borderRadius:\r\n                    enableMsgSend || fileAttached ? \"0px\" : \"0px 7px 7px 0px\",\r\n                }}\r\n              ></div>\r\n              {/* Send button */}\r\n              {enableMsgSend || fileAttached ? (\r\n                <span\r\n                  className={`d-inline-block btn btn-dark btn-sm sendButton ${disableIfLoading} pointer`}\r\n                  onClick={sendMessage}\r\n                >\r\n                  <IconButton\r\n                    className={`d-flex my-1 mx-0 mx-md-0`}\r\n                    sx={{ margin: \"4px 0px\", padding: \"5px\", color: \"#999999\" }}\r\n                  >\r\n                    <Send style={{ fontSize: 20 }} />\r\n                  </IconButton>\r\n                </span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n          </section>\r\n        </>\r\n      ) : (\r\n        <div className=\"d-flex flex-column justify-content-start align-items-center h-100\">\r\n          <h2 className=\"mx-3 mt-1\">\r\n            Hello{\" \"}\r\n            <span\r\n              className=\"fw-bold\"\r\n              style={{ color: \"#A798F2\" }}\r\n            >{`${loggedInUser?.name?.split(\" \")[0]?.toUpperCase()}`}</span>{\" \"}\r\n            👋\r\n          </h2>\r\n          <LottieAnimation\r\n            ref={letsChatGif}\r\n            className={\"d-inline-block mt-3\"}\r\n            style={{ marginBottom: \"50px\", height: \"50%\" }}\r\n            animationData={animationData}\r\n          />\r\n          <p\r\n            className=\"h4 mx-5\"\r\n            style={{ marginTop: \"-20px\", color: \"#99C5EE\" }}\r\n          >\r\n            Search or Click a Chat, Search a User, or Create a Group to start or\r\n            open a chat.\r\n          </p>\r\n          <p className=\"h2\" style={{ color: \"#99C5EE\" }}>\r\n            Happy Chatting!😀\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesView;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ChatpageHeader from \"../components/ChatpageHeader\";\r\nimport CustomDialog from \"../components/utils/CustomDialog\";\r\nimport ChatListView from \"../components/ChatListView\";\r\nimport MessagesView from \"../components/MessagesView\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { displayToast } from \"../store/slices/ToastSlice\";\r\nimport {\r\n  selectAppState,\r\n  setLoggedInUser,\r\n  setSelectedChat,\r\n} from \"../store/slices/AppSlice\";\r\nimport {\r\n  hideDialog,\r\n  selectCustomDialogState,\r\n} from \"../store/slices/CustomDialogSlice\";\r\n\r\nconst ChatsPage = () => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const { dialogData, showDialogActions } = useSelector(\r\n    selectCustomDialogState\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n  const [fetchMsgs, setFetchMsgs] = useState(false);\r\n  const [loadingMsgs, setLoadingMsgs] = useState(false);\r\n  const [dialogBody, setDialogBody] = useState(<></>);\r\n\r\n  useEffect(() => {\r\n    // Session storage persists data even after page refresh, unlike state\r\n    const user = JSON.parse(localStorage.getItem(\"loggedInUser\"));\r\n    if (!user) return navigate(\"/\");\r\n\r\n    if (Date.now() >= parseInt(user.expiryTime)) {\r\n      navigate(\"/\");\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Session Expired\",\r\n          message: \"Please Login Again\",\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    dispatch(setLoggedInUser(user));\r\n    dispatch(hideDialog());\r\n    dispatch(setSelectedChat(null));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loggedInUser && (\r\n        <div className={`chatpage`}>\r\n          {/* Header component */}\r\n          <ChatpageHeader\r\n            setFetchMsgs={setFetchMsgs}\r\n            setDialogBody={setDialogBody}\r\n          />\r\n\r\n          <section className={`row g-1`}>\r\n            {/* Chat List component */}\r\n            <ChatListView\r\n              loadingMsgs={loadingMsgs}\r\n              setFetchMsgs={setFetchMsgs}\r\n              setDialogBody={setDialogBody}\r\n            />\r\n\r\n            {/* Chat Messages component */}\r\n            <MessagesView\r\n              loadingMsgs={loadingMsgs}\r\n              setLoadingMsgs={setLoadingMsgs}\r\n              fetchMsgs={fetchMsgs}\r\n              setFetchMsgs={setFetchMsgs}\r\n              setDialogBody={setDialogBody}\r\n            />\r\n          </section>\r\n\r\n          {/* Alert dialog */}\r\n          <CustomDialog\r\n            dialogData={dialogData}\r\n            showDialogActions={showDialogActions}\r\n            showDialogClose={true}\r\n          >\r\n            {dialogBody}\r\n          </CustomDialog>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatsPage;\r\n"],"names":["menuPaperProps","elevation","sx","overflow","maxHeight","filter","borderRadius","backgroundColor","mt","menuItemProps","color","fontSize","menuIconProps","children","menuAnchor","setMenuAnchor","transformOrigin","anchorOrigin","isMenuOpen","Boolean","closeMenu","anchorEl","open","onClose","onClick","PaperProps","style","marginBottom","anchor","setAnchor","loggedInUser","useSelector","selectAppState","notifs","useDispatch","notifications","vertical","horizontal","length","map","n","MenuItem","_id","getUpdatedState","selectFormfieldState","loading","disableIfLoading","formLabelClassName","formFieldClassName","inputFieldClassName","useState","showPassword","setShowPassword","currentPassword","newPassword","confirmNewPassword","changePasswordData","setChangePasswordData","handleChangeFor","prop","e","target","value","useEffect","className","htmlFor","type","onChange","required","autoFocus","name","id","disabled","placeholder","PasswordVisibilityToggle","originalName","getUpdatedName","setName","width","selectProfilePic","openDeletePhotoConfirmDialog","deletePhotoCondition","ListItemIcon","Upload","Delete","arrowStyles","tooltipStyles","styled","props","Tooltip","arrow","classes","popper","theme","tooltipClasses","btnHoverStyle","btnCustomStyle","fontFamily","dialogData","showDialogActions","showDialogClose","closeDialog","dispatch","navigate","useNavigate","isFullScreen","isOpen","title","nolabel","yeslabel","loadingYeslabel","action","handleDialogClose","hideDialog","handleYes","result","setSelectedChat","Dialog","fullScreen","backgroundImage","DialogTitle","marginTop","marginRight","IconButton","position","right","top","Close","DialogContent","DialogActions","Button","KeyboardDoubleArrowLeft","margin","CircularProgress","size","KeyboardDoubleArrowRight","marginLeft","showChildDialogActions","showChildDialogClose","childDialogData","setChildDialogData","childDialogBody","setChildDialogBody","displayChildDialog","options","closeChildDialog","data","setChildDialogMethods","CustomTooltip","getCustomTooltip","maxWidth","border","childDialogMethods","selectChildDialogState","profilePicUrl","profilePic","email","profileData","setProfileData","editProfilePicMenuAnchor","setEditProfilePicMenuAnchor","editedName","uploading","setUploading","imgInput","useRef","isGuestUser","persistUpdatedUser","updatedUser","localStorage","setItem","JSON","stringify","setLoggedInUser","clickOnKeydown","key","click","handleImgInputChange","image","files","isImageFile","displayToast","message","duration","current","setLoading","config","headers","Authorization","token","formData","FormData","append","cloudinary_id","axios","expiryTime","response","deleteProfilePic","currentProfilePic","updatedName","updateProfileName","newUserName","src","alt","placement","tabIndex","onKeyDown","Edit","endsWith","accept","ref","truncateString","editPasswordData","setDialogBody","updatedState","setShowDialogActions","displayDialog","Person","ManageAccounts","removeItem","Key","Logout","user","truncateValues","max","index","listOf","dpRadius","count","skeletonStyle","Array","i","Skeleton","variant","height","forwardRef","inputRef","searchHandler","clearInput","typing","setTyping","Search","trim","replace","cursor","focus","padding","Clear","setFetchMsgs","isDrawerOpen","setIsDrawerOpen","searchQuery","setSearchQuery","searchResults","setSearchResults","searchUserInput","handleClose","searchUsers","debounce","query","createOrRetrieveChat","userId","Drawer","borderTopRightRadius","borderBottomRightRadius","transitionDuration","ChevronLeft","overflowY","overflowX","dataset","appGif","clientSocket","notificationsMenuAnchor","setNotificationsMenuAnchor","profileSettingsMenuAnchor","setProfileSettingsMenuAnchor","LottieAnimation","animationData","Notifications","Avatar","refresh","groupInfo","chatDisplayPicUrl","chatName","editGroupDpMenuAnchor","setEditGroupDpMenuAnchor","createGroupChat","chatDisplayPic","users","toggleRefresh","preventDefault","setGroupInfo","process","URL","createObjectURL","getAddedMembers","forCreateGroup","groupData","setGroupData","fetching","setFetching","groupMembers","isMemberSelected","setIsMemberSelected","addedMembers","setAddedMembers","setShowDialogClose","openNewGroupDialog","setDialogAction","membersNotAdded","forEach","addedMember","m","flex","Chip","avatar","label","split","onDelete","u","unselectUser","selectedUser","find","lastMsgFileType","chat","selectedChat","receiverEmail","isGroupChat","lastMessage","tooltipTitle","lastMsgContent","content","replaceAll","lastMsgDate","Date","createdAt","lastMsgDateString","msgDateStringOf","lastMsgFile","fileUrl","lastMsgFileName","file_name","test","msgTimeStringOf","dateStringOf","sender","DoneAll","Image","GifBox","VideoFile","AudioFile","PictureAsPdf","Article","FILE_STYLES","event","audioSrc","videoSrc","controls","objectFit","loadingMsgs","chats","setChats","filteredChats","setFilteredChats","searchChatInput","fetchChats","mappedChats","receiver","getOneOnOneChatReceiver","searchChats","chatNameInput","toLowerCase","includes","pointerEvents","GroupAdd","chatId","displayFullSizeImage","clickedChat","undefined","memberProfilePic","memberName","memberEmail","isLoggedInUser","isGroupAdmin","KeyboardArrowDown","clickedMember","isLoggedInUserGroupAdmin","groupAdmins","some","admin","clickedMemberName","styledMemberName","updateView","openChat","makeGroupAdmin","dismissAsAdmin","removeFromGroup","userToBeRemoved","Message","InfoOutlined","AdminPanelSettings","GroupRemove","filteredMembersCache","admins","setClickedMember","memberOptionsMenuAnchor","setMemberOptionsMenuAnchor","a","every","member","setFilteredMembers","filterMemberInput","filteredMembers","filterMembers","memberNameInput","openMemberOptionsMenu","messages","groupDP","groupName","isUserGroupAdmin","btnClassName","updatedValue","updateGroupName","deleteGroupDp","currentDP","exitGroup","deleteGroup","deleteGroupPromise","deleteMessagesPromise","messageIds","isDeleteGroupRequest","Promise","resolve","all","updatedMembers","addMembersToGroup","usersToBeAdded","lineHeight","PersonAdd","ONE_MB","msgSent","downloadingFileId","isPreview","fileData","previewStyles","iconStyles","file_id","fileContents","fileSize","parseInt","toFixed","isDownloadingFile","displayAfterSending","downloadIcon","Downloading","Download","attachment","startsWith","currMsg","prevMsg","msgContentRef","senderData","currMsgId","isSameSender","currMsgDate","prevMsgDate","isOtherDay","showCurrSender","innerHTML","openEditMsgDialog","openDeleteMsgConfirmDialog","FILE_WRAPPER_CLASS","ATTACHMENT_STYLE","attachmentData","discardAttachment","attachmentPreviewUrl","previewTitle","left","zIndex","autoPlay","setLoadingMsgs","fetchMsgs","letsChatGif","isSocketConnected","sending","setSending","enableMsgSend","setEnableMsgSend","fileAttached","setFileAttached","setMessages","clickedMsg","setClickedMsg","setAttachmentData","msgListBottom","msgFileInput","msgContent","setDownloadingFileId","msgOptionsMenuAnchor","setMsgOptionsMenuAnchor","resetMsgInput","discardAttachmentOnly","closeChat","downloadFile","fileId","responseType","link","document","createElement","href","Blob","setAttribute","body","appendChild","remove","fetchMessages","msg","sendMessage","msgData","newMsg","getTime","toISOString","sent","apiUrl","isImageOrGifFile","emit","deleteMessage","deletedMsgId","senderId","setClientSocket","io","transports","on","console","log","setSocketConnected","off","deletedMsgData","updatedMsg","scrollIntoView","behaviour","scrollToBottom","openViewProfileDialog","ArrowBack","download","imageId","msgId","openMsgOptionsMenu","msgs","transform","AttachFile","msgFile","onInput","input","contentEditable","Send","toUpperCase","selectCustomDialogState","dialogBody","parse","getItem","now"],"sourceRoot":""}