{"version":3,"file":"static/js/124.f7d96aaf.chunk.js","mappings":"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","sources":["components/utils/Menu.jsx","components/utils/MenuItemText.jsx","components/menus/NotificationsMenu.jsx","components/dialogs/ChangePasswordBody.jsx","components/dialogs/EditNameBody.jsx","components/menus/EditPicMenu.jsx","components/utils/CustomTooltip.jsx","components/utils/CustomDialog.jsx","components/utils/ChildDialog.jsx","components/dialogs/EditProfileBody.jsx","components/menus/ProfileSettingsMenu.jsx","components/utils/UserListItem.jsx","components/utils/LoadingList.jsx","components/utils/SearchInput.jsx","components/utils/SearchUsersDrawer.jsx","components/ChatpageHeader.jsx","components/dialogs/NewGroupBody.jsx","components/dialogs/AddMembersToGroup.jsx","components/utils/ChatListItem.jsx","components/utils/FullSizeImage.jsx","components/ChatListView.jsx","components/dialogs/ViewProfileBody.jsx","components/utils/GroupMemberItem.jsx","components/menus/MemberOptionsMenu.jsx","components/dialogs/ViewGroupMembers.jsx","components/dialogs/GroupInfoBody.jsx","components/utils/LoadingMsgs.jsx","components/utils/MsgAttachment.jsx","components/utils/AttachmentPreview.jsx","components/utils/Message.jsx","components/menus/MsgOptionsMenu.jsx","components/MessagesView.jsx","pages/ChatsPage.jsx"],"sourcesContent":["import { Menu as MuiMenu } from \"@mui/material\";\r\n\r\nexport const menuPaperProps = {\r\n  elevation: 0,\r\n  sx: {\r\n    overflow: \"auto\",\r\n    maxHeight: 250,\r\n    filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\r\n    borderRadius: 2,\r\n    backgroundColor: \"#404040\",\r\n    mt: 1,\r\n  },\r\n};\r\n\r\nexport const menuItemProps = {\r\n  \":hover\": { backgroundColor: \"#505050\" },\r\n  color: \"#e0e0e0\",\r\n  fontSize: \"19px\",\r\n};\r\n\r\nexport const menuIconProps = { color: \"lightblue\" };\r\n\r\nconst Menu = ({\r\n  children,\r\n  menuAnchor,\r\n  setMenuAnchor,\r\n  transformOrigin,\r\n  anchorOrigin,\r\n}) => {\r\n  const isMenuOpen = Boolean(menuAnchor);\r\n\r\n  const closeMenu = () => {\r\n    setMenuAnchor(null);\r\n  };\r\n\r\n  return (\r\n    <MuiMenu\r\n      anchorEl={menuAnchor}\r\n      open={isMenuOpen}\r\n      onClose={closeMenu}\r\n      onClick={closeMenu}\r\n      PaperProps={menuPaperProps}\r\n      transformOrigin={transformOrigin}\r\n      anchorOrigin={anchorOrigin}\r\n    >\r\n      {children}\r\n    </MuiMenu>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","const MenuItemText = ({ children }) => {\r\n  return <span style={{ marginBottom: \"3px\" }}>{children}</span>;\r\n};\r\n\r\nexport default MenuItemText;\r\n","import { MenuItem } from \"@mui/material\";\r\nimport Menu, { menuItemProps } from \"../utils/Menu\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  setLoggedInUser,\r\n  setSelectedChat,\r\n} from \"../../store/slices/AppSlice\";\r\nimport { getOneOnOneChatReceiver, truncateString } from \"../../utils/appUtils\";\r\nimport axios from \"../../utils/axios\";\r\n\r\nconst NotificationsMenu = ({ chats, setFetchMsgs, anchor, setAnchor }) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n  const notifs = [...loggedInUser?.notifications];\r\n  const notifGroups = {};\r\n\r\n  notifs.forEach((notif) => {\r\n    // Notifications grouped by 'chat'\r\n    const notifChat = notif.chat;\r\n    const chatId = notifChat._id;\r\n    const chatName = notifChat.isGroupChat\r\n      ? `group===${notifChat.chatName}`\r\n      : getOneOnOneChatReceiver(loggedInUser, notifChat.users).name;\r\n    const notifGroupId = `${chatId}---${chatName}`;\r\n    if (notifGroups[notifGroupId]) {\r\n      ++notifGroups[notifGroupId];\r\n    } else {\r\n      notifGroups[notifGroupId] = 1;\r\n    }\r\n  });\r\n\r\n  const deletePersistedNotifs = async (notifsToBeDeleted) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n    try {\r\n      await axios.put(\r\n        `/api/user/delete/notifications`,\r\n        { notificationIds: JSON.stringify(notifsToBeDeleted) },\r\n        config\r\n      );\r\n    } catch (error) {\r\n      console.log(\"Couldn't Delete Notifications : \", error.message);\r\n    }\r\n  };\r\n\r\n  const deleteNotifications = (clickedChatId) => {\r\n    // Delete notifs from global state and localStorage\r\n    const notifsToBeDeleted = [];\r\n    for (let i = 0; i < notifs.length; ++i) {\r\n      if (notifs[i].chat._id === clickedChatId) {\r\n        const deletedNotif = notifs.splice(i, 1)[0];\r\n        notifsToBeDeleted.push(deletedNotif._id);\r\n        // After deleting element at 'i', next element (i+1) shifts back\r\n        // to 'i' index\r\n        --i;\r\n      }\r\n    }\r\n    const updatedUser = { ...loggedInUser, notifications: notifs };\r\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\r\n    dispatch(setLoggedInUser(updatedUser));\r\n\r\n    // Delete notifs that were persisted in mongodb\r\n    deletePersistedNotifs(notifsToBeDeleted);\r\n  };\r\n\r\n  const chatNotifClickHandler = (e) => {\r\n    const chatNotifId =\r\n      e.target.dataset.notifGroup || e.target.parentNode.dataset.notifGroup;\r\n    if (!chatNotifId) return;\r\n\r\n    const chatId = chatNotifId.split(\"---\")[0];\r\n    const chatToBeOpened = chats.find((chat) => chat._id === chatId);\r\n    dispatch(setSelectedChat(chatToBeOpened));\r\n    setFetchMsgs(true); // To fetch selected chat msgs\r\n    deleteNotifications(chatId);\r\n    if (chatToBeOpened?.isGroupChat) dispatch(setGroupInfo(chatToBeOpened));\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      {Object.keys(notifGroups).length ? (\r\n        <div onClick={chatNotifClickHandler}>\r\n          {Object.keys(notifGroups).map((notifGroupId) => {\r\n            const fromGroup = notifGroupId.includes(\"group===\");\r\n            const notifCount = notifGroups[notifGroupId];\r\n            let chatName = notifGroupId.split(\"---\")[1];\r\n            chatName = fromGroup ? chatName.split(\"===\")[1] : chatName;\r\n            return (\r\n              <MenuItem\r\n                key={notifGroupId}\r\n                data-notif-group={notifGroupId}\r\n                sx={menuItemProps}\r\n              >\r\n                <MenuItemText>\r\n                  {`${notifCount} message${notifCount > 1 ? \"s\" : \"\"} ${\r\n                    fromGroup ? \"in\" : \"from\"\r\n                  } `}\r\n                  <span\r\n                    title={chatName}\r\n                    data-notif-group={notifGroupId}\r\n                    className=\"text-info\"\r\n                  >\r\n                    {`${truncateString(\r\n                      fromGroup ? chatName : chatName.split(\" \")[0],\r\n                      12,\r\n                      9\r\n                    )}`}\r\n                  </span>\r\n                </MenuItemText>\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <MenuItem sx={menuItemProps}>\r\n          <MenuItemText>No notifications</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default NotificationsMenu;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\nimport PasswordVisibilityToggle from \"../utils/PasswordVisibilityToggle\";\r\n\r\nconst ChangePasswordBody = ({ getUpdatedState }) => {\r\n  const {\r\n    loading,\r\n    disableIfLoading,\r\n    formLabelClassName,\r\n    formFieldClassName,\r\n    inputFieldClassName,\r\n  } = useSelector(selectFormfieldState);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [changePasswordData, setChangePasswordData] = useState({\r\n    currentPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmNewPassword: \"\",\r\n  });\r\n\r\n  const { currentPassword, newPassword, confirmNewPassword } =\r\n    changePasswordData;\r\n\r\n  const handleChangeFor = (prop) => (e) => {\r\n    setChangePasswordData({ ...changePasswordData, [prop]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Return updated state to profile settings menu\r\n    getUpdatedState(changePasswordData);\r\n  }, [changePasswordData]);\r\n\r\n  const onEnterKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      // Submit updated password data\r\n      getUpdatedState(changePasswordData, { submitUpdatedPassword: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Current Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 mt-3 col-md-6 order-md-2`}\r\n      >\r\n        <label htmlFor=\"current_password\" className={`${formLabelClassName}`}>\r\n          Current Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={currentPassword}\r\n            onChange={handleChangeFor(\"currentPassword\")}\r\n            onKeyDown={onEnterKeyDown}\r\n            required\r\n            autoFocus\r\n            name=\"currentPassword\"\r\n            id=\"current_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Used While Signing In\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n      {/* New Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 col-md-6 order-md-2`}\r\n      >\r\n        <label htmlFor=\"new_password\" className={`${formLabelClassName}`}>\r\n          New Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={newPassword}\r\n            onChange={handleChangeFor(\"newPassword\")}\r\n            onKeyDown={onEnterKeyDown}\r\n            required\r\n            name=\"newPassword\"\r\n            id=\"new_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Different from Current\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n      {/* Confirm New Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 col-md-6 order-md-2`}\r\n      >\r\n        <label\r\n          htmlFor=\"confirm_new_password\"\r\n          className={`${formLabelClassName}`}\r\n        >\r\n          Confirm New Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={confirmNewPassword}\r\n            onChange={handleChangeFor(\"confirmNewPassword\")}\r\n            onKeyDown={onEnterKeyDown}\r\n            required\r\n            name=\"confirmNewPassword\"\r\n            id=\"confirm_new_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Exactly as Above\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordBody;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\n\r\nconst EditNameBody = ({ originalName, getUpdatedName, placeholder }) => {\r\n  const { loading, formFieldClassName, inputFieldClassName } =\r\n    useSelector(selectFormfieldState);\r\n  const [name, setName] = useState(originalName);\r\n\r\n  useEffect(() => {\r\n    getUpdatedName(name);\r\n  }, [name]);\r\n\r\n  return (\r\n    <section\r\n      className={`${formFieldClassName} mx-auto`}\r\n      style={{ width: \"clamp(250px, 60vw, 360px)\" }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            // Submit updated group name\r\n            getUpdatedName(name, { submitUpdatedName: true });\r\n          }\r\n        }}\r\n        name=\"editname\"\r\n        autoFocus\r\n        className={`${inputFieldClassName} mt-1`}\r\n        disabled={loading}\r\n        placeholder={placeholder}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditNameBody;\r\n","import { Delete, Upload } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\n\r\nconst EditPicMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  selectProfilePic,\r\n  openDeletePhotoConfirmDialog,\r\n  deletePhotoCondition,\r\n}) => {\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={selectProfilePic}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Upload />\r\n        </ListItemIcon>\r\n        <MenuItemText>Upload Photo</MenuItemText>\r\n      </MenuItem>\r\n      {deletePhotoCondition && (\r\n        <MenuItem sx={menuItemProps} onClick={openDeletePhotoConfirmDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <Delete />\r\n          </ListItemIcon>\r\n          <MenuItemText>Delete Photo</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default EditPicMenu;\r\n","import { styled } from \"@mui/material/styles\";\r\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\r\n\r\nconst getCustomTooltip = (arrowStyles, tooltipStyles) =>\r\n  styled(({ className, ...props }) => (\r\n    <Tooltip {...props} arrow classes={{ popper: className }} />\r\n  ))(({ theme }) => ({\r\n    [`& .${tooltipClasses.arrow}`]: { ...arrowStyles },\r\n    [`& .${tooltipClasses.tooltip}`]: { ...tooltipStyles },\r\n  }));\r\n\r\nexport default getCustomTooltip;\r\n","import {\r\n  Close,\r\n  KeyboardDoubleArrowLeft,\r\n  KeyboardDoubleArrowRight,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setSelectedChat } from \"../../store/slices/AppSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\n\r\nexport const btnHoverStyle = {\r\n  \":hover\": { backgroundColor: \"#93c2f727\" },\r\n};\r\nexport const btnCustomStyle = {\r\n  fontSize: 19,\r\n  color: \"#8cc2ff\",\r\n  fontFamily: \"Mirza\",\r\n  borderRadius: 10,\r\n};\r\n\r\nconst CustomDialog = ({\r\n  children,\r\n  dialogData,\r\n  showDialogActions,\r\n  showDialogClose,\r\n  closeDialog,\r\n}) => {\r\n  const { loading, disableIfLoading } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const {\r\n    isFullScreen,\r\n    isOpen,\r\n    title,\r\n    nolabel,\r\n    yeslabel,\r\n    loadingYeslabel,\r\n    action,\r\n  } = dialogData;\r\n\r\n  const handleDialogClose = () => {\r\n    if (closeDialog) return closeDialog();\r\n    dispatch(hideDialog());\r\n  };\r\n\r\n  const handleYes = async () => {\r\n    const result = await action();\r\n    if (\r\n      result === \"profileUpdated\" ||\r\n      result === \"membersUpdated\" ||\r\n      result === \"msgActionDone\"\r\n    ) {\r\n      handleDialogClose();\r\n    } else if (result === \"createdGroup\") {\r\n      handleDialogClose();\r\n      // Close Parent Dialog as well\r\n      dispatch(hideDialog());\r\n    } else if (result === \"pwdUpdated\" || result === \"loggingOut\") {\r\n      handleDialogClose();\r\n      dispatch(setSelectedChat(null));\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen={Boolean(isFullScreen)}\r\n      PaperProps={{\r\n        sx: {\r\n          borderRadius: 2,\r\n          backgroundImage: \"linear-gradient(0deg,#353535,#444)\",\r\n        },\r\n      }}\r\n      className={`user-select-none ${disableIfLoading}`}\r\n      open={isOpen}\r\n      onClose={handleDialogClose}\r\n    >\r\n      <DialogTitle\r\n        style={{ fontSize: 26, color: \"#ffffff\", fontFamily: \"Mirza\" }}\r\n      >\r\n        <span\r\n          className=\"d-flex\"\r\n          title={title}\r\n          style={{ marginTop: -5, marginRight: 10 }}\r\n        >\r\n          {truncateString(title, 24, 21)}\r\n        </span>\r\n        {showDialogClose && (\r\n          <IconButton\r\n            onClick={handleDialogClose}\r\n            disabled={loading}\r\n            sx={{\r\n              position: \"absolute\",\r\n              right: 8,\r\n              top: 8,\r\n              color: \"#999999\",\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        )}\r\n      </DialogTitle>\r\n      <DialogContent\r\n        style={{ fontSize: 19, color: \"#e0e0e0\", fontFamily: \"Mirza\" }}\r\n      >\r\n        {children || <></>}\r\n      </DialogContent>\r\n      {showDialogActions && (\r\n        <DialogActions>\r\n          <Button\r\n            sx={btnHoverStyle}\r\n            disabled={loading}\r\n            style={btnCustomStyle}\r\n            onClick={handleDialogClose}\r\n          >\r\n            {nolabel === \"Back\" ? (\r\n              <span>\r\n                <KeyboardDoubleArrowLeft\r\n                  className=\"btnArrowIcons\"\r\n                  style={{\r\n                    margin: \"0px 5px 2px 0px\",\r\n                  }}\r\n                />\r\n                Back\r\n              </span>\r\n            ) : (\r\n              nolabel\r\n            )}\r\n          </Button>\r\n          <Button\r\n            sx={btnHoverStyle}\r\n            disabled={loading}\r\n            style={btnCustomStyle}\r\n            onClick={handleYes}\r\n          >\r\n            {loading && yeslabel !== \"Next\" ? (\r\n              <>\r\n                <CircularProgress size={25} style={{ marginRight: 12 }} />\r\n                <span style={{ marginRight: 22 }}>{loadingYeslabel}</span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {yeslabel === \"Next\" ? (\r\n                  <span>\r\n                    Next\r\n                    <KeyboardDoubleArrowRight\r\n                      className=\"btnArrowIcons\"\r\n                      style={{\r\n                        marginLeft: 4,\r\n                      }}\r\n                    />\r\n                  </span>\r\n                ) : (\r\n                  yeslabel\r\n                )}\r\n              </>\r\n            )}\r\n          </Button>\r\n        </DialogActions>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CustomDialog;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setChildDialogMethods } from \"../../store/slices/ChildDialogSlice\";\r\nimport CustomDialog from \"./CustomDialog\";\r\n\r\nconst ChildDialog = ({\r\n  showChildDialogActions = true,\r\n  showChildDialogClose = false,\r\n}) => {\r\n  // Child Dialog config\r\n  const [childDialogData, setChildDialogData] = useState({\r\n    isOpen: false,\r\n    title: \"Child Dialog\",\r\n    nolabel: \"NO\",\r\n    yeslabel: \"YES\",\r\n    loadingYeslabel: \"Updating...\",\r\n    action: () => {},\r\n  });\r\n  const [childDialogBody, setChildDialogBody] = useState(<></>);\r\n  const dispatch = useDispatch();\r\n  const displayChildDialog = (options) => {\r\n    setChildDialogData({ ...options, isOpen: true });\r\n  };\r\n  const closeChildDialog = (data) => {\r\n    setChildDialogData({ ...data, isOpen: false });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setChildDialogMethods({\r\n        setChildDialogBody,\r\n        displayChildDialog,\r\n        closeChildDialog,\r\n      })\r\n    );\r\n  }, [childDialogData]);\r\n\r\n  return (\r\n    <CustomDialog\r\n      dialogData={childDialogData}\r\n      closeDialog={closeChildDialog}\r\n      showDialogActions={showChildDialogActions}\r\n      showDialogClose={showChildDialogClose}\r\n    >\r\n      {childDialogBody}\r\n    </CustomDialog>\r\n  );\r\n};\r\n\r\nexport default ChildDialog;\r\n","import { Edit } from \"@mui/icons-material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"../../utils/axios\";\r\nimport EditNameBody from \"./EditNameBody\";\r\nimport { CircularProgress, IconButton } from \"@mui/material\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport { isImageFile, truncateString, TWO_MB } from \"../../utils/appUtils\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { selectAppState, setLoggedInUser } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#111\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\n\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst EditProfileBody = () => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const { loading, disableIfLoading } = useSelector(selectFormfieldState);\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const dispatch = useDispatch();\r\n  const { setChildDialogBody, displayChildDialog, closeChildDialog } =\r\n    childDialogMethods;\r\n\r\n  const [profileData, setProfileData] = useState({\r\n    profilePicUrl: loggedInUser?.profilePic,\r\n    name: loggedInUser?.name,\r\n    email: loggedInUser?.email,\r\n  });\r\n  const [editProfilePicMenuAnchor, setEditProfilePicMenuAnchor] =\r\n    useState(null);\r\n\r\n  useEffect(() => {\r\n    setProfileData({\r\n      ...profileData,\r\n      profilePicUrl: loggedInUser?.profilePic,\r\n      name: loggedInUser?.name,\r\n    });\r\n  }, [loggedInUser]);\r\n\r\n  // For profile pic upload loading indicator\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const { profilePicUrl, name, email } = profileData;\r\n  const imgInput = useRef();\r\n  const isGuestUser = loggedInUser?.email === \"guest.user@gmail.com\";\r\n\r\n  const persistUpdatedUser = (updatedUser) => {\r\n    // localStorage persists updated user even after page refresh\r\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\r\n    dispatch(setLoggedInUser(updatedUser));\r\n  };\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") {\r\n      e.target.click();\r\n    }\r\n  };\r\n\r\n  // Update Profile Pic\r\n  const handleImgInputChange = async (e) => {\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n\r\n    if (!isImageFile(image.name)) {\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Invalid Image File\",\r\n          message: \"Please Select an Image File (png/jpg/jpeg/svg/webp)\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    if (image.size >= TWO_MB) {\r\n      imgInput.current.value = \"\";\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Select an Image Smaller than 2 MB\",\r\n          type: \"warning\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    dispatch(setLoading(true));\r\n    setUploading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"profilePic\", image);\r\n    formData.append(\"currentProfilePic\", loggedInUser?.profilePic);\r\n    formData.append(\"cloudinary_id\", loggedInUser?.cloudinary_id);\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/update/profile-pic\",\r\n        formData,\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"ProfilePic Updated Successfully.\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n      persistUpdatedUser({\r\n        ...data,\r\n        token: loggedInUser.token,\r\n        expiryTime: loggedInUser.expiryTime,\r\n      });\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"ProfilePic Update Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const deleteProfilePic = async () => {\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/delete/profile-pic\",\r\n        {\r\n          currentProfilePic: loggedInUser?.profilePic,\r\n          cloudinary_id: loggedInUser?.cloudinary_id,\r\n        },\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"ProfilePic Deleted Successfully.\",\r\n          type: \"success\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      persistUpdatedUser({\r\n        ...data,\r\n        token: loggedInUser.token,\r\n        expiryTime: loggedInUser.expiryTime,\r\n      });\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"ProfilePic Deletion Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Edited Name config\r\n  let editedName;\r\n\r\n  const getUpdatedName = (updatedValue, options) => {\r\n    editedName = updatedValue;\r\n    if (options?.submitUpdatedName)\r\n      updateProfileName({ enterKeyPressed: true });\r\n  };\r\n\r\n  const updateProfileName = async (options) => {\r\n    if (!editedName) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Enter a Valid Name\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser?.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/update/name\",\r\n        { newUserName: editedName },\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Name Updated Successfully.\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      persistUpdatedUser({\r\n        ...data,\r\n        token: loggedInUser.token,\r\n        expiryTime: loggedInUser.expiryTime,\r\n      });\r\n      if (options?.enterKeyPressed) closeChildDialog();\r\n      else return \"profileUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Name Update Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Open edit name dialog\r\n  const openEditNameDialog = () => {\r\n    setChildDialogBody(\r\n      <EditNameBody\r\n        originalName={loggedInUser?.name}\r\n        getUpdatedName={getUpdatedName}\r\n        placeholder=\"Enter New Name\"\r\n      />\r\n    );\r\n    displayChildDialog({\r\n      title: \"Edit Name\",\r\n      nolabel: \"CANCEL\",\r\n      yeslabel: \"SAVE\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: updateProfileName,\r\n    });\r\n  };\r\n\r\n  // Open delete photo confirm dialog\r\n  const openDeletePhotoConfirmDialog = () => {\r\n    setChildDialogBody(<>Are you sure you want to delete this profile pic?</>);\r\n    displayChildDialog({\r\n      title: \"Delete Profile Pic\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteProfilePic,\r\n    });\r\n  };\r\n\r\n  const openEditProfilePicMenu = (e) => {\r\n    setEditProfilePicMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* View/Edit Profile Pic */}\r\n      {loading && uploading ? (\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n          <CircularProgress\r\n            size={75}\r\n            style={{ margin: \"30px 0px\", color: \"lightblue\" }}\r\n          />\r\n          <span style={{ marginBottom: \"45px\" }} className=\"text-light h1\">\r\n            {\" Updating Photo...\"}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <section className=\"dialogField d-flex position-relative mb-4\">\r\n          <img\r\n            className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n            id=\"viewedit__profilePic\"\r\n            src={profilePicUrl}\r\n            alt=\"profilePic\"\r\n          />\r\n          {!isGuestUser && (\r\n            <CustomTooltip title=\"Edit Profile Pic\" placement=\"right\" arrow>\r\n              <i\r\n                id=\"editProfilePic\"\r\n                tabIndex={2}\r\n                onKeyDown={clickOnKeydown}\r\n                className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n                onClick={openEditProfilePicMenu}\r\n              >\r\n                <Edit className=\"text-light fs-6\" />\r\n              </i>\r\n            </CustomTooltip>\r\n          )}\r\n          {/* Edit/Delete profile pic menu */}\r\n          <EditPicMenu\r\n            anchor={editProfilePicMenuAnchor}\r\n            setAnchor={setEditProfilePicMenuAnchor}\r\n            selectProfilePic={() => imgInput.current.click()}\r\n            openDeletePhotoConfirmDialog={openDeletePhotoConfirmDialog}\r\n            deletePhotoCondition={\r\n              !loggedInUser?.profilePic?.endsWith(\"user_dqzjdz.png\")\r\n            }\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={handleImgInputChange}\r\n            name=\"profilepic\"\r\n            id=\"editProfilePic\"\r\n            ref={imgInput}\r\n            className={`d-none`}\r\n            disabled={loading}\r\n          />\r\n        </section>\r\n      )}\r\n      {/* View Name */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-15px\" }}>\r\n          <CustomTooltip\r\n            title={name?.length > 24 ? name : \"\"}\r\n            placement=\"top-start\"\r\n            arrow\r\n          >\r\n            <div\r\n              className=\"w-100 h1 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"35px\", wordBreak: \"break-all\" }}\r\n            >\r\n              {truncateString(name, 25, 21)}\r\n            </div>\r\n          </CustomTooltip>\r\n          {!isGuestUser && (\r\n            <CustomTooltip title=\"Edit Name\" placement=\"top\" arrow>\r\n              <IconButton\r\n                tabIndex={3}\r\n                onKeyDown={clickOnKeydown}\r\n                onClick={openEditNameDialog}\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  right: -8,\r\n                  top: 6,\r\n                  \":hover\": {\r\n                    backgroundColor: \"#aaaaaa30\",\r\n                  },\r\n                }}\r\n              >\r\n                <Edit className=\"text-light\" />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n          )}\r\n        </div>\r\n      </section>\r\n      {/* View Email */}\r\n      <section\r\n        className={`dialogField text-center mb-2`}\r\n        style={{ marginTop: \"-10px\" }}\r\n      >\r\n        <CustomTooltip\r\n          title={email?.length > 24 ? email : \"\"}\r\n          placement=\"bottom\"\r\n          arrow\r\n        >\r\n          <span className=\"h4\" style={{ color: \"lightblue\" }}>\r\n            {truncateString(email, 25, 21)}\r\n          </span>\r\n        </CustomTooltip>\r\n      </section>\r\n      {/* Child confirmation dialog */}\r\n      <ChildDialog />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfileBody;\r\n","import { Key, Logout, ManageAccounts, Person } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport axios from \"../../utils/axios\";\r\nimport ChangePasswordBody from \"../dialogs/ChangePasswordBody\";\r\nimport EditProfileBody from \"../dialogs/EditProfileBody\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setLoggedInUser,\r\n  setSelectedChat,\r\n} from \"../../store/slices/AppSlice\";\r\nimport { setLoading } from \"../../store/slices/FormfieldSlice\";\r\nimport {\r\n  displayDialog,\r\n  hideDialog,\r\n  setShowDialogActions,\r\n} from \"../../store/slices/CustomDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ProfileSettingsMenu = ({ anchor, setAnchor, setDialogBody }) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const isGuestUser = loggedInUser?.email === \"guest.user@gmail.com\";\r\n\r\n  // Edit Password Config\r\n  let editPasswordData;\r\n\r\n  const getUpdatedState = (updatedState, options) => {\r\n    editPasswordData = updatedState;\r\n    if (options?.submitUpdatedPassword)\r\n      updatePassword({ enterKeyPressed: true });\r\n  };\r\n\r\n  const updatePassword = async (options) => {\r\n    const { currentPassword, newPassword, confirmNewPassword } =\r\n      editPasswordData;\r\n\r\n    if (!currentPassword || !newPassword || !confirmNewPassword) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Enter All the Fields\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    if (currentPassword === newPassword) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"New Password Must Differ from Current Password\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    if (newPassword !== confirmNewPassword) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"New Password Must Match Confirm New Password\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      await axios.put(\r\n        \"/api/user/update/password\",\r\n        { currentPassword, newPassword },\r\n        config\r\n      );\r\n      dispatch(\r\n        displayToast({\r\n          message:\r\n            \"Password Updated Successfully. Please Login Again with Updated Password.\",\r\n          type: \"success\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      localStorage.removeItem(\"loggedInUser\");\r\n      dispatch(setLoggedInUser(null));\r\n      if (options?.enterKeyPressed) {\r\n        dispatch(hideDialog());\r\n        dispatch(setSelectedChat(null));\r\n        navigate(\"/\");\r\n        return;\r\n      }\r\n      return \"pwdUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Password Update Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"loggedInUser\");\r\n    dispatch(setLoggedInUser(null));\r\n    dispatch(\r\n      displayToast({\r\n        message: \"Logged Out\",\r\n        type: \"success\",\r\n        duration: 2000,\r\n        position: \"bottom-center\",\r\n      })\r\n    );\r\n    return \"loggingOut\";\r\n  };\r\n\r\n  // Open dialogs\r\n  const openLogoutConfirmDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<>Are you sure you want to log out?</>);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Logout Confirmation\",\r\n        nolabel: \"NO\",\r\n        yeslabel: \"YES\",\r\n        loadingYeslabel: \"Logging Out...\",\r\n        action: logout,\r\n      })\r\n    );\r\n  };\r\n\r\n  const openEditProfileDialog = () => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<EditProfileBody />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: isGuestUser ? \"View Profile\" : \"Edit Profile\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const openEditPasswordDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<ChangePasswordBody getUpdatedState={getUpdatedState} />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Change Password\",\r\n        nolabel: \"CANCEL\",\r\n        yeslabel: \"SAVE\",\r\n        loadingYeslabel: \"Saving...\",\r\n        action: updatePassword,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={openEditProfileDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          {isGuestUser ? <Person /> : <ManageAccounts />}\r\n        </ListItemIcon>\r\n        <MenuItemText>{isGuestUser ? \"View\" : \"Edit\"} Profile</MenuItemText>\r\n      </MenuItem>\r\n      {!isGuestUser && (\r\n        <MenuItem sx={menuItemProps} onClick={openEditPasswordDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <Key />\r\n          </ListItemIcon>\r\n          <MenuItemText>Change Password</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n      <MenuItem sx={menuItemProps} onClick={openLogoutConfirmDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Logout />\r\n        </ListItemIcon>\r\n        <MenuItemText>Logout</MenuItemText>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default ProfileSettingsMenu;\r\n","import { Avatar } from \"@mui/material\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#E6480C\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  borderRadius: 5,\r\n  backgroundColor: \"#E6480C\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst UserListItem = ({ user, truncateValues }) => {\r\n  const { _id, name, email, profilePic } = user;\r\n  const [max, index] = truncateValues;\r\n\r\n  return (\r\n    <div\r\n      data-user={_id}\r\n      className={`userListItem user-select-none d-flex text-light justify-content-start align-items-center pointer px-3`}\r\n    >\r\n      <CustomTooltip\r\n        data-user={_id}\r\n        title={`${name} (${email})`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <Avatar\r\n          src={profilePic}\r\n          alt={_id}\r\n          data-user={_id}\r\n          className={`listItemAvatar userListAvatar`}\r\n        />\r\n      </CustomTooltip>\r\n      <div\r\n        data-user={_id}\r\n        className=\"userListData d-flex flex-column align-items-start px-2\"\r\n      >\r\n        <p data-user={_id} className=\"userListName fs-4 fw-bold text-info\">\r\n          {truncateString(name, max, index)}\r\n        </p>\r\n        <p data-user={_id} className=\"userListEmail\">\r\n          {truncateString(email, max, index)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n","import { Skeleton } from \"@mui/material\";\r\n\r\nconst LoadingList = ({ listOf, dpRadius, count }) => {\r\n  const skeletonStyle = { backgroundColor: \"#999\" };\r\n  return (\r\n    <>\r\n      {[...Array(count)].map((e, i) => (\r\n        <div key={`loadingListOf${listOf + i}`} className=\"loadingListItem row\">\r\n          <Skeleton\r\n            variant=\"circular\"\r\n            className=\"loadingDp rounded-circle\"\r\n            style={{\r\n              ...skeletonStyle,\r\n              width: dpRadius,\r\n              height: dpRadius,\r\n            }}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className=\"loadingTitle col-5\"\r\n            style={skeletonStyle}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className=\"loadingDesc col-7\"\r\n            style={skeletonStyle}\r\n          />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadingList;\r\n","import { Clear, Search } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { forwardRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\n\r\nconst SearchInput = forwardRef((props, inputRef) => {\r\n  const { searchHandler, autoFocus, placeholder, clearInput } = props;\r\n  const { disableIfLoading, formFieldClassName, inputFieldClassName } =\r\n    useSelector(selectFormfieldState);\r\n\r\n  // To display/hide clear search (<Close />) icon when typing\r\n  const [typing, setTyping] = useState(false);\r\n\r\n  return (\r\n    <section className={`${formFieldClassName} pt-3 pb-2 mx-1`}>\r\n      {/* Input box */}\r\n      <div className=\"input-group\">\r\n        <span\r\n          className={`input-group-text ${disableIfLoading} bg-black bg-gradient border-secondary text-light rounded-pill rounded-end`}\r\n        >\r\n          <Search className=\"mx-0\" style={{ marginTop: \"3px\" }} />\r\n        </span>\r\n        <input\r\n          type=\"text\"\r\n          ref={inputRef}\r\n          onChange={(e) => {\r\n            setTyping(Boolean(e.target.value.trim()));\r\n            searchHandler(e);\r\n          }}\r\n          autoFocus={autoFocus}\r\n          placeholder={placeholder}\r\n          className={`${inputFieldClassName\r\n            .replace(\"text-center\", \"text-start\")\r\n            .replace(\"pill\", \"0\")} border-start-0 border-end-0 d-inline-block`}\r\n          style={{ cursor: \"auto\", fontSize: \"18px\" }}\r\n        />\r\n        {/* Clear icon button */}\r\n        <span\r\n          className={`input-group-text ${disableIfLoading} bg-black bg-gradient border-secondary text-light rounded-pill rounded-start border-start-0`}\r\n        >\r\n          <IconButton\r\n            onClick={() => {\r\n              inputRef.current.value = \"\";\r\n              setTyping(false); // Hide '<Close />' icon\r\n              inputRef.current.focus();\r\n              clearInput();\r\n            }}\r\n            className={`${typing ? \"d-inline-block\" : \"d-none\"}`}\r\n            style={{\r\n              padding: \"0px 9px 3px 9px\",\r\n              margin: \"-7px\",\r\n              color: \"#999999\",\r\n            }}\r\n            sx={{\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n          >\r\n            <Clear style={{ fontSize: \"19px\" }} />\r\n          </IconButton>\r\n        </span>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default SearchInput;\r\n","import { ChevronLeft } from \"@mui/icons-material\";\r\nimport { Drawer, IconButton } from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"../../utils/axios\";\r\nimport { debounce, truncateString } from \"../../utils/appUtils\";\r\nimport UserListItem from \"./UserListItem\";\r\nimport LoadingList from \"./LoadingList\";\r\nimport SearchInput from \"./SearchInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectAppState, setSelectedChat } from \"../../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\n\r\nconst SearchUsersDrawer = ({ setFetchMsgs, isDrawerOpen, setIsDrawerOpen }) => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const { loading } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n\r\n  const searchUserInput = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isDrawerOpen) {\r\n      setSearchResults([]);\r\n      dispatch(setLoading(false));\r\n      setSearchQuery(\"\");\r\n    }\r\n  }, [isDrawerOpen]);\r\n\r\n  const handleClose = () => {\r\n    setIsDrawerOpen(false);\r\n  };\r\n\r\n  // Debouncing fetchUsers method to limit the no. of API calls\r\n  const searchUsers = debounce(async (e) => {\r\n    const query = e.target?.value?.trim();\r\n    setSearchQuery(query);\r\n    if (!query) return setSearchResults([]);\r\n\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`/api/user?search=${query}`, config);\r\n\r\n      dispatch(setLoading(false));\r\n      setSearchResults(data);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Users\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-left\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  }, 800);\r\n\r\n  // Create/Retreive chat when a user item is clicked\r\n  const createOrRetrieveChat = async (userId) => {\r\n    handleClose();\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\r\n\r\n      dispatch(setLoading(false));\r\n      dispatch(setSelectedChat(data));\r\n      setFetchMsgs(true);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Create/Retrieve Chat\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        PaperProps={{\r\n          sx: {\r\n            borderTopRightRadius: 10,\r\n            borderBottomRightRadius: 10,\r\n            backgroundImage: \"linear-gradient(0deg,#222,#444)\",\r\n            padding: \"10px\",\r\n            width: \"350px\",\r\n          },\r\n        }}\r\n        anchor=\"left\"\r\n        open={isDrawerOpen}\r\n        onClose={handleClose}\r\n        transitionDuration={350}\r\n      >\r\n        <div className=\"d-flex justify-content-center\">\r\n          <span\r\n            className=\"text-center h2 mt-1 user-select-none text-light\"\r\n            style={{ marginTop: \"0px\" }}\r\n          >\r\n            Search Users\r\n            <IconButton\r\n              onClick={handleClose}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: 8,\r\n                top: 5,\r\n                color: \"#999999\",\r\n                \":hover\": {\r\n                  backgroundColor: \"#aaaaaa20\",\r\n                },\r\n              }}\r\n            >\r\n              <ChevronLeft className=\"text-light m-1\" />\r\n            </IconButton>\r\n          </span>\r\n        </div>\r\n        {/* Search Bar */}\r\n        <SearchInput\r\n          ref={searchUserInput}\r\n          searchHandler={searchUsers}\r\n          autoFocus={true}\r\n          placeholder=\"Search by Name or Email\"\r\n          clearInput={() => {\r\n            setSearchQuery(\"\");\r\n            setSearchResults([]);\r\n            searchUserInput.current.focus();\r\n          }}\r\n        />\r\n        {/* Search Results */}\r\n        <section\r\n          className=\"position-relative mx-1 my-2 h-100\"\r\n          style={{ overflowY: \"auto\", overflowX: \"hidden\" }}\r\n        >\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={(e) => {\r\n              const userId = e.target.dataset.user || e.target.alt;\r\n              if (!userId) return;\r\n              createOrRetrieveChat(userId);\r\n            }}\r\n          >\r\n            {loading ? (\r\n              <LoadingList listOf=\"User\" dpRadius={\"42px\"} count={8} />\r\n            ) : searchResults.length > 0 ? (\r\n              searchResults.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  truncateValues={[27, 24]}\r\n                />\r\n              ))\r\n            ) : searchQuery && !loading ? (\r\n              <p className=\"text-light text-center fs-5 mt-3 mx-5\">\r\n                No results found for '\r\n                <span className=\"text-info\">\r\n                  {truncateString(searchQuery, 30, 26)}\r\n                </span>\r\n                '\r\n              </p>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        </section>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchUsersDrawer;\r\n","import { Notifications, Search } from \"@mui/icons-material\";\r\nimport { Avatar, IconButton } from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport NotificationsMenu from \"./menus/NotificationsMenu\";\r\nimport ProfileSettingsMenu from \"./menus/ProfileSettingsMenu\";\r\nimport SearchUsersDrawer from \"./utils/SearchUsersDrawer\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport animationData from \"../animations/chat-gif.json\";\r\nimport LottieAnimation from \"./utils/LottieAnimation\";\r\nimport io from \"socket.io-client\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../store/slices/AppSlice\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#777\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  backgroundColor: \"#777\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ChatpageHeader = ({ chats, setFetchMsgs, setDialogBody }) => {\r\n  const { loggedInUser, clientSocket } = useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n  const appGif = useRef();\r\n  const notifCount = loggedInUser?.notifications?.length || \"\";\r\n\r\n  const [notificationsMenuAnchor, setNotificationsMenuAnchor] = useState(null);\r\n  const [profileSettingsMenuAnchor, setProfileSettingsMenuAnchor] =\r\n    useState(null);\r\n\r\n  const openNotificationMenu = (e) => {\r\n    setNotificationsMenuAnchor(e.target);\r\n  };\r\n\r\n  const openProfileSettingsMenu = (e) => {\r\n    setProfileSettingsMenuAnchor(e.target);\r\n  };\r\n\r\n  // For opening/closing 'search users' left drawer\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n\r\n  return (\r\n    <header\r\n      className={`chatpageDiv d-flex justify-content-between align-items-center user-select-none`}\r\n    >\r\n      {/* Search Users to create/access chat */}\r\n      <CustomTooltip\r\n        title=\"Search Users to Start or Open a Chat\"\r\n        placement=\"bottom-start\"\r\n        arrow\r\n      >\r\n        <button\r\n          style={{ borderRadius: \"20px\" }}\r\n          className={`btn btn-outline-secondary text-light px-3`}\r\n          onClick={() => setIsDrawerOpen(true)}\r\n        >\r\n          <Search className={`me-1`} />\r\n          <span className={`d-none d-md-inline mb-1 fs-5`}>Search Users</span>\r\n        </button>\r\n      </CustomTooltip>\r\n      <SearchUsersDrawer\r\n        setFetchMsgs={setFetchMsgs}\r\n        isDrawerOpen={isDrawerOpen}\r\n        setIsDrawerOpen={setIsDrawerOpen}\r\n      />\r\n\r\n      {/* App Logo */}\r\n      <div className={`d-flex align-items-center ms-3 ms-md-0`}>\r\n        <LottieAnimation\r\n          ref={appGif}\r\n          className={\"d-none d-sm-inline-block mt-2 me-sm-1 me-md-2\"}\r\n          style={{ width: \"35px\", height: \"35px\" }}\r\n          animationData={animationData}\r\n        />\r\n        <span style={{ color: \"orange\" }} className=\"fs-3 fw-bold mt-1\">\r\n          CHAT ZONED\r\n        </span>\r\n      </div>\r\n\r\n      {/* User notification and profile settings icons */}\r\n      <div>\r\n        <CustomTooltip title={`Notifications`} placement=\"bottom-end\" arrow>\r\n          <IconButton\r\n            className=\"position-relative mx-1\"\r\n            onClick={openNotificationMenu}\r\n            sx={{\r\n              color: \"#999999\",\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n          >\r\n            {notifCount && (\r\n              <span\r\n                className={`notifBadge badge rounded-circle bg-danger \r\n               position-absolute`}\r\n                style={{\r\n                  fontSize: notifCount > 99 ? 12 : 13,\r\n                  top: -2,\r\n                  right: notifCount > 99 ? -11 : notifCount > 9 ? -5 : -2,\r\n                  padding:\r\n                    notifCount > 99\r\n                      ? \"6px 5px\"\r\n                      : notifCount > 9\r\n                      ? \"4px 5px\"\r\n                      : \"4px 7px\",\r\n                }}\r\n              >\r\n                {!notifCount ? \"\" : notifCount > 99 ? \"99+\" : notifCount}\r\n              </span>\r\n            )}\r\n            <Notifications className={`text-light`} />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n        <CustomTooltip\r\n          title=\"Profile Settings\"\r\n          size=\"small\"\r\n          placement=\"bottom-end\"\r\n          arrow\r\n        >\r\n          <IconButton\r\n            className=\"mx-md-3 mx-lg-4\"\r\n            sx={{\r\n              color: \"#999999\",\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n            onClick={openProfileSettingsMenu}\r\n          >\r\n            <Avatar\r\n              alt=\"LoggedInUser\"\r\n              className=\"img-fluid\"\r\n              src={loggedInUser?.profilePic}\r\n            />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n        <NotificationsMenu\r\n          chats={chats}\r\n          setFetchMsgs={setFetchMsgs}\r\n          anchor={notificationsMenuAnchor}\r\n          setAnchor={setNotificationsMenuAnchor}\r\n        />\r\n        <ProfileSettingsMenu\r\n          anchor={profileSettingsMenuAnchor}\r\n          setAnchor={setProfileSettingsMenuAnchor}\r\n          setDialogBody={setDialogBody}\r\n        />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default ChatpageHeader;\r\n","import { useRef, useState } from \"react\";\r\nimport { Edit, KeyboardDoubleArrowLeft } from \"@mui/icons-material\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport { isImageFile, TWO_MB } from \"../../utils/appUtils\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport axios from \"../../utils/axios\";\r\nimport { Button, CircularProgress, DialogActions } from \"@mui/material\";\r\nimport { btnCustomStyle, btnHoverStyle } from \"../utils/CustomDialog\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setClientSocket,\r\n  setGroupInfo,\r\n  toggleRefresh,\r\n} from \"../../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#111\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\nconst DEFAULT_GROUP_DP = process.env.REACT_APP_DEFAULT_GROUP_DP;\r\n\r\nconst NewGroupBody = ({ closeChildDialog }) => {\r\n  const { loggedInUser, refresh, groupInfo, clientSocket } =\r\n    useSelector(selectAppState);\r\n  const {\r\n    loading,\r\n    disableIfLoading,\r\n    formFieldClassName,\r\n    inputFieldClassName,\r\n    formLabelClassName,\r\n  } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n\r\n  const { chatDisplayPicUrl, chatName } = groupInfo;\r\n  const [editGroupDpMenuAnchor, setEditGroupDpMenuAnchor] = useState(null);\r\n  const imgInput = useRef();\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") {\r\n      e.target.click();\r\n    }\r\n  };\r\n\r\n  // Create group chat\r\n  const createGroupChat = async () => {\r\n    if (!groupInfo) return;\r\n    const { chatDisplayPic, chatName, users } = groupInfo;\r\n\r\n    if (!chatName) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Enter a Group Name\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    if (users?.length < 2) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Add Atleast 2 Members\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    dispatch(setLoading(true));\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"displayPic\", chatDisplayPic);\r\n      formData.append(\"chatName\", chatName);\r\n      formData.append(\"users\", JSON.stringify(users?.map((user) => user?._id)));\r\n\r\n      const { data } = await axios.post(\"/api/chat/group\", formData, config);\r\n\r\n      clientSocket.emit(\"new grp created\", {\r\n        admin: loggedInUser,\r\n        newGroup: data,\r\n      });\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Group Created Successfully\",\r\n          type: \"success\",\r\n          duration: 2000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      dispatch(toggleRefresh(!refresh));\r\n      closeChildDialog();\r\n      // Close Parent Dialog as well\r\n      dispatch(hideDialog());\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Create Group\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleImgInputChange = (e) => {\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n\r\n    if (!isImageFile(image.name)) {\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Invalid Image File\",\r\n          message: \"Please Select an Image File (png/jpg/jpeg/svg/webp)\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    if (image.size >= TWO_MB) {\r\n      imgInput.current.value = \"\";\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Select an Image Smaller than 2 MB\",\r\n          type: \"warning\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    dispatch(\r\n      setGroupInfo({\r\n        ...groupInfo,\r\n        chatDisplayPic: image,\r\n        chatDisplayPicUrl: URL.createObjectURL(image),\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleReset = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      setGroupInfo({\r\n        ...groupInfo,\r\n        chatDisplayPic: null,\r\n        chatDisplayPicUrl: DEFAULT_GROUP_DP,\r\n      })\r\n    );\r\n    imgInput.current.value = \"\";\r\n  };\r\n\r\n  const openEditGroupDpMenu = (e) => {\r\n    setEditGroupDpMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Select Display Pic */}\r\n      <section className=\"newGroup d-flex position-relative mb-4\">\r\n        <img\r\n          className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n          src={chatDisplayPicUrl}\r\n          alt=\"displayPic\"\r\n        />\r\n        <CustomTooltip title=\"Edit Group Display Pic\" placement=\"right\" arrow>\r\n          <i\r\n            id=\"editGroupDPTooltip\"\r\n            tabIndex={2}\r\n            onKeyDown={clickOnKeydown}\r\n            className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n            onClick={openEditGroupDpMenu}\r\n          >\r\n            <Edit className=\"text-light fs-6\" />\r\n          </i>\r\n        </CustomTooltip>\r\n        {/* Edit/Delete profile pic menu */}\r\n        <EditPicMenu\r\n          anchor={editGroupDpMenuAnchor}\r\n          setAnchor={setEditGroupDpMenuAnchor}\r\n          selectProfilePic={() => imgInput.current.click()}\r\n          openDeletePhotoConfirmDialog={handleReset}\r\n          deletePhotoCondition={\r\n            !chatDisplayPicUrl?.endsWith(\"group_mbuvht.png\")\r\n          }\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleImgInputChange}\r\n          name=\"groupdp\"\r\n          id=\"editGroupDp\"\r\n          ref={imgInput}\r\n          className={`d-none`}\r\n          disabled={loading}\r\n        />\r\n      </section>\r\n      {/* Group Name input */}\r\n      <section className={`${formFieldClassName}`}>\r\n        <label htmlFor=\"groupName\" className={`${formLabelClassName}`}>\r\n          Group Name <span className=\"required\">*</span>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={chatName}\r\n          onChange={(e) => {\r\n            dispatch(setGroupInfo({ ...groupInfo, chatName: e.target.value }));\r\n          }}\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\") createGroupChat();\r\n          }}\r\n          required\r\n          autoFocus\r\n          name=\"groupname\"\r\n          id=\"groupName\"\r\n          className={`${inputFieldClassName}`}\r\n          disabled={loading}\r\n          placeholder=\"Eg: The Avengers\"\r\n        />\r\n      </section>\r\n      <DialogActions className=\"mt-3\" style={{ marginBottom: \"-17px\" }}>\r\n        <Button\r\n          sx={btnHoverStyle}\r\n          disabled={loading}\r\n          style={btnCustomStyle}\r\n          onClick={closeChildDialog}\r\n        >\r\n          <span>\r\n            <KeyboardDoubleArrowLeft\r\n              className=\"btnArrowIcons\"\r\n              style={{\r\n                margin: \"0px 5px 2px 0px\",\r\n              }}\r\n            />\r\n            Back\r\n          </span>\r\n        </Button>\r\n        <Button\r\n          sx={btnHoverStyle}\r\n          disabled={loading}\r\n          style={btnCustomStyle}\r\n          onClick={createGroupChat}\r\n        >\r\n          {loading ? (\r\n            <>\r\n              <CircularProgress size={25} style={{ marginRight: \"10px\" }} />\r\n              <span>Creating...</span>\r\n            </>\r\n          ) : (\r\n            <>Create Group</>\r\n          )}\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewGroupBody;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { Avatar, Chip } from \"@mui/material\";\r\nimport axios from \"../../utils/axios\";\r\nimport { debounce, truncateString } from \"../../utils/appUtils\";\r\nimport UserListItem from \"../utils/UserListItem\";\r\nimport SearchInput from \"../utils/SearchInput\";\r\nimport NewGroupBody from \"./NewGroupBody\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport LoadingList from \"../utils/LoadingList\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectAppState, setGroupInfo } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { setDialogAction } from \"../../store/slices/CustomDialogSlice\";\r\n\r\nconst AddMembersToGroup = ({ getAddedMembers, forCreateGroup }) => {\r\n  const { loggedInUser, groupInfo } = useSelector(selectAppState);\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const dispatch = useDispatch();\r\n\r\n  const [groupData, setGroupData] = useState(groupInfo);\r\n  const [fetching, setFetching] = useState(false);\r\n  const groupMembers = groupData?.users;\r\n  const [isMemberSelected, setIsMemberSelected] = useState(false);\r\n  const [addedMembers, setAddedMembers] = useState([]);\r\n\r\n  const searchUserInput = useRef(null);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const { setChildDialogBody, displayChildDialog, closeChildDialog } =\r\n    childDialogMethods;\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setGroupData(groupInfo);\r\n  }, [groupInfo]);\r\n\r\n  // For 'create group chat'\r\n  const openNewGroupDialog = () => {\r\n    if (addedMembers?.length < 2) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Add Atleast 2 Members\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(false);\r\n    dispatch(setGroupInfo(groupData));\r\n    setChildDialogBody(<NewGroupBody closeChildDialog={closeChildDialog} />);\r\n    displayChildDialog({\r\n      title: \"Create New Group\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSearchResults([]);\r\n    setSearchQuery(\"\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // For create group: [Next >>] button\r\n    if (forCreateGroup) dispatch(setDialogAction(openNewGroupDialog));\r\n  }, [groupData]);\r\n\r\n  useEffect(() => {\r\n    // For add more group members\r\n    if (!forCreateGroup) getAddedMembers([...addedMembers]);\r\n  }, [addedMembers]);\r\n\r\n  const searchUsers = debounce(async (e) => {\r\n    const query = e.target?.value?.trim();\r\n    setSearchQuery(query);\r\n    if (!query) return setSearchResults([]);\r\n\r\n    setFetching(true);\r\n    if (isMemberSelected) setIsMemberSelected(false);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n    try {\r\n      const { data } = await axios.get(`/api/user?search=${query}`, config);\r\n\r\n      // Remove all the already added members from search results\r\n      let membersNotAdded = [...data];\r\n      groupMembers.forEach((addedMember) => {\r\n        membersNotAdded = membersNotAdded.filter(\r\n          (m) => m._id !== addedMember._id\r\n        );\r\n      });\r\n\r\n      setFetching(false);\r\n      setSearchResults(membersNotAdded);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Users\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-left\",\r\n        })\r\n      );\r\n      setFetching(false);\r\n    }\r\n  }, 800);\r\n\r\n  const unselectUser = (user) => {\r\n    if (!user) return;\r\n    setGroupData({\r\n      ...groupData,\r\n      users: groupMembers.filter((u) => u._id !== user._id),\r\n    });\r\n    // Remove user from added member list\r\n    setAddedMembers(addedMembers.filter((u) => u._id !== user._id));\r\n    // Add removed user to search result list\r\n    setSearchResults([user, ...searchResults]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"addGroupMembers d-flex flex-column\">\r\n      {/* Selected Users tag list */}\r\n      <section\r\n        className=\"mx-auto px-3 py-2 overflow-auto d-flex flex-wrap\"\r\n        style={{\r\n          flex: \"0.33\",\r\n          borderRadius: \"15px\",\r\n          backgroundColor: \"#303030\",\r\n        }}\r\n      >\r\n        {addedMembers?.map((user) => (\r\n          <Chip\r\n            key={user?._id}\r\n            className=\"userChip text-light bg-success rounded-pill fs-6\"\r\n            avatar={\r\n              <Avatar\r\n                className=\"userChipAvatar\"\r\n                alt={user?.name}\r\n                src={user?.profilePic}\r\n              />\r\n            }\r\n            label={truncateString(user?.name?.split(\" \")[0], 12, 8)}\r\n            onDelete={() => unselectUser(user)}\r\n          />\r\n        ))}\r\n      </section>\r\n      {/* Search Bar */}\r\n      <SearchInput\r\n        ref={searchUserInput}\r\n        searchHandler={searchUsers}\r\n        autoFocus={true}\r\n        placeholder=\"Search Members\"\r\n        clearInput={() => {\r\n          setSearchQuery(\"\");\r\n          setSearchResults([]);\r\n          searchUserInput.current.focus();\r\n        }}\r\n      />\r\n      {/* Search Results */}\r\n      <section\r\n        className=\"position-relative mx-auto mt-2 overflow-auto\"\r\n        style={{ flex: \"1\", marginBottom: \"-10px\" }}\r\n      >\r\n        <div\r\n          // 'Event delegation'\r\n          onClick={(e) => {\r\n            const userId = e.target.dataset.user || e.target.alt;\r\n            if (!userId) return;\r\n\r\n            if (!isMemberSelected) setIsMemberSelected(true);\r\n            // Add selected user to tag list\r\n            const selectedUser = searchResults.find((u) => u._id === userId);\r\n            setGroupData({\r\n              ...groupData,\r\n              users: [...groupMembers, selectedUser],\r\n            });\r\n            // Add selected user to added member list\r\n            setAddedMembers([...addedMembers, selectedUser]);\r\n            // Remove selected user from search result list\r\n            setSearchResults(searchResults.filter((u) => u._id !== userId));\r\n          }}\r\n        >\r\n          {fetching ? (\r\n            <LoadingList listOf=\"Member\" dpRadius={\"43px\"} count={6} />\r\n          ) : searchResults.length > 0 ? (\r\n            searchResults.map((user) => (\r\n              <UserListItem\r\n                key={user._id}\r\n                user={user}\r\n                truncateValues={[21, 18]}\r\n              />\r\n            ))\r\n          ) : (\r\n            searchQuery &&\r\n            !fetching && (\r\n              <p className=\"text-light text-center fs-5 mt-3 mx-5\">\r\n                {isMemberSelected ? \"No Other Users \" : \"No Results \"}\r\n                Found for '\r\n                <span className=\"text-info\">\r\n                  {truncateString(searchQuery, 25, 22)}\r\n                </span>\r\n                '\r\n              </p>\r\n            )\r\n          )}\r\n        </div>\r\n      </section>\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMembersToGroup;\r\n","import {\r\n  AudioFile,\r\n  Description,\r\n  DoneAll,\r\n  GifBox,\r\n  Image,\r\n  PictureAsPdf,\r\n  VideoFile,\r\n} from \"@mui/icons-material\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport {\r\n  dateStringOf,\r\n  isImageFile,\r\n  msgDateStringOf,\r\n  msgTimeStringOf,\r\n  truncateString,\r\n} from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#E6480C\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  borderRadius: 5,\r\n  backgroundColor: \"#E6480C\",\r\n};\r\n\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ChatListItem = ({ chat, chatNotifCount }) => {\r\n  const { selectedChat, loggedInUser } = useSelector(selectAppState);\r\n  const {\r\n    _id,\r\n    chatName,\r\n    receiverEmail,\r\n    isGroupChat,\r\n    lastMessage,\r\n    chatDisplayPic,\r\n  } = chat;\r\n\r\n  const tooltipTitle = isGroupChat\r\n    ? `Group: ${chatName}\\n(${chat?.users?.length} Members)`\r\n    : `${chatName}\\n${receiverEmail}`;\r\n\r\n  let lastMsgContent = lastMessage?.content\r\n    ?.replaceAll(\"<br>\", \"\\n\")\r\n    .replaceAll(\"&nbsp;\", \" \")\r\n    .replaceAll(\"<div>\", \"\\n\")\r\n    .replaceAll(\"</div>\", \"\\n\")\r\n    .replaceAll(\"<span>\", \"\")\r\n    .replaceAll(\"</span>\", \"\");\r\n\r\n  const lastMsgDate = new Date(lastMessage?.createdAt);\r\n  const lastMsgDateString = msgDateStringOf(lastMsgDate);\r\n\r\n  const lastMsgFileUrl = lastMessage?.fileUrl;\r\n  const fileContents = lastMessage?.file_name?.split(\"===\") || [];\r\n  const lastMsgFileName = fileContents[0] || \"\";\r\n  const lastMsgData = lastMsgContent || lastMsgFileName;\r\n  const fileType = fileContents[1]?.split(\"+++\")[1];\r\n  let lastMsgFileType;\r\n\r\n  if (lastMsgFileUrl) {\r\n    lastMsgFileType = isImageFile(lastMsgFileUrl)\r\n      ? \"image\"\r\n      : /(\\.gif)$/.test(lastMsgFileUrl)\r\n      ? \"gif\"\r\n      : fileType?.startsWith(\"video/\") ||\r\n        /(\\.mp4|\\.mov|\\.ogv|\\.webm)$/.test(lastMsgFileUrl)\r\n      ? \"video\"\r\n      : fileType?.startsWith(\"audio/\") ||\r\n        /(\\.mp3|\\.ogg|\\.wav)$/.test(lastMsgFileUrl)\r\n      ? \"audio\"\r\n      : /(\\.pdf)$/.test(lastMsgFileUrl)\r\n      ? \"pdf\"\r\n      : \"otherFile\";\r\n  }\r\n\r\n  return (\r\n    <div\r\n      data-chat={_id}\r\n      data-has-notifs={chatNotifCount}\r\n      className={`chatListItem user-select-none text-light pointer ${\r\n        selectedChat?._id === _id ? \"isSelected\" : \"\"\r\n      } d-flex justify-content-start align-items-center`}\r\n    >\r\n      {/* Chat Display Pic */}\r\n      <CustomTooltip\r\n        title={`View ${isGroupChat ? \"Group DP\" : \"Profile Pic\"}`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <Avatar\r\n          src={chatDisplayPic}\r\n          alt={chatName}\r\n          data-chat={_id}\r\n          data-has-notifs={chatNotifCount}\r\n          className={`img-fluid listItemAvatar chatListAvatar rounded-circle`}\r\n        />\r\n      </CustomTooltip>\r\n      {/* Chat Data */}\r\n      <div\r\n        data-chat={_id}\r\n        data-has-notifs={chatNotifCount}\r\n        className=\"chatListData d-flex flex-column align-items-start px-2\"\r\n      >\r\n        {/* Chat Name */}\r\n        <p\r\n          data-chat={_id}\r\n          data-has-notifs={chatNotifCount}\r\n          title={tooltipTitle}\r\n          className=\"chatListName fs-5 fw-bold text-info\"\r\n        >\r\n          {truncateString(chatName, 23, 20)}\r\n        </p>\r\n        {lastMessage && (\r\n          <span\r\n            className=\"lastMsgDate\"\r\n            data-chat={_id}\r\n            data-has-notifs={chatNotifCount}\r\n            style={{ color: chatNotifCount ? \"#50F0B8\" : \"#b9b9b9\" }}\r\n          >\r\n            {lastMsgDateString === \"Today\"\r\n              ? msgTimeStringOf(lastMsgDate)\r\n              : lastMsgDateString !== \"Yesterday\"\r\n              ? dateStringOf(lastMsgDate)\r\n              : \"Yesterday\"}\r\n          </span>\r\n        )}\r\n        {lastMessage && chatNotifCount && (\r\n          <span\r\n            className={`notifBadge badge rounded-circle\r\n             position-absolute text-black bg-gradient`}\r\n            data-chat={_id}\r\n            data-has-notifs={chatNotifCount}\r\n            style={{\r\n              fontSize: chatNotifCount > 99 ? 12 : 13,\r\n              right: 17,\r\n              bottom: chatNotifCount > 9 ? 8 : 9,\r\n              padding:\r\n                chatNotifCount > 99\r\n                  ? \"6px 4px\"\r\n                  : chatNotifCount > 9\r\n                  ? \"6px 5px\"\r\n                  : \"4px 7px\",\r\n            }}\r\n          >\r\n            {chatNotifCount || \"\"}\r\n          </span>\r\n        )}\r\n        {/* Last Message Data */}\r\n        {(lastMessage || lastMessage === null || isGroupChat) && (\r\n          <p\r\n            data-chat={_id}\r\n            data-has-notifs={chatNotifCount}\r\n            className=\"chatListLastMessage\"\r\n          >\r\n            <span\r\n              data-chat={_id}\r\n              data-has-notifs={chatNotifCount}\r\n              className=\"text-warning\"\r\n            >\r\n              <>\r\n                {lastMessage === null ||\r\n                (isGroupChat && !lastMessage) ||\r\n                (!isGroupChat &&\r\n                  lastMessage?.sender?._id !== loggedInUser?._id) ? (\r\n                  \"\"\r\n                ) : lastMessage?.sender?._id === loggedInUser?._id ? (\r\n                  <>\r\n                    {isGroupChat ? (\r\n                      <>You: </>\r\n                    ) : (\r\n                      <DoneAll\r\n                        data-chat={_id}\r\n                        data-has-notifs={chatNotifCount}\r\n                        className=\"me-1 fs-5\"\r\n                        style={{ color: \"lightblue\" }}\r\n                      />\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  truncateString(\r\n                    lastMessage?.sender?.name?.split(\" \")[0],\r\n                    12,\r\n                    8\r\n                  ) + \": \"\r\n                )}\r\n              </>\r\n            </span>\r\n            {lastMsgFileUrl ? (\r\n              <span data-chat={_id} data-has-notifs={chatNotifCount}>\r\n                {lastMsgFileType === \"image\" ? (\r\n                  <span\r\n                    data-chat={_id}\r\n                    data-has-notifs={chatNotifCount}\r\n                    title={lastMsgData}\r\n                  >\r\n                    <Image\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      className=\"fileIcon\"\r\n                    />{\" \"}\r\n                    {truncateString(lastMsgContent, 25, 22) || \"Photo\"}\r\n                  </span>\r\n                ) : lastMsgFileType === \"gif\" ? (\r\n                  <span\r\n                    data-chat={_id}\r\n                    data-has-notifs={chatNotifCount}\r\n                    title={lastMsgData}\r\n                  >\r\n                    <GifBox\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      className=\"fileIcon\"\r\n                    />{\" \"}\r\n                    {truncateString(lastMsgContent, 25, 22) || \"Gif\"}\r\n                  </span>\r\n                ) : lastMsgFileType === \"video\" ? (\r\n                  <span\r\n                    data-chat={_id}\r\n                    data-has-notifs={chatNotifCount}\r\n                    title={lastMsgData}\r\n                  >\r\n                    <VideoFile\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      className=\"fileIcon\"\r\n                    />{\" \"}\r\n                    {truncateString(lastMsgContent, 25, 22) || \"Video\"}\r\n                  </span>\r\n                ) : lastMsgFileType === \"audio\" ? (\r\n                  <span\r\n                    data-chat={_id}\r\n                    data-has-notifs={chatNotifCount}\r\n                    title={lastMsgData}\r\n                  >\r\n                    <AudioFile\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      className=\"fileIcon\"\r\n                    />{\" \"}\r\n                    {truncateString(lastMsgContent, 25, 22) || \"Audio\"}\r\n                  </span>\r\n                ) : lastMsgFileType === \"pdf\" ? (\r\n                  <span\r\n                    data-chat={_id}\r\n                    data-has-notifs={chatNotifCount}\r\n                    title={lastMsgData}\r\n                  >\r\n                    <PictureAsPdf\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      className=\"fileIcon\"\r\n                    />{\" \"}\r\n                    {truncateString(lastMsgData, 22, 19) || \"Pdf\"}\r\n                  </span>\r\n                ) : (\r\n                  <span\r\n                    data-chat={_id}\r\n                    data-has-notifs={chatNotifCount}\r\n                    title={lastMsgData}\r\n                  >\r\n                    <Description\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      className=\"fileIcon\"\r\n                    />{\" \"}\r\n                    {truncateString(lastMsgData, 22, 19) || \"File\"}\r\n                  </span>\r\n                )}\r\n              </span>\r\n            ) : (\r\n              <span\r\n                data-chat={_id}\r\n                data-has-notifs={chatNotifCount}\r\n                title={lastMsgContent}\r\n              >\r\n                {lastMessage === null\r\n                  ? \" Last Message was deleted\"\r\n                  : isGroupChat && !lastMessage\r\n                  ? `New Group Created`\r\n                  : truncateString(lastMsgContent, 25, 22)}\r\n              </span>\r\n            )}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListItem;\r\n","const FILE_STYLES = { width: \"90vw\", height: \"82vh\", borderRadius: 10 };\r\nconst PLACEHOLDER_IMG = process.env.REACT_APP_PLACEHOLDER_IMG_URL;\r\n\r\nconst FullSizeImage = ({ event, audioSrc, videoSrc }) => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n      {audioSrc ? (\r\n        <audio\r\n          src={audioSrc}\r\n          style={{ width: \"clamp(300px, 70%, 600px)\" }}\r\n          autoPlay\r\n          controls\r\n        >\r\n          Your browser does not support audio tag.\r\n        </audio>\r\n      ) : videoSrc ? (\r\n        <video src={videoSrc} style={FILE_STYLES} autoPlay controls>\r\n          Your browser does not support video tag.\r\n        </video>\r\n      ) : (\r\n        <img\r\n          src={event.target?.src || PLACEHOLDER_IMG}\r\n          alt={event.target?.alt || \"fullSizeImg\"}\r\n          className=\"img-fluid d-inline-block mx-auto\"\r\n          style={{ ...FILE_STYLES, objectFit: \"contain\" }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullSizeImage;\r\n","import { GroupAdd } from \"@mui/icons-material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  debounce,\r\n  getOneOnOneChatReceiver,\r\n  truncateString,\r\n} from \"../utils/appUtils\";\r\nimport axios from \"../utils/axios\";\r\nimport AddMembersToGroup from \"./dialogs/AddMembersToGroup\";\r\nimport ChatListItem from \"./utils/ChatListItem\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport FullSizeImage from \"./utils/FullSizeImage\";\r\nimport LoadingList from \"./utils/LoadingList\";\r\nimport SearchInput from \"./utils/SearchInput\";\r\nimport io from \"socket.io-client\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  setLoggedInUser,\r\n  setSelectedChat,\r\n} from \"../store/slices/AppSlice\";\r\nimport {\r\n  displayDialog,\r\n  setShowDialogActions,\r\n} from \"../store/slices/CustomDialogSlice\";\r\nimport { displayToast } from \"../store/slices/ToastSlice\";\r\n\r\nconst DEFAULT_GROUP_DP = process.env.REACT_APP_DEFAULT_GROUP_DP;\r\n\r\nconst arrowStyles = {\r\n  color: \"#777\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 16,\r\n  backgroundColor: \"#777\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ChatListView = ({\r\n  chats,\r\n  setChats,\r\n  loadingMsgs,\r\n  setFetchMsgs,\r\n  setDialogBody,\r\n}) => {\r\n  const { loggedInUser, selectedChat, refresh, clientSocket } =\r\n    useSelector(selectAppState);\r\n  const notifs = [...loggedInUser?.notifications];\r\n  const dispatch = useDispatch();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [filteredChats, setFilteredChats] = useState(chats);\r\n  const searchChatInput = useRef();\r\n\r\n  const openCreateGroupChatDialog = () => {\r\n    dispatch(\r\n      setGroupInfo({\r\n        chatDisplayPic: null,\r\n        chatDisplayPicUrl: DEFAULT_GROUP_DP,\r\n        chatName: \"\",\r\n        users: [],\r\n      })\r\n    );\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<AddMembersToGroup forCreateGroup={true} />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Add Group Members\",\r\n        nolabel: \"Cancel\",\r\n        yeslabel: \"Next\",\r\n        action: null,\r\n      })\r\n    );\r\n  };\r\n\r\n  const displayFullSizeImage = (e) => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<FullSizeImage event={e} />);\r\n    dispatch(\r\n      displayDialog({\r\n        isFullScreen: true,\r\n        title: e.target?.alt || \"Display Pic\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const fetchChats = async () => {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${loggedInUser?.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`/api/chat`, config);\r\n\r\n      const mappedChats = data.map((chat) => {\r\n        const { isGroupChat, users } = chat;\r\n\r\n        if (!isGroupChat) {\r\n          const receiver = getOneOnOneChatReceiver(loggedInUser, users);\r\n          return {\r\n            ...chat,\r\n            chatName: receiver?.name,\r\n            receiverEmail: receiver?.email,\r\n            chatDisplayPic: receiver?.profilePic,\r\n          };\r\n        }\r\n        return chat;\r\n      });\r\n      setChats(mappedChats);\r\n      setFilteredChats(mappedChats);\r\n      if (loading) setLoading(false);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Chats\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      if (loading) setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Debouncing filterChats method to limit the no. of fn calls\r\n  const searchChats = debounce((e) => {\r\n    const chatNameInput = e.target?.value?.toLowerCase().trim();\r\n    if (!chatNameInput) {\r\n      return setFilteredChats(chats);\r\n    }\r\n    setFilteredChats(\r\n      chats.filter((chat) =>\r\n        chat?.chatName?.toLowerCase().includes(chatNameInput)\r\n      )\r\n    );\r\n  }, 600);\r\n\r\n  const deletePersistedNotifs = async (notifsToBeDeleted) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      await axios.put(\r\n        `/api/user/delete/notifications`,\r\n        { notificationIds: JSON.stringify(notifsToBeDeleted) },\r\n        config\r\n      );\r\n    } catch (error) {\r\n      console.log(\"Couldn't Delete Notifications : \", error.message);\r\n    }\r\n  };\r\n\r\n  const deleteNotifications = (clickedChatId) => {\r\n    // Delete notifs from global state and localStorage\r\n    const notifsToBeDeleted = [];\r\n    for (let i = 0; i < notifs.length; ++i) {\r\n      if (notifs[i].chat._id === clickedChatId) {\r\n        const deletedNotif = notifs.splice(i, 1)[0];\r\n        notifsToBeDeleted.push(deletedNotif._id);\r\n        // After deleting element at 'i', next element (i+1) shifts back\r\n        // to 'i' index\r\n        --i;\r\n      }\r\n    }\r\n    const updatedUser = { ...loggedInUser, notifications: notifs };\r\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\r\n    dispatch(setLoggedInUser(updatedUser));\r\n\r\n    // Delete notifs that were persisted in mongodb\r\n    deletePersistedNotifs(notifsToBeDeleted);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchChats();\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <div\r\n      className={`chatpageDiv chatpageView chatListView text-light ${\r\n        selectedChat ? \"d-none d-md-flex\" : \"d-flex\"\r\n      } flex-column user-select-none col-md-5 col-lg-4 mx-1 p-2`}\r\n      style={{ pointerEvents: loadingMsgs ? \"none\" : \"auto\" }}\r\n    >\r\n      <section className=\"position-relative\">\r\n        <p className=\"chatListHeader fw-bold fs-3 rounded-pill bg-info bg-opacity-10 py-2\">\r\n          CHATS\r\n          {/* Create Group Chat */}\r\n          <CustomTooltip\r\n            title=\"Create New Group Chat\"\r\n            placement=\"bottom-end\"\r\n            arrow\r\n          >\r\n            <button\r\n              className={`btnCreateGroup pointer btn btn-outline-secondary text-light px-3`}\r\n              onClick={openCreateGroupChatDialog}\r\n            >\r\n              <GroupAdd />\r\n            </button>\r\n          </CustomTooltip>\r\n        </p>\r\n      </section>\r\n      {/* Search Bar */}\r\n      {chats?.length > 0 && (\r\n        <section className=\"searchChat\">\r\n          <SearchInput\r\n            ref={searchChatInput}\r\n            searchHandler={searchChats}\r\n            autoFocus={false}\r\n            placeholder=\"Search Chat\"\r\n            clearInput={() => setFilteredChats(chats)}\r\n          />\r\n        </section>\r\n      )}\r\n      {/* Chat list */}\r\n      <section className=\"chatList m-1 p-1 overflow-auto position-relative\">\r\n        {loading ? (\r\n          <LoadingList listOf=\"Chat\" dpRadius={\"49px\"} count={8} />\r\n        ) : filteredChats?.length > 0 ? (\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={(e) => {\r\n              const { dataset } = e.target;\r\n              const parentDataset = e.target.parentNode.dataset;\r\n              const clickedChatId = dataset.chat || parentDataset.chat;\r\n              const hasNotifs = dataset.hasNotifs || parentDataset.hasNotifs;\r\n              if (!clickedChatId) return;\r\n\r\n              if (e.target.className?.toString().includes(\"MuiAvatar-img\")) {\r\n                return displayFullSizeImage(e);\r\n              }\r\n              const clickedChat = filteredChats.find(\r\n                (chat) => chat._id === clickedChatId\r\n              );\r\n              if (clickedChat._id === selectedChat?._id) return;\r\n              dispatch(setSelectedChat(clickedChat));\r\n              setFetchMsgs(true); // To fetch selected chat msgs\r\n              if (clickedChat?.isGroupChat) dispatch(setGroupInfo(clickedChat));\r\n\r\n              // Delete notifications if notif badge is present\r\n              if (hasNotifs) deleteNotifications(clickedChatId);\r\n            }}\r\n          >\r\n            {filteredChats\r\n              .filter(\r\n                (chat) => chat.lastMessage !== undefined || chat.isGroupChat\r\n              )\r\n              .map((chat) => {\r\n                let chatNotifCount = 0;\r\n                notifs?.forEach((notif) => {\r\n                  if (notif.chat._id === chat._id) ++chatNotifCount;\r\n                });\r\n                return (\r\n                  <ChatListItem\r\n                    key={chat._id}\r\n                    chat={chat}\r\n                    chatNotifCount={chatNotifCount || \"\"}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n        ) : (\r\n          <span className=\"d-inline-block w-100 text-light h4 mt-5 mx-auto\">\r\n            No Chats Found\r\n          </span>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListView;\r\n","import { getOneOnOneChatReceiver, truncateString } from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nconst arrowStyles = {\r\n  color: \"#111\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ViewProfileBody = ({ memberProfilePic, memberName, memberEmail }) => {\r\n  const { loggedInUser, selectedChat } = useSelector(selectAppState);\r\n  let name, email, profilePic;\r\n\r\n  if (memberProfilePic && memberName && memberEmail) {\r\n    name = memberName;\r\n    email = memberEmail;\r\n    profilePic = memberProfilePic;\r\n  } else {\r\n    const receiver = getOneOnOneChatReceiver(loggedInUser, selectedChat?.users);\r\n    name = receiver?.name;\r\n    email = receiver?.email;\r\n    profilePic = receiver?.profilePic;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* View Profile Pic */}\r\n      <section className=\"dialogField d-flex position-relative mb-4\">\r\n        <img\r\n          className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n          id=\"view_profilePic\"\r\n          src={profilePic}\r\n          alt={name}\r\n        />\r\n      </section>\r\n      {/* View Name */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-15px\" }}>\r\n          <CustomTooltip\r\n            title={name?.length > 20 ? name : \"\"}\r\n            placement=\"top\"\r\n            arrow\r\n          >\r\n            <div\r\n              className=\"w-100 h1 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"35px\" }}\r\n            >\r\n              {truncateString(name, 25, 21)}\r\n            </div>\r\n          </CustomTooltip>\r\n        </div>\r\n      </section>\r\n      {/* View Email */}\r\n      <section\r\n        className={`dialogField text-center mb-2`}\r\n        style={{ marginTop: \"-10px\" }}\r\n      >\r\n        <CustomTooltip\r\n          title={email?.length > 20 ? email : \"\"}\r\n          placement=\"bottom\"\r\n          arrow\r\n        >\r\n          <span className=\"h4\" style={{ color: \"lightblue\" }}>\r\n            {truncateString(email, 25, 21)}\r\n          </span>\r\n        </CustomTooltip>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewProfileBody;\r\n","import { KeyboardArrowDown } from \"@mui/icons-material\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#E6480C\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  borderRadius: 10,\r\n  backgroundColor: \"#E6480C\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst GroupMemberItem = ({ user, truncateValues }) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const { _id, name, email, profilePic } = user;\r\n  const [max, index] = truncateValues;\r\n  const isLoggedInUser = _id === loggedInUser?._id;\r\n\r\n  return (\r\n    <div\r\n      data-user={_id}\r\n      className={`groupMemberItem position-relative user-select-none d-flex text-light justify-content-start align-items-center px-3 ${\r\n        !isLoggedInUser && \"pointer\"\r\n      }`}\r\n    >\r\n      {user?.isGroupAdmin && (\r\n        <span\r\n          className={`adminBadge position-absolute fw-light badge rounded-3 bg-success`}\r\n          style={{ cursor: \"auto\" }}\r\n        >\r\n          Admin\r\n        </span>\r\n      )}\r\n      {!isLoggedInUser && (\r\n        <span\r\n          data-user={_id}\r\n          className=\"memberSettingsIcon text-light position-absolute rounded-circle\"\r\n        >\r\n          <KeyboardArrowDown data-user={_id} />\r\n        </span>\r\n      )}\r\n      <CustomTooltip\r\n        data-user={_id}\r\n        title={`${isLoggedInUser ? \"\" : `${name} (${email})`}`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <Avatar\r\n          src={profilePic}\r\n          alt={_id}\r\n          data-user={_id}\r\n          className={`listItemAvatar groupMemberAvatar`}\r\n        />\r\n      </CustomTooltip>\r\n      <div\r\n        data-user={_id}\r\n        className=\"groupMemberData d-flex flex-column align-items-start px-2\"\r\n      >\r\n        <p data-user={_id} className=\"groupMemberName fw-bold text-info\">\r\n          {isLoggedInUser ? \"You\" : truncateString(name, max, index)}\r\n        </p>\r\n        <p data-user={_id} className=\"groupMemberEmail\">\r\n          {truncateString(email, max, index)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupMemberItem;\r\n","import {\r\n  AdminPanelSettings,\r\n  GroupRemove,\r\n  InfoOutlined,\r\n  Message,\r\n} from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport axios from \"../../utils/axios\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport ViewProfileBody from \"../dialogs/ViewProfileBody\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n  toggleRefresh,\r\n} from \"../../store/slices/AppSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { setLoading } from \"../../store/slices/FormfieldSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\n\r\nconst MemberOptionsMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  clickedMember,\r\n  setShowDialogActions,\r\n  setShowDialogClose,\r\n  childDialogMethods,\r\n}) => {\r\n  const { loggedInUser, refresh, groupInfo, clientSocket } =\r\n    useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n\r\n  const { setChildDialogBody, displayChildDialog } = childDialogMethods;\r\n  const isLoggedInUserGroupAdmin = groupInfo?.groupAdmins?.some(\r\n    (admin) => admin?._id === loggedInUser?._id\r\n  );\r\n  const clickedMemberName = truncateString(\r\n    clickedMember?.name?.split(\" \")[0],\r\n    12,\r\n    9\r\n  );\r\n  const styledMemberName = (\r\n    <span style={{ color: \"violet\", fontSize: \"22px\" }}>\r\n      {clickedMemberName}\r\n    </span>\r\n  );\r\n  const updateView = (data) => {\r\n    dispatch(toggleRefresh(!refresh));\r\n    dispatch(setSelectedChat(data));\r\n  };\r\n\r\n  // Create/Retreive chat when 'Message Member' is clicked\r\n  const openChat = async () => {\r\n    dispatch(hideDialog()); // Close all dialogs by closing parent dialog\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        `/api/chat`,\r\n        { userId: clickedMember?._id },\r\n        config\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Create/Retrieve Chat\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const openViewProfileDialog = () => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    setChildDialogBody(\r\n      <ViewProfileBody\r\n        memberProfilePic={clickedMember?.profilePic}\r\n        memberName={clickedMember?.name}\r\n        memberEmail={clickedMember?.email}\r\n      />\r\n    );\r\n    displayChildDialog({\r\n      title: \"View Profile\",\r\n    });\r\n  };\r\n\r\n  const makeGroupAdmin = async () => {\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        `/api/chat/group/make-admin`,\r\n        { userId: clickedMember?._id, chatId: groupInfo?._id },\r\n        config\r\n      );\r\n\r\n      clientSocket.emit(\"grp updated\", {\r\n        updater: loggedInUser,\r\n        updatedGroup: data,\r\n        createdAdmin: clickedMember,\r\n      });\r\n      dispatch(\r\n        displayToast({\r\n          message: `${clickedMemberName} is now a Group Admin`,\r\n          type: \"success\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setGroupInfo(data));\r\n      updateView(data);\r\n      dispatch(setLoading(false));\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Make Group Admin Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const dismissAsAdmin = async () => {\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/dismiss-admin`,\r\n        { userId: clickedMember?._id, chatId: groupInfo?._id },\r\n        config\r\n      );\r\n\r\n      clientSocket.emit(\"grp updated\", {\r\n        updater: loggedInUser,\r\n        updatedGroup: data,\r\n        dismissedAdmin: clickedMember,\r\n      });\r\n      dispatch(\r\n        displayToast({\r\n          message: `${clickedMemberName} is no longer a Group Admin`,\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      dispatch(setGroupInfo(data));\r\n      updateView(data);\r\n      return \"membersUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Dismiss As Group Admin Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  const removeFromGroup = async () => {\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/remove`,\r\n        {\r\n          userToBeRemoved: clickedMember?._id,\r\n          isGroupAdmin: clickedMember?.isGroupAdmin,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      data[\"removedUser\"] = clickedMember;\r\n      clientSocket.emit(\"grp updated\", {\r\n        updater: loggedInUser,\r\n        updatedGroup: data,\r\n      });\r\n      dispatch(\r\n        displayToast({\r\n          message: `${clickedMemberName} removed from Group`,\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      dispatch(setGroupInfo(data));\r\n      updateView(data);\r\n      return \"membersUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Remove From Group Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  // Confirmation dialogs\r\n  const openDismissAsAdminConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>Are you sure you want to dismiss {styledMemberName} as group admin?</>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Dismiss As Admin\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: dismissAsAdmin,\r\n    });\r\n  };\r\n\r\n  const openRemoveFromGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>Are you sure you want to remove {styledMemberName} from this group?</>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Remove From Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: removeFromGroup,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      {/* Message X */}\r\n      <MenuItem sx={menuItemProps} onClick={openChat}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Message />\r\n        </ListItemIcon>\r\n        <MenuItemText>{`Message ${\r\n          clickedMemberName || \"Member\"\r\n        }`}</MenuItemText>\r\n      </MenuItem>\r\n      {/* View X */}\r\n      <MenuItem sx={menuItemProps} onClick={openViewProfileDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <InfoOutlined />\r\n        </ListItemIcon>\r\n        <MenuItemText>{`View ${clickedMemberName || \"Member\"}`}</MenuItemText>\r\n      </MenuItem>\r\n      {/* Make Group Admin / Dismiss as Admin */}\r\n      {isLoggedInUserGroupAdmin && (\r\n        <MenuItem\r\n          sx={menuItemProps}\r\n          onClick={\r\n            clickedMember?.isGroupAdmin\r\n              ? openDismissAsAdminConfirmDialog\r\n              : makeGroupAdmin\r\n          }\r\n        >\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <AdminPanelSettings />\r\n          </ListItemIcon>\r\n          <MenuItemText>\r\n            {clickedMember?.isGroupAdmin\r\n              ? \"Dismiss as Admin\"\r\n              : \"Make Group Admin\"}\r\n          </MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n      {/* Remove X */}\r\n      {isLoggedInUserGroupAdmin && (\r\n        <MenuItem sx={menuItemProps} onClick={openRemoveFromGroupConfirmDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <GroupRemove />\r\n          </ListItemIcon>\r\n          <MenuItemText>{`Remove ${\r\n            clickedMemberName || \"Member\"\r\n          }`}</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MemberOptionsMenu;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { debounce } from \"../../utils/appUtils\";\r\nimport SearchInput from \"../utils/SearchInput\";\r\nimport GroupMemberItem from \"../utils/GroupMemberItem\";\r\nimport MemberOptionsMenu from \"../menus/MemberOptionsMenu\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\n\r\nlet filteredMembersCache = [];\r\n\r\nconst ViewGroupMembers = () => {\r\n  const { loggedInUser, groupInfo } = useSelector(selectAppState);\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n  const groupMembers = groupInfo?.users;\r\n  const admins = groupInfo?.groupAdmins;\r\n  const [clickedMember, setClickedMember] = useState(null);\r\n  const [memberOptionsMenuAnchor, setMemberOptionsMenuAnchor] = useState(null);\r\n  // LoggedInUser and Group Admins should be at the top\r\n  const sortMembers = () => {\r\n    return [\r\n      loggedInUser,\r\n      ...admins?.filter((a) => a?._id !== loggedInUser?._id),\r\n      ...groupMembers?.filter(\r\n        (u) =>\r\n          u?._id !== loggedInUser?._id &&\r\n          admins?.every((a) => a?._id !== u?._id)\r\n      ),\r\n    ].map((member) => {\r\n      return {\r\n        ...member,\r\n        isGroupAdmin: admins?.some((a) => a?._id === member?._id),\r\n      };\r\n    });\r\n  };\r\n\r\n  // Update the member list whenever groupInfo is updated\r\n  useEffect(() => {\r\n    if (!groupInfo) return;\r\n    filteredMembersCache = sortMembers();\r\n    setFilteredMembers(filteredMembersCache);\r\n  }, [groupInfo]);\r\n\r\n  const filterMemberInput = useRef(null);\r\n  const [filteredMembers, setFilteredMembers] = useState(filteredMembersCache);\r\n\r\n  // Debouncing filterMembers method to limit the no. of fn calls\r\n  const filterMembers = debounce((e) => {\r\n    const memberNameInput = e.target?.value?.toLowerCase().trim();\r\n    if (!memberNameInput) {\r\n      return setFilteredMembers(filteredMembersCache);\r\n    }\r\n    setFilteredMembers(\r\n      filteredMembersCache?.filter(\r\n        (user) =>\r\n          user?.name?.toLowerCase().includes(memberNameInput) ||\r\n          user?.email?.toLowerCase().includes(memberNameInput)\r\n      )\r\n    );\r\n  }, 600);\r\n\r\n  const openMemberOptionsMenu = (e) => {\r\n    setMemberOptionsMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"addGroupMembers d-flex flex-column\"\r\n      style={{ height: \"75vh\" }}\r\n    >\r\n      {/* Member Count */}\r\n      <p className=\"h3 text-center text-light\" style={{ marginTop: \"5px\" }}>\r\n        {`${groupMembers?.length} Member${groupMembers?.length > 1 ? \"s\" : \"\"}`}\r\n      </p>\r\n      {/* Search Bar */}\r\n      <section className=\"searchChat\" style={{ marginTop: \"-15px\" }}>\r\n        <SearchInput\r\n          ref={filterMemberInput}\r\n          searchHandler={filterMembers}\r\n          autoFocus={false}\r\n          placeholder=\"Search Member\"\r\n          clearInput={() => setFilteredMembers(filteredMembersCache)}\r\n        />\r\n      </section>\r\n      {/* Member list */}\r\n      <section className=\"chatList p-1 overflow-auto position-relative\">\r\n        {filteredMembers?.length > 0 ? (\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={(e) => {\r\n              const userId =\r\n                e.target?.dataset.user ||\r\n                e.target.parentNode.dataset.user ||\r\n                e.target.alt;\r\n              if (userId) {\r\n                // Don't display member options menu for loggedInUser\r\n                if (loggedInUser?._id === userId) return;\r\n\r\n                setClickedMember(\r\n                  filteredMembers?.find((m) => m?._id === userId)\r\n                );\r\n                openMemberOptionsMenu(e);\r\n              }\r\n            }}\r\n          >\r\n            {filteredMembers.map((member) => (\r\n              <GroupMemberItem\r\n                key={member._id}\r\n                user={member}\r\n                truncateValues={[21, 18]}\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <span className=\"d-inline-block w-100 text-center text-light h5 mt-4 mx-auto\">\r\n            No Members Found\r\n          </span>\r\n        )}\r\n      </section>\r\n      <MemberOptionsMenu\r\n        anchor={memberOptionsMenuAnchor}\r\n        setAnchor={setMemberOptionsMenuAnchor}\r\n        clickedMember={clickedMember}\r\n        setShowDialogActions={setShowDialogActions}\r\n        setShowDialogClose={setShowDialogClose}\r\n        childDialogMethods={childDialogMethods}\r\n      />\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewGroupMembers;\r\n","import { useRef, useState } from \"react\";\r\nimport {\r\n  Delete,\r\n  Edit,\r\n  InfoOutlined,\r\n  Logout,\r\n  PersonAdd,\r\n} from \"@mui/icons-material\";\r\nimport { CircularProgress, IconButton } from \"@mui/material\";\r\nimport axios from \"../../utils/axios\";\r\nimport { isImageFile, truncateString, TWO_MB } from \"../../utils/appUtils\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport EditNameBody from \"./EditNameBody\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport AddMembersToGroup from \"./AddMembersToGroup\";\r\nimport ViewGroupMembers from \"./ViewGroupMembers\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport FullSizeImage from \"../utils/FullSizeImage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n  toggleRefresh,\r\n} from \"../../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#111\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst GroupInfoBody = ({ messages }) => {\r\n  const { loggedInUser, refresh, groupInfo, clientSocket } =\r\n    useSelector(selectAppState);\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const { loading, disableIfLoading } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n  const { setChildDialogBody, displayChildDialog, closeChildDialog } =\r\n    childDialogMethods;\r\n\r\n  const groupDP = groupInfo?.chatDisplayPic;\r\n  const groupName = groupInfo?.chatName;\r\n  const groupMembers = groupInfo?.users;\r\n  const admins = groupInfo?.groupAdmins;\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [editGroupDpMenuAnchor, setEditGroupDpMenuAnchor] = useState(null);\r\n  const isUserGroupAdmin = admins?.some(\r\n    (admin) => admin?._id === loggedInUser?._id\r\n  );\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n  const imgInput = useRef(null);\r\n  const btnClassName = \"w-100 btn text-light fs-5\";\r\n\r\n  const updateView = (data) => {\r\n    dispatch(setGroupInfo(data));\r\n    dispatch(toggleRefresh(!refresh));\r\n    dispatch(setSelectedChat(data)); // To update messages view\r\n  };\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") {\r\n      e.target.click();\r\n    }\r\n  };\r\n\r\n  // To retreive added members from `AddMembersToGroup` dialog\r\n  let updatedName = \"\";\r\n  const getUpdatedName = (updatedValue, options) => {\r\n    updatedName = updatedValue;\r\n    if (options?.submitUpdatedName) updateGroupName({ enterKeyClicked: true });\r\n  };\r\n\r\n  const updateGroupName = async (options) => {\r\n    if (!updatedName) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Enter Valid Group Name\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser?.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/chat/group/update-name\",\r\n        { groupName: updatedName, chatId: groupInfo?._id },\r\n        config\r\n      );\r\n\r\n      clientSocket.emit(\"grp updated\", {\r\n        updater: loggedInUser,\r\n        updatedGroup: data,\r\n      });\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Group Name Updated Successfully\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n      if (options?.enterKeyClicked) closeChildDialog();\r\n      else return \"profileUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Update Group Name\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Update Group Display Pic\r\n  const updateGroupDp = async (e) => {\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n\r\n    if (!isImageFile(image.name)) {\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Invalid Image File\",\r\n          message: \"Please Select an Image File (png/jpg/jpeg/svg/webp)\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    if (image.size >= TWO_MB) {\r\n      imgInput.current.value = \"\";\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Select an Image Smaller than 2 MB\",\r\n          type: \"warning\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    dispatch(setLoading(true));\r\n    setUploading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"displayPic\", image);\r\n    formData.append(\"currentDP\", groupDP);\r\n    formData.append(\"cloudinary_id\", groupInfo?.cloudinary_id);\r\n    formData.append(\"chatId\", groupInfo?._id);\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/chat/group/update-dp\",\r\n        formData,\r\n        config\r\n      );\r\n\r\n      clientSocket.emit(\"grp updated\", {\r\n        updater: loggedInUser,\r\n        updatedGroup: data,\r\n      });\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Group DP Updated Successfully\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n      updateView(data);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Update Group DP\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const deleteGroupDp = async () => {\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/delete-dp`,\r\n        {\r\n          currentDP: groupDP,\r\n          cloudinary_id: groupInfo?.cloudinary_id,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      clientSocket.emit(\"grp updated\", {\r\n        updater: loggedInUser,\r\n        updatedGroup: data,\r\n      });\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Group DP Deleted Successfully\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Delete Group DP\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const exitGroup = async () => {\r\n    if (groupMembers?.length === 1) {\r\n      return deleteGroup();\r\n    }\r\n    dispatch(setLoading(true));\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/remove`,\r\n        {\r\n          userToBeRemoved: loggedInUser?._id,\r\n          isGroupAdmin: isUserGroupAdmin,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      clientSocket.emit(\"grp updated\", {\r\n        updater: loggedInUser,\r\n        updatedGroup: data,\r\n      });\r\n      dispatch(\r\n        displayToast({\r\n          message: `Exited From '${data?.chatName}' Group`,\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      updateView(null);\r\n      dispatch(hideDialog());\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Exit Group\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  const deleteGroup = async () => {\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const deleteGroupPromise = axios.put(\r\n        `/api/chat/group/delete`,\r\n        {\r\n          currentDP: groupInfo?.chatDisplayPic,\r\n          cloudinary_id: groupInfo?.cloudinary_id,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n      const deleteMessagesPromise = messages?.length\r\n        ? axios.put(\r\n            `/api/message/delete`,\r\n            {\r\n              messageIds: JSON.stringify(messages?.map((m) => m._id)),\r\n              isDeleteGroupRequest: true,\r\n            },\r\n            config\r\n          )\r\n        : Promise.resolve();\r\n\r\n      // Parallel execution of independent promises\r\n      await Promise.all([deleteGroupPromise, deleteMessagesPromise]);\r\n\r\n      clientSocket.emit(\"grp deleted\", {\r\n        admin: loggedInUser,\r\n        deletedGroup: groupInfo,\r\n      });\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Group Deleted Successfully\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      updateView(null);\r\n      dispatch(hideDialog());\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Delete Group\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Open confirm dialogs\r\n  const openExitGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>\r\n        {groupMembers?.length === 1\r\n          ? `Since you're the only group member, this group will be \r\n            DELETED if you exit. Are you sure you want to exit?`\r\n          : `This group will be removed from your chats. \r\n             Are you sure you want to exit this group?`}\r\n      </>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Exit Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Exiting...\",\r\n      action: exitGroup,\r\n    });\r\n  };\r\n\r\n  const openDeleteGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>\r\n        All messages and files related to this group will be deleted and this\r\n        group will be removed from the chats of ALL MEMBERS. Are you sure you\r\n        want to delete this group?\r\n      </>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Delete Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteGroup,\r\n    });\r\n  };\r\n\r\n  // Open edit name dialog\r\n  const openEditGroupNameDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <EditNameBody\r\n        originalName={groupInfo?.chatName}\r\n        getUpdatedName={getUpdatedName}\r\n        placeholder=\"Enter New Group Name\"\r\n      />\r\n    );\r\n    displayChildDialog({\r\n      title: \"Edit Group Name\",\r\n      nolabel: \"CANCEL\",\r\n      yeslabel: \"SAVE\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: updateGroupName,\r\n    });\r\n  };\r\n\r\n  // Open delete photo confirm dialog\r\n  const openDeletePhotoConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(<>Are you sure you want to delete this display pic?</>);\r\n    displayChildDialog({\r\n      title: \"Delete Display Pic\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteGroupDp,\r\n    });\r\n  };\r\n\r\n  // To retreive added members from `AddMembersToGroup` dialog\r\n  let addedMembers = [];\r\n  const getAddedMembers = (updatedMembers) => {\r\n    addedMembers = updatedMembers;\r\n  };\r\n\r\n  const addMembersToGroup = async () => {\r\n    if (!isUserGroupAdmin) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Only Admin Can Add Members to Group\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    if (!addedMembers?.length) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Select Atleast 1 Member to Add\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    dispatch(setLoading(true));\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser?.token}`,\r\n      },\r\n    };\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/chat/group/add\",\r\n        {\r\n          usersToBeAdded: JSON.stringify(addedMembers),\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      clientSocket.emit(\"grp updated\", {\r\n        updater: loggedInUser,\r\n        updatedGroup: data,\r\n      });\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Successfully Added Member/s to Group\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Add Members to Group\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Open Add members dialog\r\n  const openAddMembersDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(<AddMembersToGroup getAddedMembers={getAddedMembers} />);\r\n    displayChildDialog({\r\n      title: \"Add Group Members\",\r\n      nolabel: \"Cancel\",\r\n      yeslabel: \"Add\",\r\n      loadingYeslabel: \"Adding...\",\r\n      action: addMembersToGroup,\r\n    });\r\n  };\r\n\r\n  const openViewMembersDialog = () => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    setChildDialogBody(<ViewGroupMembers />);\r\n    displayChildDialog({\r\n      title: ``,\r\n    });\r\n  };\r\n\r\n  const displayFullSizeImage = (e) => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    setChildDialogBody(<FullSizeImage event={e} />);\r\n    displayChildDialog({\r\n      isFullScreen: true,\r\n      title: e.target?.alt || \"Display Pic\",\r\n    });\r\n  };\r\n\r\n  const openEditGroupDpMenu = (e) => {\r\n    setEditGroupDpMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div className=\"groupDialog d-flex flex-column row\">\r\n      {/* View/Edit Display Pic */}\r\n      {loading && uploading ? (\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n          <CircularProgress\r\n            size={60}\r\n            style={{ margin: \"20px 0px\", color: \"lightblue\" }}\r\n          />\r\n          <span style={{ marginBottom: \"45px\" }} className=\"text-light h1\">\r\n            {\" Updating Photo...\"}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <section className=\"dialogField d-flex position-relative mb-4\">\r\n          <CustomTooltip title=\"View DP\" placement=\"right\" arrow>\r\n            <img\r\n              className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle pointer\"\r\n              src={groupDP || \"GroupDp\"}\r\n              style={{ width: \"120px\", height: \"120px\" }}\r\n              onClick={displayFullSizeImage}\r\n              alt={groupName}\r\n            />\r\n          </CustomTooltip>\r\n\r\n          <CustomTooltip title=\"Edit Group DP\" placement=\"right\" arrow>\r\n            <i\r\n              id=\"editProfilePic\"\r\n              tabIndex={2}\r\n              onKeyDown={clickOnKeydown}\r\n              className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n              onClick={openEditGroupDpMenu}\r\n            >\r\n              <Edit className=\"text-light fs-6\" />\r\n            </i>\r\n          </CustomTooltip>\r\n          {/* Edit/Delete display pic menu */}\r\n          <EditPicMenu\r\n            anchor={editGroupDpMenuAnchor}\r\n            setAnchor={setEditGroupDpMenuAnchor}\r\n            selectProfilePic={() => imgInput.current.click()}\r\n            openDeletePhotoConfirmDialog={openDeletePhotoConfirmDialog}\r\n            deletePhotoCondition={!groupDP?.endsWith(\"group_mbuvht.png\")}\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={updateGroupDp}\r\n            name=\"displayPic\"\r\n            id=\"groupInfo__displayPic\"\r\n            ref={imgInput}\r\n            className={`d-none`}\r\n            disabled={loading}\r\n          />\r\n        </section>\r\n      )}\r\n\r\n      {/* Group Name */}\r\n      <section className={`dialogField text-center mb-3`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-10px\" }}>\r\n          <CustomTooltip\r\n            title={groupName?.length > 24 ? groupName : \"\"}\r\n            placement=\"top\"\r\n            arrow\r\n          >\r\n            <div\r\n              className=\"w-100 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"30px\", lineHeight: \"30px\" }}\r\n            >\r\n              {truncateString(groupName, 25, 21)}\r\n            </div>\r\n          </CustomTooltip>\r\n          <CustomTooltip title=\"Edit Group Name\" placement=\"top\" arrow>\r\n            <IconButton\r\n              tabIndex={3}\r\n              onKeyDown={clickOnKeydown}\r\n              onClick={openEditGroupNameDialog}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: -8,\r\n                top: 0,\r\n                \":hover\": {\r\n                  backgroundColor: \"#aaaaaa30\",\r\n                },\r\n              }}\r\n            >\r\n              <Edit className=\"text-light\" />\r\n            </IconButton>\r\n          </CustomTooltip>\r\n        </div>\r\n      </section>\r\n\r\n      {/* No of members */}\r\n      <section\r\n        className={`dialogField text-center mb-3`}\r\n        style={{ marginTop: \"-10px\", borderRadius: \"10px\" }}\r\n      >\r\n        {`Group : ${groupMembers?.length} Member${\r\n          groupMembers?.length > 1 ? \"s\" : \"\"\r\n        }`}\r\n      </section>\r\n\r\n      {/* View Members */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <button\r\n          className={`${btnClassName} btn-outline-primary`}\r\n          onClick={openViewMembersDialog}\r\n        >\r\n          <InfoOutlined\r\n            className=\"text-light\"\r\n            style={{ marginLeft: \"-15px\" }}\r\n          />\r\n          <span className=\"ms-2\">View Members</span>\r\n        </button>\r\n      </section>\r\n\r\n      {/* Add Members (only for admins) */}\r\n      {isUserGroupAdmin && (\r\n        <section className={`dialogField text-center mb-2`}>\r\n          <button\r\n            className={`${btnClassName} btn-outline-success`}\r\n            onClick={openAddMembersDialog}\r\n          >\r\n            <PersonAdd className=\"text-light\" style={{ marginLeft: \"-20px\" }} />\r\n            <span className=\"ms-2\">Add Members</span>\r\n          </button>\r\n        </section>\r\n      )}\r\n\r\n      {/* Exit Group */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <button\r\n          className={`${btnClassName} btn-outline-danger`}\r\n          onClick={() => {\r\n            if (\r\n              isUserGroupAdmin &&\r\n              admins?.length === 1 &&\r\n              groupMembers?.length !== 1\r\n            ) {\r\n              return dispatch(\r\n                displayToast({\r\n                  message: `Every group must have atleast 1 admin. Since \r\n                you're the only group admin, you won't be allowed\r\n                to exit until you make someone else as the admin.`,\r\n                  type: \"warning\",\r\n                  duration: 10000,\r\n                  position: \"top-center\",\r\n                })\r\n              );\r\n            }\r\n            openExitGroupConfirmDialog();\r\n          }}\r\n        >\r\n          <Logout className=\"text-light\" style={{ marginLeft: \"-30px\" }} />\r\n          <span className=\"ms-2\">Exit Group</span>\r\n        </button>\r\n      </section>\r\n\r\n      {/* Delete Group (only for admins) */}\r\n      {isUserGroupAdmin && (\r\n        <section className={`dialogField text-center mb-2`}>\r\n          <button\r\n            className={`${btnClassName} btn-outline-danger`}\r\n            onClick={openDeleteGroupConfirmDialog}\r\n          >\r\n            <Delete className=\"text-light\" style={{ marginLeft: \"-20px\" }} />\r\n            <span className=\"ms-2\">Delete Group</span>\r\n          </button>\r\n        </section>\r\n      )}\r\n\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupInfoBody;\r\n","import { Skeleton } from \"@mui/material\";\r\n\r\nconst LoadingMsgs = ({ count }) => {\r\n  const skeletonStyle = {\r\n    backgroundColor: \"#777\",\r\n  };\r\n  return (\r\n    <>\r\n      {[...Array(count)].map((e, i) => (\r\n        <div\r\n          key={`loadingMsg${i}`}\r\n          className={`loadingMsg d-flex flex-column align-items-${\r\n            i % 2 ? \"start\" : \"end\"\r\n          } mb-2 mx-4`}\r\n        >\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className={`loadingSender col-3 mb-1`}\r\n            style={skeletonStyle}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className={`loadingContent col-5`}\r\n            style={skeletonStyle}\r\n          />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadingMsgs;\r\n","import {\r\n  Audiotrack,\r\n  Description,\r\n  Download,\r\n  Downloading,\r\n  PictureAsPdf,\r\n  PlayArrow,\r\n  PlayCircle,\r\n  Videocam,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  getFileSizeString,\r\n  isImageOrGifFile,\r\n  truncateString,\r\n} from \"../../utils/appUtils\";\r\nimport animationData from \"../../animations/app-loading.json\";\r\nimport LottieAnimation from \"../utils/LottieAnimation\";\r\nimport { useRef } from \"react\";\r\n\r\nconst IMG_BASE_URL = process.env.REACT_APP_CLOUDINARY_BASE_URL;\r\n\r\nconst MsgAttachment = ({\r\n  msgSent,\r\n  isEditMode,\r\n  fileEditIcons,\r\n  downloadingFileId,\r\n  loadingMediaId,\r\n  isPreview,\r\n  fileData,\r\n}) => {\r\n  const previewStyles = `${\r\n    isPreview && !isEditMode\r\n      ? \"py-4 border border-4 border-secondary previewFile\"\r\n      : \"p-2\"\r\n  }`;\r\n  const iconStyles = `${isPreview && !isEditMode ? \"fs-1\" : \"fs-2\"}`;\r\n\r\n  let { fileUrl, file_id, file_name, size } = fileData;\r\n  const fileContents = file_name.split(\"===\") || [];\r\n  file_name = fileContents[0] || file_name;\r\n  const isMediaFile = fileContents[1]?.includes(\":\");\r\n  const mediaContents = isMediaFile ? fileContents[1].split(\"+++\") : [];\r\n  const mediaFileType = mediaContents[1];\r\n  const mediaFileSize = getFileSizeString(mediaContents[2]);\r\n  const loadingGif = useRef(null);\r\n\r\n  let fileSize = mediaContents[0] || parseInt(fileContents[1]) || size || \"\";\r\n\r\n  if (!isMediaFile) {\r\n    fileSize = getFileSizeString(fileSize);\r\n  }\r\n\r\n  const isDownloadingFile = downloadingFileId === file_id;\r\n  const fileType =\r\n    mediaFileType?.startsWith(\"video/\") ||\r\n    /(\\.mp4|\\.mov|\\.ogv|\\.webm)$/.test(file_name)\r\n      ? \"Video\"\r\n      : mediaFileType?.startsWith(\"audio/\") ||\r\n        /(\\.mp3|\\.ogg|\\.wav)$/.test(file_name)\r\n      ? \"Audio\"\r\n      : /(\\.doc|\\.docx)$/.test(file_name)\r\n      ? \"Word Doc\"\r\n      : /(\\.ppt|\\.pptx)$/.test(file_name)\r\n      ? \"PPT\"\r\n      : /(\\.xlsx|\\.csv|\\.xls)$/.test(file_name)\r\n      ? \"Spreadsheet\"\r\n      : /(\\.pdf)$/.test(file_name)\r\n      ? \"PDF\"\r\n      : file_name.substring(file_name.lastIndexOf(\".\") + 1)?.toUpperCase();\r\n\r\n  const attachmentHeader = (\r\n    <>\r\n      {isEditMode ? (\r\n        <span\r\n          className=\"d-flex justify-content-center w-100 mx-auto\"\r\n          style={{ zIndex: 6 }}\r\n        >\r\n          {fileEditIcons}\r\n        </span>\r\n      ) : (\r\n        <span\r\n          data-download={file_id}\r\n          className={`downloadIcon ${isDownloadingFile ? \"downloading\" : \"\"} ${\r\n            isPreview || !msgSent ? \"d-none\" : \"\"\r\n          }`}\r\n          title={isDownloadingFile ? \"Downloading...\" : \"Download File\"}\r\n        >\r\n          {isDownloadingFile ? (\r\n            <Downloading />\r\n          ) : (\r\n            <Download data-download={file_id} />\r\n          )}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n  const fileNameWrapper = (\r\n    <span className={`${isPreview && !isEditMode ? \"fs-4\" : \"fs-6\"}`}>\r\n      &nbsp;&nbsp;\r\n      <span title={file_name}>{truncateString(file_name + \"\", 40, 37)}</span>\r\n    </span>\r\n  );\r\n  const fileInfo = (\r\n    <>\r\n      {fileNameWrapper}\r\n      <div\r\n        className={`${isPreview && !isEditMode ? \"fs-5 mt-4\" : \"\"}`}\r\n        style={{ marginBottom: isPreview && !isEditMode ? -10 : 0 }}\r\n      >\r\n        {`${fileType} : ${fileSize}`}\r\n      </div>\r\n    </>\r\n  );\r\n  const hideWhileLoadingMedia =\r\n    loadingMediaId === file_id ? \"invisible\" : \"visible\";\r\n\r\n  const displayWhileLoadingMedia =\r\n    loadingMediaId === file_id ? \"visible\" : \"invisible\";\r\n\r\n  return (\r\n    <>\r\n      {fileUrl?.startsWith(IMG_BASE_URL) || isImageOrGifFile(file_name) ? (\r\n        <span className=\"d-inline-block msgImageWrapper mb-2 position-relative\">\r\n          <img\r\n            src={fileUrl}\r\n            alt={file_name}\r\n            title={file_name}\r\n            data-image-id={file_id}\r\n            className={`msgImageFile d-inline-block`}\r\n          />\r\n          {isEditMode && (\r\n            <span className=\"position-absolute top-0 start-0\">\r\n              {fileEditIcons}\r\n            </span>\r\n          )}\r\n        </span>\r\n      ) : (\r\n        <div\r\n          className=\"pointer\"\r\n          style={{\r\n            margin: \"0px 0px -8px 0px\",\r\n            width:\r\n              isPreview && !isEditMode ? \"clamp(270px, 50vmin, 600px)\" : \"100%\",\r\n          }}\r\n        >\r\n          {fileType === \"PDF\" ? (\r\n            <div className={`${previewStyles} msgFile pdfFile text-light`}>\r\n              <div>\r\n                {!isEditMode && <PictureAsPdf className={iconStyles} />}\r\n                {attachmentHeader}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          ) : fileType === \"Spreadsheet\" ? (\r\n            <div className={`${previewStyles} msgFile excelFile bg-success`}>\r\n              <div>\r\n                {!isEditMode && <Description className={iconStyles} />}\r\n                {attachmentHeader}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          ) : fileType === \"PPT\" ? (\r\n            <div className={`${previewStyles} msgFile pptFile text-light`}>\r\n              <div>\r\n                {!isEditMode && <Description className={iconStyles} />}\r\n                {attachmentHeader}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          ) : fileType === \"Word Doc\" ? (\r\n            <div\r\n              className={`${previewStyles} msgFile wordFile`}\r\n              style={{ borderRadius: isEditMode ? 10 : 5 }}\r\n            >\r\n              <div>\r\n                {!isEditMode && <Description className={iconStyles} />}\r\n                {attachmentHeader}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          ) : fileType === \"Video\" ? (\r\n            <div className={`${previewStyles} msgFile mediaFile`}>\r\n              <div>\r\n                {attachmentHeader}\r\n                {!isEditMode && ` ${mediaFileSize}`}\r\n              </div>\r\n              {fileNameWrapper}\r\n              <div\r\n                data-video={file_id}\r\n                data-video-name={file_name}\r\n                title=\"Click to Play\"\r\n                className=\"mediaMsg bg-gradient py-5\"\r\n              >\r\n                <PlayCircle\r\n                  data-video={file_id}\r\n                  data-video-name={file_name}\r\n                  className={`playMedia ${hideWhileLoadingMedia}`}\r\n                  style={{ fontSize: 40 }}\r\n                />\r\n                <LottieAnimation\r\n                  ref={loadingGif}\r\n                  className={`position-absolute ${displayWhileLoadingMedia}`}\r\n                  style={{\r\n                    marginBottom: 0,\r\n                    height: 50,\r\n                    color: \"white\",\r\n                  }}\r\n                  animationData={animationData}\r\n                />\r\n                <span\r\n                  data-video={file_id}\r\n                  data-video-name={file_name}\r\n                  className=\"mediaDuration videoDuration text-light\"\r\n                >\r\n                  <Videocam data-video={file_id} data-video-name={file_name} />\r\n                  &nbsp;&nbsp;{fileSize}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ) : fileType === \"Audio\" ? (\r\n            <div\r\n              className={`${previewStyles} msgFile mediaFile bg-dark bg-opacity-75`}\r\n            >\r\n              <div>\r\n                {attachmentHeader}\r\n                {!isEditMode && ` ${mediaFileSize}`}\r\n              </div>\r\n              {fileNameWrapper}\r\n              <div\r\n                data-audio={file_id}\r\n                data-audio-name={file_name}\r\n                className=\"mediaMsg bg-gradient px-4 py-2\"\r\n                title=\"Click to Play\"\r\n              >\r\n                <PlayArrow\r\n                  data-audio={file_id}\r\n                  data-audio-name={file_name}\r\n                  className={`playMedia ${hideWhileLoadingMedia}`}\r\n                />\r\n                <LottieAnimation\r\n                  ref={loadingGif}\r\n                  className={`position-absolute ${displayWhileLoadingMedia}`}\r\n                  style={{\r\n                    marginBottom: 0,\r\n                    height: 30,\r\n                    color: \"white\",\r\n                  }}\r\n                  animationData={animationData}\r\n                />\r\n                <span\r\n                  data-audio={file_id}\r\n                  data-audio-name={file_name}\r\n                  className=\"mediaDuration audioDuration text-light\"\r\n                >\r\n                  <Audiotrack\r\n                    data-audio={file_id}\r\n                    data-audio-name={file_name}\r\n                    style={{ fontSize: 20 }}\r\n                  />\r\n                  &nbsp;{fileSize}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={`${previewStyles} msgFile otherFile`}>\r\n              <div>\r\n                {!isEditMode && <Description className={iconStyles} />}\r\n                {attachmentHeader}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MsgAttachment;\r\n","import { Close } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport MsgAttachment from \"./MsgAttachment\";\r\n\r\nconst PLACEHOLDER_IMG = process.env.REACT_APP_PLACEHOLDER_IMG_URL;\r\n\r\nconst AttachmentPreview = ({\r\n  isEditMode,\r\n  attachmentData,\r\n  CustomTooltip,\r\n  fileEditIcons,\r\n}) => {\r\n  const {\r\n    attachment: { name, type, size },\r\n    attachmentPreviewUrl,\r\n  } = attachmentData;\r\n\r\n  const FILE_WRAPPER_CLASS = `${\r\n    isEditMode ? \"h-100\" : \"mt-4 h-50\"\r\n  } d-flex justify-content-center align-items-center`;\r\n  const ATTACHMENT_STYLE = {\r\n    borderRadius: 7,\r\n    width: \"calc(100%)\",\r\n    maxHeight: isEditMode ? 200 : 250,\r\n  };\r\n  const editIconsWrapper = (\r\n    <span className=\"position-absolute top-0 start-0 m-1\" style={{ zIndex: 6 }}>\r\n      {fileEditIcons}\r\n    </span>\r\n  );\r\n\r\n  const previewTitle = type.startsWith(\"application/\") ? \"Attached File\" : name;\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-black bg-gradient bg-opacity-75 h-100 d-flex flex-column justify-content-start align-items-center\"\r\n      style={{ borderRadius: 10 }}\r\n    >\r\n      {/* Discard Attachment button */}\r\n      {!isEditMode && (\r\n        <CustomTooltip\r\n          title=\"Discard Attachment\"\r\n          placement=\"bottom-start\"\r\n          arrow\r\n        >\r\n          <IconButton\r\n            data-discard-file={true}\r\n            sx={{\r\n              position: \"absolute\",\r\n              left: 15,\r\n              top: 12,\r\n              color: \"#999999\",\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n          >\r\n            <Close data-discard-file={true} />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      )}\r\n\r\n      {/* Attached File Name */}\r\n      {!isEditMode && (\r\n        <CustomTooltip\r\n          title={previewTitle?.length > 23 ? previewTitle : \"\"}\r\n          placement=\"top\"\r\n          arrow\r\n        >\r\n          <span\r\n            className={`mt-5 mb-2`}\r\n            style={{ color: \"lightblue\", fontSize: 25, zIndex: 5 }}\r\n          >\r\n            {truncateString(previewTitle, 23, 20) || \"Attached File\"}\r\n          </span>\r\n        </CustomTooltip>\r\n      )}\r\n\r\n      <>\r\n        {type?.startsWith(\"image/\") ? (\r\n          <div className={`${FILE_WRAPPER_CLASS} position-relative`}>\r\n            {editIconsWrapper}\r\n            <img\r\n              style={ATTACHMENT_STYLE}\r\n              src={attachmentPreviewUrl || PLACEHOLDER_IMG}\r\n              alt=\"msgAttachment\"\r\n            />\r\n          </div>\r\n        ) : type?.startsWith(\"audio/\") ? (\r\n          <div\r\n            className={`${FILE_WRAPPER_CLASS} flex-column`}\r\n            style={{ width: \"clamp(190px, 48vw, 290px)\" }}\r\n          >\r\n            <span className=\"m-2\" style={{ zIndex: 6 }}>\r\n              {fileEditIcons}\r\n            </span>\r\n            <audio\r\n              src={attachmentPreviewUrl || \"\"}\r\n              controls\r\n              autoPlay\r\n              style={ATTACHMENT_STYLE}\r\n            >\r\n              {name}\r\n            </audio>\r\n          </div>\r\n        ) : type?.startsWith(\"video/\") ? (\r\n          <div className={`${FILE_WRAPPER_CLASS} position-relative`}>\r\n            {editIconsWrapper}\r\n            <video\r\n              src={attachmentPreviewUrl || \"\"}\r\n              controls\r\n              autoPlay\r\n              style={ATTACHMENT_STYLE}\r\n            >\r\n              {name}\r\n            </video>\r\n          </div>\r\n        ) : (\r\n          <MsgAttachment\r\n            isEditMode={isEditMode}\r\n            fileEditIcons={fileEditIcons}\r\n            isPreview={true}\r\n            fileData={{\r\n              fileUrl: attachmentPreviewUrl,\r\n              file_id: \"\",\r\n              file_name: name,\r\n              size,\r\n            }}\r\n          />\r\n        )}\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttachmentPreview;\r\n","import {\r\n  AttachFile,\r\n  Close,\r\n  Delete,\r\n  Done,\r\n  DoneAll,\r\n  Edit,\r\n  KeyboardArrowDown,\r\n} from \"@mui/icons-material\";\r\nimport { Avatar, CircularProgress, IconButton } from \"@mui/material\";\r\nimport { forwardRef, useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport {\r\n  msgTimeStringOf,\r\n  msgDateStringOf,\r\n  dateStringOf,\r\n  setCaretPosition,\r\n} from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport AttachmentPreview from \"./AttachmentPreview\";\r\nimport MsgAttachment from \"./MsgAttachment\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#111\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 16,\r\n  borderRadius: 5,\r\n  border: \"1px solid #555\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\nconst IconButtonSx = {\r\n  color: \"lightblue\",\r\n  \":hover\": {\r\n    backgroundColor: \"#cccccc20\",\r\n  },\r\n};\r\nconst fileEditIcons = (\r\n  <>\r\n    <CustomTooltip title=\"Remove Attachment\" placement=\"top\" arrow>\r\n      <IconButton\r\n        data-remove-msg-file={true}\r\n        className={`m-1 bg-black bg-opacity-75`}\r\n        sx={IconButtonSx}\r\n      >\r\n        <Delete data-remove-msg-file={true} style={{ fontSize: 20 }} />\r\n      </IconButton>\r\n    </CustomTooltip>\r\n    <CustomTooltip title=\"Change Attachment\" placement=\"top\" arrow>\r\n      <IconButton\r\n        data-edit-msg-file={true}\r\n        className={`m-1 bg-black bg-opacity-75`}\r\n        sx={IconButtonSx}\r\n      >\r\n        <Edit data-edit-msg-file={true} style={{ fontSize: 20 }} />\r\n      </IconButton>\r\n    </CustomTooltip>\r\n  </>\r\n);\r\n\r\nconst Message = forwardRef(\r\n  (\r\n    {\r\n      downloadingFileId,\r\n      loadingMediaId,\r\n      msgEditMode,\r\n      clickedMsgId,\r\n      msgFileRemoved,\r\n      msgSent,\r\n      currMsg,\r\n      prevMsg,\r\n      attachmentData,\r\n    },\r\n    editableMsgRef\r\n  ) => {\r\n    const msgContentRef = useRef(null); // Local ref (in non-edit mode)\r\n    const { loggedInUser, selectedChat } = useSelector(selectAppState);\r\n    const { fileUrl, file_id, file_name } = currMsg;\r\n    const { _id, profilePic, name, email } = currMsg?.sender;\r\n    const isLoggedInUser = _id === loggedInUser._id;\r\n    const senderData = `${profilePic}===${name}===${email}`;\r\n    const currMsgId = isLoggedInUser ? currMsg?._id : null;\r\n    const isClickedMsgCurrMsg = clickedMsgId === currMsgId;\r\n    const isSameSender = _id === prevMsg?.sender._id;\r\n    const currMsgDate = new Date(currMsg.createdAt);\r\n    const prevMsgDate = new Date(prevMsg?.createdAt);\r\n    const isOtherDay = dateStringOf(currMsgDate) !== dateStringOf(prevMsgDate);\r\n    const showCurrSender =\r\n      !isLoggedInUser &&\r\n      selectedChat?.isGroupChat &&\r\n      (!isSameSender || isOtherDay);\r\n    const isEditMode = msgEditMode && isClickedMsgCurrMsg;\r\n\r\n    useEffect(() => {\r\n      if (msgContentRef?.current) {\r\n        msgContentRef.current.innerHTML = currMsg?.content;\r\n      }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      if (isEditMode) {\r\n        setCaretPosition(editableMsgRef?.current);\r\n      }\r\n    }, [msgEditMode]);\r\n\r\n    return (\r\n      <>\r\n        <section\r\n          className={`msgRow d-flex justify-content-${\r\n            isLoggedInUser ? \"end\" : \"start\"\r\n          }`}\r\n          style={{ marginTop: isSameSender ? 3 : 10 }}\r\n        >\r\n          {showCurrSender ? (\r\n            <CustomTooltip title={`View Profile`} placement=\"top-start\" arrow>\r\n              <Avatar\r\n                src={profilePic}\r\n                alt={name}\r\n                data-sender={senderData}\r\n                className=\"senderAvatar pointer\"\r\n              />\r\n            </CustomTooltip>\r\n          ) : (\r\n            selectedChat?.isGroupChat && <span style={{ width: 30 }}></span>\r\n          )}\r\n          <div\r\n            className={`msgBox d-flex flex-column text-start p-2 rounded-3\r\n          mx-2 mx-md-3 ${isLoggedInUser ? \"yourMsg\" : \"receiversMsg\"}`}\r\n            data-msg={currMsgId}\r\n            data-file-exists={file_id}\r\n          >\r\n            {isEditMode ? (\r\n              <div\r\n                className=\"d-flex justify-content-end\"\r\n                style={{ margin: \"-5px -5px 3px 0px\" }}\r\n              >\r\n                {(!currMsg?.fileUrl ||\r\n                  (msgFileRemoved && !attachmentData?.attachment)) && (\r\n                  <CustomTooltip title=\"Attach File\" placement=\"top-end\" arrow>\r\n                    <IconButton\r\n                      data-attach-msg-file={true}\r\n                      className={`me-1`}\r\n                      sx={{ ...IconButtonSx, transform: \"rotateZ(45deg)\" }}\r\n                    >\r\n                      <AttachFile\r\n                        data-attach-msg-file={true}\r\n                        style={{ fontSize: 20 }}\r\n                      />\r\n                    </IconButton>\r\n                  </CustomTooltip>\r\n                )}\r\n                <CustomTooltip title=\"Discard Draft\" placement=\"top-end\" arrow>\r\n                  <IconButton\r\n                    data-discard-draft={true}\r\n                    className={``}\r\n                    sx={IconButtonSx}\r\n                  >\r\n                    <Close data-discard-draft={true} style={{ fontSize: 20 }} />\r\n                  </IconButton>\r\n                </CustomTooltip>\r\n                <CustomTooltip title=\"Update Message\" placement=\"top-end\" arrow>\r\n                  <IconButton\r\n                    data-update-msg={true}\r\n                    data-msg-created-at={currMsg?.createdAt}\r\n                    className={`ms-1`}\r\n                    sx={IconButtonSx}\r\n                  >\r\n                    <Done\r\n                      data-update-msg={true}\r\n                      data-msg-created-at={currMsg?.createdAt}\r\n                      style={{ fontSize: 20 }}\r\n                    />\r\n                  </IconButton>\r\n                </CustomTooltip>\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {showCurrSender && (\r\n              <span data-sender={senderData} className=\"msgSender pointer\">\r\n                {name}\r\n              </span>\r\n            )}\r\n            {isLoggedInUser && msgSent && !msgEditMode && (\r\n              <span\r\n                data-msg={currMsgId}\r\n                data-file-exists={file_id}\r\n                title=\"Edit/Delete Message\"\r\n                className={`msgOptionsIcon text-light position-absolute \r\n              top-0 end-0 w-25 h-100`}\r\n              >\r\n                <KeyboardArrowDown\r\n                  data-msg={currMsgId}\r\n                  data-file-exists={file_id}\r\n                  style={{ fontSize: 22 }}\r\n                  className=\"position-absolute top-0 end-0\"\r\n                />\r\n              </span>\r\n            )}\r\n            {currMsg?.fileUrl && !isEditMode && (\r\n              <MsgAttachment\r\n                msgSent={msgSent}\r\n                isEditMode={isEditMode}\r\n                fileEditIcons={fileEditIcons}\r\n                downloadingFileId={downloadingFileId}\r\n                loadingMediaId={loadingMediaId}\r\n                fileData={{\r\n                  msgId: currMsgId,\r\n                  fileUrl,\r\n                  file_id,\r\n                  file_name,\r\n                }}\r\n              />\r\n            )}\r\n            {isEditMode && attachmentData?.attachment && (\r\n              <AttachmentPreview\r\n                isEditMode={isEditMode}\r\n                attachmentData={attachmentData}\r\n                CustomTooltip={CustomTooltip}\r\n                fileEditIcons={fileEditIcons}\r\n              />\r\n            )}\r\n            {currMsg?.fileUrl &&\r\n              isEditMode &&\r\n              !attachmentData?.attachment &&\r\n              !msgFileRemoved && (\r\n                <MsgAttachment\r\n                  msgSent={msgSent}\r\n                  isEditMode={isEditMode}\r\n                  fileEditIcons={fileEditIcons}\r\n                  downloadingFileId={downloadingFileId}\r\n                  loadingMediaId={loadingMediaId}\r\n                  fileData={{\r\n                    msgId: currMsgId,\r\n                    fileUrl,\r\n                    file_id,\r\n                    file_name,\r\n                  }}\r\n                />\r\n              )}\r\n            <div\r\n              data-msg={currMsgId}\r\n              data-file-exists={file_id}\r\n              className={`msgContent d-flex ${\r\n                file_id || attachmentData?.attachment ? \"mt-2\" : \"\"\r\n              }`}\r\n            >\r\n              <span\r\n                id={`${currMsg?._id}---content`}\r\n                className=\"w-100\"\r\n                style={{ outline: \"none\" }}\r\n                contentEditable={isEditMode}\r\n                data-msg-created-at={currMsg?.createdAt}\r\n                ref={isEditMode ? editableMsgRef : msgContentRef}\r\n              ></span>\r\n              <span\r\n                data-msg={currMsgId}\r\n                data-file-exists={file_id}\r\n                className=\"msgTime text-end d-flex align-items-end justify-content-end\"\r\n              >\r\n                {msgTimeStringOf(currMsgDate)}\r\n                {isLoggedInUser && (\r\n                  <>\r\n                    {msgSent ? (\r\n                      <DoneAll\r\n                        data-msg={currMsgId}\r\n                        data-file-exists={file_id}\r\n                        className=\"text-info fs-6 ms-1\"\r\n                      />\r\n                    ) : (\r\n                      <CircularProgress\r\n                        size={10}\r\n                        className=\"sendStatusIcon ms-1\"\r\n                      />\r\n                    )}\r\n                  </>\r\n                )}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {isOtherDay && (\r\n          <div className={`msgDate mt-3 mb-2 mx-auto py-1 px-3 rounded-3`}>\r\n            {msgDateStringOf(currMsgDate)}\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n);\r\nexport default Message;\r\n","import { Delete, Edit } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\n\r\nconst MsgOptionsMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  editMsgHandler,\r\n  openDeleteMsgConfirmDialog,\r\n}) => {\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={editMsgHandler}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Edit />\r\n        </ListItemIcon>\r\n        <MenuItemText>Edit Message</MenuItemText>\r\n      </MenuItem>\r\n      <MenuItem sx={menuItemProps} onClick={openDeleteMsgConfirmDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Delete />\r\n        </ListItemIcon>\r\n        <MenuItemText>Delete Message</MenuItemText>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MsgOptionsMenu;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { Avatar, IconButton } from \"@mui/material\";\r\nimport {\r\n  debounce,\r\n  FIVE_MB,\r\n  getOneOnOneChatReceiver,\r\n  isImageOrGifFile,\r\n  parseInnerHTML,\r\n  truncateString,\r\n} from \"../utils/appUtils\";\r\nimport {\r\n  ArrowBack,\r\n  AttachFile,\r\n  Close,\r\n  EmojiEmotions,\r\n  Send,\r\n} from \"@mui/icons-material\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport animationData from \"../animations/letsChatGif.json\";\r\nimport LottieAnimation from \"./utils/LottieAnimation\";\r\nimport axios from \"../utils/axios\";\r\nimport ViewProfileBody from \"./dialogs/ViewProfileBody\";\r\nimport GroupInfoBody from \"./dialogs/GroupInfoBody\";\r\nimport LoadingMsgs from \"./utils/LoadingMsgs\";\r\nimport FullSizeImage from \"./utils/FullSizeImage\";\r\nimport Message from \"./utils/Message\";\r\nimport MsgOptionsMenu from \"./menus/MsgOptionsMenu\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport io from \"socket.io-client\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setClientSocket,\r\n  setGroupInfo,\r\n  setLoggedInUser,\r\n  setSelectedChat,\r\n  setSocketConnected,\r\n  toggleRefresh,\r\n} from \"../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../store/slices/FormfieldSlice\";\r\nimport { displayToast } from \"../store/slices/ToastSlice\";\r\nimport {\r\n  displayDialog,\r\n  setShowDialogActions,\r\n} from \"../store/slices/CustomDialogSlice\";\r\nimport AttachmentPreview from \"./utils/AttachmentPreview\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#777\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 16,\r\n  backgroundColor: \"#777\",\r\n};\r\nconst iconStyles = {\r\n  margin: \"4px 0px\",\r\n  padding: \"5px\",\r\n  color: \"#999999\",\r\n  \":hover\": {\r\n    backgroundColor: \"#aaaaaa20\",\r\n  },\r\n};\r\n\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\nconst SOCKET_ENDPOINT = process.env.REACT_APP_SERVER_BASE_URL;\r\nlet msgFileAlreadyExists = false;\r\n\r\nconst MessagesView = ({\r\n  loadingMsgs,\r\n  setLoadingMsgs,\r\n  fetchMsgs,\r\n  setFetchMsgs,\r\n  setDialogBody,\r\n}) => {\r\n  const letsChatGif = useRef(null);\r\n  const {\r\n    loggedInUser,\r\n    selectedChat,\r\n    refresh,\r\n    clientSocket,\r\n    isSocketConnected,\r\n  } = useSelector(selectAppState);\r\n  const { disableIfLoading } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n  const [sending, setSending] = useState(false);\r\n  const [msgFileRemoved, setMsgFileRemoved] = useState(false);\r\n  const [enableMsgSend, setEnableMsgSend] = useState(false);\r\n  const [fileAttached, setFileAttached] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [clickedMsg, setClickedMsg] = useState(\"\");\r\n  const [dontScrollToBottom, setDontScrollToBottom] = useState(false);\r\n  const [attachmentData, setAttachmentData] = useState({\r\n    attachment: null,\r\n    attachmentPreviewUrl: \"\",\r\n  });\r\n  const msgListBottom = useRef(null);\r\n  const msgFileInput = useRef(null);\r\n  const msgContent = useRef(null);\r\n  const editableMsgContent = useRef(null);\r\n  const [downloadingFileId, setDownloadingFileId] = useState(\"\");\r\n  const [loadingMediaId, setLoadingMediaId] = useState(\"\");\r\n  const [msgEditMode, setMsgEditMode] = useState(false);\r\n  const [msgOptionsMenuAnchor, setMsgOptionsMenuAnchor] = useState(null);\r\n\r\n  const chatName = selectedChat?.isGroupChat\r\n    ? selectedChat?.chatName\r\n    : getOneOnOneChatReceiver(loggedInUser, selectedChat?.users)?.name;\r\n\r\n  const resetMsgInput = (options) => {\r\n    setAttachmentData({\r\n      attachment: null,\r\n      attachmentPreviewUrl: \"\",\r\n    });\r\n    msgFileInput.current.value = \"\";\r\n    setFileAttached(false);\r\n    if (options?.discardAttachmentOnly) return;\r\n    setEnableMsgSend(false);\r\n    msgContent.current.innerHTML = \"\";\r\n  };\r\n\r\n  // Emoji picker config\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const toggleEmojiPicker = () => setShowEmojiPicker(!showEmojiPicker);\r\n  const hideEmojiPicker = () => {\r\n    if (showEmojiPicker) setShowEmojiPicker(false);\r\n  };\r\n  const onEmojiClick = (event, emojiObject) => {\r\n    msgContent.current.innerHTML += emojiObject.emoji;\r\n    setEnableMsgSend(true);\r\n  };\r\n\r\n  const selectAttachment = () => {\r\n    hideEmojiPicker();\r\n    msgFileInput.current?.click();\r\n  };\r\n\r\n  const discardAttachment = () => {\r\n    resetMsgInput({ discardAttachmentOnly: true });\r\n  };\r\n\r\n  const persistUpdatedUser = (updatedUser) => {\r\n    // localStorage persists updated user even after page refresh\r\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\r\n    dispatch(setLoggedInUser(updatedUser));\r\n  };\r\n\r\n  const closeChat = () => {\r\n    setLoadingMsgs(false);\r\n    dispatch(setSelectedChat(null));\r\n    resetMsgInput();\r\n    setMsgFileRemoved(false);\r\n    setMsgEditMode(false);\r\n    setDontScrollToBottom(false);\r\n  };\r\n\r\n  const viewMedia = (src, fileData) => {\r\n    if (!src || !fileData) return;\r\n    const { fileName, isAudio } = fileData;\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(\r\n      <FullSizeImage\r\n        audioSrc={isAudio ? src : null}\r\n        videoSrc={!isAudio ? src : null}\r\n      />\r\n    );\r\n    dispatch(\r\n      displayDialog({\r\n        isFullScreen: true,\r\n        title: fileName || `${isAudio ? \"Audio\" : \"Video\"} File`,\r\n      })\r\n    );\r\n    setLoadingMediaId(\"\");\r\n  };\r\n\r\n  const displayFullSizeImage = (e) => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<FullSizeImage event={e} />);\r\n    dispatch(\r\n      displayDialog({\r\n        isFullScreen: true,\r\n        title: e.target?.alt || \"Display Pic\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const loadMedia = async (fileId, options) => {\r\n    if (!fileId || !options) return;\r\n    setLoadingMediaId(fileId);\r\n    const { fileName, isAudio } = options;\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n      responseType: \"blob\",\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`/api/message/files/${fileId}`, config);\r\n\r\n      const mediaSrc = URL.createObjectURL(new Blob([data]));\r\n      viewMedia(mediaSrc, { fileName, isAudio });\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Load Media\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      setLoadingMediaId(\"\");\r\n    }\r\n  };\r\n\r\n  const downloadFile = async (fileId) => {\r\n    if (!fileId) return;\r\n    setDownloadingFileId(fileId);\r\n    setSending(true);\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n      responseType: \"blob\",\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`/api/message/files/${fileId}`, config);\r\n\r\n      const link = document.createElement(\"a\");\r\n      link.href = URL.createObjectURL(new Blob([data]));\r\n      link.setAttribute(\"download\", fileId.split(\"---\")[1] || fileId);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n\r\n      setDownloadingFileId(\"\");\r\n      setSending(false);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Download File\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      setDownloadingFileId(\"\");\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const fetchMessages = async (options) => {\r\n    setLoadingMsgs(true);\r\n\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${loggedInUser.token}` },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat?._id}`,\r\n        config\r\n      );\r\n      setMessages(\r\n        data.map((msg) => {\r\n          msg[\"sent\"] = true;\r\n          return msg;\r\n        })\r\n      );\r\n      setLoadingMsgs(false);\r\n      if (fetchMsgs) setFetchMsgs(false);\r\n      if (options?.updatingMsg) {\r\n        dispatch(\r\n          displayToast({\r\n            message: \"Message Updated Successfully\",\r\n            type: \"success\",\r\n            duration: 1500,\r\n            position: \"bottom-center\",\r\n          })\r\n        );\r\n      }\r\n      setSending(false);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Messages\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      setLoadingMsgs(false);\r\n      if (fetchMsgs) setFetchMsgs(false);\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    hideEmojiPicker();\r\n    if (!attachmentData.attachment && !msgContent.current?.innerHTML) return;\r\n\r\n    const msgData = {\r\n      ...attachmentData,\r\n      content: msgContent.current?.innerHTML || \"\",\r\n    };\r\n    const isNonImageFile = !isImageOrGifFile(msgData.attachment?.name);\r\n\r\n    const newMsg = {\r\n      _id: Date.now(),\r\n      sender: {\r\n        _id: loggedInUser?._id,\r\n        profilePic: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n      },\r\n      fileUrl: msgData?.attachmentPreviewUrl,\r\n      file_id: \"\",\r\n      file_name:\r\n        msgData?.attachment?.name +\r\n        `${\r\n          msgData?.mediaDuration\r\n            ? `===${msgData.mediaDuration}`\r\n            : isNonImageFile\r\n            ? `===${msgData.attachment?.size || \"\"}`\r\n            : \"\"\r\n        }`,\r\n      content: msgData?.content,\r\n      createdAt: new Date().toISOString(),\r\n      sent: false,\r\n    };\r\n    setDontScrollToBottom(false);\r\n    setMessages([newMsg, ...messages]);\r\n    resetMsgInput();\r\n    setSending(true);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      // Upload img/gif to cloudinary, and all other files to aws s3\r\n      const apiUrl = isNonImageFile\r\n        ? `/api/message/upload-to-s3`\r\n        : `/api/message/`;\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"attachment\", msgData.attachment);\r\n      formData.append(\"mediaDuration\", msgData?.mediaDuration);\r\n      formData.append(\"content\", msgData.content);\r\n      formData.append(\"chatId\", selectedChat?._id);\r\n      const { data } = await axios.post(apiUrl, formData, config);\r\n\r\n      clientSocket?.emit(\"new msg sent\", data);\r\n      fetchMessages();\r\n      dispatch(toggleRefresh(!refresh));\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Send Message\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const deleteMessage = async () => {\r\n    dispatch(setLoading(true));\r\n    setSending(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      await axios.put(\r\n        `/api/message/delete`,\r\n        { messageIds: JSON.stringify([clickedMsg]) },\r\n        config\r\n      );\r\n\r\n      clientSocket?.emit(\"msg deleted\", {\r\n        deletedMsgId: clickedMsg,\r\n        senderId: loggedInUser?._id,\r\n        chat: selectedChat,\r\n      });\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Message Deleted Successfully\",\r\n          type: \"success\",\r\n          duration: 1500,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      setMessages(messages.filter((msg) => msg?._id !== clickedMsg));\r\n      dispatch(setLoading(false));\r\n      dispatch(toggleRefresh(!refresh));\r\n      setSending(false);\r\n      return \"msgActionDone\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Delete Message\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const updateMessage = async (updatedMsgContent, msgDate) => {\r\n    if (\r\n      !(\r\n        attachmentData.attachment ||\r\n        (msgFileAlreadyExists && !msgFileRemoved)\r\n      ) &&\r\n      !parseInnerHTML(updatedMsgContent)\r\n    ) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"A Message Must Contain Either a File or some Text Content\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    setMsgEditMode(false);\r\n    setDontScrollToBottom(true);\r\n\r\n    const msgData = {\r\n      ...attachmentData,\r\n      content: updatedMsgContent || \"\",\r\n    };\r\n    const isNonImageFile = !isImageOrGifFile(msgData.attachment?.name);\r\n\r\n    const updatedMsg = {\r\n      _id: Date.now(),\r\n      sender: {\r\n        _id: loggedInUser?._id,\r\n        profilePic: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n      },\r\n      fileUrl: msgData?.attachmentPreviewUrl,\r\n      file_id: \"\",\r\n      file_name:\r\n        msgData?.attachment?.name +\r\n        `${\r\n          msgData?.mediaDuration\r\n            ? `===${msgData.mediaDuration}`\r\n            : isNonImageFile\r\n            ? `===${msgData.attachment?.size || \"\"}`\r\n            : \"\"\r\n        }`,\r\n      content: msgData?.content,\r\n      createdAt: msgDate,\r\n      sent: false,\r\n    };\r\n    setMessages(\r\n      messages.map((msg) => (msg._id === clickedMsg ? updatedMsg : msg))\r\n    );\r\n    discardAttachment();\r\n    setSending(true);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      // Upload img/gif to cloudinary, and all other files to aws s3\r\n      const apiUrl = isNonImageFile\r\n        ? `/api/message/update-in-s3`\r\n        : `/api/message/update`;\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"attachment\", msgData.attachment);\r\n      formData.append(\"msgFileRemoved\", msgFileRemoved);\r\n      formData.append(\"mediaDuration\", msgData?.mediaDuration);\r\n      formData.append(\"updatedContent\", msgData.content);\r\n      formData.append(\"messageId\", clickedMsg);\r\n      const { data } = await axios.put(apiUrl, formData, config);\r\n\r\n      clientSocket?.emit(\"msg updated\", data);\r\n      fetchMessages({ updatingMsg: true });\r\n      dispatch(toggleRefresh(!refresh));\r\n      setMsgFileRemoved(false);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Update Message\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      setSending(false);\r\n      setMsgFileRemoved(false);\r\n    }\r\n  };\r\n\r\n  const editMsgHandler = () => {\r\n    setMsgEditMode(true);\r\n  };\r\n\r\n  const setMediaDuration = (mediaUrl, msgFile) => {\r\n    const media = new Audio(mediaUrl);\r\n    media.onloadedmetadata = () => {\r\n      const { duration } = media;\r\n      const minutes = parseInt(duration / 60);\r\n      const seconds = parseInt(duration % 60);\r\n      setAttachmentData({\r\n        attachment: msgFile,\r\n        attachmentPreviewUrl: mediaUrl,\r\n        mediaDuration: `${minutes}:${\r\n          seconds < 10 ? `0${seconds}` : seconds\r\n        }+++${msgFile.type}`,\r\n      });\r\n      setFileAttached(true);\r\n    };\r\n  };\r\n\r\n  const handleMsgFileInputChange = (e) => {\r\n    const msgFile = e.target.files[0];\r\n    if (!msgFile) return;\r\n\r\n    if (msgFile.size >= FIVE_MB) {\r\n      msgFileInput.current.value = \"\";\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Select a File Smaller than 5 MB\",\r\n          type: \"warning\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    const fileUrl = URL.createObjectURL(msgFile);\r\n    if (/^(video\\/|audio\\/)/.test(msgFile.type)) {\r\n      setMediaDuration(fileUrl, msgFile);\r\n    } else {\r\n      setAttachmentData({\r\n        attachment: msgFile,\r\n        attachmentPreviewUrl: fileUrl,\r\n      });\r\n      setFileAttached(true);\r\n    }\r\n  };\r\n\r\n  const deletePersistedNotifs = async (notifsToBeDeleted) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n    try {\r\n      await axios.put(\r\n        `/api/user/delete/notifications`,\r\n        { notificationIds: JSON.stringify(notifsToBeDeleted) },\r\n        config\r\n      );\r\n    } catch (error) {\r\n      console.log(\"Couldn't Delete Notifications : \", error.message);\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    msgListBottom.current?.scrollIntoView({ behaviour: \"smooth\" });\r\n  };\r\n\r\n  // Socket client config\r\n  useEffect(() => {\r\n    dispatch(\r\n      setClientSocket(io(SOCKET_ENDPOINT, { transports: [\"websocket\"] }))\r\n    );\r\n  }, []);\r\n\r\n  // Listening to socket events\r\n  useEffect(() => {\r\n    if (!clientSocket) return;\r\n\r\n    if (!isSocketConnected && clientSocket) {\r\n      clientSocket.emit(\"init user\", loggedInUser?._id);\r\n      clientSocket.on(\"user connected\", () => {\r\n        // console.log(\"socket connected\");\r\n        dispatch(setSocketConnected(true));\r\n      });\r\n    }\r\n\r\n    // off() prevents on() to execute multiple times\r\n    clientSocket\r\n      .off(\"new msg received\")\r\n      .on(\"new msg received\", (newMsg, notifications) => {\r\n        const { chat } = newMsg;\r\n        dispatch(toggleRefresh(!refresh));\r\n        if (selectedChat && chat && selectedChat._id === chat._id) {\r\n          newMsg[\"sent\"] = true;\r\n          setMessages([newMsg, ...messages]);\r\n          deletePersistedNotifs([newMsg._id]);\r\n        } else {\r\n          const updatedUser = {\r\n            ...loggedInUser,\r\n            notifications: notifications?.reverse(),\r\n          };\r\n          persistUpdatedUser(updatedUser);\r\n        }\r\n      });\r\n\r\n    clientSocket\r\n      .off(\"remove deleted msg\")\r\n      .on(\"remove deleted msg\", (deletedMsgData) => {\r\n        const { deletedMsgId, chat } = deletedMsgData;\r\n        dispatch(toggleRefresh(!refresh));\r\n        if (selectedChat && chat && selectedChat._id === chat._id) {\r\n          setMessages(messages.filter((m) => m?._id !== deletedMsgId));\r\n        } else {\r\n          // Remove notification of 'deleted msg' from global state,\r\n          // localStorage and from mongodb\r\n          const notifs = loggedInUser.notifications;\r\n          const updatedUser = {\r\n            ...loggedInUser,\r\n            notifications: notifs.filter((n) => n._id !== deletedMsgId),\r\n          };\r\n          persistUpdatedUser(updatedUser);\r\n          deletePersistedNotifs([deletedMsgId]);\r\n        }\r\n      });\r\n\r\n    clientSocket\r\n      .off(\"update modified msg\")\r\n      .on(\"update modified msg\", (updatedMsg) => {\r\n        const { chat } = updatedMsg;\r\n        dispatch(toggleRefresh(!refresh));\r\n        if (selectedChat && chat && selectedChat._id === chat._id) {\r\n          updatedMsg[\"sent\"] = true;\r\n          updatedMsg[\"chat\"] = updatedMsg?.chat?._id;\r\n          setTimeout(() => {\r\n            // Only updating msg content using 'document' method\r\n            // as updating 'messages' state will re-render all\r\n            // msgs and scroll to bottom, which may prevent the\r\n            // receiver to edit or view his/her msg, causing bad UX\r\n            document.getElementById(`${updatedMsg._id}---content`).innerHTML =\r\n              updatedMsg.content;\r\n          }, 10);\r\n          // Updating 'state' is the only way to update attachment\r\n        }\r\n      });\r\n  });\r\n\r\n  // Discard msg update draft\r\n  const discardMsgDraft = () => {\r\n    discardAttachment();\r\n    setMsgEditMode(false);\r\n    setSending(true);\r\n    setMessages([]);\r\n    // To execute after the entire code is run\r\n    setTimeout(() => {\r\n      setMessages(messages);\r\n      setSending(false);\r\n      // To execute after all the messages have been mapped\r\n      setTimeout(() => {\r\n        document.getElementById(clickedMsg)?.scrollIntoView();\r\n      }, 10);\r\n    }, 0);\r\n    setMsgFileRemoved(false);\r\n    return \"msgActionDone\";\r\n  };\r\n\r\n  // Open discard draft confirm dialog\r\n  const openDiscardDraftConfirmDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<>Are you sure you want to discard this draft?</>);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Discard Draft\",\r\n        nolabel: \"NO\",\r\n        yeslabel: \"YES\",\r\n        loadingYeslabel: \"Discarding...\",\r\n        action: discardMsgDraft,\r\n      })\r\n    );\r\n  };\r\n\r\n  // Message input handlers\r\n  const msgInputHandler = debounce((e) => {\r\n    const input = parseInnerHTML(e.target.innerHTML);\r\n    setEnableMsgSend(Boolean(input));\r\n  }, 500);\r\n\r\n  const msgKeydownHandler = (e) => {\r\n    hideEmojiPicker();\r\n    if (\r\n      e.key === \"Enter\" &&\r\n      !e.shiftKey &&\r\n      (enableMsgSend || fileAttached || msgEditMode)\r\n    ) {\r\n      e.preventDefault();\r\n      if (msgEditMode) {\r\n        const msgDate =\r\n          e.target.dataset.msgCreatedAt ||\r\n          e.target.parentNode.dataset.msgCreatedAt;\r\n        updateMessage(editableMsgContent?.current?.innerHTML, msgDate);\r\n      } else {\r\n        sendMessage();\r\n      }\r\n    }\r\n  };\r\n\r\n  // Msgs click handler ('Event Delegation' applied here)\r\n  const msgsClickHandler = (e) => {\r\n    const { dataset } = e.target;\r\n    const parentDataset = e.target.parentNode.dataset;\r\n    const senderData = (dataset.sender || parentDataset.sender)?.split(\"===\");\r\n    const msgId = dataset.msg || parentDataset.msg;\r\n    const videoId = dataset.video || parentDataset.video;\r\n    const audioId = dataset.audio || parentDataset.audio;\r\n    const fileId = dataset.download || parentDataset.download;\r\n    const updateEditedMsg = dataset.updateMsg || parentDataset.updateMsg;\r\n    const attachMsgFileClicked =\r\n      dataset.attachMsgFile || parentDataset.attachMsgFile;\r\n    const removeMsgFileClicked =\r\n      dataset.removeMsgFile || parentDataset.removeMsgFile;\r\n    const editMsgFileClicked = dataset.editMsgFile || parentDataset.editMsgFile;\r\n    const discardDraftClicked =\r\n      dataset.discardDraft || parentDataset.discardDraft;\r\n\r\n    hideEmojiPicker();\r\n    if (fileId) {\r\n      downloadFile(fileId);\r\n    } else if (videoId) {\r\n      // Load video\r\n      loadMedia(videoId, {\r\n        fileName: dataset.videoName || parentDataset.videoName,\r\n        isAudio: false,\r\n      });\r\n    } else if (audioId) {\r\n      // Load audio\r\n      loadMedia(audioId, {\r\n        fileName: dataset.audioName || parentDataset.audioName,\r\n        isAudio: true,\r\n      });\r\n    } else if (dataset.imageId) {\r\n      displayFullSizeImage(e);\r\n    } else if (senderData?.length) {\r\n      // Open view profile dialog\r\n      const props = {\r\n        memberProfilePic: senderData[0],\r\n        memberName: senderData[1],\r\n        memberEmail: senderData[2],\r\n      };\r\n      openViewProfileDialog(props);\r\n    } else if (msgId && !msgEditMode) {\r\n      msgFileAlreadyExists = Boolean(\r\n        dataset.fileExists || parentDataset.fileExists\r\n      );\r\n      setClickedMsg(msgId);\r\n      openMsgOptionsMenu(e);\r\n    } else if (attachMsgFileClicked || editMsgFileClicked) {\r\n      selectAttachment();\r\n    } else if (removeMsgFileClicked) {\r\n      setMsgFileRemoved(true);\r\n      discardAttachment();\r\n    } else if (discardDraftClicked) {\r\n      openDiscardDraftConfirmDialog();\r\n    } else if (updateEditedMsg) {\r\n      const msgDate = dataset.msgCreatedAt || parentDataset.msgCreatedAt;\r\n      updateMessage(editableMsgContent?.current?.innerHTML, msgDate);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!dontScrollToBottom) scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (fetchMsgs) {\r\n      fetchMessages();\r\n      clientSocket?.emit(\"join chat\", selectedChat?._id);\r\n    }\r\n  }, [fetchMsgs]);\r\n\r\n  const openViewProfileDialog = (props) => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(props ? <ViewProfileBody {...props} /> : <ViewProfileBody />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"View Profile\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const openGroupInfoDialog = () => {\r\n    // Open group info dialog\r\n    dispatch(setGroupInfo(selectedChat));\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<GroupInfoBody messages={messages} />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Group Info\",\r\n      })\r\n    );\r\n  };\r\n\r\n  // Open delete msg confirm dialog\r\n  const openDeleteMsgConfirmDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<>Are you sure you want to delete this message?</>);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Delete Message\",\r\n        nolabel: \"NO\",\r\n        yeslabel: \"YES\",\r\n        loadingYeslabel: \"Deleting...\",\r\n        action: deleteMessage,\r\n      })\r\n    );\r\n  };\r\n\r\n  const openMsgOptionsMenu = (e) => {\r\n    if (sending) return;\r\n    setMsgOptionsMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`chatpageDiv chatpageView messagesView col text-light mx-0 mx-md-1 ${\r\n        selectedChat ? \"d-flex\" : \"d-none d-md-flex\"\r\n      } flex-column p-2 user-select-none`}\r\n    >\r\n      {selectedChat ? (\r\n        <>\r\n          <section\r\n            className=\"messagesHeader pointer-event d-flex justify-content-start position-relative w-100 fw-bold fs-4 bg-info bg-opacity-10 py-2\"\r\n            onClick={hideEmojiPicker}\r\n          >\r\n            <CustomTooltip title=\"Go Back\" placement=\"bottom-start\" arrow>\r\n              <IconButton\r\n                onClick={closeChat}\r\n                className={`d-flex d-md-none ms-3`}\r\n                sx={{\r\n                  color: \"#999999\",\r\n                  \":hover\": {\r\n                    backgroundColor: \"#aaaaaa20\",\r\n                  },\r\n                }}\r\n              >\r\n                <ArrowBack />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n            <CustomTooltip\r\n              title={selectedChat?.isGroupChat ? \"Group Info\" : \"View Profile\"}\r\n              placement=\"bottom-start\"\r\n              arrow\r\n            >\r\n              <IconButton\r\n                sx={{\r\n                  margin: \"-8px\",\r\n                  \":hover\": {\r\n                    backgroundColor: \"#aaaaaa20\",\r\n                  },\r\n                }}\r\n                className=\"pointer ms-1 ms-md-4\"\r\n                onClick={\r\n                  selectedChat?.isGroupChat\r\n                    ? openGroupInfoDialog\r\n                    : openViewProfileDialog\r\n                }\r\n              >\r\n                <Avatar\r\n                  src={\r\n                    selectedChat?.isGroupChat\r\n                      ? selectedChat?.chatDisplayPic\r\n                      : getOneOnOneChatReceiver(\r\n                          loggedInUser,\r\n                          selectedChat?.users\r\n                        )?.profilePic || \"\"\r\n                  }\r\n                  alt={\"receiverAvatar\"}\r\n                />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n\r\n            <span className=\"ms-3 mt-1 fs-3 text-info\" title={chatName}>\r\n              {truncateString(chatName, 22, 17)}\r\n            </span>\r\n\r\n            <CustomTooltip title=\"Close Chat\" placement=\"bottom-end\" arrow>\r\n              <IconButton\r\n                onClick={closeChat}\r\n                className=\"d-none d-md-flex\"\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  right: 15,\r\n                  top: 8,\r\n                  color: \"#999999\",\r\n                  \":hover\": {\r\n                    backgroundColor: \"#aaaaaa20\",\r\n                  },\r\n                }}\r\n              >\r\n                <Close />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n          </section>\r\n          <section\r\n            className={`messagesBody position-relative ${\r\n              downloadingFileId || loadingMediaId ? \"pe-none\" : \"pe-auto\"\r\n            } d-flex flex-column m-1 p-2`}\r\n            onClick={(e) => {\r\n              const { dataset } = e.target;\r\n              const parentDataset = e.target.parentNode.dataset;\r\n              const discardFileClicked =\r\n                dataset.discardFile || parentDataset.discardFile;\r\n              if (discardFileClicked) {\r\n                discardAttachment();\r\n              }\r\n            }}\r\n          >\r\n            {/* Messages list */}\r\n            <div className=\"messages rounded-3 d-flex flex-column\">\r\n              <div\r\n                // Event delegation\r\n                onClick={msgsClickHandler}\r\n                onKeyDown={msgKeydownHandler}\r\n                className={`msgArea overflow-auto ${\r\n                  fileAttached && !msgEditMode ? \"d-none\" : \"d-flex\"\r\n                } flex-column-reverse`}\r\n              >\r\n                <div className=\"msgListBottom\" ref={msgListBottom}></div>\r\n                {loadingMsgs && !sending ? (\r\n                  <LoadingMsgs count={8} />\r\n                ) : (\r\n                  messages.map((m, i, msgs) => (\r\n                    <Message\r\n                      downloadingFileId={downloadingFileId}\r\n                      loadingMediaId={loadingMediaId}\r\n                      msgEditMode={msgEditMode}\r\n                      clickedMsgId={clickedMsg}\r\n                      msgFileRemoved={msgFileRemoved}\r\n                      attachmentData={attachmentData}\r\n                      ref={editableMsgContent}\r\n                      key={m._id}\r\n                      msgSent={m.sent}\r\n                      currMsg={m}\r\n                      prevMsg={i < msgs.length - 1 ? msgs[i + 1] : null}\r\n                    />\r\n                  ))\r\n                )}\r\n              </div>\r\n            </div>\r\n            {/* Edit/Delete Message menu */}\r\n            <MsgOptionsMenu\r\n              anchor={msgOptionsMenuAnchor}\r\n              setAnchor={setMsgOptionsMenuAnchor}\r\n              clickedMsg={clickedMsg}\r\n              editMsgHandler={editMsgHandler}\r\n              openDeleteMsgConfirmDialog={openDeleteMsgConfirmDialog}\r\n            />\r\n            {fileAttached && !msgEditMode && (\r\n              <AttachmentPreview\r\n                attachmentData={attachmentData}\r\n                discardAttachment={discardAttachment}\r\n                CustomTooltip={CustomTooltip}\r\n              />\r\n            )}\r\n            {/* New Message Input */}\r\n            <div\r\n              className={`msgInputDiv d-flex position-absolute ${\r\n                msgEditMode || sending ? \"pe-none\" : \"pe-auto\"\r\n              }`}\r\n            >\r\n              <span\r\n                className={`d-flex attachFile ${disableIfLoading} pointer bg-dark`}\r\n              >\r\n                <CustomTooltip title=\"Select Emoji\" placement=\"top-start\" arrow>\r\n                  <IconButton\r\n                    onClick={toggleEmojiPicker}\r\n                    className={`d-flex ms-2 me-1 my-2`}\r\n                    sx={iconStyles}\r\n                  >\r\n                    <EmojiEmotions style={{ fontSize: 24 }} />\r\n                  </IconButton>\r\n                </CustomTooltip>\r\n\r\n                <CustomTooltip title=\"Attach File\" placement=\"top-start\" arrow>\r\n                  <IconButton\r\n                    onClick={selectAttachment}\r\n                    className={`d-flex my-2`}\r\n                    sx={{ ...iconStyles, transform: \"rotateZ(45deg)\" }}\r\n                  >\r\n                    <AttachFile style={{ fontSize: 22 }} />\r\n                  </IconButton>\r\n                </CustomTooltip>\r\n                {/* Emoji Picker */}\r\n                {showEmojiPicker && (\r\n                  <span className=\"position-absolute bottom-100 start-0\">\r\n                    <Picker onEmojiClick={onEmojiClick} />\r\n                  </span>\r\n                )}\r\n\r\n                {/* Attachment File input */}\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"*\"\r\n                  onChange={handleMsgFileInputChange}\r\n                  name=\"attachment\"\r\n                  id=\"attachMsgFile\"\r\n                  ref={msgFileInput}\r\n                  className={`d-none`}\r\n                  disabled={loadingMsgs}\r\n                />\r\n              </span>\r\n              {/* Content/text input */}\r\n              <div\r\n                onInput={msgInputHandler}\r\n                onKeyDown={msgKeydownHandler}\r\n                onClick={hideEmojiPicker}\r\n                ref={msgContent}\r\n                className={`msgInput ${\r\n                  fileAttached && !msgEditMode ? \"addCaption\" : \"\"\r\n                } w-100 text-start d-flex bg-dark px-3 justify-content-start`}\r\n                contentEditable={true}\r\n                style={{\r\n                  borderRadius:\r\n                    enableMsgSend || (fileAttached && !msgEditMode)\r\n                      ? \"0px\"\r\n                      : \"0px 7px 7px 0px\",\r\n                }}\r\n              ></div>\r\n              {/* Send button */}\r\n              {enableMsgSend || (fileAttached && !msgEditMode) ? (\r\n                <span\r\n                  className={`d-inline-block btn btn-dark btn-sm sendButton ${disableIfLoading} pointer`}\r\n                  onClick={sendMessage}\r\n                >\r\n                  <IconButton\r\n                    className={`d-flex my-1 mx-0 mx-md-0`}\r\n                    sx={{ margin: \"4px 0px\", padding: \"5px\", color: \"#999999\" }}\r\n                  >\r\n                    <Send style={{ fontSize: 20 }} />\r\n                  </IconButton>\r\n                </span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n          </section>\r\n        </>\r\n      ) : (\r\n        <div className=\"d-flex flex-column justify-content-start align-items-center h-100\">\r\n          <h2 className=\"mx-3 mt-1\">\r\n            Hello{\" \"}\r\n            <span\r\n              className=\"fw-bold\"\r\n              style={{ color: \"#A798F2\" }}\r\n            >{`${loggedInUser?.name?.split(\" \")[0]?.toUpperCase()}`}</span>{\" \"}\r\n            👋\r\n          </h2>\r\n          <LottieAnimation\r\n            ref={letsChatGif}\r\n            className={\"d-inline-block mt-3\"}\r\n            style={{ marginBottom: \"50px\", height: \"50%\" }}\r\n            animationData={animationData}\r\n          />\r\n          <p\r\n            className=\"h4 mx-5\"\r\n            style={{ marginTop: \"-20px\", color: \"#99C5EE\" }}\r\n          >\r\n            Search or Click a Chat, Create a Group, or Search a User to start or\r\n            open a chat.\r\n          </p>\r\n          <p className=\"h2\" style={{ color: \"#99C5EE\" }}>\r\n            Happy Chatting!😀\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesView;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ChatpageHeader from \"../components/ChatpageHeader\";\r\nimport CustomDialog from \"../components/utils/CustomDialog\";\r\nimport ChatListView from \"../components/ChatListView\";\r\nimport MessagesView from \"../components/MessagesView\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { displayToast } from \"../store/slices/ToastSlice\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  setLoggedInUser,\r\n  setSelectedChat,\r\n  toggleRefresh,\r\n} from \"../store/slices/AppSlice\";\r\nimport {\r\n  hideDialog,\r\n  selectCustomDialogState,\r\n} from \"../store/slices/CustomDialogSlice\";\r\n\r\nconst ChatsPage = () => {\r\n  const { loggedInUser, refresh, clientSocket, selectedChat } =\r\n    useSelector(selectAppState);\r\n  const { dialogData, showDialogActions } = useSelector(\r\n    selectCustomDialogState\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n  const [fetchMsgs, setFetchMsgs] = useState(false);\r\n  const [loadingMsgs, setLoadingMsgs] = useState(false);\r\n  const [dialogBody, setDialogBody] = useState(<></>);\r\n  const [chats, setChats] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // localStorage persists data even after page refresh, unlike state\r\n    const user = JSON.parse(localStorage.getItem(\"loggedInUser\"));\r\n    if (!user) return navigate(\"/\");\r\n\r\n    if (Date.now() >= parseInt(user.expiryTime)) {\r\n      navigate(\"/\");\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Session Expired\",\r\n          message: \"Please Login Again\",\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    dispatch(setLoggedInUser(user));\r\n    dispatch(hideDialog());\r\n    dispatch(setSelectedChat(null));\r\n  }, []);\r\n\r\n  const displayInfo = (message) => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"info\",\r\n        duration: 5000,\r\n        position: \"bottom-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  // Listening to socket events\r\n  useEffect(() => {\r\n    if (!clientSocket) return;\r\n\r\n    clientSocket\r\n      .off(\"display updated grp\")\r\n      .on(\"display updated grp\", (updatedGroupData) => {\r\n        const { updatedGroup, createdAdmin, dismissedAdmin } = updatedGroupData;\r\n        dispatch(toggleRefresh(!refresh));\r\n        if (!updatedGroup) return;\r\n        const { _id, chatName, removedUser } = updatedGroup;\r\n        const isLoggedInUserRemoved = removedUser?._id === loggedInUser?._id;\r\n        const isGroupInfoDialogOpen =\r\n          dialogData.isOpen && dialogData.title === \"Group Info\";\r\n\r\n        if (selectedChat?._id === _id) {\r\n          let groupData = updatedGroup;\r\n          if (isLoggedInUserRemoved) {\r\n            dispatch(hideDialog());\r\n            groupData = null;\r\n          }\r\n          dispatch(setSelectedChat(groupData));\r\n          dispatch(setGroupInfo(groupData));\r\n          if (\r\n            isGroupInfoDialogOpen &&\r\n            createdAdmin?._id === loggedInUser?._id\r\n          ) {\r\n            displayInfo(`You are now an Admin of '${chatName}' group`);\r\n          }\r\n          if (\r\n            isGroupInfoDialogOpen &&\r\n            dismissedAdmin?._id === loggedInUser?._id\r\n          ) {\r\n            displayInfo(`You are no longer an Admin of '${chatName}' group`);\r\n          }\r\n        }\r\n        if (isLoggedInUserRemoved) {\r\n          displayInfo(`You have been removed from '${chatName}' group`);\r\n        }\r\n      });\r\n\r\n    clientSocket\r\n      .off(\"remove deleted grp\")\r\n      .on(\"remove deleted grp\", (deletedGroup) => {\r\n        dispatch(toggleRefresh(!refresh));\r\n        if (!deletedGroup) return;\r\n        if (selectedChat?._id === deletedGroup?._id) {\r\n          dispatch(hideDialog());\r\n          dispatch(setSelectedChat(null));\r\n          dispatch(setGroupInfo(null));\r\n        }\r\n        displayInfo(`'${deletedGroup.chatName}' Group Deleted by Admin`);\r\n      });\r\n\r\n    clientSocket.off(\"display new grp\").on(\"display new grp\", () => {\r\n      dispatch(toggleRefresh(!refresh));\r\n    });\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {loggedInUser && (\r\n        <div className={`chatpage`}>\r\n          {/* Header component */}\r\n          <ChatpageHeader\r\n            chats={chats}\r\n            setFetchMsgs={setFetchMsgs}\r\n            setDialogBody={setDialogBody}\r\n          />\r\n\r\n          <section className={`row g-1`}>\r\n            {/* Chat List component */}\r\n            <ChatListView\r\n              chats={chats}\r\n              setChats={setChats}\r\n              loadingMsgs={loadingMsgs}\r\n              setFetchMsgs={setFetchMsgs}\r\n              setDialogBody={setDialogBody}\r\n            />\r\n\r\n            {/* Chat Messages component */}\r\n            <MessagesView\r\n              loadingMsgs={loadingMsgs}\r\n              setLoadingMsgs={setLoadingMsgs}\r\n              fetchMsgs={fetchMsgs}\r\n              setFetchMsgs={setFetchMsgs}\r\n              setDialogBody={setDialogBody}\r\n            />\r\n          </section>\r\n\r\n          {/* Alert dialog */}\r\n          <CustomDialog\r\n            dialogData={dialogData}\r\n            showDialogActions={showDialogActions}\r\n            showDialogClose={true}\r\n          >\r\n            {dialogBody}\r\n          </CustomDialog>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatsPage;\r\n"],"names":["menuPaperProps","elevation","sx","overflow","maxHeight","filter","borderRadius","backgroundColor","mt","menuItemProps","color","fontSize","menuIconProps","children","menuAnchor","setMenuAnchor","transformOrigin","anchorOrigin","isMenuOpen","Boolean","closeMenu","anchorEl","open","onClose","onClick","PaperProps","style","marginBottom","chats","setFetchMsgs","anchor","setAnchor","loggedInUser","useSelector","selectAppState","dispatch","useDispatch","notifs","notifications","notifGroups","forEach","notif","notifChat","chat","chatId","_id","chatName","isGroupChat","getOneOnOneChatReceiver","users","name","notifGroupId","deletePersistedNotifs","notifsToBeDeleted","config","headers","Authorization","token","axios","notificationIds","JSON","stringify","console","log","message","vertical","horizontal","Object","keys","length","e","chatNotifId","target","dataset","notifGroup","parentNode","split","chatToBeOpened","find","setSelectedChat","clickedChatId","i","deletedNotif","splice","push","updatedUser","localStorage","setItem","setLoggedInUser","deleteNotifications","setGroupInfo","map","fromGroup","includes","notifCount","MenuItem","title","className","truncateString","getUpdatedState","selectFormfieldState","loading","disableIfLoading","formLabelClassName","formFieldClassName","inputFieldClassName","useState","showPassword","setShowPassword","currentPassword","newPassword","confirmNewPassword","changePasswordData","setChangePasswordData","handleChangeFor","prop","value","useEffect","onEnterKeyDown","key","submitUpdatedPassword","htmlFor","type","onChange","onKeyDown","required","autoFocus","id","disabled","placeholder","PasswordVisibilityToggle","originalName","getUpdatedName","setName","width","submitUpdatedName","selectProfilePic","openDeletePhotoConfirmDialog","deletePhotoCondition","ListItemIcon","Upload","Delete","arrowStyles","tooltipStyles","styled","props","Tooltip","arrow","classes","popper","theme","tooltipClasses","btnHoverStyle","btnCustomStyle","fontFamily","dialogData","showDialogActions","showDialogClose","closeDialog","navigate","useNavigate","isFullScreen","isOpen","nolabel","yeslabel","loadingYeslabel","action","handleDialogClose","hideDialog","handleYes","result","Dialog","fullScreen","backgroundImage","DialogTitle","marginTop","marginRight","IconButton","position","right","top","Close","DialogContent","DialogActions","Button","KeyboardDoubleArrowLeft","margin","CircularProgress","size","KeyboardDoubleArrowRight","marginLeft","showChildDialogActions","showChildDialogClose","childDialogData","setChildDialogData","childDialogBody","setChildDialogBody","displayChildDialog","options","closeChildDialog","data","setChildDialogMethods","CustomTooltip","getCustomTooltip","maxWidth","border","childDialogMethods","selectChildDialogState","profilePicUrl","profilePic","email","profileData","setProfileData","editProfilePicMenuAnchor","setEditProfilePicMenuAnchor","editedName","uploading","setUploading","imgInput","useRef","isGuestUser","persistUpdatedUser","clickOnKeydown","click","handleImgInputChange","image","files","isImageFile","displayToast","duration","TWO_MB","current","setLoading","formData","FormData","append","cloudinary_id","expiryTime","response","deleteProfilePic","currentProfilePic","updatedValue","updateProfileName","enterKeyPressed","newUserName","src","alt","placement","tabIndex","Edit","endsWith","accept","ref","wordBreak","editPasswordData","setDialogBody","updatedState","updatePassword","removeItem","logout","setShowDialogActions","displayDialog","Person","ManageAccounts","Key","Logout","user","truncateValues","max","index","Avatar","listOf","dpRadius","count","skeletonStyle","Array","Skeleton","variant","height","forwardRef","inputRef","searchHandler","clearInput","typing","setTyping","Search","trim","replace","cursor","focus","padding","Clear","isDrawerOpen","setIsDrawerOpen","searchQuery","setSearchQuery","searchResults","setSearchResults","searchUserInput","handleClose","searchUsers","debounce","query","createOrRetrieveChat","userId","Drawer","borderTopRightRadius","borderBottomRightRadius","transitionDuration","ChevronLeft","overflowY","overflowX","appGif","clientSocket","notificationsMenuAnchor","setNotificationsMenuAnchor","profileSettingsMenuAnchor","setProfileSettingsMenuAnchor","LottieAnimation","animationData","Notifications","refresh","groupInfo","chatDisplayPicUrl","editGroupDpMenuAnchor","setEditGroupDpMenuAnchor","createGroupChat","chatDisplayPic","emit","admin","newGroup","toggleRefresh","preventDefault","process","URL","createObjectURL","getAddedMembers","forCreateGroup","groupData","setGroupData","fetching","setFetching","groupMembers","isMemberSelected","setIsMemberSelected","addedMembers","setAddedMembers","setShowDialogClose","openNewGroupDialog","setDialogAction","membersNotAdded","addedMember","m","flex","Chip","avatar","label","onDelete","u","unselectUser","selectedUser","lastMsgFileType","chatNotifCount","selectedChat","receiverEmail","lastMessage","tooltipTitle","lastMsgContent","content","replaceAll","lastMsgDate","Date","createdAt","lastMsgDateString","msgDateStringOf","lastMsgFileUrl","fileUrl","fileContents","file_name","lastMsgFileName","lastMsgData","fileType","test","startsWith","msgTimeStringOf","dateStringOf","bottom","sender","DoneAll","Image","GifBox","VideoFile","AudioFile","PictureAsPdf","Description","FILE_STYLES","event","audioSrc","videoSrc","autoPlay","controls","objectFit","setChats","loadingMsgs","filteredChats","setFilteredChats","searchChatInput","fetchChats","mappedChats","receiver","searchChats","chatNameInput","toLowerCase","pointerEvents","GroupAdd","parentDataset","hasNotifs","toString","displayFullSizeImage","clickedChat","undefined","memberProfilePic","memberName","memberEmail","isLoggedInUser","isGroupAdmin","KeyboardArrowDown","clickedMember","isLoggedInUserGroupAdmin","groupAdmins","some","clickedMemberName","styledMemberName","updateView","openChat","makeGroupAdmin","updater","updatedGroup","createdAdmin","dismissAsAdmin","dismissedAdmin","removeFromGroup","userToBeRemoved","Message","InfoOutlined","AdminPanelSettings","GroupRemove","filteredMembersCache","admins","setClickedMember","memberOptionsMenuAnchor","setMemberOptionsMenuAnchor","a","every","member","setFilteredMembers","filterMemberInput","filteredMembers","filterMembers","memberNameInput","openMemberOptionsMenu","messages","groupDP","groupName","isUserGroupAdmin","btnClassName","updatedName","updateGroupName","enterKeyClicked","updateGroupDp","deleteGroupDp","currentDP","exitGroup","deleteGroup","deleteGroupPromise","deleteMessagesPromise","messageIds","isDeleteGroupRequest","Promise","resolve","all","deletedGroup","updatedMembers","addMembersToGroup","usersToBeAdded","lineHeight","PersonAdd","msgSent","isEditMode","fileEditIcons","downloadingFileId","loadingMediaId","isPreview","fileData","previewStyles","iconStyles","file_id","isMediaFile","mediaContents","mediaFileType","mediaFileSize","getFileSizeString","loadingGif","fileSize","parseInt","isDownloadingFile","substring","lastIndexOf","toUpperCase","attachmentHeader","zIndex","Downloading","Download","fileNameWrapper","fileInfo","hideWhileLoadingMedia","displayWhileLoadingMedia","isImageOrGifFile","PlayCircle","Videocam","PlayArrow","Audiotrack","attachmentData","attachment","attachmentPreviewUrl","FILE_WRAPPER_CLASS","ATTACHMENT_STYLE","editIconsWrapper","previewTitle","left","IconButtonSx","editableMsgRef","msgEditMode","clickedMsgId","msgFileRemoved","currMsg","prevMsg","msgContentRef","senderData","currMsgId","isClickedMsgCurrMsg","isSameSender","currMsgDate","prevMsgDate","isOtherDay","showCurrSender","innerHTML","setCaretPosition","transform","AttachFile","Done","msgId","outline","contentEditable","editMsgHandler","openDeleteMsgConfirmDialog","msgFileAlreadyExists","setLoadingMsgs","fetchMsgs","letsChatGif","isSocketConnected","sending","setSending","setMsgFileRemoved","enableMsgSend","setEnableMsgSend","fileAttached","setFileAttached","setMessages","clickedMsg","setClickedMsg","dontScrollToBottom","setDontScrollToBottom","setAttachmentData","msgListBottom","msgFileInput","msgContent","editableMsgContent","setDownloadingFileId","setLoadingMediaId","setMsgEditMode","msgOptionsMenuAnchor","setMsgOptionsMenuAnchor","resetMsgInput","discardAttachmentOnly","showEmojiPicker","setShowEmojiPicker","hideEmojiPicker","selectAttachment","discardAttachment","closeChat","viewMedia","fileName","isAudio","loadMedia","fileId","responseType","mediaSrc","Blob","downloadFile","link","document","createElement","href","setAttribute","body","appendChild","remove","fetchMessages","msg","updatingMsg","sendMessage","msgData","isNonImageFile","newMsg","now","mediaDuration","toISOString","sent","apiUrl","deleteMessage","deletedMsgId","senderId","updateMessage","updatedMsgContent","msgDate","parseInnerHTML","updatedMsg","setClientSocket","io","transports","on","setSocketConnected","off","reverse","deletedMsgData","n","setTimeout","getElementById","discardMsgDraft","scrollIntoView","msgInputHandler","input","msgKeydownHandler","shiftKey","msgCreatedAt","behaviour","scrollToBottom","openViewProfileDialog","openMsgOptionsMenu","ArrowBack","discardFile","videoId","video","audioId","audio","download","updateEditedMsg","updateMsg","attachMsgFileClicked","attachMsgFile","removeMsgFileClicked","removeMsgFile","editMsgFileClicked","editMsgFile","discardDraftClicked","discardDraft","videoName","audioName","imageId","fileExists","msgs","EmojiEmotions","onEmojiClick","emojiObject","emoji","msgFile","FIVE_MB","mediaUrl","media","Audio","onloadedmetadata","minutes","seconds","setMediaDuration","onInput","Send","selectCustomDialogState","dialogBody","parse","getItem","displayInfo","updatedGroupData","removedUser","isLoggedInUserRemoved","isGroupInfoDialogOpen"],"sourceRoot":""}