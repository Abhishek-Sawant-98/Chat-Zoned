{"version":3,"file":"static/js/124.fe2f32ee.chunk.js","mappings":"4PAEaA,EAAiB,CAC5BC,UAAW,EACXC,GAAI,CACFC,SAAU,OACVC,UAAW,IACXC,OAAQ,4CACRC,aAAc,EACdC,gBAAiB,UACjBC,GAAI,IAIKC,EAAgB,CAC3B,SAAU,CAAEF,gBAAiB,WAC7BG,MAAO,UACPC,SAAU,QAGCC,EAAgB,CAAEF,MAAO,aA8BtC,EA5Ba,SAAC,GAMP,IALLG,EAKI,EALJA,SACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,aAEMC,EAAaC,QAAQL,GAErBM,EAAY,WAChBL,EAAc,OAGhB,OACE,SAAC,IAAD,CACEM,SAAUP,EACVQ,KAAMJ,EACNK,QAASH,EACTI,QAASJ,EACTK,WAAYzB,EACZgB,gBAAiBA,EACjBC,aAAcA,EAPhB,SASGJ,KCzCP,EAJqB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACtB,OAAO,iBAAMa,MAAO,CAAEC,aAAc,OAA7B,SAAuCd,K,oBCkChD,EA5B0B,SAAC,GAA2B,IAAzBe,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAC3BC,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAA7BF,aAEFG,IADWC,EAAAA,EAAAA,MACL,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAcK,eAC7B,OACE,SAAC,EAAD,CACErB,WAAYc,EACZb,cAAec,EACfb,gBAAiB,CAAEoB,SAAU,MAAOC,WAAY,SAChDpB,aAAc,CAAEmB,SAAU,SAAUC,WAAY,SAJlD,SAMS,OAANJ,QAAM,IAANA,GAAAA,EAAQK,OACPL,EAAOM,KAAI,SAACC,GAAD,OACT,SAACC,EAAA,EAAD,CAEEvC,GAAIO,EACJe,QAAS,cAFJgB,EAAEE,SAMX,SAACD,EAAA,EAAD,CAAUvC,GAAIO,EAAd,UACE,SAAC,EAAD,oC,iICuGV,EA9H2B,SAAC,GAAyB,IAAvBkC,EAAsB,EAAtBA,gBAC5B,GAMIZ,EAAAA,EAAAA,IAAYa,EAAAA,IALdC,EADF,EACEA,QACAC,EAFF,EAEEA,iBACAC,EAHF,EAGEA,mBACAC,EAJF,EAIEA,mBACAC,EALF,EAKEA,oBAGF,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoDF,EAAAA,EAAAA,UAAS,CAC3DG,gBAAiB,GACjBC,YAAa,GACbC,mBAAoB,KAHtB,eAAOC,EAAP,KAA2BC,EAA3B,KAMQJ,EACNG,EADMH,gBAAiBC,EACvBE,EADuBF,YAAaC,EACpCC,EADoCD,mBAGhCG,EAAkB,SAACC,GAAD,OAAU,SAACC,GACjCH,GAAsB,kBAAKD,GAAN,cAA2BG,EAAOC,EAAEC,OAAOC,YAGlEC,EAAAA,EAAAA,YAAU,WAERpB,EAAgBa,KACf,CAACA,IAEJ,IAAMQ,EAAiB,SAACJ,GACR,UAAVA,EAAEK,KAEJtB,EAAgBa,EAAoB,CAAEU,uBAAuB,KAIjE,OACE,iCAEE,qBACEC,UAAS,sBAAiBnB,EAAjB,kCADX,WAGE,mBAAOoB,QAAQ,mBAAmBD,UAAS,UAAKpB,GAAhD,+BACmB,iBAAMoB,UAAU,WAAhB,mBAEnB,iBAAKA,UAAU,cAAf,WACE,kBACEE,KAAMlB,EAAe,OAAS,WAC9BW,MAAOT,EACPiB,SAAUZ,EAAgB,mBAC1Ba,UAAWP,EACXQ,UAAQ,EACRC,WAAS,EACTC,KAAK,kBACLC,GAAG,mBACHR,UAAS,UAAKlB,EAAL,gBACT2B,SAAU/B,EACVgC,YAAY,2BAEd,SAACC,EAAA,EAAD,CACEhC,iBAAkBA,EAClBK,aAAcA,EACdC,gBAAiBA,WAKvB,qBACEe,UAAS,sBAAiBnB,EAAjB,6BADX,WAGE,mBAAOoB,QAAQ,eAAeD,UAAS,UAAKpB,GAA5C,2BACe,iBAAMoB,UAAU,WAAhB,mBAEf,iBAAKA,UAAU,cAAf,WACE,kBACEE,KAAMlB,EAAe,OAAS,WAC9BW,MAAOR,EACPgB,SAAUZ,EAAgB,eAC1Ba,UAAWP,EACXQ,UAAQ,EACRE,KAAK,cACLC,GAAG,eACHR,UAAS,UAAKlB,EAAL,gBACT2B,SAAU/B,EACVgC,YAAY,4BAEd,SAACC,EAAA,EAAD,CACEhC,iBAAkBA,EAClBK,aAAcA,EACdC,gBAAiBA,WAKvB,qBACEe,UAAS,sBAAiBnB,EAAjB,6BADX,WAGE,mBACEoB,QAAQ,uBACRD,UAAS,UAAKpB,GAFhB,mCAIuB,iBAAMoB,UAAU,WAAhB,mBAEvB,iBAAKA,UAAU,cAAf,WACE,kBACEE,KAAMlB,EAAe,OAAS,WAC9BW,MAAOP,EACPe,SAAUZ,EAAgB,sBAC1Ba,UAAWP,EACXQ,UAAQ,EACRE,KAAK,qBACLC,GAAG,uBACHR,UAAS,UAAKlB,EAAL,gBACT2B,SAAU/B,EACVgC,YAAY,sBAEd,SAACC,EAAA,EAAD,CACEhC,iBAAkBA,EAClBK,aAAcA,EACdC,gBAAiBA,c,UCrF7B,EAlCqB,SAAC,GAAmD,IAAjD2B,EAAgD,EAAhDA,aAAcC,EAAkC,EAAlCA,eAAgBH,EAAkB,EAAlBA,YACpD,GACE9C,EAAAA,EAAAA,IAAYa,EAAAA,IADNC,EAAR,EAAQA,QAASG,EAAjB,EAAiBA,mBAAoBC,EAArC,EAAqCA,oBAErC,GAAwBC,EAAAA,EAAAA,UAAS6B,GAAjC,eAAOL,EAAP,KAAaO,EAAb,KAMA,OAJAlB,EAAAA,EAAAA,YAAU,WACRiB,EAAeN,KACd,CAACA,KAGF,oBACEP,UAAS,UAAKnB,EAAL,YACTtB,MAAO,CAAEwD,MAAO,6BAFlB,UAIE,kBACEb,KAAK,OACLP,MAAOY,EACPJ,SAAU,SAACV,GAAD,OAAOqB,EAAQrB,EAAEC,OAAOC,QAClCS,UAAW,SAACX,GACI,UAAVA,EAAEK,KAEJe,EAAeN,EAAM,CAAES,mBAAmB,KAG9CT,KAAK,WACLD,WAAS,EACTN,UAAS,UAAKlB,EAAL,SACT2B,SAAU/B,EACVgC,YAAaA,O,8BCKrB,EAhCoB,SAAC,GAMd,IALLjD,EAKI,EALJA,OACAC,EAII,EAJJA,UACAuD,EAGI,EAHJA,iBACAC,EAEI,EAFJA,6BACAC,EACI,EADJA,qBAEA,OACE,UAAC,EAAD,CACExE,WAAYc,EACZb,cAAec,EACfb,gBAAiB,CAAEoB,SAAU,MAAOC,WAAY,QAChDpB,aAAc,CAAEmB,SAAU,SAAUC,WAAY,SAJlD,WAME,UAACI,EAAA,EAAD,CAAUvC,GAAIO,EAAee,QAAS4D,EAAtC,WACE,SAACG,EAAA,EAAD,CAAcrF,GAAIU,EAAlB,UACE,SAAC4E,EAAA,EAAD,OAEF,SAAC,EAAD,8BAEDF,IACC,UAAC7C,EAAA,EAAD,CAAUvC,GAAIO,EAAee,QAAS6D,EAAtC,WACE,SAACE,EAAA,EAAD,CAAcrF,GAAIU,EAAlB,UACE,SAAC6E,EAAA,EAAD,OAEF,SAAC,EAAD,kC,wDCnBV,EARyB,SAACC,EAAaC,GAAd,OACvBC,EAAAA,EAAAA,KAAO,gBAAGzB,EAAH,EAAGA,UAAc0B,GAAjB,mBACL,SAACC,EAAA,GAAD,kBAAaD,GAAb,IAAoBE,OAAK,EAACC,QAAS,CAAEC,OAAQ9B,QAD/CyB,EAEG,oBAAGM,MAAH,mCACMC,EAAAA,EAAAA,QADN,UACoCT,KADpC,sBAEMS,EAAAA,EAAAA,UAFN,UAEsCR,IAFtC,M,iHCeQS,GAAgB,CAC3B,SAAU,CAAE7F,gBAAiB,cAElB8F,GAAiB,CAC5B1F,SAAU,GACVD,MAAO,UACP4F,WAAY,QACZhG,aAAc,IAsJhB,GAnJqB,SAAC,GAMf,IALLO,EAKI,EALJA,SACA0F,EAII,EAJJA,WACAC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,YAEA,GAAsC3E,EAAAA,EAAAA,IAAYa,EAAAA,IAA1CC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,iBACX6D,GAAWzE,EAAAA,EAAAA,MACX0E,GAAWC,EAAAA,EAAAA,MAEfC,EAOEP,EAPFO,aACAC,EAMER,EANFQ,OACAC,EAKET,EALFS,MACAC,EAIEV,EAJFU,QACAC,EAGEX,EAHFW,SACAC,EAEEZ,EAFFY,gBACAC,EACEb,EADFa,OAGIC,EAAoB,WACxB,GAAIX,EAAa,OAAOA,IACxBC,GAASW,EAAAA,GAAAA,QAGLC,EAAS,mCAAG,oGACKH,IADL,OAGH,oBAFPI,EADU,SAIH,mBAAXA,GACW,kBAAXA,EAEAH,IACoB,iBAAXG,GACTH,IAEAV,GAASW,EAAAA,GAAAA,QACW,eAAXE,GAAsC,eAAXA,IACpCH,IACAV,GAASc,EAAAA,EAAAA,IAAgB,OACzBb,EAAS,MAfK,2CAAH,qDAmBf,OACE,UAACc,EAAA,EAAD,CACEC,WAAYxG,QAAQ2F,GACpBrF,WAAY,CACVvB,GAAI,CACFI,aAAc,EACdsH,gBAAiB,uCAGrBzD,UAAS,2BAAsBrB,GAC/BxB,KAAMyF,EACNxF,QAAS8F,EAVX,WAYE,UAACQ,EAAA,EAAD,CACEnG,MAAO,CAAEf,SAAU,GAAID,MAAO,UAAW4F,WAAY,SADvD,WAGE,iBACEnC,UAAU,SACV6C,MAAOA,EACPtF,MAAO,CAAEoG,WAAY,EAAGC,YAAa,IAHvC,UAKGC,EAAAA,EAAAA,IAAehB,EAAO,GAAI,MAE5BP,IACC,SAACwB,EAAA,EAAD,CACEzG,QAAS6F,EACTzC,SAAU/B,EACV3C,GAAI,CACFgI,SAAU,WACVC,MAAO,EACPC,IAAK,EACL1H,MAAO,UACP,SAAU,CACRH,gBAAiB,cATvB,UAaE,SAAC8H,EAAA,EAAD,UAIN,SAACC,GAAA,EAAD,CACE5G,MAAO,CAAEf,SAAU,GAAID,MAAO,UAAW4F,WAAY,SADvD,SAGGzF,IAAY,0BAEd2F,IACC,UAAC+B,GAAA,EAAD,YACE,SAACC,GAAA,EAAD,CACEtI,GAAIkG,GACJxB,SAAU/B,EACVnB,MAAO2E,GACP7E,QAAS6F,EAJX,SAMe,SAAZJ,GACC,6BACE,SAACwB,EAAA,EAAD,CACEtE,UAAU,gBACVzC,MAAO,CACLgH,OAAQ,qBAJd,UAUAzB,KAGJ,SAACuB,GAAA,EAAD,CACEtI,GAAIkG,GACJxB,SAAU/B,EACVnB,MAAO2E,GACP7E,QAAS+F,EAJX,SAMG1E,GAAwB,SAAbqE,GACV,iCACE,SAACyB,EAAA,EAAD,CAAkBC,KAAM,GAAIlH,MAAO,CAAEqG,YAAa,OAClD,iBAAMrG,MAAO,CAAEqG,YAAa,IAA5B,SAAmCZ,QAGrC,8BACgB,SAAbD,GACC,oCAEE,SAAC2B,EAAA,EAAD,CACE1E,UAAU,gBACVzC,MAAO,CACLoH,WAAY,QAKlB5B,aCtHlB,GA5CoB,SAAC,GAGd,IAAD,IAFJ6B,uBAAAA,OAEI,aADJC,qBAAAA,OACI,SAEJ,GAA8C9F,EAAAA,EAAAA,UAAS,CACrD6D,QAAQ,EACRC,MAAO,eACPC,QAAS,KACTC,SAAU,MACVC,gBAAiB,cACjBC,OAAQ,eANV,eAAO6B,EAAP,KAAwBC,EAAxB,KAQA,GAA8ChG,EAAAA,EAAAA,WAAS,yBAAvD,eAAOiG,EAAP,KAAwBC,EAAxB,KACMzC,GAAWzE,EAAAA,EAAAA,MACXmH,EAAqB,SAACC,GAC1BJ,GAAmB,kBAAKI,GAAN,IAAevC,QAAQ,MAErCwC,EAAmB,SAACC,GACxBN,GAAmB,kBAAKM,GAAN,IAAYzC,QAAQ,MAaxC,OAVAhD,EAAAA,EAAAA,YAAU,WACR4C,GACE8C,EAAAA,EAAAA,IAAsB,CACpBL,mBAAAA,EACAC,mBAAAA,EACAE,iBAAAA,OAGH,CAACN,KAGF,SAAC,GAAD,CACE1C,WAAY0C,EACZvC,YAAa6C,EACb/C,kBAAmBuC,EACnBtC,gBAAiBuC,EAJnB,SAMGG,K,WCdDO,GAAgBC,EAZF,CAClBjJ,MAAO,QAEa,CACpBkJ,SAAU,IACVlJ,MAAO,OACP4F,WAAY,QACZ3F,SAAU,GACVkJ,OAAQ,iBACRtJ,gBAAiB,SAwYnB,GAnYwB,WAAO,IAAD,EACpBuB,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAA7BF,aACR,GAAsCC,EAAAA,EAAAA,IAAYa,EAAAA,IAA1CC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,iBACTgH,GAAuB/H,EAAAA,EAAAA,IAAYgI,EAAAA,IAAnCD,mBACFnD,GAAWzE,EAAAA,EAAAA,MACTkH,EACNU,EADMV,mBAAoBC,EAC1BS,EAD0BT,mBAAoBE,EAC9CO,EAD8CP,iBAGhD,GAAsCrG,EAAAA,EAAAA,UAAS,CAC7C8G,cAAa,OAAElI,QAAF,IAAEA,OAAF,EAAEA,EAAcmI,WAC7BvF,KAAI,OAAE5C,QAAF,IAAEA,OAAF,EAAEA,EAAc4C,KACpBwF,MAAK,OAAEpI,QAAF,IAAEA,OAAF,EAAEA,EAAcoI,QAHvB,eAAOC,EAAP,KAAoBC,EAApB,KAKA,GACElH,EAAAA,EAAAA,UAAS,MADX,eAAOmH,EAAP,KAAiCC,EAAjC,MAGAvG,EAAAA,EAAAA,YAAU,WACRqG,GAAe,kBACVD,GADS,IAEZH,cAAa,OAAElI,QAAF,IAAEA,OAAF,EAAEA,EAAcmI,WAC7BvF,KAAI,OAAE5C,QAAF,IAAEA,OAAF,EAAEA,EAAc4C,UAErB,CAAC5C,IAGJ,IAqJIyI,EArJJ,GAAkCrH,EAAAA,EAAAA,WAAS,GAA3C,eAAOsH,EAAP,KAAkBC,EAAlB,KAEQT,EAA+BG,EAA/BH,cAAetF,EAAgByF,EAAhBzF,KAAMwF,EAAUC,EAAVD,MACvBQ,GAAWC,EAAAA,EAAAA,UACXC,EAAsC,0BAAZ,OAAZ9I,QAAY,IAAZA,OAAA,EAAAA,EAAcoI,OAE5BW,EAAqB,SAACC,GAE1BC,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUJ,IACpDnE,GAASwE,EAAAA,EAAAA,IAAgBL,KAIrBM,EAAiB,SAACxH,GACR,MAAVA,EAAEK,KAAyB,UAAVL,EAAEK,KACrBL,EAAEC,OAAOwH,SAKPC,EAAoB,mCAAG,WAAO1H,GAAP,sFACrB2H,EAAQ3H,EAAEC,OAAO2H,MAAM,GADF,qDAItBC,EAAAA,EAAAA,IAAYF,EAAM7G,MAJI,yCAKlBiC,GACL+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,qBACP2E,QAAS,sDACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,oBAXW,YAgBvBqD,EAAM3C,MAAQiD,EAAAA,IAhBS,uBAiBzBnB,EAASoB,QAAQhI,MAAQ,GAjBA,kBAkBlB6C,GACL+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,2CACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,iBAvBW,cA2B3BvB,GAASoF,EAAAA,EAAAA,KAAW,IACpBtB,GAAa,GAEPuB,EAAS,CACbC,QAAS,CACP,eAAgB,sBAChBC,cAAc,UAAD,OAAYpK,EAAaqK,UAIpCC,EAAW,IAAIC,UACZC,OAAO,aAAcf,GAC9Ba,EAASE,OAAO,oBAAhB,OAAqCxK,QAArC,IAAqCA,OAArC,EAAqCA,EAAcmI,YACnDmC,EAASE,OAAO,gBAAhB,OAAiCxK,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAcyK,eAxCpB,oBA2CFC,EAAAA,EAAAA,IACrB,+BACAJ,EACAJ,GA9CuB,iBA2CjBxC,EA3CiB,EA2CjBA,KAMR7C,GACE+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,mCACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,mBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IACpBtB,GAAa,GACbI,GAAmB,kBACdrB,GADa,IAEhB2C,MAAOrK,EAAaqK,MACpBM,WAAY3K,EAAa2K,cA9DF,mDAiEzB9F,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,2BACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,gBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IACpBtB,GAAa,GA3EY,2DAAH,sDA+EpBkC,EAAgB,mCAAG,mGACvBhG,GAASoF,EAAAA,EAAAA,KAAW,IAEdC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYpK,EAAaqK,SANnB,kBAWEK,EAAAA,EAAAA,IACrB,+BACA,CACEI,kBAAiB,OAAE9K,QAAF,IAAEA,OAAF,EAAEA,EAAcmI,WACjCsC,cAAa,OAAEzK,QAAF,IAAEA,OAAF,EAAEA,EAAcyK,eAE/BP,GAjBmB,uBAWbxC,EAXa,EAWbA,KASR7C,GACE+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,mCACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,mBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IACpBlB,GAAmB,kBACdrB,GADa,IAEhB2C,MAAOrK,EAAaqK,MACpBM,WAAY3K,EAAa2K,cAhCN,kBAkCd,kBAlCc,kCAoCrB9F,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,6BACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,gBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IA7CC,0DAAH,qDAoDhB/G,EAAiB,SAAC6H,EAAcvD,GACpCiB,EAAasC,EACb,OAAIvD,QAAJ,IAAIA,GAAAA,EAASnE,mBACX2H,EAAkB,CAAEC,iBAAiB,KAGnCD,EAAiB,mCAAG,WAAOxD,GAAP,kFACnBiB,EADmB,yCAEf5D,GACL+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,4BACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,iBAPQ,cAWxBvB,GAASoF,EAAAA,EAAAA,KAAW,IAEdC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,cAAYpK,QAAZ,IAAYA,OAAZ,EAAYA,EAAcqK,SAhBnB,kBAqBCK,EAAAA,EAAAA,IACrB,wBACA,CAAEQ,YAAazC,GACfyB,GAxBoB,mBAqBdxC,EArBc,EAqBdA,KAMR7C,GACE+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,6BACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,mBAIdvB,GAASoF,EAAAA,EAAAA,KAAW,IACpBlB,GAAmB,kBACdrB,GADa,IAEhB2C,MAAOrK,EAAaqK,MACpBM,WAAY3K,EAAa2K,cAxCL,OA0ClBnD,QA1CkB,IA0ClBA,IAAAA,EAASyD,gBA1CS,iBA0CQxD,IA1CR,iDA2CV,kBA3CU,0DA6CtB5C,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,qBACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,gBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IAtDE,0DAAH,sDA4FvB,OACE,gCAEGlJ,GAAW2H,GACV,iBAAKrG,UAAU,+DAAf,WACE,SAACwE,EAAA,EAAD,CACEC,KAAM,GACNlH,MAAO,CAAEgH,OAAQ,WAAYhI,MAAO,gBAEtC,iBAAMgB,MAAO,CAAEC,aAAc,QAAUwC,UAAU,gBAAjD,SACG,2BAIL,qBAASA,UAAU,4CAAnB,WACE,gBACEA,UAAU,8EACVQ,GAAG,uBACHsI,IAAKjD,EACLkD,IAAI,gBAEJtC,IACA,SAAC,GAAD,CAAe5D,MAAM,mBAAmBmG,UAAU,QAAQpH,OAAK,EAA/D,UACE,cACEpB,GAAG,iBACHyI,SAAU,EACV7I,UAAW6G,EACXjH,UAAS,qDAAgDrB,EAAhD,gFACTtB,QAhCiB,SAACoC,GAC9B0G,EAA4B1G,EAAEC,SA0BpB,UAOE,SAACwJ,EAAA,EAAD,CAAMlJ,UAAU,yBAKtB,SAAC,EAAD,CACEvC,OAAQyI,EACRxI,UAAWyI,EACXlF,iBAAkB,kBAAMsF,EAASoB,QAAQT,SACzChG,6BAtD2B,WACnC+D,GAAmB,qFACnBC,EAAmB,CACjBrC,MAAO,qBACPC,QAAS,KACTC,SAAU,MACVC,gBAAiB,cACjBC,OAAQuF,KAgDFrH,uBACE,OAACxD,QAAD,IAACA,GAAD,UAACA,EAAcmI,kBAAf,OAAC,EAA0BqD,SAAS,uBAGxC,kBACEjJ,KAAK,OACLkJ,OAAO,UACPjJ,SAAUgH,EACV5G,KAAK,aACLC,GAAG,iBACH6I,IAAK9C,EACLvG,UAAS,SACTS,SAAU/B,QAKhB,oBAASsB,UAAS,+BAAlB,UACE,iBAAKA,UAAU,cAAczC,MAAO,CAAEoG,UAAW,SAAjD,WACE,SAAC,GAAD,CACEd,OAAW,OAAJtC,QAAI,IAAJA,OAAA,EAAAA,EAAMpC,QAAS,GAAKoC,EAAO,GAClCyI,UAAU,YACVpH,OAAK,EAHP,UAKE,gBACE5B,UAAU,kCACVzC,MAAO,CAAEf,SAAU,QAFrB,UAIGqH,EAAAA,EAAAA,IAAetD,EAAM,GAAI,SAG5BkG,IACA,SAAC,GAAD,CAAe5D,MAAM,YAAYmG,UAAU,MAAMpH,OAAK,EAAtD,UACE,SAACkC,EAAA,EAAD,CACEmF,SAAU,EACV7I,UAAW6G,EACX5J,QA7Ga,WACzB4H,GACE,SAAC,EAAD,CACErE,aAAY,OAAEjD,QAAF,IAAEA,OAAF,EAAEA,EAAc4C,KAC5BM,eAAgBA,EAChBH,YAAY,oBAGhBwE,EAAmB,CACjBrC,MAAO,YACPC,QAAS,SACTC,SAAU,OACVC,gBAAiB,YACjBC,OAAQ0F,KAiGE5M,GAAI,CACFgI,SAAU,WACVC,OAAQ,EACRC,IAAK,EACL,SAAU,CACR7H,gBAAiB,cATvB,UAaE,SAAC8M,EAAA,EAAD,CAAMlJ,UAAU,yBAO1B,oBACEA,UAAS,+BACTzC,MAAO,CAAEoG,UAAW,SAFtB,UAIE,SAAC,GAAD,CACEd,OAAY,OAALkD,QAAK,IAALA,OAAA,EAAAA,EAAO5H,QAAS,GAAK4H,EAAQ,GACpCiD,UAAU,SACVpH,OAAK,EAHP,UAKE,iBAAM5B,UAAU,KAAKzC,MAAO,CAAEhB,MAAO,aAArC,UACGsH,EAAAA,EAAAA,IAAekC,EAAO,GAAI,WAKjC,SAAC,GAAD,QCjNN,GAvL4B,SAAC,GAA0C,IAQjEuD,EARyB7L,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,UAAW6L,EAAoB,EAApBA,cACxC5L,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAA7BF,aACF6E,GAAWzE,EAAAA,EAAAA,MACX0E,GAAWC,EAAAA,EAAAA,MAEX+D,EAAsC,0BAAZ,OAAZ9I,QAAY,IAAZA,OAAA,EAAAA,EAAcoI,OAK5BvH,EAAkB,SAACgL,EAAcrE,GACrCmE,EAAmBE,EACnB,OAAIrE,QAAJ,IAAIA,GAAAA,EAASpF,uBACX0J,EAAe,CAAEb,iBAAiB,KAGhCa,EAAc,mCAAG,WAAOtE,GAAP,sFACbjG,GADa,EAEnBoK,GADMpK,gBAAiBC,EADJ,EACIA,YAAaC,EADjB,EACiBA,mBAGjCF,GAAoBC,GAAgBC,EAJpB,yCAKZoD,GACL+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,8BACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,iBAVK,UAcjB7E,IAAoBC,EAdH,yCAeZqD,GACL+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,iDACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,iBApBK,UAwBjB5E,IAAgBC,EAxBC,yCAyBZoD,GACL+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,+CACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,iBA9BK,cAkCrBvB,GAASoF,EAAAA,EAAAA,KAAW,IAEdC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYpK,EAAaqK,SAvCrB,mBA4CbK,EAAAA,EAAAA,IACJ,4BACA,CAAEnJ,gBAAAA,EAAiBC,YAAAA,GACnB0I,GA/CiB,WAiDnBrF,GACE+E,EAAAA,GAAAA,IAAa,CACXC,QACE,2EACFtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,mBAIdvB,GAASoF,EAAAA,EAAAA,KAAW,IACpBhB,aAAa8C,WAAW,gBACxBlH,GAASwE,EAAAA,EAAAA,IAAgB,OA7DN,OA8Df7B,QA9De,IA8DfA,IAAAA,EAASyD,gBA9DM,wBA+DjBpG,GAASW,EAAAA,GAAAA,OACTX,GAASc,EAAAA,EAAAA,IAAgB,OACzBb,EAAS,KAjEQ,oDAoEZ,cApEY,kCAsEnBD,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,yBACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,gBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IA/ED,0DAAH,sDAmFd+B,EAAS,WAWb,OAVA/C,aAAa8C,WAAW,gBACxBlH,GAASwE,EAAAA,EAAAA,IAAgB,OACzBxE,GACE+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,aACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,mBAGP,cA0CT,OACE,UAAC,EAAD,CACEpH,WAAYc,EACZb,cAAec,EACfb,gBAAiB,CAAEoB,SAAU,MAAOC,WAAY,SAChDpB,aAAc,CAAEmB,SAAU,SAAUC,WAAY,SAJlD,WAME,UAACI,EAAA,EAAD,CAAUvC,GAAIO,EAAee,QA/BH,WAC5BmF,GAASoH,EAAAA,GAAAA,KAAqB,IAC9BL,GAAc,SAAC,GAAD,KACd/G,GACEqH,EAAAA,GAAAA,IAAc,CACZhH,MAAO4D,EAAc,eAAiB,mBA0BxC,WACE,SAACrF,EAAA,EAAD,CAAcrF,GAAIU,EAAlB,SACGgK,GAAc,SAACqD,EAAA,EAAD,KAAa,SAACC,EAAA,EAAD,OAE9B,UAAC,EAAD,WAAetD,EAAc,OAAS,OAAtC,kBAEAA,IACA,UAACnI,EAAA,EAAD,CAAUvC,GAAIO,EAAee,QA5BJ,WAC7BmF,GAASoH,EAAAA,GAAAA,KAAqB,IAC9BL,GAAc,SAAC,EAAD,CAAoB/K,gBAAiBA,KACnDgE,GACEqH,EAAAA,GAAAA,IAAc,CACZhH,MAAO,kBACPC,QAAS,SACTC,SAAU,OACVC,gBAAiB,YACjBC,OAAQwG,MAmBR,WACE,SAACrI,EAAA,EAAD,CAAcrF,GAAIU,EAAlB,UACE,SAACuN,EAAA,EAAD,OAEF,SAAC,EAAD,kCAGJ,UAAC1L,EAAA,EAAD,CAAUvC,GAAIO,EAAee,QA3DD,WAC9BmF,GAASoH,EAAAA,GAAAA,KAAqB,IAC9BL,GAAc,qEACd/G,GACEqH,EAAAA,GAAAA,IAAc,CACZhH,MAAO,sBACPC,QAAS,KACTC,SAAU,MACVC,gBAAiB,iBACjBC,OAAQ0G,MAkDV,WACE,SAACvI,EAAA,EAAD,CAAcrF,GAAIU,EAAlB,UACE,SAACwN,EAAA,EAAD,OAEF,SAAC,EAAD,4B,sBCzLF1E,GAAgBC,EAXF,CAClBjJ,MAAO,WAEa,CACpBkJ,SAAU,IACVlJ,MAAO,OACP4F,WAAY,QACZ3F,SAAU,GACVL,aAAc,EACdC,gBAAiB,YAyCnB,GArCqB,SAAC,GAA8B,IAA5B8N,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,eACpB5L,EAAiC2L,EAAjC3L,IAAKgC,EAA4B2J,EAA5B3J,KAAMwF,EAAsBmE,EAAtBnE,MAAOD,EAAeoE,EAAfpE,WAC1B,UAAqBqE,EAArB,GAAOC,EAAP,KAAYC,EAAZ,KAEA,OACE,iBACE,YAAW9L,EACXyB,UAAS,wGAFX,WAIE,SAAC,GAAD,CACE,YAAWzB,EACXsE,MAAK,UAAKtC,EAAL,aAAcwF,EAAd,KACLiD,UAAU,YACVpH,OAAK,EAJP,UAME,gBACEkH,IAAKhD,EACLiD,IAAKxK,EACL,YAAWA,EACXyB,UAAS,8DAGb,iBACE,YAAWzB,EACXyB,UAAU,yDAFZ,WAIE,cAAG,YAAWzB,EAAKyB,UAAU,sCAA7B,UACG6D,EAAAA,EAAAA,IAAetD,EAAM6J,EAAKC,MAE7B,cAAG,YAAW9L,EAAKyB,UAAU,gBAA7B,UACG6D,EAAAA,EAAAA,IAAekC,EAAOqE,EAAKC,Y,sBCbtC,GA/BoB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACjCC,EAAgB,CAAErO,gBAAiB,QACzC,OACE,+BACG,QAAIsO,MAAMF,IAAQpM,KAAI,SAACqB,EAAGkL,GAAJ,OACrB,iBAAwC3K,UAAU,sBAAlD,WACE,SAAC4K,GAAA,EAAD,CACEC,QAAQ,WACR7K,UAAU,2BACVzC,OAAK,kBACAkN,GADA,IAEH1J,MAAOwJ,EACPO,OAAQP,OAGZ,SAACK,GAAA,EAAD,CACEC,QAAQ,cACR7K,UAAU,qBACVzC,MAAOkN,KAET,SAACG,GAAA,EAAD,CACEC,QAAQ,cACR7K,UAAU,oBACVzC,MAAOkN,MAlBX,uBAA0BH,EAASK,U,WC6D3C,IA9DoBI,EAAAA,EAAAA,aAAW,SAACrJ,EAAOsJ,GACrC,IAAQC,EAAsDvJ,EAAtDuJ,cAAe3K,EAAuCoB,EAAvCpB,UAAWI,EAA4BgB,EAA5BhB,YAAawK,EAAexJ,EAAfwJ,WAC/C,GACEtN,EAAAA,EAAAA,IAAYa,EAAAA,IADNE,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,mBAAoBC,EAA9C,EAA8CA,oBAI9C,GAA4BC,EAAAA,EAAAA,WAAS,GAArC,eAAOoM,EAAP,KAAeC,EAAf,KAEA,OACE,oBAASpL,UAAS,UAAKnB,EAAL,mBAAlB,UAEE,iBAAKmB,UAAU,cAAf,WACE,iBACEA,UAAS,2BAAsBrB,EAAtB,8EADX,UAGE,SAAC0M,EAAA,EAAD,CAAQrL,UAAU,OAAOzC,MAAO,CAAEoG,UAAW,YAE/C,kBACEzD,KAAK,OACLmJ,IAAK2B,EACL7K,SAAU,SAACV,GACT2L,EAAUpO,QAAQyC,EAAEC,OAAOC,MAAM2L,SACjCL,EAAcxL,IAEhBa,UAAWA,EACXI,YAAaA,EACbV,UAAS,UAAKlB,EACXyM,QAAQ,cAAe,cACvBA,QAAQ,OAAQ,KAFV,+CAGThO,MAAO,CAAEiO,OAAQ,OAAQhP,SAAU,WAGrC,iBACEwD,UAAS,2BAAsBrB,EAAtB,+FADX,UAGE,SAACmF,EAAA,EAAD,CACEzG,QAAS,WACP2N,EAASrD,QAAQhI,MAAQ,GACzByL,GAAU,GACVJ,EAASrD,QAAQ8D,QACjBP,KAEFlL,UAAS,UAAKmL,EAAS,iBAAmB,UAC1C5N,MAAO,CACLmO,QAAS,kBACTnH,OAAQ,OACRhI,MAAO,WAETR,GAAI,CACF,SAAU,CACRK,gBAAiB,cAfvB,UAmBE,SAACuP,GAAA,EAAD,CAAOpO,MAAO,CAAEf,SAAU,sBCyItC,GArL0B,SAAC,GAAqD,IAAnDoP,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,gBACvD,GAAsC/M,EAAAA,EAAAA,UAAS,IAA/C,eAAOgN,EAAP,KAAoBC,EAApB,KACA,GAA0CjN,EAAAA,EAAAA,UAAS,IAAnD,eAAOkN,EAAP,KAAsBC,EAAtB,KAEQvO,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAA7BF,aACAe,GAAYd,EAAAA,EAAAA,IAAYa,EAAAA,IAAxBC,QACF8D,GAAWzE,EAAAA,EAAAA,MAEXoO,GAAkB3F,EAAAA,EAAAA,QAAO,OAE/B5G,EAAAA,EAAAA,YAAU,WACJiM,IACFK,EAAiB,IACjB1J,GAASoF,EAAAA,EAAAA,KAAW,IACpBoE,EAAe,OAEhB,CAACH,IAEJ,IAAMO,EAAc,WAClBN,GAAgB,IAIZO,GAAcC,EAAAA,EAAAA,IAAQ,mCAAC,WAAO7M,GAAP,wFACrB8M,EADqB,UACb9M,EAAEC,cADW,iBACb,EAAUC,aADG,aACb,EAAiB2L,OAC/BU,EAAeO,GACVA,EAHsB,yCAGRL,EAAiB,KAHT,cAK3B1J,GAASoF,EAAAA,EAAAA,KAAW,IAEdC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYpK,EAAaqK,SAVf,kBAeFK,EAAAA,EAAAA,IAAA,2BAA8BkE,GAAS1E,GAfrC,gBAejBxC,EAfiB,EAejBA,KAER7C,GAASoF,EAAAA,EAAAA,KAAW,IACpBsE,EAAiB7G,GAlBQ,kDAoBzB7C,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,uBACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,iBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IA7BK,0DAAD,sDA+BzB,KAGG4E,EAAoB,mCAAG,WAAOC,GAAP,sFAC3BL,IACA5J,GAASoF,EAAAA,EAAAA,KAAW,IAEdC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYpK,EAAaqK,SAPf,kBAYFK,EAAAA,EAAAA,KAAA,YAAwB,CAAEoE,OAAAA,GAAU5E,GAZlC,gBAYjBxC,EAZiB,EAYjBA,KAER7C,GAASoF,EAAAA,EAAAA,KAAW,IACpBpF,GAASc,EAAAA,EAAAA,IAAgB+B,IACzBuG,GAAa,GAhBY,kDAkBzBpJ,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,gCACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,mBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IA3BK,0DAAH,sDA+B1B,OACE,+BACE,UAAC8E,GAAA,GAAD,CACEpP,WAAY,CACVvB,GAAI,CACF4Q,qBAAsB,GACtBC,wBAAyB,GACzBnJ,gBAAiB,kCACjBiI,QAAS,OACT3K,MAAO,UAGXtD,OAAO,OACPN,KAAM0O,EACNzO,QAASgP,EACTS,mBAAoB,IAbtB,WAeE,gBAAK7M,UAAU,gCAAf,UACE,kBACEA,UAAU,kDACVzC,MAAO,CAAEoG,UAAW,OAFtB,0BAKE,SAACG,EAAA,EAAD,CACEzG,QAAS+O,EACTrQ,GAAI,CACFgI,SAAU,WACVC,MAAO,EACPC,IAAK,EACL1H,MAAO,UACP,SAAU,CACRH,gBAAiB,cARvB,UAYE,SAAC0Q,GAAA,EAAD,CAAa9M,UAAU,2BAK7B,SAAC,GAAD,CACEqJ,IAAK8C,EACLlB,cAAeoB,EACf/L,WAAW,EACXI,YAAY,0BACZwK,WAAY,WACVc,EAAe,IACfE,EAAiB,IACjBC,EAAgBxE,QAAQ8D,YAI5B,oBACEzL,UAAU,oCACVzC,MAAO,CAAEwP,UAAW,OAAQC,UAAW,UAFzC,UAIE,gBAGE3P,QAAS,SAACoC,GACR,IAAMgN,EAAShN,EAAEC,OAAOuN,QAAQ/C,KAC3BuC,GACLD,EAAqBC,IANzB,SASG/N,GACC,SAAC,GAAD,CAAa4L,OAAO,OAAOC,SAAU,OAAQC,MAAO,IAClDyB,EAAc9N,OAAS,EACzB8N,EAAc7N,KAAI,SAAC8L,GAAD,OAChB,SAAC,GAAD,CAEEA,KAAMA,EACNC,eAAgB,CAAC,GAAI,KAFhBD,EAAK3L,QAKZwN,IAAgBrN,GAClB,eAAGsB,UAAU,wCAAb,oCAEE,iBAAMA,UAAU,YAAhB,UACG6D,EAAAA,EAAAA,IAAekI,EAAa,GAAI,MAHrC,QAQA,kC,iCCrKRxG,GAAgBC,EAVF,CAClBjJ,MAAO,QAEa,CACpBkJ,SAAU,IACVlJ,MAAO,OACP4F,WAAY,QACZ3F,SAAU,GACVJ,gBAAiB,SAkHnB,GA9GuB,SAAC,GAAqC,IAAnCwP,EAAkC,EAAlCA,aAAcrC,EAAoB,EAApBA,cACtC,GAAuC3L,EAAAA,EAAAA,IAAYC,EAAAA,IAA3CF,EAAR,EAAQA,aAEFuP,GAFN,EAAsBC,cACLpP,EAAAA,EAAAA,OACFyI,EAAAA,EAAAA,WAEf,GAA8DzH,EAAAA,EAAAA,UAAS,MAAvE,eAAOqO,EAAP,KAAgCC,EAAhC,KACA,GACEtO,EAAAA,EAAAA,UAAS,MADX,eAAOuO,EAAP,KAAkCC,EAAlC,KAYA,GAAwCxO,EAAAA,EAAAA,WAAS,GAAjD,eAAO8M,EAAP,KAAqBC,EAArB,KAEA,OACE,oBACE9L,UAAS,iFADX,WAIE,SAAC,GAAD,CACE6C,MAAM,uCACNmG,UAAU,eACVpH,OAAK,EAHP,UAKE,oBACErE,MAAO,CAAEpB,aAAc,QACvB6D,UAAS,4CACT3C,QAAS,kBAAMyO,GAAgB,IAHjC,WAKE,SAACT,EAAA,EAAD,CAAQrL,UAAS,UACjB,iBAAMA,UAAS,+BAAf,gCAGJ,SAAC,GAAD,CACE4L,aAAcA,EACdC,aAAcA,EACdC,gBAAiBA,KAInB,iBAAK9L,UAAS,yCAAd,WACE,SAACwN,GAAA,EAAD,CACEnE,IAAK6D,EACLlN,UAAW,gDACXzC,MAAO,CAAEwD,MAAO,OAAQ+J,OAAQ,QAChC2C,cAAeA,MAEjB,iBAAMlQ,MAAO,CAAEhB,MAAO,UAAYyD,UAAU,oBAA5C,4BAMF,4BACE,SAAC,GAAD,CAAe6C,MAAM,gBAAgBmG,UAAU,aAAapH,OAAK,EAAjE,UACE,SAACkC,EAAA,EAAD,CACEzG,QArDmB,SAACoC,GAC5B4N,EAA2B5N,EAAEC,SAqDrB3D,GAAI,CACFQ,MAAO,UACP,SAAU,CACRH,gBAAiB,cALvB,UASE,SAACsR,EAAA,EAAD,CAAe1N,UAAS,oBAG5B,SAAC,GAAD,CACE6C,MAAM,mBACN4B,KAAK,QACLuE,UAAU,aACVpH,OAAK,EAJP,UAME,SAACkC,EAAA,EAAD,CACE9D,UAAU,kBACVjE,GAAI,CACFQ,MAAO,UACP,SAAU,CACRH,gBAAiB,cAGrBiB,QA1EsB,SAACoC,GAC/B8N,EAA6B9N,EAAEC,SAiEzB,UAUE,SAACiO,EAAA,EAAD,CACE5E,IAAI,eACJ/I,UAAU,YACV8I,IAAG,OAAEnL,QAAF,IAAEA,OAAF,EAAEA,EAAcmI,kBAIzB,SAAC,EAAD,CACErI,OAAQ2P,EACR1P,UAAW2P,KAEb,SAAC,GAAD,CACE5P,OAAQ6P,EACR5P,UAAW6P,EACXhE,cAAeA,W,sBChGnBhE,GAAgBC,EAXF,CAClBjJ,MAAO,QAEa,CACpBkJ,SAAU,IACVlJ,MAAO,OACP4F,WAAY,QACZ3F,SAAU,GACVkJ,OAAQ,iBACRtJ,gBAAiB,SAqPnB,GAhPqB,SAAC,GAA0B,IAAxBgJ,EAAuB,EAAvBA,iBACtB,GAA6CxH,EAAAA,EAAAA,IAAYC,EAAAA,IAAjDF,EAAR,EAAQA,aAAciQ,EAAtB,EAAsBA,QAASC,EAA/B,EAA+BA,UAC/B,GAMIjQ,EAAAA,EAAAA,IAAYa,EAAAA,IALdC,EADF,EACEA,QACAC,EAFF,EAEEA,iBACAE,EAHF,EAGEA,mBACAC,EAJF,EAIEA,oBACAF,EALF,EAKEA,mBAEI4D,GAAWzE,EAAAA,EAAAA,MAET+P,EAAgCD,EAAhCC,kBAAmBC,EAAaF,EAAbE,SAC3B,GAA0DhP,EAAAA,EAAAA,UAAS,MAAnE,eAAOiP,EAAP,KAA8BC,EAA9B,KACM1H,GAAWC,EAAAA,EAAAA,UAUX0H,EAAe,mCAAG,mGACjBL,EADiB,oDAEdM,EAAoCN,EAApCM,eAAgBJ,EAAoBF,EAApBE,SAAUK,EAAUP,EAAVO,MAE7BL,EAJiB,yCAKbvL,GACL+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,4BACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,iBAVM,aAcb,OAALqK,QAAK,IAALA,OAAA,EAAAA,EAAOjQ,QAAS,GAdE,yCAebqE,GACL+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,+BACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,iBApBM,cAyBtBvB,GAASoF,EAAAA,EAAAA,KAAW,IACdC,EAAS,CACbC,QAAS,CACP,eAAgB,sBAChBC,cAAc,UAAD,OAAYpK,EAAaqK,SA7BpB,UAiCdC,EAAW,IAAIC,UACZC,OAAO,aAAcgG,GAC9BlG,EAASE,OAAO,WAAY4F,GAC5B9F,EAASE,OAAO,QAASrB,KAAKC,UAAL,OAAeqH,QAAf,IAAeA,OAAf,EAAeA,EAAOhQ,KAAI,SAAC8L,GAAD,cAAUA,QAAV,IAAUA,OAAV,EAAUA,EAAM3L,SApC/C,UAsCd8J,EAAAA,EAAAA,KAAW,kBAAmBJ,EAAUJ,GAtC1B,QAwCpBrF,GACE+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,6BACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,mBAIdvB,GAASoF,EAAAA,EAAAA,KAAW,IACpBpF,GAAS6L,EAAAA,EAAAA,KAAeT,IACxBxI,IAEA5C,GAASW,EAAAA,GAAAA,OArDW,kDAuDpBX,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,wBACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,gBA7DM,0DAAH,qDAuHrB,OACE,4BAEE,qBAAS/D,UAAU,yCAAnB,WACE,gBACEA,UAAU,8EACV8I,IAAKgF,EACL/E,IAAI,gBAEN,SAAC,GAAD,CAAelG,MAAM,yBAAyBmG,UAAU,QAAQpH,OAAK,EAArE,UACE,cACEpB,GAAG,qBACHyI,SAAU,EACV7I,UA3Ia,SAACX,GACR,MAAVA,EAAEK,KAAyB,UAAVL,EAAEK,KACrBL,EAAEC,OAAOwH,SA0IHlH,UAAS,qDAAgDrB,EAAhD,gFACTtB,QAnBkB,SAACoC,GAC3BwO,EAAyBxO,EAAEC,SAarB,UAOE,SAACwJ,EAAA,EAAD,CAAMlJ,UAAU,yBAIpB,SAAC,EAAD,CACEvC,OAAQuQ,EACRtQ,UAAWuQ,EACXhN,iBAAkB,kBAAMsF,EAASoB,QAAQT,SACzChG,6BAzCY,SAACzB,GACnBA,EAAE6O,iBACF9L,GACE+L,EAAAA,EAAAA,KAAa,kBACRV,GADO,IAEVM,eAAgB,KAChBL,kBAtIiBU,uFAyIrBjI,EAASoB,QAAQhI,MAAQ,IAiCnBwB,uBACE,OAAC2M,QAAD,IAACA,GAAAA,EAAmB3E,SAAS,wBAGjC,kBACEjJ,KAAK,OACLkJ,OAAO,UACPjJ,SArFqB,SAACV,GAC5B,IAAM2H,EAAQ3H,EAAEC,OAAO2H,MAAM,GAC7B,GAAKD,EAEL,OAAKE,EAAAA,EAAAA,IAAYF,EAAM7G,MAYnB6G,EAAM3C,MAAQiD,EAAAA,IAChBnB,EAASoB,QAAQhI,MAAQ,GAClB6C,GACL+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,2CACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,sBAIhBvB,GACE+L,EAAAA,EAAAA,KAAa,kBACRV,GADO,IAEVM,eAAgB/G,EAChB0G,kBAAmBW,IAAIC,gBAAgBtH,OA1BlC5E,GACL+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,qBACP2E,QAAS,sDACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,oBA2EVxD,KAAK,UACLC,GAAG,cACH6I,IAAK9C,EACLvG,UAAS,SACTS,SAAU/B,QAId,qBAASsB,UAAS,UAAKnB,GAAvB,WACE,mBAAOoB,QAAQ,YAAYD,UAAS,UAAKpB,GAAzC,yBACa,iBAAMoB,UAAU,WAAhB,mBAEb,kBACEE,KAAK,OACLP,MAAOoO,EACP5N,SAAU,SAACV,GACT+C,GAAS+L,EAAAA,EAAAA,KAAa,kBAAKV,GAAN,IAAiBE,SAAUtO,EAAEC,OAAOC,WAE3DU,UAAQ,EACRC,WAAS,EACTC,KAAK,YACLC,GAAG,YACHR,UAAS,UAAKlB,GACd2B,SAAU/B,EACVgC,YAAY,yBAGhB,UAAC0D,GAAA,EAAD,CAAepE,UAAU,OAAOzC,MAAO,CAAEC,aAAc,SAAvD,WACE,SAAC6G,GAAA,EAAD,CACEtI,GAAIkG,GACJxB,SAAU/B,EACVnB,MAAO2E,GACP7E,QAAS+H,EAJX,UAME,6BACE,SAACd,EAAA,EAAD,CACEtE,UAAU,gBACVzC,MAAO,CACLgH,OAAQ,qBAJd,aAUF,SAACF,GAAA,EAAD,CACEtI,GAAIkG,GACJxB,SAAU/B,EACVnB,MAAO2E,GACP7E,QAAS6Q,EAJX,SAMGxP,GACC,iCACE,SAAC8F,EAAA,EAAD,CAAkBC,KAAM,GAAIlH,MAAO,CAAEqG,YAAa,WAClD,8CAGF,wDCzCZ,GAlN0B,SAAC,GAAyC,IAAvC+K,EAAsC,EAAtCA,gBAAiBC,EAAqB,EAArBA,eAC5C,GAAoChR,EAAAA,EAAAA,IAAYC,EAAAA,IAAxCF,EAAR,EAAQA,aAAckQ,EAAtB,EAAsBA,UACdlI,GAAuB/H,EAAAA,EAAAA,IAAYgI,EAAAA,IAAnCD,mBACFnD,GAAWzE,EAAAA,EAAAA,MAEjB,GAAkCgB,EAAAA,EAAAA,UAAS8O,GAA3C,eAAOgB,EAAP,KAAkBC,EAAlB,KACA,GAAgC/P,EAAAA,EAAAA,WAAS,GAAzC,eAAOgQ,EAAP,KAAiBC,EAAjB,KACMC,EAAY,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAWT,MAChC,GAAgDrP,EAAAA,EAAAA,WAAS,GAAzD,eAAOmQ,EAAP,KAAyBC,EAAzB,KACA,GAAwCpQ,EAAAA,EAAAA,UAAS,IAAjD,eAAOqQ,EAAP,KAAqBC,EAArB,KAEMlD,GAAkB3F,EAAAA,EAAAA,QAAO,MAC/B,GAAsCzH,EAAAA,EAAAA,UAAS,IAA/C,eAAOgN,EAAP,KAAoBC,EAApB,KACA,GAA0CjN,EAAAA,EAAAA,UAAS,IAAnD,eAAOkN,EAAP,KAAsBC,EAAtB,KACQjH,EACNU,EADMV,mBAAoBC,EAC1BS,EAD0BT,mBAAoBE,EAC9CO,EAD8CP,iBAEhD,GAAkDrG,EAAAA,EAAAA,WAAS,GAA3D,eAAOsD,EAAP,KAA0BuH,EAA1B,KACA,GAA8C7K,EAAAA,EAAAA,WAAS,GAAvD,gBAAOuD,GAAP,MAAwBgN,GAAxB,OAEA1P,EAAAA,EAAAA,YAAU,WACRkP,EAAajB,KACZ,CAACA,IAGJ,IAAM0B,GAAqB,WACzB,IAAgB,OAAZH,QAAY,IAAZA,OAAA,EAAAA,EAAcjR,QAAS,EACzB,OAAOqE,GACL+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,+BACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,gBAIhB6F,GAAqB,GACrB0F,IAAmB,GACnB9M,GAAS+L,EAAAA,EAAAA,IAAaM,IACtB5J,GAAmB,SAAC,GAAD,CAAcG,iBAAkBA,KACnDF,EAAmB,CACjBrC,MAAO,uBAIXjD,EAAAA,EAAAA,YAAU,WACRsM,EAAiB,IACjBF,EAAe,MACd,KAEHpM,EAAAA,EAAAA,YAAU,WAEJgP,GAAgBpM,GAASgN,EAAAA,GAAAA,IAAgBD,OAC5C,CAACV,KAEJjP,EAAAA,EAAAA,YAAU,WAEHgP,GAAgBD,GAAgB,QAAIS,MACxC,CAACA,IAEJ,IAAM/C,IAAcC,EAAAA,EAAAA,IAAQ,mCAAC,WAAO7M,GAAP,0FACrB8M,EADqB,UACb9M,EAAEC,cADW,iBACb,EAAUC,aADG,aACb,EAAiB2L,OAC/BU,EAAeO,GACVA,EAHsB,yCAGRL,EAAiB,KAHT,cAK3B8C,GAAY,GACRE,GAAkBC,GAAoB,GAEpCtH,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYpK,EAAaqK,SAXf,mBAeFK,EAAAA,EAAAA,IAAA,2BAA8BkE,GAAS1E,GAfrC,iBAejBxC,EAfiB,EAejBA,KAGJoK,GAlBqB,QAkBCpK,GAC1B4J,EAAaS,SAAQ,SAACC,GACpBF,EAAkBA,EAAgBvT,QAChC,SAAC0T,GAAD,OAAOA,EAAErR,MAAQoR,EAAYpR,UAIjCyQ,GAAY,GACZ9C,EAAiBuD,GA1BQ,kDA4BzBjN,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,uBACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,iBAGdiL,GAAY,GArCa,0DAAD,sDAuCzB,KAcH,OACE,iBAAKhP,UAAU,qCAAf,WAEE,oBACEA,UAAU,mDACVzC,MAAO,CACLsS,KAAM,OACN1T,aAAc,OACdC,gBAAiB,WALrB,gBAQGgT,QARH,IAQGA,OARH,EAQGA,EAAchR,KAAI,SAAC8L,GAAD,aACjB,SAAC4F,GAAA,EAAD,CAEE9P,UAAU,mDACV+P,QACE,SAACpC,EAAA,EAAD,CACE3N,UAAU,iBACV+I,IAAG,OAAEmB,QAAF,IAAEA,OAAF,EAAEA,EAAM3J,KACXuI,IAAG,OAAEoB,QAAF,IAAEA,OAAF,EAAEA,EAAMpE,aAGfkK,OAAOnM,EAAAA,EAAAA,IAAc,OAACqG,QAAD,IAACA,GAAD,UAACA,EAAM3J,YAAP,aAAC,EAAY0P,MAAM,KAAK,GAAI,GAAI,GACrDC,SAAU,kBAnCC,SAAChG,GACfA,IACL4E,GAAa,kBACRD,GADO,IAEVT,MAAOa,EAAa/S,QAAO,SAACiU,GAAD,OAAOA,EAAE5R,MAAQ2L,EAAK3L,UAGnD8Q,EAAgBD,EAAalT,QAAO,SAACiU,GAAD,OAAOA,EAAE5R,MAAQ2L,EAAK3L,QAE1D2N,EAAiB,CAAChC,GAAF,gBAAW+B,MA0BHmE,CAAalG,KAX/B,OACOA,QADP,IACOA,OADP,EACOA,EAAM3L,WAejB,SAAC,GAAD,CACE8K,IAAK8C,EACLlB,cAAeoB,GACf/L,WAAW,EACXI,YAAY,iBACZwK,WAAY,WACVc,EAAe,IACfE,EAAiB,IACjBC,EAAgBxE,QAAQ8D,YAI5B,oBACEzL,UAAU,+CACVzC,MAAO,CAAEsS,KAAM,IAAKrS,aAAc,SAFpC,UAIE,gBAGEH,QAAS,SAACoC,GACR,IAAMgN,EAAShN,EAAEC,OAAOuN,QAAQ/C,KAChC,GAAKuC,EAAL,CAEKyC,GAAkBC,GAAoB,GAE3C,IAAMkB,EAAepE,EAAcqE,MAAK,SAACH,GAAD,OAAOA,EAAE5R,MAAQkO,KACzDqC,GAAa,kBACRD,GADO,IAEVT,MAAM,GAAD,gBAAMa,GAAN,CAAoBoB,OAG3BhB,EAAgB,GAAD,gBAAKD,GAAL,CAAmBiB,KAElCnE,EAAiBD,EAAc/P,QAAO,SAACiU,GAAD,OAAOA,EAAE5R,MAAQkO,QAjB3D,SAoBGsC,GACC,SAAC,GAAD,CAAazE,OAAO,SAASC,SAAU,OAAQC,MAAO,IACpDyB,EAAc9N,OAAS,EACzB8N,EAAc7N,KAAI,SAAC8L,GAAD,OAChB,SAAC,GAAD,CAEEA,KAAMA,EACNC,eAAgB,CAAC,GAAI,KAFhBD,EAAK3L,QAMdwN,IACCgD,IACC,eAAG/O,UAAU,wCAAb,UACGkP,EAAmB,kBAAoB,cAD1C,eAGE,iBAAMlP,UAAU,YAAhB,UACG6D,EAAAA,EAAAA,IAAekI,EAAa,GAAI,MAJrC,YAaR,SAAC,GAAD,CACEnH,uBAAwBvC,EACxBwC,qBAAsBvC,S,6EC5LxBiD,GAAgBC,EAZF,CAClBjJ,MAAO,WAEa,CACpBkJ,SAAU,IACVlJ,MAAO,OACP4F,WAAY,QACZ3F,SAAU,GACVL,aAAc,EACdC,gBAAiB,YAiLnB,GA5KqB,SAAC,GAAc,IAAD,gBA+B7BmU,EA/BkBC,EAAW,EAAXA,KACtB,GAAuC5S,EAAAA,EAAAA,IAAYC,EAAAA,IAA3C4S,EAAR,EAAQA,aAAc9S,EAAtB,EAAsBA,aAEpBY,EAMEiS,EANFjS,IACAwP,EAKEyC,EALFzC,SACA2C,EAIEF,EAJFE,cACAC,EAGEH,EAHFG,YACAC,EAEEJ,EAFFI,YACAzC,EACEqC,EADFrC,eAGI0C,EAAeF,EAAW,iBAClB5C,EADkB,qBACJyC,QADI,IACJA,GADI,UACJA,EAAMpC,aADF,aACJ,EAAajQ,OADT,uBAEzB4P,EAFyB,aAEZ2C,GAEhBI,EAAc,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAaG,eAAhB,aAAG,EACjBC,WAAW,OAAQ,MACpBA,WAAW,SAAU,KACrBA,WAAW,QAAS,MACpBA,WAAW,SAAU,MACrBA,WAAW,SAAU,IACrBA,WAAW,UAAW,IAEnBC,EAAc,IAAIC,KAAJ,OAASN,QAAT,IAASA,OAAT,EAASA,EAAaO,WACpCC,GAAoBC,EAAAA,EAAAA,IAAgBJ,GAEpCK,EAAc,OAAGV,QAAH,IAAGA,OAAH,EAAGA,EAAaW,QAC9BC,GAA0B,OAAXZ,QAAW,IAAXA,GAAA,UAAAA,EAAaa,iBAAb,eAAwBxB,MAAM,SAAU,GACvDyB,EAAkBF,EAAa,IAAM,GACrCG,EAAcb,GAAkBY,EAChCE,EAAQ,UAAGJ,EAAa,UAAhB,aAAG,EAAiBvB,MAAM,OAAO,GAmB/C,OAhBIqB,IACFf,GAAkBjJ,EAAAA,EAAAA,IAAYgK,GAC1B,QACA,WAAWO,KAAKP,GAChB,MACQ,OAARM,QAAQ,IAARA,GAAAA,EAAUE,WAAW,WACrB,8BAA8BD,KAAKP,GACnC,QACQ,OAARM,QAAQ,IAARA,GAAAA,EAAUE,WAAW,WACrB,uBAAuBD,KAAKP,GAC5B,QACA,WAAWO,KAAKP,GAChB,MACA,cAIJ,iBACE,YAAW/S,EACXyB,UAAS,4DACK,OAAZyQ,QAAY,IAAZA,OAAA,EAAAA,EAAclS,OAAQA,EAAM,aAAe,GADpC,oDAFX,WAOE,SAAC,GAAD,CACEsE,MAAK,eAAU8N,EAAc,WAAa,eAC1C3H,UAAU,YACVpH,OAAK,EAHP,UAKE,gBACEkH,IAAKqF,EACLpF,IAAKgF,EACL,YAAWxP,EACXyB,UAAS,8DAIb,iBACE,YAAWzB,EACXyB,UAAU,yDAFZ,WAKE,cACE,YAAWzB,EACXsE,MAAOgO,EACP7Q,UAAU,sCAHZ,UAKG6D,EAAAA,EAAAA,IAAekK,EAAU,GAAI,MAE/B6C,IACC,iBAAM5Q,UAAU,cAAc,YAAWzB,EAAzC,SACyB,UAAtB6S,GACGW,EAAAA,EAAAA,IAAgBd,GACM,cAAtBG,GACAY,EAAAA,EAAAA,IAAaf,GACb,eAINL,GAA+B,OAAhBA,GAAwBD,KACvC,eAAG,YAAWpS,EAAKyB,UAAU,sBAA7B,WACE,iBAAM,YAAWzB,EAAKyB,UAAU,eAAhC,UACE,8BACmB,OAAhB4Q,GACAD,IAAgBC,IACfD,IACW,OAAXC,QAAW,IAAXA,GAAA,UAAAA,EAAaqB,cAAb,eAAqB1T,QAArB,OAA6BZ,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAcY,KAC3C,IACa,OAAXqS,QAAW,IAAXA,GAAA,UAAAA,EAAaqB,cAAb,eAAqB1T,QAArB,OAA6BZ,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAcY,MAC7C,8BACGoS,GACC,yCAEA,SAACuB,GAAA,EAAD,CACE,YAAW3T,EACXyB,UAAU,YACVzC,MAAO,CAAEhB,MAAO,kBAKtBsH,EAAAA,EAAAA,IAAc,OACZ+M,QADY,IACZA,GADY,UACZA,EAAaqB,cADD,iBACZ,EAAqB1R,YADT,aACZ,EAA2B0P,MAAM,KAAK,GACtC,GACA,GACE,SAITqB,GACC,iBAAM,YAAW/S,EAAjB,SACuB,UAApBgS,GACC,kBAAM,YAAWhS,EAAKsE,MAAO8O,EAA7B,WACE,SAACQ,GAAA,EAAD,CAAO,YAAW5T,EAAKyB,UAAU,aAAc,KAC9C6D,EAAAA,EAAAA,IAAeiN,EAAgB,GAAI,KAAO,WAEvB,QAApBP,GACF,kBAAM,YAAWhS,EAAKsE,MAAO8O,EAA7B,WACE,SAACS,GAAA,EAAD,CAAQ,YAAW7T,EAAKyB,UAAU,aAAc,KAC/C6D,EAAAA,EAAAA,IAAeiN,EAAgB,GAAI,KAAO,SAEvB,UAApBP,GACF,kBAAM,YAAWhS,EAAKsE,MAAO8O,EAA7B,WACE,SAACU,GAAA,EAAD,CAAW,YAAW9T,EAAKyB,UAAU,aAAc,KAClD6D,EAAAA,EAAAA,IAAeiN,EAAgB,GAAI,KAAO,WAEvB,UAApBP,GACF,kBAAM,YAAWhS,EAAKsE,MAAO8O,EAA7B,WACE,SAACW,GAAA,EAAD,CAAW,YAAW/T,EAAKyB,UAAU,aAAc,KAClD6D,EAAAA,EAAAA,IAAeiN,EAAgB,GAAI,KAAO,WAEvB,QAApBP,GACF,kBAAM,YAAWhS,EAAKsE,MAAO8O,EAA7B,WACE,SAACY,GAAA,EAAD,CAAc,YAAWhU,EAAKyB,UAAU,aAAc,KACrD6D,EAAAA,EAAAA,IAAe8N,EAAa,GAAI,KAAO,UAG1C,kBAAM,YAAWpT,EAAKsE,MAAO8O,EAA7B,WACE,SAACa,GAAA,EAAD,CAAa,YAAWjU,EAAKyB,UAAU,aAAc,KACpD6D,EAAAA,EAAAA,IAAe8N,EAAa,GAAI,KAAO,aAK9C,iBAAM,YAAWpT,EAAKsE,MAAOiO,EAA7B,SACmB,OAAhBF,EACG,4BACAD,IAAgBC,EAAhB,qBAEA/M,EAAAA,EAAAA,IAAeiN,EAAgB,GAAI,gBCpMjD2B,GAAc,CAAE1R,MAAO,OAAQ+J,OAAQ,OAAQ3O,aAAc,IA+BnE,GA5BsB,SAAC,GAAmC,IAAD,IAAhCuW,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACxC,OACE,gBAAK5S,UAAU,yDAAf,SACG2S,GACC,kBACE7J,IAAK6J,EACLpV,MAAO,CAAEwD,MAAO,4BAChB8R,UAAQ,EACRC,UAAQ,EAJV,sDAQEF,GACF,kBAAO9J,IAAK8J,EAAUrV,MAAOkV,GAAaI,UAAQ,EAACC,UAAQ,EAA3D,uDAIA,gBACEhK,KAAK,UAAA4J,EAAMhT,cAAN,eAAcoJ,MApBL0F,sCAqBdzF,KAAK,UAAA2J,EAAMhT,cAAN,eAAcqJ,MAAO,cAC1B/I,UAAU,mCACVzC,OAAK,kBAAOkV,IAAP,IAAoBM,UAAW,iBCexCxN,GAAgBC,EAVF,CAClBjJ,MAAO,QAEa,CACpBkJ,SAAU,IACVlJ,MAAO,OACP4F,WAAY,QACZ3F,SAAU,GACVJ,gBAAiB,SAwLnB,GApLqB,SAAC,GAAkD,IAAhD4W,EAA+C,EAA/CA,YAAapH,EAAkC,EAAlCA,aAAcrC,EAAoB,EAApBA,cACjD,GACE3L,EAAAA,EAAAA,IAAYC,EAAAA,IADNF,EAAR,EAAQA,aAAc8S,EAAtB,EAAsBA,aAAc7C,EAApC,EAAoCA,QAE9BpL,GAFN,EAA6C2K,cAE5BpP,EAAAA,EAAAA,OAEjB,GAA0BgB,EAAAA,EAAAA,UAAS,IAAnC,eAAOkU,EAAP,KAAcC,EAAd,KACA,GAA8BnU,EAAAA,EAAAA,WAAS,GAAvC,eAAOL,EAAP,KAAgBkJ,EAAhB,KACA,GAA0C7I,EAAAA,EAAAA,UAASkU,GAAnD,eAAOE,EAAP,KAAsBC,EAAtB,KACMC,GAAkB7M,EAAAA,EAAAA,UAkClB8M,EAAU,mCAAG,qGACXzL,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,cAAYpK,QAAZ,IAAYA,OAAZ,EAAYA,EAAcqK,SAH1B,kBAQQK,EAAAA,EAAAA,IAAA,YAAuBR,GAR/B,gBAQPxC,EARO,EAQPA,KAEFkO,EAAclO,EAAKjH,KAAI,SAACoS,GAC5B,IAAQG,EAAuBH,EAAvBG,YAAavC,EAAUoC,EAAVpC,MAErB,IAAKuC,EAAa,CAChB,IAAM6C,GAAWC,EAAAA,EAAAA,IAAwB9V,EAAcyQ,GACvD,OAAO,kBACFoC,GADL,IAEEzC,SAAQ,OAAEyF,QAAF,IAAEA,OAAF,EAAEA,EAAUjT,KACpBmQ,cAAa,OAAE8C,QAAF,IAAEA,OAAF,EAAEA,EAAUzN,MACzBoI,eAAc,OAAEqF,QAAF,IAAEA,OAAF,EAAEA,EAAU1N,aAG9B,OAAO0K,KAET0C,EAASK,GACTH,EAAiBG,GACb7U,GAASkJ,GAAW,GA1BT,kDA4BfpF,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,uBACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,mBAGVrF,GAASkJ,GAAW,GArCT,0DAAH,qDA0CV8L,GAAcpH,EAAAA,EAAAA,KAAS,SAAC7M,GAAO,IAAD,IAC5BkU,EAAa,UAAGlU,EAAEC,cAAL,iBAAG,EAAUC,aAAb,aAAG,EAAiBiU,cAActI,OACrD,IAAKqI,EACH,OAAOP,EAAiBH,GAE1BG,EACEH,EAAM/W,QAAO,SAACsU,GAAD,oBACXA,QADW,IACXA,GADW,UACXA,EAAMzC,gBADK,aACX,EAAgB6F,cAAcC,SAASF,SAG1C,KAMH,OAJA/T,EAAAA,EAAAA,YAAU,WACR0T,MACC,CAAC1F,KAGF,iBACE5N,UAAS,2DACPyQ,EAAe,mBAAqB,SAD7B,4DAGTlT,MAAO,CAAEuW,cAAed,EAAc,OAAS,QAJjD,WAME,oBAAShT,UAAU,oBAAnB,UACE,eAAGA,UAAU,sEAAb,mBAGE,SAAC,GAAD,CACE6C,MAAM,wBACNmG,UAAU,aACVpH,OAAK,EAHP,UAKE,mBACE5B,UAAS,mEACT3C,QA5GsB,WAChCmF,GACE+L,EAAAA,EAAAA,IAAa,CACXJ,eAAgB,KAChBL,kBA5BiBU,mFA6BjBT,SAAU,GACVK,MAAO,MAGX5L,GAASoH,EAAAA,GAAAA,KAAqB,IAC9BL,GAAc,SAAC,GAAD,CAAmBqF,gBAAgB,KACjDpM,GACEqH,EAAAA,GAAAA,IAAc,CACZhH,MAAO,oBACPC,QAAS,SACTC,SAAU,OACVE,OAAQ,SA0FJ,UAIE,SAAC8Q,GAAA,EAAD,cAMF,OAALd,QAAK,IAALA,OAAA,EAAAA,EAAO9U,QAAS,IACf,oBAAS6B,UAAU,aAAnB,UACE,SAAC,GAAD,CACEqJ,IAAKgK,EACLpI,cAAeyI,EACfpT,WAAW,EACXI,YAAY,cACZwK,WAAY,kBAAMkI,EAAiBH,SAKzC,oBAASjT,UAAU,mDAAnB,SACGtB,GACC,SAAC,GAAD,CAAa4L,OAAO,OAAOC,SAAU,OAAQC,MAAO,KACrC,OAAb2I,QAAa,IAAbA,OAAA,EAAAA,EAAehV,QAAS,GAC1B,gBAGEd,QAAS,SAACoC,GAAO,IAAD,MACRuU,GACJ,UAAAvU,EAAEC,OAAOuN,eAAT,eAAkBuD,QAAlB,UAA0B/Q,EAAEC,OAAOuU,WAAWhH,eAA9C,aAA0B,EAA6BuD,MACzD,GAAKwD,EAAL,CAEA,aAAIvU,EAAEC,OAAOM,iBAAb,OAAI,EAAoBkU,WAAWL,SAAS,kBAC1C,OAxHe,SAACpU,GAAO,IAAD,EAClC+C,GAASoH,EAAAA,GAAAA,KAAqB,IAC9BL,GAAc,SAAC,GAAD,CAAemJ,MAAOjT,KACpC+C,GACEqH,EAAAA,GAAAA,IAAc,CACZlH,cAAc,EACdE,OAAO,UAAApD,EAAEC,cAAF,eAAUqJ,MAAO,iBAkHToL,CAAqB1U,GAE9B,IAAM2U,EAAcjB,EAAc7C,MAChC,SAACE,GAAD,OAAUA,EAAKjS,MAAQyV,KAErBI,EAAY7V,OAAZ,OAAoBkS,QAApB,IAAoBA,OAApB,EAAoBA,EAAclS,OACtCiE,GAASc,EAAAA,EAAAA,IAAgB8Q,IACzBxI,GAAa,GACb,OAAIwI,QAAJ,IAAIA,GAAAA,EAAazD,aAAanO,GAAS+L,EAAAA,EAAAA,IAAa6F,OAjBxD,SAoBGjB,EACEjX,QACC,SAACsU,GAAD,YAA+B6D,IAArB7D,EAAKI,aAA6BJ,EAAKG,eAElDvS,KAAI,SAACoS,GAAD,OACH,SAAC,GAAD,CAA6BA,KAAMA,GAAhBA,EAAKjS,WAI9B,iBAAMyB,UAAU,kDAAhB,kC,+y2GCrMJuF,GAAgBC,EAXF,CAClBjJ,MAAO,QAEa,CACpBkJ,SAAU,IACVlJ,MAAO,OACP4F,WAAY,QACZ3F,SAAU,GACVkJ,OAAQ,iBACRtJ,gBAAiB,SAkEnB,GA9DwB,SAAC,GAAmD,IAAD,IAErEmE,EAAMwF,EAAOD,EAFQwO,EAAgD,EAAhDA,iBAAkBC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YACvD,GAAuC5W,EAAAA,EAAAA,IAAYC,EAAAA,IAA3CF,EAAR,EAAQA,aAAc8S,EAAtB,EAAsBA,aAGtB,GAAI6D,GAAoBC,GAAcC,EACpCjU,EAAOgU,EACPxO,EAAQyO,EACR1O,EAAawO,MACR,CACL,IAAMd,GAAWC,EAAAA,EAAAA,IAAwB9V,EAAD,OAAe8S,QAAf,IAAeA,OAAf,EAAeA,EAAcrC,OACrE7N,EAAI,OAAGiT,QAAH,IAAGA,OAAH,EAAGA,EAAUjT,KACjBwF,EAAK,OAAGyN,QAAH,IAAGA,OAAH,EAAGA,EAAUzN,MAClBD,EAAU,OAAG0N,QAAH,IAAGA,OAAH,EAAGA,EAAU1N,WAGzB,OACE,iCAEE,oBAAS9F,UAAU,4CAAnB,UACE,gBACEA,UAAU,8EACVQ,GAAG,kBACHsI,IAAKhD,EACLiD,IAAKxI,OAIT,oBAASP,UAAS,+BAAlB,UACE,gBAAKA,UAAU,cAAczC,MAAO,CAAEoG,UAAW,SAAjD,UACE,SAAC,GAAD,CACEd,OAAW,QAAJ,EAAAtC,SAAA,eAAMpC,QAAS,GAAKoC,EAAO,GAClCyI,UAAU,MACVpH,OAAK,EAHP,UAKE,gBACE5B,UAAU,kCACVzC,MAAO,CAAEf,SAAU,QAFrB,UAIGqH,EAAAA,EAAAA,IAAetD,EAAM,GAAI,aAMlC,oBACEP,UAAS,+BACTzC,MAAO,CAAEoG,UAAW,SAFtB,UAIE,SAAC,GAAD,CACEd,OAAY,QAAL,EAAAkD,SAAA,eAAO5H,QAAS,GAAK4H,EAAQ,GACpCiD,UAAU,SACVpH,OAAK,EAHP,UAKE,iBAAM5B,UAAU,KAAKzC,MAAO,CAAEhB,MAAO,aAArC,UACGsH,EAAAA,EAAAA,IAAekC,EAAO,GAAI,c,iCCtDjCR,GAAgBC,EAXF,CAClBjJ,MAAO,WAEa,CACpBkJ,SAAU,IACVlJ,MAAO,OACP4F,WAAY,QACZ3F,SAAU,GACVL,aAAc,GACdC,gBAAiB,YA6DnB,GAzDwB,SAAC,GAA8B,IAA5B8N,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,eACvBxM,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAA7BF,aACAY,EAAiC2L,EAAjC3L,IAAKgC,EAA4B2J,EAA5B3J,KAAMwF,EAAsBmE,EAAtBnE,MAAOD,EAAeoE,EAAfpE,WAC1B,UAAqBqE,EAArB,GAAOC,EAAP,KAAYC,EAAZ,KACMoK,EAAiBlW,KAAG,OAAKZ,QAAL,IAAKA,OAAL,EAAKA,EAAcY,KAE7C,OACE,iBACE,YAAWA,EACXyB,UAAS,8HACNyU,GAAkB,WAHvB,WAMO,OAAJvK,QAAI,IAAJA,OAAA,EAAAA,EAAMwK,gBACL,iBACE1U,UAAS,mEACTzC,MAAO,CAAEiO,OAAQ,QAFnB,oBAOAiJ,IACA,iBACE,YAAWlW,EACXyB,UAAU,iEAFZ,UAIE,SAAC2U,GAAA,EAAD,CAAmB,YAAWpW,OAGlC,SAAC,GAAD,CACE,YAAWA,EACXsE,MAAK,UAAK4R,EAAiB,GAAH,UAAWlU,EAAX,aAAoBwF,EAApB,MACxBiD,UAAU,YACVpH,OAAK,EAJP,UAME,gBACEkH,IAAKhD,EACLiD,IAAKxK,EACL,YAAWA,EACXyB,UAAS,iEAGb,iBACE,YAAWzB,EACXyB,UAAU,4DAFZ,WAIE,cAAG,YAAWzB,EAAKyB,UAAU,oCAA7B,SACGyU,EAAiB,OAAQ5Q,EAAAA,EAAAA,IAAetD,EAAM6J,EAAKC,MAEtD,cAAG,YAAW9L,EAAKyB,UAAU,mBAA7B,UACG6D,EAAAA,EAAAA,IAAekC,EAAOqE,EAAKC,Y,iCCiQtC,GA/S0B,SAAC,GAOpB,IAAD,IANJ5M,EAMI,EANJA,OACAC,EAKI,EALJA,UACAkX,EAII,EAJJA,cACAhL,EAGI,EAHJA,qBACA0F,EAEI,EAFJA,mBACA3J,EACI,EADJA,mBAEA,GAA6C/H,EAAAA,EAAAA,IAAYC,EAAAA,IAAjDF,EAAR,EAAQA,aAAciQ,EAAtB,EAAsBA,QAASC,EAA/B,EAA+BA,UACzBrL,GAAWzE,EAAAA,EAAAA,MAETkH,EAA2CU,EAA3CV,mBAAoBC,EAAuBS,EAAvBT,mBACtB2P,EAAwB,OAAGhH,QAAH,IAAGA,GAAH,UAAGA,EAAWiH,mBAAd,aAAG,EAAwBC,MACvD,SAACC,GAAD,OAAgB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOzW,QAAP,OAAeZ,QAAf,IAAeA,OAAf,EAAeA,EAAcY,QAEpC0W,GAAoBpR,EAAAA,EAAAA,IAAc,OACtC+Q,QADsC,IACtCA,GADsC,UACtCA,EAAerU,YADuB,aACtC,EAAqB0P,MAAM,KAAK,GAChC,GACA,GAEIiF,GACJ,iBAAM3X,MAAO,CAAEhB,MAAO,SAAUC,SAAU,QAA1C,SACGyY,IAGCE,EAAa,SAAC9P,GAClB7C,GAAS6L,EAAAA,EAAAA,KAAeT,IACxBpL,GAASc,EAAAA,EAAAA,IAAgB+B,KAIrB+P,EAAQ,mCAAG,mGACf5S,GAASW,EAAAA,GAAAA,OACTX,GAASoF,EAAAA,EAAAA,KAAW,IAEdC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYpK,EAAaqK,SAP3B,kBAYUK,EAAAA,EAAAA,KAAA,YAErB,CAAEoE,OAAM,OAAEmI,QAAF,IAAEA,OAAF,EAAEA,EAAerW,KACzBsJ,GAfW,gBAYLxC,EAZK,EAYLA,KAMR7C,GAASoF,EAAAA,EAAAA,KAAW,IACpBuN,EAAW9P,GAnBE,kDAqBb7C,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,gCACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,mBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IA9BP,0DAAH,qDAiDRyN,EAAc,mCAAG,mGACrB7S,GAASoF,EAAAA,EAAAA,KAAW,IAEdC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYpK,EAAaqK,SANrB,kBAWIK,EAAAA,EAAAA,KAAA,6BAErB,CAAEoE,OAAM,OAAEmI,QAAF,IAAEA,OAAF,EAAEA,EAAerW,IAAKyV,OAAM,OAAEnG,QAAF,IAAEA,OAAF,EAAEA,EAAWtP,KACjDsJ,GAdiB,gBAWXxC,EAXW,EAWXA,KAMR7C,GACE+E,EAAAA,GAAAA,IAAa,CACXC,QAAQ,GAAD,OAAKyN,EAAL,yBACP/U,KAAM,UACNuH,SAAU,IACV1D,SAAU,mBAGdvB,GAAS+L,EAAAA,EAAAA,IAAalJ,IACtB8P,EAAW9P,GACX7C,GAASoF,EAAAA,EAAAA,KAAW,IA3BD,kDA6BnBpF,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,0BACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,mBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IAtCD,0DAAH,qDA0Cd0N,EAAc,mCAAG,mGACrB9S,GAASoF,EAAAA,EAAAA,KAAW,IAEdC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYpK,EAAaqK,SANrB,kBAWIK,EAAAA,EAAAA,IAAA,gCAErB,CAAEoE,OAAM,OAAEmI,QAAF,IAAEA,OAAF,EAAEA,EAAerW,IAAKyV,OAAM,OAAEnG,QAAF,IAAEA,OAAF,EAAEA,EAAWtP,KACjDsJ,GAdiB,uBAWXxC,EAXW,EAWXA,KAMR7C,GACE+E,EAAAA,GAAAA,IAAa,CACXC,QAAQ,GAAD,OAAKyN,EAAL,+BACP/U,KAAM,OACNuH,SAAU,IACV1D,SAAU,mBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IACpBpF,GAAS+L,EAAAA,EAAAA,IAAalJ,IACtB8P,EAAW9P,GA3BQ,kBA4BZ,kBA5BY,yCA8BnB7C,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,gCACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,mBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IAvCD,kBAwCZ,kBAxCY,0DAAH,qDA4Cd2N,EAAe,mCAAG,mGACtB/S,GAASoF,EAAAA,EAAAA,KAAW,IAEdC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYpK,EAAaqK,SANpB,kBAWGK,EAAAA,EAAAA,IAAA,yBAErB,CACEmN,gBAAe,OAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAerW,IAChCmW,aAAY,OAAEE,QAAF,IAAEA,OAAF,EAAEA,EAAeF,aAC7BV,OAAM,OAAEnG,QAAF,IAAEA,OAAF,EAAEA,EAAWtP,KAErBsJ,GAlBkB,uBAWZxC,EAXY,EAWZA,KAUR7C,GACE+E,EAAAA,GAAAA,IAAa,CACXC,QAAQ,GAAD,OAAKyN,EAAL,uBACP/U,KAAM,OACNuH,SAAU,IACV1D,SAAU,mBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IACpBpF,GAAS+L,EAAAA,EAAAA,IAAalJ,IACtB8P,EAAW9P,GA/BS,kBAgCb,kBAhCa,yCAkCpB7C,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,2BACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,mBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IA3CA,kBA4Cb,kBA5Ca,0DAAH,qDA+ErB,OACE,UAAC,EAAD,CACEjL,WAAYc,EACZb,cAAec,EACfb,gBAAiB,CAAEoB,SAAU,MAAOC,WAAY,SAChDpB,aAAc,CAAEmB,SAAU,SAAUC,WAAY,SAJlD,WAOE,UAACI,EAAA,EAAD,CAAUvC,GAAIO,EAAee,QAAS+X,EAAtC,WACE,SAAChU,EAAA,EAAD,CAAcrF,GAAIU,EAAlB,UACE,SAACgZ,GAAA,EAAD,OAEF,SAAC,EAAD,4BACER,GAAqB,gBAIzB,UAAC3W,EAAA,EAAD,CAAUvC,GAAIO,EAAee,QArMH,WAC5BuM,GAAqB,GACrB0F,GAAmB,GACnBrK,GACE,SAAC,GAAD,CACEqP,iBAAgB,OAAEM,QAAF,IAAEA,OAAF,EAAEA,EAAe9O,WACjCyO,WAAU,OAAEK,QAAF,IAAEA,OAAF,EAAEA,EAAerU,KAC3BiU,YAAW,OAAEI,QAAF,IAAEA,OAAF,EAAEA,EAAe7O,SAGhCb,EAAmB,CACjBrC,MAAO,kBA0LP,WACE,SAACzB,EAAA,EAAD,CAAcrF,GAAIU,EAAlB,UACE,SAACiZ,GAAA,EAAD,OAEF,SAAC,EAAD,yBAAuBT,GAAqB,eAG7CJ,IACC,UAACvW,EAAA,EAAD,CACEvC,GAAIO,EACJe,QACe,OAAbuX,QAAa,IAAbA,GAAAA,EAAeF,aA1De,WACtC9K,GAAqB,GACrB0F,GAAmB,GACnBrK,GACE,oEAAoCiQ,EAApC,uBAEFhQ,EAAmB,CACjBrC,MAAO,mBACPC,QAAS,KACTC,SAAU,MACVC,gBAAiB,YACjBC,OAAQqS,KAiDED,EALR,WAQE,SAACjU,EAAA,EAAD,CAAcrF,GAAIU,EAAlB,UACE,SAACkZ,GAAA,EAAD,OAEF,SAAC,EAAD,UACgB,OAAbf,QAAa,IAAbA,GAAAA,EAAeF,aACZ,mBACA,wBAKTG,IACC,UAACvW,EAAA,EAAD,CAAUvC,GAAIO,EAAee,QA5DM,WACvCuM,GAAqB,GACrB0F,GAAmB,GACnBrK,GACE,mEAAmCiQ,EAAnC,wBAEFhQ,EAAmB,CACjBrC,MAAO,oBACPC,QAAS,KACTC,SAAU,MACVC,gBAAiB,YACjBC,OAAQsS,KAiDN,WACE,SAACnU,EAAA,EAAD,CAAcrF,GAAIU,EAAlB,UACE,SAACmZ,GAAA,EAAD,OAEF,SAAC,EAAD,2BACEX,GAAqB,mBCpT7BY,GAAuB,GA8H3B,GA5HyB,WACvB,OAAoCjY,EAAAA,EAAAA,IAAYC,EAAAA,IAAxCF,EAAR,EAAQA,aAAckQ,EAAtB,EAAsBA,UACdlI,GAAuB/H,EAAAA,EAAAA,IAAYgI,EAAAA,IAAnCD,mBACR,GAAkD5G,EAAAA,EAAAA,WAAS,GAA3D,eAAOsD,EAAP,KAA0BuH,EAA1B,KACA,GAA8C7K,EAAAA,EAAAA,WAAS,GAAvD,eAAOuD,EAAP,KAAwBgN,EAAxB,KACML,EAAY,OAAGpB,QAAH,IAAGA,OAAH,EAAGA,EAAWO,MAC1B0H,EAAM,OAAGjI,QAAH,IAAGA,OAAH,EAAGA,EAAWiH,YAC1B,GAA0C/V,EAAAA,EAAAA,UAAS,MAAnD,eAAO6V,EAAP,KAAsBmB,EAAtB,KACA,GAA8DhX,EAAAA,EAAAA,UAAS,MAAvE,eAAOiX,EAAP,KAAgCC,EAAhC,MAoBArW,EAAAA,EAAAA,YAAU,WACRiW,GAlBO,CACLlY,GADK,uBAEFmY,QAFE,IAEFA,OAFE,EAEFA,EAAQ5Z,QAAO,SAACga,GAAD,OAAQ,OAADA,QAAC,IAADA,OAAA,EAAAA,EAAG3X,QAAH,OAAWZ,QAAX,IAAWA,OAAX,EAAWA,EAAcY,UAF7C,eAGF0Q,QAHE,IAGFA,OAHE,EAGFA,EAAc/S,QACf,SAACiU,GAAD,OACG,OAADA,QAAC,IAADA,OAAA,EAAAA,EAAG5R,QAAH,OAAWZ,QAAX,IAAWA,OAAX,EAAWA,EAAcY,OAAzB,OACAuX,QADA,IACAA,OADA,EACAA,EAAQK,OAAM,SAACD,GAAD,OAAQ,OAADA,QAAC,IAADA,OAAA,EAAAA,EAAG3X,QAAH,OAAW4R,QAAX,IAAWA,OAAX,EAAWA,EAAG5R,cAEvCH,KAAI,SAACgY,GACL,OAAO,kBACFA,GADL,IAEE1B,aAAY,OAAEoB,QAAF,IAAEA,OAAF,EAAEA,EAAQf,MAAK,SAACmB,GAAD,OAAQ,OAADA,QAAC,IAADA,OAAA,EAAAA,EAAG3X,QAAH,OAAW6X,QAAX,IAAWA,OAAX,EAAWA,EAAQ7X,aAQzD8X,EAAmBR,MAClB,CAAChI,IAEJ,IAAMyI,GAAoB9P,EAAAA,EAAAA,QAAO,MACjC,GAA8CzH,EAAAA,EAAAA,UAAS8W,IAAvD,eAAOU,EAAP,KAAwBF,EAAxB,KAGMG,GAAgBlK,EAAAA,EAAAA,KAAS,SAAC7M,GAAO,IAAD,MAC9BgX,EAAe,UAAGhX,EAAEC,cAAL,iBAAG,EAAUC,aAAb,aAAG,EAAiBiU,cAActI,OACvD,IAAKmL,EACH,OAAOJ,EAAmBR,IAE5BQ,EAAkB,UAChBR,UADgB,aAChB,EAAsB3Z,QACpB,SAACgO,GAAD,eACM,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAM3J,YAAN,eAAYqT,cAAcC,SAAS4C,MAAnC,OACAvM,QADA,IACAA,GADA,UACAA,EAAMnE,aADN,aACA,EAAa6N,cAAcC,SAAS4C,UAGzC,KAMH,OACE,iBACEzW,UAAU,qCACVzC,MAAO,CAAEuN,OAAQ,QAFnB,WAKE,cAAG9K,UAAU,4BAA4BzC,MAAO,CAAEoG,UAAW,OAA7D,0BACMsL,QADN,IACMA,OADN,EACMA,EAAc9Q,OADpB,mBACgD,OAAZ8Q,QAAY,IAAZA,OAAA,EAAAA,EAAc9Q,QAAS,EAAI,IAAM,OAGrE,oBAAS6B,UAAU,aAAazC,MAAO,CAAEoG,UAAW,SAApD,UACE,SAAC,GAAD,CACE0F,IAAKiN,EACLrL,cAAeuL,EACflW,WAAW,EACXI,YAAY,gBACZwK,WAAY,kBAAMmL,EAAmBR,UAIzC,oBAAS7V,UAAU,+CAAnB,UACkB,OAAfuW,QAAe,IAAfA,OAAA,EAAAA,EAAiBpY,QAAS,GACzB,gBAGEd,QAAS,SAACoC,GAAO,IAAD,IACRgN,EAAM,UAAGhN,EAAEC,cAAL,iBAAG,EAAUuN,eAAb,aAAG,EAAmB/C,KAClC,GAAIuC,EAAQ,CAEV,IAAgB,OAAZ9O,QAAY,IAAZA,OAAA,EAAAA,EAAcY,OAAQkO,EAAQ,OAElCsJ,EAAgB,OACdQ,QADc,IACdA,OADc,EACdA,EAAiBjG,MAAK,SAACV,GAAD,OAAQ,OAADA,QAAC,IAADA,OAAA,EAAAA,EAAGrR,OAAQkO,MApC1B,SAAChN,GAC7BwW,EAA2BxW,EAAEC,QAqCjBgX,CAAsBjX,KAZ5B,SAgBG8W,EAAgBnY,KAAI,SAACgY,GAAD,OACnB,SAAC,GAAD,CAEElM,KAAMkM,EACNjM,eAAgB,CAAC,GAAI,KAFhBiM,EAAO7X,WAOlB,iBAAMyB,UAAU,8DAAhB,iCAKJ,SAAC,GAAD,CACEvC,OAAQuY,EACRtY,UAAWuY,EACXrB,cAAeA,EACfhL,qBAAsBA,EACtB0F,mBAAoBA,EACpB3J,mBAAoBA,KAGtB,SAAC,GAAD,CACEf,uBAAwBvC,EACxBwC,qBAAsBvC,QCtFxBiD,GAAgBC,EAXF,CAClBjJ,MAAO,QAEa,CACpBkJ,SAAU,IACVlJ,MAAO,OACP4F,WAAY,QACZ3F,SAAU,GACVkJ,OAAQ,iBACRtJ,gBAAiB,SAyrBnB,GArrBsB,SAAC,GAAkB,IAAhBua,EAAe,EAAfA,SACvB,GAA6C/Y,EAAAA,EAAAA,IAAYC,EAAAA,IAAjDF,EAAR,EAAQA,aAAciQ,EAAtB,EAAsBA,QAASC,EAA/B,EAA+BA,UACvBlI,GAAuB/H,EAAAA,EAAAA,IAAYgI,EAAAA,IAAnCD,mBACR,GAAsC/H,EAAAA,EAAAA,IAAYa,EAAAA,IAA1CC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,iBACX6D,GAAWzE,EAAAA,EAAAA,MACTkH,EACNU,EADMV,mBAAoBC,EAC1BS,EAD0BT,mBAAoBE,EAC9CO,EAD8CP,iBAG1CwR,EAAO,OAAG/I,QAAH,IAAGA,OAAH,EAAGA,EAAWM,eACrB0I,EAAS,OAAGhJ,QAAH,IAAGA,OAAH,EAAGA,EAAWE,SACvBkB,EAAY,OAAGpB,QAAH,IAAGA,OAAH,EAAGA,EAAWO,MAC1B0H,EAAM,OAAGjI,QAAH,IAAGA,OAAH,EAAGA,EAAWiH,YAE1B,GAAkC/V,EAAAA,EAAAA,WAAS,GAA3C,eAAOsH,EAAP,KAAkBC,EAAlB,KACA,GAA0DvH,EAAAA,EAAAA,UAAS,MAAnE,eAAOiP,EAAP,KAA8BC,EAA9B,KACM6I,EAAgB,OAAGhB,QAAH,IAAGA,OAAH,EAAGA,EAAQf,MAC/B,SAACC,GAAD,OAAgB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOzW,QAAP,OAAeZ,QAAf,IAAeA,OAAf,EAAeA,EAAcY,QAE1C,GAAkDQ,EAAAA,EAAAA,WAAS,GAA3D,eAAOsD,EAAP,KAA0BuH,EAA1B,KACA,GAA8C7K,EAAAA,EAAAA,WAAS,GAAvD,eAAOuD,EAAP,KAAwBgN,EAAxB,KACM/I,GAAWC,EAAAA,EAAAA,QAAO,MAClBuQ,GAAe,4BAEf5B,GAAa,SAAC9P,GAClB7C,GAAS+L,EAAAA,EAAAA,IAAalJ,IACtB7C,GAAS6L,EAAAA,EAAAA,KAAeT,IACxBpL,GAASc,EAAAA,EAAAA,IAAgB+B,KAIrB4B,GAAiB,SAACxH,GACR,MAAVA,EAAEK,KAAyB,UAAVL,EAAEK,KACrBL,EAAEC,OAAOwH,SAKT8P,GAAc,GACZnW,GAAiB,SAAC6H,EAAcvD,GACpC6R,GAActO,EACd,OAAIvD,QAAJ,IAAIA,GAAAA,EAASnE,mBAAmBiW,GAAgB,CAAEC,iBAAiB,KAG/DD,GAAe,mCAAG,WAAO9R,GAAP,kFACjB6R,GADiB,yCAEbxU,GACL+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,gCACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,iBAPM,cAWtBvB,GAASoF,EAAAA,EAAAA,KAAW,IAEdC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,cAAYpK,QAAZ,IAAYA,OAAZ,EAAYA,EAAcqK,SAhBrB,kBAqBGK,EAAAA,EAAAA,IACrB,8BACA,CAAEwO,UAAWG,GAAahD,OAAM,OAAEnG,QAAF,IAAEA,OAAF,EAAEA,EAAWtP,KAC7CsJ,GAxBkB,mBAqBZxC,EArBY,EAqBZA,KAMR7C,GACE+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,kCACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,mBAIdvB,GAASoF,EAAAA,EAAAA,KAAW,IACpBuN,GAAW9P,GArCS,OAsChBF,QAtCgB,IAsChBA,IAAAA,EAAS+R,gBAtCO,iBAsCU9R,IAtCV,iDAuCR,kBAvCQ,0DAyCpB5C,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,6BACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,gBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IAlDA,0DAAH,sDAuDfT,GAAoB,mCAAG,WAAO1H,GAAP,sFACrB2H,EAAQ3H,EAAEC,OAAO2H,MAAM,GADF,qDAItBC,EAAAA,EAAAA,IAAYF,EAAM7G,MAJI,yCAKlBiC,GACL+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,qBACP2E,QAAS,sDACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,oBAXW,YAgBvBqD,EAAM3C,MAAQiD,EAAAA,IAhBS,uBAiBzBnB,EAASoB,QAAQhI,MAAQ,GAjBA,kBAkBlB6C,GACL+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,2CACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,iBAvBW,cA2B3BvB,GAASoF,EAAAA,EAAAA,KAAW,IACpBtB,GAAa,GAEPuB,EAAS,CACbC,QAAS,CACP,eAAgB,sBAChBC,cAAc,UAAD,OAAYpK,EAAaqK,UAIpCC,EAAW,IAAIC,UACZC,OAAO,aAAcf,GAC9Ba,EAASE,OAAO,YAAayO,GAC7B3O,EAASE,OAAO,gBAAhB,OAAiC0F,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAWzF,eAC5CH,EAASE,OAAO,SAAhB,OAA0B0F,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAWtP,KAzCV,oBA2CF8J,EAAAA,EAAAA,IACrB,4BACAJ,EACAJ,GA9CuB,iBA2CjBxC,EA3CiB,EA2CjBA,KAMR7C,GACE+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,gCACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,mBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IACpBtB,GAAa,GACb6O,GAAW9P,GA3Dc,mDA6DzB7C,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,2BACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,gBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IACpBtB,GAAa,GAvEY,2DAAH,sDA2EpB6Q,GAAa,mCAAG,mGACpB3U,GAASoF,EAAAA,EAAAA,KAAW,IAEdC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYpK,EAAaqK,SANtB,kBAWKK,EAAAA,EAAAA,IAAA,4BAErB,CACE+O,UAAWR,EACXxO,cAAa,OAAEyF,QAAF,IAAEA,OAAF,EAAEA,EAAWzF,cAC1B4L,OAAM,OAAEnG,QAAF,IAAEA,OAAF,EAAEA,EAAWtP,KAErBsJ,GAlBgB,uBAWVxC,EAXU,EAWVA,KAUR7C,GACE+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,gCACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,mBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IACpBuN,GAAW9P,GA9BO,kBA+BX,kBA/BW,kCAiClB7C,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,2BACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,gBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IA1CF,0DAAH,qDA8CbyP,GAAS,mCAAG,+FACa,KAAb,OAAZpI,QAAY,IAAZA,OAAA,EAAAA,EAAc9Q,QADF,yCAEPmZ,MAFO,cAKhB9U,GAASoF,EAAAA,EAAAA,KAAW,IAEdC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYpK,EAAaqK,SAV1B,kBAeSK,EAAAA,EAAAA,IAAA,yBAErB,CACEmN,gBAAe,OAAE7X,QAAF,IAAEA,OAAF,EAAEA,EAAcY,IAC/BmW,aAAcoC,EACd9C,OAAM,OAAEnG,QAAF,IAAEA,OAAF,EAAEA,EAAWtP,KAErBsJ,GAtBY,gBAeNxC,EAfM,EAeNA,KAUR7C,GACE+E,EAAAA,GAAAA,IAAa,CACXC,QAAQ,gBAAD,cAAkBnC,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAM0I,SAAxB,WACP7N,KAAM,OACNuH,SAAU,IACV1D,SAAU,mBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IACpBuN,GAAW,MACX3S,GAASW,EAAAA,GAAAA,OAnCK,yDAqCdX,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,sBACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,mBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IA9CN,kBA+CP,kBA/CO,0DAAH,qDAmDT0P,GAAW,mCAAG,mGAClB9U,GAASoF,EAAAA,EAAAA,KAAW,IAEdC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYpK,EAAaqK,SANxB,SAWVuP,EAAqBlP,EAAAA,EAAAA,IAAA,yBAEzB,CACE+O,UAAS,OAAEvJ,QAAF,IAAEA,OAAF,EAAEA,EAAWM,eACtB/F,cAAa,OAAEyF,QAAF,IAAEA,OAAF,EAAEA,EAAWzF,cAC1B4L,OAAM,OAAEnG,QAAF,IAAEA,OAAF,EAAEA,EAAWtP,KAErBsJ,GAEI2P,EAAgC,OAARb,QAAQ,IAARA,GAAAA,EAAUxY,OACpCkK,EAAAA,EAAAA,IAAA,sBAEE,CACEoP,WAAY3Q,KAAKC,UAAL,OAAe4P,QAAf,IAAeA,OAAf,EAAeA,EAAUvY,KAAI,SAACwR,GAAD,OAAOA,EAAErR,QAClDmZ,sBAAsB,GAExB7P,GAEF8P,QAAQC,UA7BI,SAgCVD,QAAQE,IAAI,CAACN,EAAoBC,IAhCvB,OAkChBhV,GACE+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,6BACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,mBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IACpBuN,GAAW,MACX3S,GAASW,EAAAA,GAAAA,OA5CO,kDA8ChBX,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,wBACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,gBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IAvDJ,0DAAH,qDAuIbwH,GAAe,GACbT,GAAkB,SAACmJ,GACvB1I,GAAe0I,GAGXC,GAAiB,mCAAG,iGACnBjB,EADmB,yCAEftU,GACL+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,sCACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,iBAPQ,oBAWnBqL,UAXmB,OAWnB,EAAcjR,OAXK,yCAYfqE,GACL+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,wCACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,iBAjBQ,cAqBxBvB,GAASoF,EAAAA,EAAAA,KAAW,IAEdC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,cAAYpK,QAAZ,IAAYA,OAAZ,EAAYA,EAAcqK,SA1BnB,kBA+BCK,EAAAA,EAAAA,KACrB,sBACA,CACE2P,eAAgBlR,KAAKC,UAAUqI,IAC/B4E,OAAM,OAAEnG,QAAF,IAAEA,OAAF,EAAEA,EAAWtP,KAErBsJ,GArCoB,uBA+BdxC,EA/Bc,EA+BdA,KASR7C,GACE+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,uCACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,mBAIdvB,GAASoF,EAAAA,EAAAA,KAAW,IACpBuN,GAAW9P,GAlDW,kBAmDf,kBAnDe,kCAqDtB7C,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,gCACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,gBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IA9DE,0DAAH,qDAsGvB,OACE,iBAAK5H,UAAU,qCAAf,UAEGtB,GAAW2H,GACV,iBAAKrG,UAAU,+DAAf,WACE,SAACwE,EAAA,EAAD,CACEC,KAAM,GACNlH,MAAO,CAAEgH,OAAQ,WAAYhI,MAAO,gBAEtC,iBAAMgB,MAAO,CAAEC,aAAc,QAAUwC,UAAU,gBAAjD,SACG,2BAIL,qBAASA,UAAU,4CAAnB,WACE,SAAC,GAAD,CAAe6C,MAAM,UAAUmG,UAAU,QAAQpH,OAAK,EAAtD,UACE,gBACE5B,UAAU,iFACVQ,GAAG,wBACHsI,IAAK8N,GAAW,UAChBrZ,MAAO,CAAEwD,MAAO,QAAS+J,OAAQ,SACjCzN,QAlCiB,SAACoC,GAAO,IAAD,EAClCmK,GAAqB,GACrB0F,GAAmB,GACnBrK,GAAmB,SAAC,GAAD,CAAeyN,MAAOjT,KACzCyF,EAAmB,CACjBrC,OAAO,UAAApD,EAAEC,cAAF,eAAUqJ,MAAO,iBA8BhBA,IAAK8N,OAIT,SAAC,GAAD,CAAehU,MAAM,gBAAgBmG,UAAU,QAAQpH,OAAK,EAA5D,UACE,cACEpB,GAAG,iBACHyI,SAAU,EACV7I,UAAW6G,GACXjH,UAAS,qDAAgDrB,EAAhD,gFACTtB,QApCgB,SAACoC,GAC3BwO,EAAyBxO,EAAEC,SA8BnB,UAOE,SAACwJ,EAAA,EAAD,CAAMlJ,UAAU,yBAIpB,SAAC,EAAD,CACEvC,OAAQuQ,EACRtQ,UAAWuQ,EACXhN,iBAAkB,kBAAMsF,EAASoB,QAAQT,SACzChG,6BAnK2B,WACnC0I,GAAqB,GACrB0F,GAAmB,GACnBrK,GAAmB,qFACnBC,EAAmB,CACjBrC,MAAO,qBACPC,QAAS,KACTC,SAAU,MACVC,gBAAiB,cACjBC,OAAQkU,MA2JFhW,uBAAsB,OAACyV,QAAD,IAACA,GAAAA,EAASzN,SAAS,wBAE3C,kBACEjJ,KAAK,OACLkJ,OAAO,UACPjJ,SAAUgH,GACV5G,KAAK,aACLC,GAAG,wBACH6I,IAAK9C,EACLvG,UAAS,SACTS,SAAU/B,QAMhB,oBAASsB,UAAS,+BAAlB,UACE,iBAAKA,UAAU,cAAczC,MAAO,CAAEoG,UAAW,SAAjD,WACE,SAAC,GAAD,CACEd,OAAgB,OAATgU,QAAS,IAATA,OAAA,EAAAA,EAAW1Y,QAAS,GAAK0Y,EAAY,GAC5C7N,UAAU,MACVpH,OAAK,EAHP,UAKE,gBACE5B,UAAU,+BACVzC,MAAO,CAAEf,SAAU,OAAQyb,WAAY,QAFzC,UAIGpU,EAAAA,EAAAA,IAAegT,EAAW,GAAI,SAGnC,SAAC,GAAD,CAAehU,MAAM,kBAAkBmG,UAAU,MAAMpH,OAAK,EAA5D,UACE,SAACkC,EAAA,EAAD,CACEmF,SAAU,EACV7I,UAAW6G,GACX5J,QA1NoB,WAC9BuM,GAAqB,GACrB0F,GAAmB,GACnBrK,GACE,SAAC,EAAD,CACErE,aAAY,OAAEiN,QAAF,IAAEA,OAAF,EAAEA,EAAWE,SACzBlN,eAAgBA,GAChBH,YAAY,0BAGhBwE,EAAmB,CACjBrC,MAAO,kBACPC,QAAS,SACTC,SAAU,OACVC,gBAAiB,YACjBC,OAAQgU,MA4MAlb,GAAI,CACFgI,SAAU,WACVC,OAAQ,EACRC,IAAK,EACL,SAAU,CACR7H,gBAAiB,cATvB,UAaE,SAAC8M,EAAA,EAAD,CAAMlJ,UAAU,yBAOxB,oBACEA,UAAS,+BACTzC,MAAO,CAAEoG,UAAW,QAASxH,aAAc,QAF7C,kCAIc8S,QAJd,IAIcA,OAJd,EAIcA,EAAc9Q,OAJ5B,mBAKgB,OAAZ8Q,QAAY,IAAZA,OAAA,EAAAA,EAAc9Q,QAAS,EAAI,IAAM,OAKrC,oBAAS6B,UAAS,+BAAlB,UACE,oBACEA,UAAS,UAAK+W,GAAL,wBACT1Z,QAjIsB,WAC5BuM,GAAqB,GACrB0F,GAAmB,GACnBrK,GAAmB,SAAC,GAAD,KACnBC,EAAmB,CACjBrC,MAAM,MA0HJ,WAIE,SAAC6S,GAAA,EAAD,CACE1V,UAAU,aACVzC,MAAO,CAAEoH,WAAY,YAEvB,iBAAM3E,UAAU,OAAhB,+BAKH8W,IACC,oBAAS9W,UAAS,+BAAlB,UACE,oBACEA,UAAS,UAAK+W,GAAL,wBACT1Z,QA7JmB,WAC3BuM,GAAqB,GACrB0F,GAAmB,GACnBrK,GAAmB,SAAC,GAAD,CAAmB0J,gBAAiBA,MACvDzJ,EAAmB,CACjBrC,MAAO,oBACPC,QAAS,SACTC,SAAU,MACVC,gBAAiB,YACjBC,OAAQ8U,MAkJJ,WAIE,SAACG,GAAA,EAAD,CAAWlY,UAAU,aAAazC,MAAO,CAAEoH,WAAY,YACvD,iBAAM3E,UAAU,OAAhB,+BAMN,oBAASA,UAAS,+BAAlB,UACE,oBACEA,UAAS,UAAK+W,GAAL,uBACT1Z,QAAS,WACP,GACEyZ,GACmB,KAAb,OAANhB,QAAM,IAANA,OAAA,EAAAA,EAAQ3X,SACiB,KAAb,OAAZ8Q,QAAY,IAAZA,OAAA,EAAAA,EAAc9Q,QAEd,OAAOqE,GACL+E,EAAAA,GAAAA,IAAa,CACXC,QAAQ,sLAGRtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,gBAxUxB6F,GAAqB,GACrB0F,GAAmB,GACnBrK,GACE,8BAC4B,KAAb,OAAZgK,QAAY,IAAZA,OAAA,EAAAA,EAAc9Q,QAAd,qOAOL+G,EAAmB,CACjBrC,MAAO,aACPC,QAAS,KACTC,SAAU,MACVC,gBAAiB,aACjBC,OAAQoU,MAySN,WAsBE,SAACpN,EAAA,EAAD,CAAQjK,UAAU,aAAazC,MAAO,CAAEoH,WAAY,YACpD,iBAAM3E,UAAU,OAAhB,6BAKH8W,IACC,oBAAS9W,UAAS,+BAAlB,UACE,oBACEA,UAAS,UAAK+W,GAAL,uBACT1Z,QArU2B,WACnCuM,GAAqB,GACrB0F,GAAmB,GACnBrK,GACE,0MAMFC,EAAmB,CACjBrC,MAAO,eACPC,QAAS,KACTC,SAAU,MACVC,gBAAiB,cACjBC,OAAQqU,MAoTJ,WAIE,SAAChW,EAAA,EAAD,CAAQtB,UAAU,aAAazC,MAAO,CAAEoH,WAAY,YACpD,iBAAM3E,UAAU,OAAhB,gCAMN,SAAC,GAAD,CACE4E,uBAAwBvC,EACxBwC,qBAAsBvC,QC9rB9B,GA7BoB,SAAC,GAAe,IAAbkI,EAAY,EAAZA,MACfC,EAAgB,CACpBrO,gBAAiB,QAEnB,OACE,+BACG,QAAIsO,MAAMF,IAAQpM,KAAI,SAACqB,EAAGkL,GAAJ,OACrB,iBAEE3K,UAAS,oDACP2K,EAAI,EAAI,QAAU,MADX,cAFX,WAME,SAACC,GAAA,EAAD,CACEC,QAAQ,cACR7K,UAAS,2BACTzC,MAAOkN,KAET,SAACG,GAAA,EAAD,CACEC,QAAQ,cACR7K,UAAS,uBACTzC,MAAOkN,MAdX,oBACoBE,U,4ECiP5B,GAtOsB,SAAC,GAMhB,IAAD,IALJwN,EAKI,EALJA,QACAC,EAII,EAJJA,kBACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,UACAC,EACI,EADJA,SAEMC,EAAa,UACjBF,EAAY,oDAAsD,IAE9DG,EAAU,UAAMH,EAAY,OAAS,QAErC/G,EAAsCgH,EAAtChH,QAASmH,EAA6BH,EAA7BG,QAASjH,EAAoB8G,EAApB9G,UAAWhN,EAAS8T,EAAT9T,KAC7B+M,EAAeC,EAAUxB,MAAM,QAAU,GAC/CwB,EAAYD,EAAa,IAAMC,EAC/B,IAAMkH,EAAW,UAAGnH,EAAa,UAAhB,aAAG,EAAiBqC,SAAS,KACxC+E,EAAgBD,EAAcnH,EAAa,GAAGvB,MAAM,OAAS,GAC7D4I,EAAgBD,EAAc,GAC9BE,GAAgBC,EAAAA,EAAAA,IAAkBH,EAAc,IAChDI,GAAaxS,EAAAA,EAAAA,QAAO,MAEtByS,EAAWL,EAAc,IAAMM,SAAS1H,EAAa,KAAO/M,GAAQ,GAEnEkU,IACHM,GAAWF,EAAAA,EAAAA,IAAkBE,IAG/B,IAAME,EAAoBf,IAAsBM,EAC1C9G,EACS,OAAbiH,QAAa,IAAbA,GAAAA,EAAe/G,WAAW,WAC1B,8BAA8BD,KAAKJ,GAC/B,QACa,OAAboH,QAAa,IAAbA,GAAAA,EAAe/G,WAAW,WAC1B,uBAAuBD,KAAKJ,GAC5B,QACA,kBAAkBI,KAAKJ,GACvB,WACA,kBAAkBI,KAAKJ,GACvB,MACA,wBAAwBI,KAAKJ,GAC7B,cACA,WAAWI,KAAKJ,GAChB,MADA,UAEAA,EAAU2H,UAAU3H,EAAU4H,YAAY,KAAO,UAFjD,aAEA,EAAqDC,cAErDC,GACJ,iBACE,gBAAeb,EACf1Y,UAAS,uBAAkBmZ,EAAoB,cAAgB,GAAtD,YACPb,IAAcH,EAAU,SAAW,IAErCtV,MAAOsW,EAAoB,iBAAmB,gBALhD,SAOGA,GACC,SAACK,GAAA,EAAD,KAEA,SAACC,GAAA,EAAD,CAAU,gBAAef,MAIzBgB,GACJ,kBAAM1Z,UAAS,UAAKsY,EAAY,OAAS,QAAzC,sBAEE,iBAAMzV,MAAO4O,EAAb,UAAyB5N,EAAAA,EAAAA,IAAe4N,EAAY,GAAI,GAAI,SAG1DkI,GACJ,gCACGD,GACD,gBACE1Z,UAAS,UAAKsY,EAAY,YAAc,IACxC/a,MAAO,CAAEC,aAAc8a,GAAa,GAAK,GAF3C,mBAIM1G,EAJN,cAIoBqH,QAIlBW,EACJvB,IAAmBK,EAAU,YAAc,UAEvCmB,EACJxB,IAAmBK,EAAU,UAAY,YAE3C,OACE,8BACU,OAAPnH,QAAO,IAAPA,GAAAA,EAASO,WAvFKtD,gCAuFuBsL,EAAAA,EAAAA,IAAiBrI,IACrD,iBAAMzR,UAAU,sCAAhB,UACE,gBACE8I,IAAKyI,EACLxI,IAAK0I,EACL5O,MAAO4O,EACP,gBAAeiH,EACf1Y,UAAS,mCAIb,gBACEA,UAAU,UACVzC,MAAO,CAAEwD,MAAOuX,EAAY,8BAAgC,QAF9D,SAIgB,QAAb1G,GACC,iBAAK5R,UAAS,UAAKwY,EAAL,+BAAd,WACE,4BACE,SAACjG,GAAA,EAAD,CAAcvS,UAAWyY,IACxBc,KAEFI,KAEY,gBAAb/H,GACF,iBAAK5R,UAAS,UAAKwY,EAAL,iCAAd,WACE,4BACE,SAAChG,GAAA,EAAD,CAAaxS,UAAWyY,IACvBc,KAEFI,KAEY,QAAb/H,GACF,iBAAK5R,UAAS,UAAKwY,EAAL,+BAAd,WACE,4BACE,SAAChG,GAAA,EAAD,CAAaxS,UAAWyY,IACvBc,KAEFI,KAEY,aAAb/H,GACF,iBAAK5R,UAAS,UAAKwY,EAAL,qBAAd,WACE,4BACE,SAAChG,GAAA,EAAD,CAAaxS,UAAWyY,IACvBc,KAEFI,KAEY,UAAb/H,GACF,iBAAK5R,UAAS,UAAKwY,EAAL,sBAAd,WACE,2BACGe,EADH,WAEOT,MAENY,GACD,iBACE,aAAYhB,EACZ,kBAAiBjH,EACjB5O,MAAM,gBACN7C,UAAU,4BAJZ,WAME,SAAC+Z,GAAA,EAAD,CACE,aAAYrB,EACZ,kBAAiBjH,EACjBzR,UAAS,oBAAe4Z,GACxBrc,MAAO,CAAEf,SAAU,OAErB,SAACgR,GAAA,EAAD,CACEnE,IAAK2P,EACLhZ,UAAS,4BAAuB6Z,GAChCtc,MAAO,CACLC,aAAc,EACdsN,OAAQ,GACRvO,MAAO,SAETkR,cAAeA,MAEjB,kBACE,aAAYiL,EACZ,kBAAiBjH,EACjBzR,UAAU,yCAHZ,WAKE,SAACga,GAAA,EAAD,CAAU,aAAYtB,EAAS,kBAAiBjH,IALlD,WAMewH,WAIJ,UAAbrH,GACF,iBACE5R,UAAS,UAAKwY,EAAL,4CADX,WAGE,2BACGe,EADH,WAEOT,MAENY,GACD,iBACE,aAAYhB,EACZ,kBAAiBjH,EACjBzR,UAAU,iCACV6C,MAAM,gBAJR,WAME,SAACoX,GAAA,EAAD,CACE,aAAYvB,EACZ,kBAAiBjH,EACjBzR,UAAS,oBAAe4Z,MAE1B,SAACpM,GAAA,EAAD,CACEnE,IAAK2P,EACLhZ,UAAS,4BAAuB6Z,GAChCtc,MAAO,CACLC,aAAc,EACdsN,OAAQ,GACRvO,MAAO,SAETkR,cAAeA,MAEjB,kBACE,aAAYiL,EACZ,kBAAiBjH,EACjBzR,UAAU,yCAHZ,WAKE,SAACka,GAAA,EAAD,CACE,aAAYxB,EACZ,kBAAiBjH,EACjBlU,MAAO,CAAEf,SAAU,MARvB,OAUSyc,YAKb,iBAAKjZ,UAAS,UAAKwY,EAAL,sBAAd,WACE,4BACE,SAAChG,GAAA,EAAD,CAAaxS,UAAWyY,IACvBc,KAEFI,UC1NTpU,GAAgBC,EAXF,CAClBjJ,MAAO,WAEa,CACpBkJ,SAAU,IACVlJ,MAAO,OACP4F,WAAY,QACZ3F,SAAU,GACVL,aAAc,EACdC,gBAAiB,YAuHnB,GAnHgB,SAAC,GAMV,IALLgc,EAKI,EALJA,kBACAC,EAII,EAJJA,eACAF,EAGI,EAHJA,QACAgC,EAEI,EAFJA,QACAC,EACI,EADJA,QAEA,GAAuCxc,EAAAA,EAAAA,IAAYC,EAAAA,IAA3CF,EAAR,EAAQA,aAAc8S,EAAtB,EAAsBA,aAChB4J,GAAgB7T,EAAAA,EAAAA,QAAO,MAC7B,SAAyC2T,QAAzC,IAAyCA,OAAzC,EAAyCA,EAASlI,OAA1C1T,EAAR,EAAQA,IAAKuH,EAAb,EAAaA,WAAYvF,EAAzB,EAAyBA,KAAMwF,EAA/B,EAA+BA,MACzB0O,EAAiBlW,IAAQZ,EAAaY,IACtC+b,EAAU,UAAMxU,EAAN,cAAsBvF,EAAtB,cAAgCwF,GAC1CwU,EAAY9F,EAAc,OAAG0F,QAAH,IAAGA,OAAH,EAAGA,EAAS5b,IAAM,KAC5Cic,EAAejc,KAAG,OAAK6b,QAAL,IAAKA,OAAL,EAAKA,EAASnI,OAAO1T,KACvCkc,EAAc,IAAIvJ,KAAKiJ,EAAQhJ,WAC/BuJ,EAAc,IAAIxJ,KAAJ,OAASkJ,QAAT,IAASA,OAAT,EAASA,EAASjJ,WAChCwJ,GAAa3I,EAAAA,EAAAA,IAAayI,MAAiBzI,EAAAA,EAAAA,IAAa0I,GACxDE,GACHnG,IAAD,OACAhE,QADA,IACAA,OADA,EACAA,EAAcE,gBACZ6J,GAAgBG,GAOpB,OALA/a,EAAAA,EAAAA,YAAU,WACR,OAAIya,QAAJ,IAAIA,GAAAA,EAAe1S,UACjB0S,EAAc1S,QAAQkT,UAAtB,OAAkCV,QAAlC,IAAkCA,OAAlC,EAAkCA,EAASpJ,WAC5C,KAGD,iCACE,qBACE/Q,UAAS,wCACPyU,EAAiB,MAAQ,SAE3BlX,MAAO,CAAEoG,UAAW6W,EAAe,MAAQ,QAJ7C,UAMGI,GACC,SAAC,GAAD,CAAe/X,MAAK,eAAkBmG,UAAU,YAAYpH,OAAK,EAAjE,UACE,gBACEkH,IAAKhD,EACLiD,IAAKxI,EACL,cAAa+Z,EACbta,UAAU,2CAIF,OAAZyQ,QAAY,IAAZA,OAAA,EAAAA,EAAcE,eAAe,iBAAMpT,MAAO,CAAEwD,MAAO,WAErD,iBACEf,UAAS,qFACMyU,EAAiB,UAAY,gBAC5C,WAAU8F,EAHZ,UAKGK,IACC,iBAAM,cAAaN,EAAYta,UAAU,oBAAzC,SACGO,IAGJkU,GAAkB0D,IACjB,iBACE,WAAUoC,EACV1X,MAAM,sBACN7C,UAAS,qFAHX,UAME,SAAC2U,GAAA,EAAD,CACE,WAAU4F,EACVhd,MAAO,CAAEf,SAAU,IACnBwD,UAAU,qCAIR,OAAPma,QAAO,IAAPA,OAAA,EAAAA,EAAS5I,WACR,SAAC,GAAD,CACE4G,QAASA,EACTC,kBAAmBA,EACnBC,eAAgBA,EAChBE,SAAU,CACRhH,QAAS4I,EAAQ5I,QACjBmH,QAASyB,EAAQzB,QACjBjH,UAAW0I,EAAQ1I,cAIzB,iBAAK,WAAU8I,EAAWva,UAAU,oBAApC,WACU,OAAPma,QAAO,IAAPA,OAAA,EAAAA,EAASpJ,WAAW,iBAAM1H,IAAKgR,KAChC,kBACE,WAAUE,EACVva,UAAU,8DAFZ,WAIG+R,EAAAA,EAAAA,IAAgB0I,GAChBhG,IACC,8BACG0D,GACC,SAACjG,GAAA,EAAD,CAASlS,UAAU,yBAEnB,SAACwE,EAAA,EAAD,CACEC,KAAM,GACNzE,UAAU,sCASzB2a,IACC,gBAAK3a,UAAS,gDAAd,UACGqR,EAAAA,EAAAA,IAAgBoJ,SCpG3B,GA7BuB,SAAC,GAKjB,IAJLhd,EAII,EAJJA,OACAC,EAGI,EAHJA,UACAod,EAEI,EAFJA,kBACAC,EACI,EADJA,2BAEA,OACE,UAAC,EAAD,CACEpe,WAAYc,EACZb,cAAec,EACfb,gBAAiB,CAAEoB,SAAU,MAAOC,WAAY,QAChDpB,aAAc,CAAEmB,SAAU,SAAUC,WAAY,SAJlD,WAME,UAACI,EAAA,EAAD,CAAUvC,GAAIO,EAAee,QAASyd,EAAtC,WACE,SAAC1Z,EAAA,EAAD,CAAcrF,GAAIU,EAAlB,UACE,SAACyM,EAAA,EAAD,OAEF,SAAC,EAAD,+BAEF,UAAC5K,EAAA,EAAD,CAAUvC,GAAIO,EAAee,QAAS0d,EAAtC,WACE,SAAC3Z,EAAA,EAAD,CAAcrF,GAAIU,EAAlB,UACE,SAAC6E,EAAA,EAAD,OAEF,SAAC,EAAD,oCCvBF0Z,GACJ,6DACIC,GAAmB,CACvB9e,aAAc,EACd4E,MAAO,2BACP9E,UAAW,KAoGb,GAhG0B,SAAC,GAIpB,IAHLif,EAGI,EAHJA,eACAC,EAEI,EAFJA,kBACA5V,EACI,EADJA,cAEA,EAGI2V,EAFFE,WAAc7a,EADhB,EACgBA,KAAML,EADtB,EACsBA,KAAMuE,EAD5B,EAC4BA,KAC1B4W,EACEH,EADFG,qBAGIC,EAAepb,EAAK4R,WAAW,gBAAkB,gBAAkBvR,EAEzE,OACE,iBACEP,UAAU,uGACVzC,MAAO,CAAEpB,aAAc,IAFzB,WAKE,SAACoJ,EAAD,CAAe1C,MAAM,qBAAqBmG,UAAU,eAAepH,OAAK,EAAxE,UACE,SAACkC,EAAA,EAAD,CACEzG,QAAS8d,EACTpf,GAAI,CACFgI,SAAU,WACVwX,KAAM,GACNtX,IAAK,GACL1H,MAAO,UACP,SAAU,CACRH,gBAAiB,cARvB,UAYE,SAAC8H,EAAA,EAAD,SAIJ,SAACqB,EAAD,CACE1C,OAAmB,OAAZyY,QAAY,IAAZA,OAAA,EAAAA,EAAcnd,QAAS,GAAKmd,EAAe,GAClDtS,UAAU,MACVpH,OAAK,EAHP,UAKE,iBACE5B,UAAS,YACTzC,MAAO,CAAEhB,MAAO,YAAaC,SAAU,GAAIgf,OAAQ,GAFrD,UAIG3X,EAAAA,EAAAA,IAAeyX,GAAgB,gBAAiB,GAAI,SAGzD,8BACO,OAAJpb,QAAI,IAAJA,GAAAA,EAAM4R,WAAW,WAChB,gBAAK9R,UAAS,UAAKgb,IAAnB,UACE,gBACEzd,MAAO0d,GACPnS,IAAKuS,GAtDK7M,sCAuDVzF,IAAI,oBAGF,OAAJ7I,QAAI,IAAJA,GAAAA,EAAM4R,WAAW,WACnB,gBAAK9R,UAAS,UAAKgb,IAAsBzd,MAAO,CAAEwD,MAAO,OAAzD,UACE,kBACE+H,IAAKuS,GAAwB,GAC7BvI,UAAQ,EACRD,UAAQ,EACRtV,MAAO0d,GAJT,SAMG1a,MAGC,OAAJL,QAAI,IAAJA,GAAAA,EAAM4R,WAAW,WACnB,gBAAK9R,UAAS,UAAKgb,IAAnB,UACE,kBACElS,IAAKuS,GAAwB,GAC7BvI,UAAQ,EACRD,UAAQ,EACRtV,MAAO0d,GAJT,SAMG1a,OAIL,gBAAKP,UAAS,UAAKgb,IAAnB,UACE,SAAC,GAAD,CACE1C,WAAW,EACXC,SAAU,CACRhH,QAAS8J,EACT3C,QAAS,GACTjH,UAAWlR,EACXkE,KAAAA,aCjDVgU,GAAa,CACjBlU,OAAQ,UACRmH,QAAS,MACTnP,MAAO,UACP,SAAU,CACRH,gBAAiB,cAIfmJ,GAAgBC,EAnBF,CAClBjJ,MAAO,QAEa,CACpBkJ,SAAU,IACVlJ,MAAO,OACP4F,WAAY,QACZ3F,SAAU,GACVJ,gBAAiB,SAiwBnB,GAnvBqB,SAAC,GAMf,IAAD,QALJ4W,EAKI,EALJA,YACAyI,EAII,EAJJA,eACAC,EAGI,EAHJA,UACA9P,EAEI,EAFJA,aACArC,EACI,EADJA,cAEMoS,GAAcnV,EAAAA,EAAAA,QAAO,MAC3B,GAMI5I,EAAAA,EAAAA,IAAYC,EAAAA,IALdF,EADF,EACEA,aACA8S,EAFF,EAEEA,aACA7C,EAHF,EAGEA,QACAT,EAJF,EAIEA,aACAyO,EALF,EAKEA,kBAEMjd,GAAqBf,EAAAA,EAAAA,IAAYa,EAAAA,IAAjCE,iBACF6D,GAAWzE,EAAAA,EAAAA,MACjB,GAA8BgB,EAAAA,EAAAA,WAAS,GAAvC,eAAO8c,EAAP,KAAgBC,EAAhB,KACA,GAA0C/c,EAAAA,EAAAA,WAAS,GAAnD,eAAOgd,EAAP,KAAsBC,EAAtB,KACA,GAAwCjd,EAAAA,EAAAA,WAAS,GAAjD,eAAOkd,EAAP,KAAqBC,EAArB,KACA,GAAgCnd,EAAAA,EAAAA,UAAS,IAAzC,eAAO4X,EAAP,KAAiBwF,EAAjB,KACA,GAAoCpd,EAAAA,EAAAA,UAAS,IAA7C,eAAOqd,EAAP,KAAmBC,EAAnB,KACA,GAA4Ctd,EAAAA,EAAAA,UAAS,CACnDqc,WAAY,KACZC,qBAAsB,KAFxB,gBAAOH,GAAP,MAAuBoB,GAAvB,MAKMC,IAAgB/V,EAAAA,EAAAA,QAAO,MACvBgW,IAAehW,EAAAA,EAAAA,QAAO,MACtBiW,IAAajW,EAAAA,EAAAA,QAAO,MAC1B,IAAkDzH,EAAAA,EAAAA,UAAS,IAA3D,iBAAOqZ,GAAP,MAA0BsE,GAA1B,MACA,IAA4C3d,EAAAA,EAAAA,UAAS,IAArD,iBAAOsZ,GAAP,MAAuBsE,GAAvB,MACA,IAAwD5d,EAAAA,EAAAA,UAAS,MAAjE,iBAAO6d,GAAP,MAA6BC,GAA7B,MAEM9O,GAAuB,OAAZ0C,QAAY,IAAZA,GAAAA,EAAcE,YAAd,OACbF,QADa,IACbA,OADa,EACbA,EAAc1C,SADD,WAEb0F,EAAAA,EAAAA,IAAwB9V,EAAD,OAAe8S,QAAf,IAAeA,OAAf,EAAeA,EAAcrC,cAFvC,aAEb,EAA4D7N,KAE1Duc,GAAgB,SAAC3X,GACrBmX,GAAkB,CAChBlB,WAAY,KACZC,qBAAsB,KAExBmB,GAAa7U,QAAQhI,MAAQ,GAC7Buc,GAAgB,GAChB,OAAI/W,QAAJ,IAAIA,GAAAA,EAAS4X,wBACbf,GAAiB,GACjBS,GAAW9U,QAAQkT,UAAY,KAG3BmC,GAAY,WAChBvB,GAAe,GACfjZ,GAASc,EAAAA,EAAAA,IAAgB,OACzBwZ,MAGIG,GAAY,SAACnU,EAAKyP,GACtB,GAAKzP,GAAQyP,EAAb,CACA,IAAQ2E,EAAsB3E,EAAtB2E,SAAUC,EAAY5E,EAAZ4E,QAClB3a,GAASoH,EAAAA,GAAAA,KAAqB,IAC9BL,GACE,SAAC,GAAD,CACEoJ,SAAUwK,EAAUrU,EAAM,KAC1B8J,SAAWuK,EAAgB,KAANrU,KAGzBtG,GACEqH,EAAAA,GAAAA,IAAc,CACZlH,cAAc,EACdE,MAAOqa,GAAQ,UAAOC,EAAU,QAAU,QAA3B,YAGnBR,GAAkB,MAcdS,GAAS,mCAAG,WAAOC,EAAQlY,GAAf,wFACXkY,GAAWlY,EADA,wDAEhBwX,GAAkBU,GACVH,EAAsB/X,EAAtB+X,SAAUC,EAAYhY,EAAZgY,QACZtV,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYpK,EAAaqK,QAExCsV,aAAc,QARA,kBAYSjV,EAAAA,EAAAA,IAAA,6BAAgCgV,GAAUxV,GAZnD,gBAYNxC,EAZM,EAYNA,KAEFkY,EAAW9O,IAAIC,gBAAgB,IAAI8O,KAAK,CAACnY,KAC/C4X,GAAUM,EAAU,CAAEL,SAAAA,EAAUC,QAAAA,IAflB,kDAiBd3a,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,sBACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,mBAGd4Y,GAAkB,IA1BJ,0DAAH,wDA8BTc,GAAY,mCAAG,WAAOJ,GAAP,oFACdA,EADc,wDAEnBX,GAAqBW,GACrBvB,GAAW,GACLjU,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYpK,EAAaqK,QAExCsV,aAAc,QARG,kBAYMjV,EAAAA,EAAAA,IAAA,6BAAgCgV,GAAUxV,GAZhD,gBAYTxC,EAZS,EAYTA,MAEFqY,EAAOC,SAASC,cAAc,MAC/BC,KAAOpP,IAAIC,gBAAgB,IAAI8O,KAAK,CAACnY,KAC1CqY,EAAKI,aAAa,WAAYT,EAAOpN,MAAM,OAAO,IAAMoN,GACxDM,SAASI,KAAKC,YAAYN,GAC1BA,EAAKxW,QACLwW,EAAKO,SAELvB,GAAqB,IACrBZ,GAAW,GAtBM,kDAwBjBtZ,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,yBACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,mBAGd2Y,GAAqB,IACrBZ,GAAW,GAlCM,0DAAH,sDAsCZoC,GAAa,mCAAG,mGACpBzC,GAAe,GAET5T,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYpK,EAAaqK,SAJ/B,kBAQKK,EAAAA,EAAAA,IAAA,8BACLoI,QADK,IACLA,OADK,EACLA,EAAclS,KAC9BsJ,GAVgB,gBAQVxC,EARU,EAQVA,KAIR8W,EACE9W,EAAKjH,KAAI,SAAC+f,GAER,OADAA,EAAG,MAAW,EACPA,MAGX1C,GAAe,GACXC,GAAW9P,GAAa,GAC5BkQ,GAAW,GApBO,kDAsBlBtZ,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,0BACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,mBAGd0X,GAAe,GACXC,GAAW9P,GAAa,GAC5BkQ,GAAW,GAjCO,0DAAH,qDAqCbsC,GAAW,mCAAG,mHACblD,GAAeE,YAAc,UAACqB,GAAW9U,eAAZ,OAAC,EAAoBkT,UADrC,wDAGZwD,GAHY,kBAIbnD,IAJa,IAKhBnK,SAAS,UAAA0L,GAAW9U,eAAX,eAAoBkT,YAAa,KAEtCyD,IAAkBxE,EAAAA,EAAAA,IAAgB,UAACuE,EAAQjD,kBAAT,aAAC,EAAoB7a,MAEvDge,EAAS,CACbhgB,IAAK2S,KAAKsN,MACVvM,OAAQ,CACN1T,IAAG,OAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAcY,IACnBuH,WAAY,GACZvF,KAAM,GACNwF,MAAO,IAETwL,QAAO,OAAE8M,QAAF,IAAEA,OAAF,EAAEA,EAAShD,qBAClB3C,QAAS,GACTjH,WACS,OAAP4M,QAAO,IAAPA,GAAA,UAAAA,EAASjD,kBAAT,eAAqB7a,MAArB,UAES,OAAP8d,QAAO,IAAPA,GAAAA,EAASI,cAAT,aACUJ,EAAQI,eACdH,EAAc,cACR,UAAAD,EAAQjD,kBAAR,eAAoB3W,OAAQ,IAClC,IAERsM,QAAO,OAAEsN,QAAF,IAAEA,OAAF,EAAEA,EAAStN,QAClBI,WAAW,IAAID,MAAOwN,cACtBC,MAAM,GAERxC,EAAY,CAACoC,GAAF,gBAAa5H,KACxBmG,KACAhB,GAAW,GACLjU,EAAS,CACbC,QAAS,CACP,eAAgB,sBAChBC,cAAc,UAAD,OAAYpK,EAAaqK,SAtCxB,SA4CV4W,EAASN,EAAc,6CAIvBrW,EAAW,IAAIC,UACZC,OAAO,aAAckW,EAAQjD,YACtCnT,EAASE,OAAO,gBAAhB,OAAiCkW,QAAjC,IAAiCA,OAAjC,EAAiCA,EAASI,eAC1CxW,EAASE,OAAO,UAAWkW,EAAQtN,SACnC9I,EAASE,OAAO,SAAhB,OAA0BsI,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAclS,KApDxB,UAqDO8J,EAAAA,EAAAA,KAAWuW,EAAQ3W,EAAUJ,GArDpC,iBAqDRxC,EArDQ,EAqDRA,KAEI,OAAZ8H,QAAY,IAAZA,GAAAA,EAAc0R,KAAK,eAAgBxZ,GACnC6Y,KACA1b,GAAS6L,EAAAA,EAAAA,KAAeT,IAzDR,kDA2DhBpL,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,wBACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,mBAGd+X,GAAW,GApEK,0DAAH,qDAwEXgD,GAAa,mCAAG,+FACpBtc,GAASoF,EAAAA,EAAAA,KAAW,IACpBkU,GAAW,GAELjU,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYpK,EAAaqK,SAPtB,kBAYZK,EAAAA,EAAAA,IAAA,sBAEJ,CAAEoP,WAAY3Q,KAAKC,UAAU,CAACqV,KAC9BvU,GAfgB,cAkBN,OAAZsF,QAAY,IAAZA,GAAAA,EAAc0R,KAAK,cAAe,CAChCE,aAAc3C,EACd4C,SAAQ,OAAErhB,QAAF,IAAEA,OAAF,EAAEA,EAAcY,IACxBiS,KAAMC,IAERjO,GACE+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,+BACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,mBAGdoY,EAAYxF,EAASza,QAAO,SAACiiB,GAAD,OAAY,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAK5f,OAAQ6d,MAClD5Z,GAASoF,EAAAA,EAAAA,KAAW,IACpBpF,GAAS6L,EAAAA,EAAAA,KAAeT,IACxBkO,GAAW,GAlCO,kBAmCX,iBAnCW,kCAqClBtZ,GACE+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,0BACP2E,SAAS,eAAMe,gBAAN,mBAAgBlD,YAAhB,eAAsBmC,UAAW,KAAMA,QAChDtH,KAAM,QACNuH,SAAU,IACV1D,SAAU,gBAGdvB,GAASoF,EAAAA,EAAAA,KAAW,IACpBkU,GAAW,GA/CO,0DAAH,sDAsGnBlc,EAAAA,EAAAA,YAAU,WACR4C,GACEyc,EAAAA,EAAAA,KAAgBC,EAAAA,GAAAA,IAjXE1Q,mCAiXkB,CAAE2Q,WAAY,CAAC,mBAEpD,KAGHvf,EAAAA,EAAAA,YAAU,WACHuN,KAEAyO,GAAqBzO,IACxBA,EAAa0R,KAAK,YAAlB,OAA+BlhB,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAcY,KAC7C4O,EAAaiS,GAAG,kBAAkB,WAChCC,QAAQC,IAAI,oBACZ9c,GAAS+c,EAAAA,EAAAA,IAAmB,QAKhCpS,EAAaqS,IAAI,oBAAoBJ,GAAG,oBAAoB,SAACb,GAC3D,IAAQ/N,EAAS+N,EAAT/N,KACRhO,GAAS6L,EAAAA,EAAAA,KAAeT,IACpB6C,GAAgBD,GAAQC,EAAalS,MAAQiS,EAAKjS,MACpDggB,EAAM,MAAW,EACjBpC,EAAY,CAACoC,GAAF,gBAAa5H,SAI5BxJ,EACGqS,IAAI,sBACJJ,GAAG,sBAAsB,SAACK,GACzB,IAAQV,EAAuBU,EAAvBV,aAAcvO,EAASiP,EAATjP,KACtBhO,GAAS6L,EAAAA,EAAAA,KAAeT,IACpB6C,GAAgBD,GAAQC,EAAalS,MAAQiS,EAAKjS,KACpD4d,EAAYxF,EAASza,QAAO,SAACiiB,GAAD,OAAY,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAK5f,OAAQwgB,SAGxD5R,EACGqS,IAAI,uBACJJ,GAAG,uBAAuB,SAACM,GAC1B,IAAQlP,EAASkP,EAATlP,KACRhO,GAAS6L,EAAAA,EAAAA,KAAeT,IACpB6C,GAAgBD,GAAQC,EAAalS,MAAQiS,EAAKjS,MACpDmhB,EAAU,MAAW,EACrBvD,EACExF,EAASvY,KAAI,SAAC+f,GACZ,OAAU,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAK5f,QAAL,OAAamhB,QAAb,IAAaA,OAAb,EAAaA,EAAYnhB,KAAMmhB,EAAavB,UAM7DhR,EAAaqS,IAAI,mBAAmBJ,GAAG,mBAAmB,WACxD5c,GAAS6L,EAAAA,EAAAA,KAAeT,WAK5B,IAAM+R,IAAkBrT,EAAAA,EAAAA,KAAS,SAAC7M,GAAO,IAAD,EAChCmgB,EAAK,UAAGngB,EAAEC,OAAOmb,iBAAZ,aAAG,EACV7J,WAAW,OAAQ,IACpBA,WAAW,SAAU,IACrBA,WAAW,QAAS,IACpBA,WAAW,SAAU,IACrB1F,OACH0Q,EAAiBhf,QAAQ4iB,MACxB,MAgDHhgB,EAAAA,EAAAA,YAAU,YAvHa,WAAO,IAAD,EAC3B,UAAA2c,GAAc5U,eAAd,SAAuBkY,eAAe,CAAEC,UAAW,WAuHnDC,KACC,CAACpJ,KAEJ/W,EAAAA,EAAAA,YAAU,WACJ8b,IACFwC,KACY,OAAZ/Q,QAAY,IAAZA,GAAAA,EAAc0R,KAAK,YAAnB,OAAgCpO,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAclS,QAE/C,CAACmd,IAEJ,IAAMsE,GAAwB,SAACte,GAC7Bc,GAASoH,EAAAA,GAAAA,KAAqB,IAC9BL,EAAc7H,GAAQ,SAAC,IAAD,UAAqBA,KAAY,SAAC,GAAD,KACvDc,GACEqH,EAAAA,GAAAA,IAAc,CACZhH,MAAO,mBAgCPod,GAAqB,SAACxgB,GACtBoc,GACJgB,GAAwBpd,EAAEC,SAG5B,OACE,gBACEM,UAAS,4EACPyQ,EAAe,SAAW,mBADnB,qCADX,SAKGA,GACC,iCACE,qBAASzQ,UAAU,4HAAnB,WACE,SAAC,GAAD,CAAe6C,MAAM,UAAUmG,UAAU,eAAepH,OAAK,EAA7D,UACE,SAACkC,EAAA,EAAD,CACEzG,QAAS2f,GACThd,UAAS,wBACTjE,GAAI,CACFQ,MAAO,UACP,SAAU,CACRH,gBAAiB,cANvB,UAUE,SAAC8jB,GAAA,EAAD,SAGJ,SAAC,GAAD,CACErd,MAAmB,OAAZ4N,QAAY,IAAZA,GAAAA,EAAcE,YAAc,aAAe,eAClD3H,UAAU,eACVpH,OAAK,EAHP,UAKE,SAACkC,EAAA,EAAD,CACE/H,GAAI,CACFwI,OAAQ,OACR,SAAU,CACRnI,gBAAiB,cAGrB4D,UAAU,uBACV3C,QACc,OAAZoT,QAAY,IAAZA,GAAAA,EAAcE,YArEF,WAE1BnO,GAAS+L,EAAAA,EAAAA,IAAakC,IACtBjO,GAASoH,EAAAA,GAAAA,KAAqB,IAC9BL,GAAc,SAAC,GAAD,CAAeoN,SAAUA,KACvCnU,GACEqH,EAAAA,GAAAA,IAAc,CACZhH,MAAO,iBAgEOmd,GAXR,UAcE,SAACrS,EAAA,EAAD,CACE7E,IACc,OAAZ2H,QAAY,IAAZA,GAAAA,EAAcE,YAAd,OACIF,QADJ,IACIA,OADJ,EACIA,EAActC,gBACd,WAAAsF,EAAAA,EAAAA,IACE9V,EADqB,OAErB8S,QAFqB,IAErBA,OAFqB,EAErBA,EAAcrC,cAFhB,eAGGtI,aAAc,GAEvBiD,IAAK,wBAKX,iBAAM/I,UAAU,2BAA2B6C,MAAOkL,GAAlD,UACGlK,EAAAA,EAAAA,IAAekK,GAAU,GAAI,OAGhC,SAAC,GAAD,CAAelL,MAAM,aAAamG,UAAU,aAAapH,OAAK,EAA9D,UACE,SAACkC,EAAA,EAAD,CACEzG,QAAS2f,GACThd,UAAU,mBACVjE,GAAI,CACFgI,SAAU,WACVC,MAAO,GACPC,IAAK,EACL1H,MAAO,UACP,SAAU,CACRH,gBAAiB,cATvB,UAaE,SAAC8H,EAAA,EAAD,YAIN,qBACElE,UAAS,yCACPoY,IAAqBC,GAAiB,UAAY,UAD3C,+BADX,WAME,gBAAKrY,UAAU,wCAAf,UACE,iBAEE3C,QAlLW,SAACoC,GAAO,IAAD,QACtBwN,EAAYxN,EAAEC,OAAduN,QACFqN,EAAU,OAAGrN,QAAH,IAAGA,GAAH,UAAGA,EAASgF,cAAZ,aAAG,EAAiBhC,MAAM,OACpCkQ,EAAK,OAAGlT,QAAH,IAAGA,OAAH,EAAGA,EAASkR,IACjBiC,GAAiB,OAAPnT,QAAO,IAAPA,OAAA,EAAAA,EAASoT,SAAT,UAAkB5gB,EAAEC,OAAOuU,WAAWhH,eAAtC,aAAkB,EAA6BoT,OACzDC,GAAiB,OAAPrT,QAAO,IAAPA,OAAA,EAAAA,EAASsT,SAAT,UAAkB9gB,EAAEC,OAAOuU,WAAWhH,eAAtC,aAAkB,EAA6BsT,OACzDlD,GAAgB,OAAPpQ,QAAO,IAAPA,OAAA,EAAAA,EAASuT,YAAT,UAAqB/gB,EAAEC,OAAOuU,WAAWhH,eAAzC,aAAqB,EAA6BuT,UAEjE,GAAInD,EACFI,GAAaJ,QACR,GAAI+C,EAAS,CAAC,IAAD,EAElBhD,GAAUgD,EAAS,CACjBlD,UAAiB,OAAPjQ,QAAO,IAAPA,OAAA,EAAAA,EAASwT,aAAT,UAAsBhhB,EAAEC,OAAOuU,WAAWhH,eAA1C,aAAsB,EAA6BwT,WAC7DtD,SAAS,SAEN,GAAImD,EAAS,CAAC,IAAD,EAElBlD,GAAUkD,EAAS,CACjBpD,UAAiB,OAAPjQ,QAAO,IAAPA,OAAA,EAAAA,EAASyT,aAAT,UAAsBjhB,EAAEC,OAAOuU,WAAWhH,eAA1C,aAAsB,EAA6ByT,WAC7DvD,SAAS,SAEN,UAAIlQ,QAAJ,IAAIA,GAAAA,EAAS0T,SApYO,SAAClhB,GAAO,IAAD,EAClC+C,GAASoH,EAAAA,GAAAA,KAAqB,IAC9BL,GAAc,SAAC,GAAD,CAAemJ,MAAOjT,KACpC+C,GACEqH,EAAAA,GAAAA,IAAc,CACZlH,cAAc,EACdE,OAAO,UAAApD,EAAEC,cAAF,eAAUqJ,MAAO,iBA+X1BoL,CAAqB1U,QAChB,UAAI6a,QAAJ,IAAIA,GAAAA,EAAYnc,OAAQ,CAE7B,IAAMuD,EAAQ,CACZ4S,iBAAkBgG,EAAW,GAC7B/F,WAAY+F,EAAW,GACvB9F,YAAa8F,EAAW,IAE1B0F,GAAsBte,QACbye,IACT9D,EAAc8D,GACdF,GAAmBxgB,KAiJTO,UAAS,gCACPic,EAAe,SAAW,SADnB,wBAHX,WAOE,gBAAKjc,UAAU,gBAAgBqJ,IAAKkT,KACnCvJ,IAAgB6I,GACf,SAAC,GAAD,CAAarR,MAAO,IAEpBmM,EAASvY,KAAI,SAACwR,EAAGjF,EAAGiW,GAAP,OACX,SAAC,GAAD,CACExI,kBAAmBA,GACnBC,eAAgBA,GAEhBF,QAASvI,EAAE+O,KACXxE,QAASvK,EACTwK,QAASzP,EAAIiW,EAAKziB,OAAS,EAAIyiB,EAAKjW,EAAI,GAAK,MAHxCiF,EAAErR,cAUjB,SAAC,GAAD,CACEd,OAAQmf,GACRlf,UAAWmf,GACXT,WAAYA,EACZtB,kBAAmB,aACnBC,2BAtIuB,WACjCvY,GAASoH,EAAAA,GAAAA,KAAqB,IAC9BL,GAAc,iFACd/G,GACEqH,EAAAA,GAAAA,IAAc,CACZhH,MAAO,iBACPC,QAAS,KACTC,SAAU,MACVC,gBAAiB,cACjBC,OAAQ6b,SA+HH7C,IACC,SAAC,GAAD,CACEf,eAAgBA,GAChBC,kBAAmB,kBACjB2B,GAAc,CAAEC,uBAAuB,KAEzCxX,cAAeA,MAInB,iBAAKvF,UAAS,uCAAd,WACE,kBACEA,UAAS,oCAA+BrB,EAA/B,oBADX,WAGE,SAAC,GAAD,CACEkE,MAAM,cACNmG,UAAU,eACVpH,OAAK,EAHP,UAKE,SAACkC,EAAA,EAAD,CACEzG,QAAS,WAAO,IAAD,EACb,UAAAmf,GAAa7U,eAAb,SAAsBT,SAExBlH,UAAS,mBACTjE,IAAE,kBAAO0c,IAAP,IAAmBoI,UAAW,mBALlC,UAOE,SAACC,GAAA,EAAD,CAAYvjB,MAAO,CAAEf,SAAU,WAInC,kBACE0D,KAAK,OACLkJ,OAAO,IACPjJ,SA7ViB,SAACV,GAChC,IAAMshB,EAAUthB,EAAEC,OAAO2H,MAAM,GAC/B,GAAK0Z,EAAL,CAEA,GAAIA,EAAQtc,MAAQuc,EAAAA,GAElB,OADAxE,GAAa7U,QAAQhI,MAAQ,GACtB6C,GACL+E,EAAAA,GAAAA,IAAa,CACXC,QAAS,yCACTtH,KAAM,UACNuH,SAAU,IACV1D,SAAU,gBAIhB,IAAMwN,EAAU9C,IAAIC,gBAAgBqS,GAChC,qBAAqBlP,KAAKkP,EAAQ7gB,MAjCf,SAAC+gB,EAAUF,GAClC,IAAMG,EAAQ,IAAIC,MAAMF,GACxBC,EAAME,iBAAmB,WACvB,IAAQ3Z,EAAayZ,EAAbzZ,SACF4Z,EAAUnI,SAASzR,EAAW,IAC9B6Z,EAAUpI,SAASzR,EAAW,IACpC6U,GAAkB,CAChBlB,WAAY2F,EACZ1F,qBAAsB4F,EACtBxC,cAAc,GAAD,OAAK4C,EAAL,YACXC,EAAU,GAAV,WAAmBA,GAAYA,EADpB,cAEPP,EAAQ7gB,QAEhBgc,GAAgB,IAqBhBqF,CAAiBhQ,EAASwP,IAE1BzE,GAAkB,CAChBlB,WAAY2F,EACZ1F,qBAAsB9J,IAExB2K,GAAgB,MAuUJ3b,KAAK,aACLC,GAAG,gBACH6I,IAAKmT,GACLxc,UAAS,SACTS,SAAUuS,QAId,gBACEwO,QAAS7B,GACTvf,UApQY,SAACX,GACX,UAAVA,EAAEK,KAAoBL,EAAEgiB,WAAa1F,IAAiBE,IACxDxc,EAAE6O,iBACF8P,OAkQU/U,IAAKoT,GACLzc,UAAS,mBACPic,EAAe,aAAe,GADvB,+DAGTyF,iBAAiB,EACjBnkB,MAAO,CACLpB,aACE4f,GAAiBE,EAAe,MAAQ,qBAI7CF,GAAiBE,GAChB,iBACEjc,UAAS,wDAAmDrB,EAAnD,YACTtB,QAAS+gB,GAFX,UAIE,SAACta,EAAA,EAAD,CACE9D,UAAS,2BACTjE,GAAI,CAAEwI,OAAQ,UAAWmH,QAAS,MAAOnP,MAAO,WAFlD,UAIE,SAAColB,GAAA,EAAD,CAAMpkB,MAAO,CAAEf,SAAU,WAI7B,kCAMR,iBAAKwD,UAAU,oEAAf,WACE,gBAAIA,UAAU,YAAd,kBACQ,KACN,iBACEA,UAAU,UACVzC,MAAO,CAAEhB,MAAO,WAFlB,0BAGKoB,QAHL,IAGKA,GAHL,UAGKA,EAAc4C,YAHnB,iBAGK,EAAoB0P,MAAM,KAAK,UAHpC,aAGK,EAAmCqJ,iBAAwB,IALlE,mBAQA,SAAC9L,GAAA,EAAD,CACEnE,IAAKsS,EACL3b,UAAW,sBACXzC,MAAO,CAAEC,aAAc,OAAQsN,OAAQ,OACvC2C,cAAeA,MAEjB,cACEzN,UAAU,UACVzC,MAAO,CAAEoG,UAAW,QAASpH,MAAO,WAFtC,gGAOA,cAAGyD,UAAU,KAAKzC,MAAO,CAAEhB,MAAO,WAAlC,+CCzsBV,GA9EkB,WAChB,IAAQoB,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAA7BF,aACR,GAA0CC,EAAAA,EAAAA,IACxCgkB,GAAAA,IADMxf,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,kBAIdG,GAAWzE,EAAAA,EAAAA,MAEX0E,GAAWC,EAAAA,EAAAA,MACjB,GAAkC3D,EAAAA,EAAAA,WAAS,GAA3C,eAAO2c,EAAP,KAAkB9P,EAAlB,KACA,GAAsC7M,EAAAA,EAAAA,WAAS,GAA/C,eAAOiU,EAAP,KAAoByI,EAApB,KACA,GAAoC1c,EAAAA,EAAAA,WAAS,yBAA7C,eAAO8iB,EAAP,KAAmBtY,EAAnB,KAyBA,OAvBA3J,EAAAA,EAAAA,YAAU,WAER,IAAMsK,EAAOpD,KAAKgb,MAAMlb,aAAamb,QAAQ,iBAC7C,OAAK7X,EAEDgH,KAAKsN,OAAStF,SAAShP,EAAK5B,aAC9B7F,EAAS,KACFD,GACL+E,EAAAA,GAAAA,IAAa,CACX1E,MAAO,kBACP2E,QAAS,qBACTtH,KAAM,OACNuH,SAAU,IACV1D,SAAU,qBAKhBvB,GAASwE,EAAAA,EAAAA,IAAgBkD,IACzB1H,GAASW,EAAAA,GAAAA,YACTX,GAASc,EAAAA,EAAAA,IAAgB,QAjBPb,EAAS,OAkB1B,KAGD,8BACG9E,IACC,iBAAKqC,UAAS,WAAd,WAEE,SAAC,GAAD,CACE4L,aAAcA,EACdrC,cAAeA,KAGjB,qBAASvJ,UAAS,UAAlB,WAEE,SAAC,GAAD,CACEgT,YAAaA,EACbpH,aAAcA,EACdrC,cAAeA,KAIjB,SAAC,GAAD,CACEyJ,YAAaA,EACbyI,eAAgBA,EAChBC,UAAWA,EACX9P,aAAcA,EACdrC,cAAeA,QAKnB,SAAC,GAAD,CACEnH,WAAYA,EACZC,kBAAmBA,EACnBC,iBAAiB,EAHnB,SAKGuf","sources":["components/utils/Menu.jsx","components/utils/MenuItemText.jsx","components/menus/NotificationsMenu.jsx","components/dialogs/ChangePasswordBody.jsx","components/dialogs/EditNameBody.jsx","components/menus/EditPicMenu.jsx","components/utils/CustomTooltip.jsx","components/utils/CustomDialog.jsx","components/utils/ChildDialog.jsx","components/dialogs/EditProfileBody.jsx","components/menus/ProfileSettingsMenu.jsx","components/utils/UserListItem.jsx","components/utils/LoadingList.jsx","components/utils/SearchInput.jsx","components/utils/SearchUsersDrawer.jsx","components/ChatpageHeader.jsx","components/dialogs/NewGroupBody.jsx","components/dialogs/AddMembersToGroup.jsx","components/utils/ChatListItem.jsx","components/utils/FullSizeImage.jsx","components/ChatListView.jsx","components/dialogs/ViewProfileBody.jsx","components/utils/GroupMemberItem.jsx","components/menus/MemberOptionsMenu.jsx","components/dialogs/ViewGroupMembers.jsx","components/dialogs/GroupInfoBody.jsx","components/utils/LoadingMsgs.jsx","components/utils/MsgAttachment.jsx","components/utils/Message.jsx","components/menus/MsgOptionsMenu.jsx","components/utils/AttachmentPreview.jsx","components/MessagesView.jsx","pages/ChatsPage.jsx"],"sourcesContent":["import { Menu as MuiMenu } from \"@mui/material\";\r\n\r\nexport const menuPaperProps = {\r\n  elevation: 0,\r\n  sx: {\r\n    overflow: \"auto\",\r\n    maxHeight: 250,\r\n    filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\r\n    borderRadius: 2,\r\n    backgroundColor: \"#404040\",\r\n    mt: 1,\r\n  },\r\n};\r\n\r\nexport const menuItemProps = {\r\n  \":hover\": { backgroundColor: \"#505050\" },\r\n  color: \"#e0e0e0\",\r\n  fontSize: \"19px\",\r\n};\r\n\r\nexport const menuIconProps = { color: \"lightblue\" };\r\n\r\nconst Menu = ({\r\n  children,\r\n  menuAnchor,\r\n  setMenuAnchor,\r\n  transformOrigin,\r\n  anchorOrigin,\r\n}) => {\r\n  const isMenuOpen = Boolean(menuAnchor);\r\n\r\n  const closeMenu = () => {\r\n    setMenuAnchor(null);\r\n  };\r\n\r\n  return (\r\n    <MuiMenu\r\n      anchorEl={menuAnchor}\r\n      open={isMenuOpen}\r\n      onClose={closeMenu}\r\n      onClick={closeMenu}\r\n      PaperProps={menuPaperProps}\r\n      transformOrigin={transformOrigin}\r\n      anchorOrigin={anchorOrigin}\r\n    >\r\n      {children}\r\n    </MuiMenu>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","const MenuItemText = ({ children }) => {\r\n  return <span style={{ marginBottom: \"3px\" }}>{children}</span>;\r\n};\r\n\r\nexport default MenuItemText;\r\n","import { Logout, ManageAccounts } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\n\r\nconst NotificationsMenu = ({ anchor, setAnchor }) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n  const notifs = loggedInUser?.notifications;\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      {notifs?.length ? (\r\n        notifs.map((n) => (\r\n          <MenuItem\r\n            key={n._id}\r\n            sx={menuItemProps}\r\n            onClick={() => {}}\r\n          ></MenuItem>\r\n        ))\r\n      ) : (\r\n        <MenuItem sx={menuItemProps}>\r\n          <MenuItemText>No notifications</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default NotificationsMenu;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\nimport PasswordVisibilityToggle from \"../utils/PasswordVisibilityToggle\";\r\n\r\nconst ChangePasswordBody = ({ getUpdatedState }) => {\r\n  const {\r\n    loading,\r\n    disableIfLoading,\r\n    formLabelClassName,\r\n    formFieldClassName,\r\n    inputFieldClassName,\r\n  } = useSelector(selectFormfieldState);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [changePasswordData, setChangePasswordData] = useState({\r\n    currentPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmNewPassword: \"\",\r\n  });\r\n\r\n  const { currentPassword, newPassword, confirmNewPassword } =\r\n    changePasswordData;\r\n\r\n  const handleChangeFor = (prop) => (e) => {\r\n    setChangePasswordData({ ...changePasswordData, [prop]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Return updated state to profile settings menu\r\n    getUpdatedState(changePasswordData);\r\n  }, [changePasswordData]);\r\n\r\n  const onEnterKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      // Submit updated password data\r\n      getUpdatedState(changePasswordData, { submitUpdatedPassword: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Current Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 mt-3 col-md-6 order-md-2`}\r\n      >\r\n        <label htmlFor=\"current_password\" className={`${formLabelClassName}`}>\r\n          Current Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={currentPassword}\r\n            onChange={handleChangeFor(\"currentPassword\")}\r\n            onKeyDown={onEnterKeyDown}\r\n            required\r\n            autoFocus\r\n            name=\"currentPassword\"\r\n            id=\"current_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Used While Signing In\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n      {/* New Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 col-md-6 order-md-2`}\r\n      >\r\n        <label htmlFor=\"new_password\" className={`${formLabelClassName}`}>\r\n          New Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={newPassword}\r\n            onChange={handleChangeFor(\"newPassword\")}\r\n            onKeyDown={onEnterKeyDown}\r\n            required\r\n            name=\"newPassword\"\r\n            id=\"new_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Different from Current\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n      {/* Confirm New Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 col-md-6 order-md-2`}\r\n      >\r\n        <label\r\n          htmlFor=\"confirm_new_password\"\r\n          className={`${formLabelClassName}`}\r\n        >\r\n          Confirm New Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={confirmNewPassword}\r\n            onChange={handleChangeFor(\"confirmNewPassword\")}\r\n            onKeyDown={onEnterKeyDown}\r\n            required\r\n            name=\"confirmNewPassword\"\r\n            id=\"confirm_new_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Exactly as Above\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordBody;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\n\r\nconst EditNameBody = ({ originalName, getUpdatedName, placeholder }) => {\r\n  const { loading, formFieldClassName, inputFieldClassName } =\r\n    useSelector(selectFormfieldState);\r\n  const [name, setName] = useState(originalName);\r\n\r\n  useEffect(() => {\r\n    getUpdatedName(name);\r\n  }, [name]);\r\n\r\n  return (\r\n    <section\r\n      className={`${formFieldClassName} mx-auto`}\r\n      style={{ width: \"clamp(250px, 60vw, 360px)\" }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            // Submit updated group name\r\n            getUpdatedName(name, { submitUpdatedName: true });\r\n          }\r\n        }}\r\n        name=\"editname\"\r\n        autoFocus\r\n        className={`${inputFieldClassName} mt-1`}\r\n        disabled={loading}\r\n        placeholder={placeholder}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditNameBody;\r\n","import { Delete, Upload } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\n\r\nconst EditPicMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  selectProfilePic,\r\n  openDeletePhotoConfirmDialog,\r\n  deletePhotoCondition,\r\n}) => {\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={selectProfilePic}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Upload />\r\n        </ListItemIcon>\r\n        <MenuItemText>Upload Photo</MenuItemText>\r\n      </MenuItem>\r\n      {deletePhotoCondition && (\r\n        <MenuItem sx={menuItemProps} onClick={openDeletePhotoConfirmDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <Delete />\r\n          </ListItemIcon>\r\n          <MenuItemText>Delete Photo</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default EditPicMenu;\r\n","import { styled } from \"@mui/material/styles\";\r\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\r\n\r\nconst getCustomTooltip = (arrowStyles, tooltipStyles) =>\r\n  styled(({ className, ...props }) => (\r\n    <Tooltip {...props} arrow classes={{ popper: className }} />\r\n  ))(({ theme }) => ({\r\n    [`& .${tooltipClasses.arrow}`]: { ...arrowStyles },\r\n    [`& .${tooltipClasses.tooltip}`]: { ...tooltipStyles },\r\n  }));\r\n\r\nexport default getCustomTooltip;\r\n","import {\r\n  Close,\r\n  KeyboardDoubleArrowLeft,\r\n  KeyboardDoubleArrowRight,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setSelectedChat } from \"../../store/slices/AppSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\n\r\nexport const btnHoverStyle = {\r\n  \":hover\": { backgroundColor: \"#93c2f727\" },\r\n};\r\nexport const btnCustomStyle = {\r\n  fontSize: 19,\r\n  color: \"#8cc2ff\",\r\n  fontFamily: \"Mirza\",\r\n  borderRadius: 10,\r\n};\r\n\r\nconst CustomDialog = ({\r\n  children,\r\n  dialogData,\r\n  showDialogActions,\r\n  showDialogClose,\r\n  closeDialog,\r\n}) => {\r\n  const { loading, disableIfLoading } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const {\r\n    isFullScreen,\r\n    isOpen,\r\n    title,\r\n    nolabel,\r\n    yeslabel,\r\n    loadingYeslabel,\r\n    action,\r\n  } = dialogData;\r\n\r\n  const handleDialogClose = () => {\r\n    if (closeDialog) return closeDialog();\r\n    dispatch(hideDialog());\r\n  };\r\n\r\n  const handleYes = async () => {\r\n    const result = await action();\r\n    if (\r\n      result === \"profileUpdated\" ||\r\n      result === \"membersUpdated\" ||\r\n      result === \"msgActionDone\"\r\n    ) {\r\n      handleDialogClose();\r\n    } else if (result === \"createdGroup\") {\r\n      handleDialogClose();\r\n      // Close Parent Dialog as well\r\n      dispatch(hideDialog());\r\n    } else if (result === \"pwdUpdated\" || result === \"loggingOut\") {\r\n      handleDialogClose();\r\n      dispatch(setSelectedChat(null));\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen={Boolean(isFullScreen)}\r\n      PaperProps={{\r\n        sx: {\r\n          borderRadius: 2,\r\n          backgroundImage: \"linear-gradient(0deg,#353535,#444)\",\r\n        },\r\n      }}\r\n      className={`user-select-none ${disableIfLoading}`}\r\n      open={isOpen}\r\n      onClose={handleDialogClose}\r\n    >\r\n      <DialogTitle\r\n        style={{ fontSize: 26, color: \"#ffffff\", fontFamily: \"Mirza\" }}\r\n      >\r\n        <span\r\n          className=\"d-flex\"\r\n          title={title}\r\n          style={{ marginTop: -5, marginRight: 10 }}\r\n        >\r\n          {truncateString(title, 24, 21)}\r\n        </span>\r\n        {showDialogClose && (\r\n          <IconButton\r\n            onClick={handleDialogClose}\r\n            disabled={loading}\r\n            sx={{\r\n              position: \"absolute\",\r\n              right: 8,\r\n              top: 8,\r\n              color: \"#999999\",\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        )}\r\n      </DialogTitle>\r\n      <DialogContent\r\n        style={{ fontSize: 19, color: \"#e0e0e0\", fontFamily: \"Mirza\" }}\r\n      >\r\n        {children || <></>}\r\n      </DialogContent>\r\n      {showDialogActions && (\r\n        <DialogActions>\r\n          <Button\r\n            sx={btnHoverStyle}\r\n            disabled={loading}\r\n            style={btnCustomStyle}\r\n            onClick={handleDialogClose}\r\n          >\r\n            {nolabel === \"Back\" ? (\r\n              <span>\r\n                <KeyboardDoubleArrowLeft\r\n                  className=\"btnArrowIcons\"\r\n                  style={{\r\n                    margin: \"0px 5px 2px 0px\",\r\n                  }}\r\n                />\r\n                Back\r\n              </span>\r\n            ) : (\r\n              nolabel\r\n            )}\r\n          </Button>\r\n          <Button\r\n            sx={btnHoverStyle}\r\n            disabled={loading}\r\n            style={btnCustomStyle}\r\n            onClick={handleYes}\r\n          >\r\n            {loading && yeslabel !== \"Next\" ? (\r\n              <>\r\n                <CircularProgress size={25} style={{ marginRight: 12 }} />\r\n                <span style={{ marginRight: 22 }}>{loadingYeslabel}</span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {yeslabel === \"Next\" ? (\r\n                  <span>\r\n                    Next\r\n                    <KeyboardDoubleArrowRight\r\n                      className=\"btnArrowIcons\"\r\n                      style={{\r\n                        marginLeft: 4,\r\n                      }}\r\n                    />\r\n                  </span>\r\n                ) : (\r\n                  yeslabel\r\n                )}\r\n              </>\r\n            )}\r\n          </Button>\r\n        </DialogActions>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CustomDialog;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setChildDialogMethods } from \"../../store/slices/ChildDialogSlice\";\r\nimport CustomDialog from \"./CustomDialog\";\r\n\r\nconst ChildDialog = ({\r\n  showChildDialogActions = true,\r\n  showChildDialogClose = false,\r\n}) => {\r\n  // Child Dialog config\r\n  const [childDialogData, setChildDialogData] = useState({\r\n    isOpen: false,\r\n    title: \"Child Dialog\",\r\n    nolabel: \"NO\",\r\n    yeslabel: \"YES\",\r\n    loadingYeslabel: \"Updating...\",\r\n    action: () => {},\r\n  });\r\n  const [childDialogBody, setChildDialogBody] = useState(<></>);\r\n  const dispatch = useDispatch();\r\n  const displayChildDialog = (options) => {\r\n    setChildDialogData({ ...options, isOpen: true });\r\n  };\r\n  const closeChildDialog = (data) => {\r\n    setChildDialogData({ ...data, isOpen: false });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setChildDialogMethods({\r\n        setChildDialogBody,\r\n        displayChildDialog,\r\n        closeChildDialog,\r\n      })\r\n    );\r\n  }, [childDialogData]);\r\n\r\n  return (\r\n    <CustomDialog\r\n      dialogData={childDialogData}\r\n      closeDialog={closeChildDialog}\r\n      showDialogActions={showChildDialogActions}\r\n      showDialogClose={showChildDialogClose}\r\n    >\r\n      {childDialogBody}\r\n    </CustomDialog>\r\n  );\r\n};\r\n\r\nexport default ChildDialog;\r\n","import { Edit } from \"@mui/icons-material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"../../utils/axios\";\r\nimport EditNameBody from \"./EditNameBody\";\r\nimport { CircularProgress, IconButton } from \"@mui/material\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport { isImageFile, truncateString, TWO_MB } from \"../../utils/appUtils\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { selectAppState, setLoggedInUser } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#111\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\n\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst EditProfileBody = () => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const { loading, disableIfLoading } = useSelector(selectFormfieldState);\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const dispatch = useDispatch();\r\n  const { setChildDialogBody, displayChildDialog, closeChildDialog } =\r\n    childDialogMethods;\r\n\r\n  const [profileData, setProfileData] = useState({\r\n    profilePicUrl: loggedInUser?.profilePic,\r\n    name: loggedInUser?.name,\r\n    email: loggedInUser?.email,\r\n  });\r\n  const [editProfilePicMenuAnchor, setEditProfilePicMenuAnchor] =\r\n    useState(null);\r\n\r\n  useEffect(() => {\r\n    setProfileData({\r\n      ...profileData,\r\n      profilePicUrl: loggedInUser?.profilePic,\r\n      name: loggedInUser?.name,\r\n    });\r\n  }, [loggedInUser]);\r\n\r\n  // For profile pic upload loading indicator\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const { profilePicUrl, name, email } = profileData;\r\n  const imgInput = useRef();\r\n  const isGuestUser = loggedInUser?.email === \"guest.user@gmail.com\";\r\n\r\n  const persistUpdatedUser = (updatedUser) => {\r\n    // Session storage persists updated user even after page refresh\r\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\r\n    dispatch(setLoggedInUser(updatedUser));\r\n  };\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") {\r\n      e.target.click();\r\n    }\r\n  };\r\n\r\n  // Update Profile Pic\r\n  const handleImgInputChange = async (e) => {\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n\r\n    if (!isImageFile(image.name)) {\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Invalid Image File\",\r\n          message: \"Please Select an Image File (png/jpg/jpeg/svg/webp)\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    if (image.size >= TWO_MB) {\r\n      imgInput.current.value = \"\";\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Select an Image Smaller than 2 MB\",\r\n          type: \"warning\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    dispatch(setLoading(true));\r\n    setUploading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"profilePic\", image);\r\n    formData.append(\"currentProfilePic\", loggedInUser?.profilePic);\r\n    formData.append(\"cloudinary_id\", loggedInUser?.cloudinary_id);\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/update/profile-pic\",\r\n        formData,\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"ProfilePic Updated Successfully.\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n      persistUpdatedUser({\r\n        ...data,\r\n        token: loggedInUser.token,\r\n        expiryTime: loggedInUser.expiryTime,\r\n      });\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"ProfilePic Update Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const deleteProfilePic = async () => {\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/delete/profile-pic\",\r\n        {\r\n          currentProfilePic: loggedInUser?.profilePic,\r\n          cloudinary_id: loggedInUser?.cloudinary_id,\r\n        },\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"ProfilePic Deleted Successfully.\",\r\n          type: \"success\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      persistUpdatedUser({\r\n        ...data,\r\n        token: loggedInUser.token,\r\n        expiryTime: loggedInUser.expiryTime,\r\n      });\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"ProfilePic Deletion Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Edited Name config\r\n  let editedName;\r\n\r\n  const getUpdatedName = (updatedValue, options) => {\r\n    editedName = updatedValue;\r\n    if (options?.submitUpdatedName)\r\n      updateProfileName({ enterKeyPressed: true });\r\n  };\r\n\r\n  const updateProfileName = async (options) => {\r\n    if (!editedName) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Enter a Valid Name\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser?.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/update/name\",\r\n        { newUserName: editedName },\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Name Updated Successfully.\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      persistUpdatedUser({\r\n        ...data,\r\n        token: loggedInUser.token,\r\n        expiryTime: loggedInUser.expiryTime,\r\n      });\r\n      if (options?.enterKeyPressed) closeChildDialog();\r\n      else return \"profileUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Name Update Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Open edit name dialog\r\n  const openEditNameDialog = () => {\r\n    setChildDialogBody(\r\n      <EditNameBody\r\n        originalName={loggedInUser?.name}\r\n        getUpdatedName={getUpdatedName}\r\n        placeholder=\"Enter New Name\"\r\n      />\r\n    );\r\n    displayChildDialog({\r\n      title: \"Edit Name\",\r\n      nolabel: \"CANCEL\",\r\n      yeslabel: \"SAVE\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: updateProfileName,\r\n    });\r\n  };\r\n\r\n  // Open delete photo confirm dialog\r\n  const openDeletePhotoConfirmDialog = () => {\r\n    setChildDialogBody(<>Are you sure you want to delete this profile pic?</>);\r\n    displayChildDialog({\r\n      title: \"Delete Profile Pic\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteProfilePic,\r\n    });\r\n  };\r\n\r\n  const openEditProfilePicMenu = (e) => {\r\n    setEditProfilePicMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* View/Edit Profile Pic */}\r\n      {loading && uploading ? (\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n          <CircularProgress\r\n            size={75}\r\n            style={{ margin: \"30px 0px\", color: \"lightblue\" }}\r\n          />\r\n          <span style={{ marginBottom: \"45px\" }} className=\"text-light h1\">\r\n            {\" Updating Photo...\"}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <section className=\"dialogField d-flex position-relative mb-4\">\r\n          <img\r\n            className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n            id=\"viewedit__profilePic\"\r\n            src={profilePicUrl}\r\n            alt=\"profilePic\"\r\n          />\r\n          {!isGuestUser && (\r\n            <CustomTooltip title=\"Edit Profile Pic\" placement=\"right\" arrow>\r\n              <i\r\n                id=\"editProfilePic\"\r\n                tabIndex={2}\r\n                onKeyDown={clickOnKeydown}\r\n                className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n                onClick={openEditProfilePicMenu}\r\n              >\r\n                <Edit className=\"text-light fs-6\" />\r\n              </i>\r\n            </CustomTooltip>\r\n          )}\r\n          {/* Edit/Delete profile pic menu */}\r\n          <EditPicMenu\r\n            anchor={editProfilePicMenuAnchor}\r\n            setAnchor={setEditProfilePicMenuAnchor}\r\n            selectProfilePic={() => imgInput.current.click()}\r\n            openDeletePhotoConfirmDialog={openDeletePhotoConfirmDialog}\r\n            deletePhotoCondition={\r\n              !loggedInUser?.profilePic?.endsWith(\"user_dqzjdz.png\")\r\n            }\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={handleImgInputChange}\r\n            name=\"profilepic\"\r\n            id=\"editProfilePic\"\r\n            ref={imgInput}\r\n            className={`d-none`}\r\n            disabled={loading}\r\n          />\r\n        </section>\r\n      )}\r\n      {/* View Name */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-15px\" }}>\r\n          <CustomTooltip\r\n            title={name?.length > 24 ? name : \"\"}\r\n            placement=\"top-start\"\r\n            arrow\r\n          >\r\n            <div\r\n              className=\"w-100 h1 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"35px\" }}\r\n            >\r\n              {truncateString(name, 25, 21)}\r\n            </div>\r\n          </CustomTooltip>\r\n          {!isGuestUser && (\r\n            <CustomTooltip title=\"Edit Name\" placement=\"top\" arrow>\r\n              <IconButton\r\n                tabIndex={3}\r\n                onKeyDown={clickOnKeydown}\r\n                onClick={openEditNameDialog}\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  right: -8,\r\n                  top: 6,\r\n                  \":hover\": {\r\n                    backgroundColor: \"#aaaaaa30\",\r\n                  },\r\n                }}\r\n              >\r\n                <Edit className=\"text-light\" />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n          )}\r\n        </div>\r\n      </section>\r\n      {/* View Email */}\r\n      <section\r\n        className={`dialogField text-center mb-2`}\r\n        style={{ marginTop: \"-10px\" }}\r\n      >\r\n        <CustomTooltip\r\n          title={email?.length > 24 ? email : \"\"}\r\n          placement=\"bottom\"\r\n          arrow\r\n        >\r\n          <span className=\"h4\" style={{ color: \"lightblue\" }}>\r\n            {truncateString(email, 25, 21)}\r\n          </span>\r\n        </CustomTooltip>\r\n      </section>\r\n      {/* Child confirmation dialog */}\r\n      <ChildDialog />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfileBody;\r\n","import { Key, Logout, ManageAccounts, Person } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport axios from \"../../utils/axios\";\r\nimport ChangePasswordBody from \"../dialogs/ChangePasswordBody\";\r\nimport EditProfileBody from \"../dialogs/EditProfileBody\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setLoggedInUser,\r\n  setSelectedChat,\r\n} from \"../../store/slices/AppSlice\";\r\nimport { setLoading } from \"../../store/slices/FormfieldSlice\";\r\nimport {\r\n  displayDialog,\r\n  hideDialog,\r\n  setShowDialogActions,\r\n} from \"../../store/slices/CustomDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ProfileSettingsMenu = ({ anchor, setAnchor, setDialogBody }) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const isGuestUser = loggedInUser?.email === \"guest.user@gmail.com\";\r\n\r\n  // Edit Password Config\r\n  let editPasswordData;\r\n\r\n  const getUpdatedState = (updatedState, options) => {\r\n    editPasswordData = updatedState;\r\n    if (options?.submitUpdatedPassword)\r\n      updatePassword({ enterKeyPressed: true });\r\n  };\r\n\r\n  const updatePassword = async (options) => {\r\n    const { currentPassword, newPassword, confirmNewPassword } =\r\n      editPasswordData;\r\n\r\n    if (!currentPassword || !newPassword || !confirmNewPassword) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Enter All the Fields\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    if (currentPassword === newPassword) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"New Password Must Differ from Current Password\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    if (newPassword !== confirmNewPassword) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"New Password Must Match Confirm New Password\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      await axios.put(\r\n        \"/api/user/update/password\",\r\n        { currentPassword, newPassword },\r\n        config\r\n      );\r\n      dispatch(\r\n        displayToast({\r\n          message:\r\n            \"Password Updated Successfully. Please Login Again with Updated Password.\",\r\n          type: \"success\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      localStorage.removeItem(\"loggedInUser\");\r\n      dispatch(setLoggedInUser(null));\r\n      if (options?.enterKeyPressed) {\r\n        dispatch(hideDialog());\r\n        dispatch(setSelectedChat(null));\r\n        navigate(\"/\");\r\n        return;\r\n      }\r\n      return \"pwdUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Password Update Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"loggedInUser\");\r\n    dispatch(setLoggedInUser(null));\r\n    dispatch(\r\n      displayToast({\r\n        message: \"Logged Out\",\r\n        type: \"success\",\r\n        duration: 2000,\r\n        position: \"bottom-center\",\r\n      })\r\n    );\r\n    return \"loggingOut\";\r\n  };\r\n\r\n  // Open dialogs\r\n  const openLogoutConfirmDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<>Are you sure you want to log out?</>);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Logout Confirmation\",\r\n        nolabel: \"NO\",\r\n        yeslabel: \"YES\",\r\n        loadingYeslabel: \"Logging Out...\",\r\n        action: logout,\r\n      })\r\n    );\r\n  };\r\n\r\n  const openEditProfileDialog = () => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<EditProfileBody />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: isGuestUser ? \"View Profile\" : \"Edit Profile\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const openEditPasswordDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<ChangePasswordBody getUpdatedState={getUpdatedState} />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Change Password\",\r\n        nolabel: \"CANCEL\",\r\n        yeslabel: \"SAVE\",\r\n        loadingYeslabel: \"Saving...\",\r\n        action: updatePassword,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={openEditProfileDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          {isGuestUser ? <Person /> : <ManageAccounts />}\r\n        </ListItemIcon>\r\n        <MenuItemText>{isGuestUser ? \"View\" : \"Edit\"} Profile</MenuItemText>\r\n      </MenuItem>\r\n      {!isGuestUser && (\r\n        <MenuItem sx={menuItemProps} onClick={openEditPasswordDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <Key />\r\n          </ListItemIcon>\r\n          <MenuItemText>Change Password</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n      <MenuItem sx={menuItemProps} onClick={openLogoutConfirmDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Logout />\r\n        </ListItemIcon>\r\n        <MenuItemText>Logout</MenuItemText>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default ProfileSettingsMenu;\r\n","import { truncateString } from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#E6480C\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  borderRadius: 5,\r\n  backgroundColor: \"#E6480C\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst UserListItem = ({ user, truncateValues }) => {\r\n  const { _id, name, email, profilePic } = user;\r\n  const [max, index] = truncateValues;\r\n\r\n  return (\r\n    <div\r\n      data-user={_id}\r\n      className={`userListItem user-select-none d-flex text-light justify-content-start align-items-center pointer px-3`}\r\n    >\r\n      <CustomTooltip\r\n        data-user={_id}\r\n        title={`${name} (${email})`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <img\r\n          src={profilePic}\r\n          alt={_id}\r\n          data-user={_id}\r\n          className={`img-fluid listItemAvatar userListAvatar rounded-circle`}\r\n        />\r\n      </CustomTooltip>\r\n      <div\r\n        data-user={_id}\r\n        className=\"userListData d-flex flex-column align-items-start px-2\"\r\n      >\r\n        <p data-user={_id} className=\"userListName fs-4 fw-bold text-info\">\r\n          {truncateString(name, max, index)}\r\n        </p>\r\n        <p data-user={_id} className=\"userListEmail\">\r\n          {truncateString(email, max, index)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n","import { Skeleton } from \"@mui/material\";\r\n\r\nconst LoadingList = ({ listOf, dpRadius, count }) => {\r\n  const skeletonStyle = { backgroundColor: \"#999\" };\r\n  return (\r\n    <>\r\n      {[...Array(count)].map((e, i) => (\r\n        <div key={`loadingListOf${listOf + i}`} className=\"loadingListItem row\">\r\n          <Skeleton\r\n            variant=\"circular\"\r\n            className=\"loadingDp rounded-circle\"\r\n            style={{\r\n              ...skeletonStyle,\r\n              width: dpRadius,\r\n              height: dpRadius,\r\n            }}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className=\"loadingTitle col-5\"\r\n            style={skeletonStyle}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className=\"loadingDesc col-7\"\r\n            style={skeletonStyle}\r\n          />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadingList;\r\n","import { Clear, Search } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { forwardRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\n\r\nconst SearchInput = forwardRef((props, inputRef) => {\r\n  const { searchHandler, autoFocus, placeholder, clearInput } = props;\r\n  const { disableIfLoading, formFieldClassName, inputFieldClassName } =\r\n    useSelector(selectFormfieldState);\r\n\r\n  // To display/hide clear search (<Close />) icon when typing\r\n  const [typing, setTyping] = useState(false);\r\n\r\n  return (\r\n    <section className={`${formFieldClassName} pt-3 pb-2 mx-1`}>\r\n      {/* Input box */}\r\n      <div className=\"input-group\">\r\n        <span\r\n          className={`input-group-text ${disableIfLoading} bg-black bg-gradient border-secondary text-light rounded-pill rounded-end`}\r\n        >\r\n          <Search className=\"mx-0\" style={{ marginTop: \"3px\" }} />\r\n        </span>\r\n        <input\r\n          type=\"text\"\r\n          ref={inputRef}\r\n          onChange={(e) => {\r\n            setTyping(Boolean(e.target.value.trim()));\r\n            searchHandler(e);\r\n          }}\r\n          autoFocus={autoFocus}\r\n          placeholder={placeholder}\r\n          className={`${inputFieldClassName\r\n            .replace(\"text-center\", \"text-start\")\r\n            .replace(\"pill\", \"0\")} border-start-0 border-end-0 d-inline-block`}\r\n          style={{ cursor: \"auto\", fontSize: \"18px\" }}\r\n        />\r\n        {/* Clear icon button */}\r\n        <span\r\n          className={`input-group-text ${disableIfLoading} bg-black bg-gradient border-secondary text-light rounded-pill rounded-start border-start-0`}\r\n        >\r\n          <IconButton\r\n            onClick={() => {\r\n              inputRef.current.value = \"\";\r\n              setTyping(false); // Hide '<Close />' icon\r\n              inputRef.current.focus();\r\n              clearInput();\r\n            }}\r\n            className={`${typing ? \"d-inline-block\" : \"d-none\"}`}\r\n            style={{\r\n              padding: \"0px 9px 3px 9px\",\r\n              margin: \"-7px\",\r\n              color: \"#999999\",\r\n            }}\r\n            sx={{\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n          >\r\n            <Clear style={{ fontSize: \"19px\" }} />\r\n          </IconButton>\r\n        </span>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default SearchInput;\r\n","import { ChevronLeft } from \"@mui/icons-material\";\r\nimport { Drawer, IconButton } from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"../../utils/axios\";\r\nimport { debounce, truncateString } from \"../../utils/appUtils\";\r\nimport UserListItem from \"./UserListItem\";\r\nimport LoadingList from \"./LoadingList\";\r\nimport SearchInput from \"./SearchInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectAppState, setSelectedChat } from \"../../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\n\r\nconst SearchUsersDrawer = ({ setFetchMsgs, isDrawerOpen, setIsDrawerOpen }) => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const { loading } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n\r\n  const searchUserInput = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isDrawerOpen) {\r\n      setSearchResults([]);\r\n      dispatch(setLoading(false));\r\n      setSearchQuery(\"\");\r\n    }\r\n  }, [isDrawerOpen]);\r\n\r\n  const handleClose = () => {\r\n    setIsDrawerOpen(false);\r\n  };\r\n\r\n  // Debouncing fetchUsers method to limit the no. of API calls\r\n  const searchUsers = debounce(async (e) => {\r\n    const query = e.target?.value?.trim();\r\n    setSearchQuery(query);\r\n    if (!query) return setSearchResults([]);\r\n\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`/api/user?search=${query}`, config);\r\n\r\n      dispatch(setLoading(false));\r\n      setSearchResults(data);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Users\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-left\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  }, 800);\r\n\r\n  // Create/Retreive chat when a user item is clicked\r\n  const createOrRetrieveChat = async (userId) => {\r\n    handleClose();\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\r\n\r\n      dispatch(setLoading(false));\r\n      dispatch(setSelectedChat(data));\r\n      setFetchMsgs(true);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Create/Retrieve Chat\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        PaperProps={{\r\n          sx: {\r\n            borderTopRightRadius: 10,\r\n            borderBottomRightRadius: 10,\r\n            backgroundImage: \"linear-gradient(0deg,#222,#444)\",\r\n            padding: \"10px\",\r\n            width: \"350px\",\r\n          },\r\n        }}\r\n        anchor=\"left\"\r\n        open={isDrawerOpen}\r\n        onClose={handleClose}\r\n        transitionDuration={350}\r\n      >\r\n        <div className=\"d-flex justify-content-center\">\r\n          <span\r\n            className=\"text-center h2 mt-1 user-select-none text-light\"\r\n            style={{ marginTop: \"0px\" }}\r\n          >\r\n            Search Users\r\n            <IconButton\r\n              onClick={handleClose}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: 8,\r\n                top: 5,\r\n                color: \"#999999\",\r\n                \":hover\": {\r\n                  backgroundColor: \"#aaaaaa20\",\r\n                },\r\n              }}\r\n            >\r\n              <ChevronLeft className=\"text-light m-1\" />\r\n            </IconButton>\r\n          </span>\r\n        </div>\r\n        {/* Search Bar */}\r\n        <SearchInput\r\n          ref={searchUserInput}\r\n          searchHandler={searchUsers}\r\n          autoFocus={true}\r\n          placeholder=\"Search by Name or Email\"\r\n          clearInput={() => {\r\n            setSearchQuery(\"\");\r\n            setSearchResults([]);\r\n            searchUserInput.current.focus();\r\n          }}\r\n        />\r\n        {/* Search Results */}\r\n        <section\r\n          className=\"position-relative mx-1 my-2 h-100\"\r\n          style={{ overflowY: \"auto\", overflowX: \"hidden\" }}\r\n        >\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={(e) => {\r\n              const userId = e.target.dataset.user;\r\n              if (!userId) return;\r\n              createOrRetrieveChat(userId);\r\n            }}\r\n          >\r\n            {loading ? (\r\n              <LoadingList listOf=\"User\" dpRadius={\"42px\"} count={8} />\r\n            ) : searchResults.length > 0 ? (\r\n              searchResults.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  truncateValues={[27, 24]}\r\n                />\r\n              ))\r\n            ) : searchQuery && !loading ? (\r\n              <p className=\"text-light text-center fs-5 mt-3 mx-5\">\r\n                No results found for '\r\n                <span className=\"text-info\">\r\n                  {truncateString(searchQuery, 30, 26)}\r\n                </span>\r\n                '\r\n              </p>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        </section>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchUsersDrawer;\r\n","import { Notifications, Search } from \"@mui/icons-material\";\r\nimport { Avatar, IconButton } from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport NotificationsMenu from \"./menus/NotificationsMenu\";\r\nimport ProfileSettingsMenu from \"./menus/ProfileSettingsMenu\";\r\nimport SearchUsersDrawer from \"./utils/SearchUsersDrawer\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport animationData from \"../animations/chat-gif.json\";\r\nimport LottieAnimation from \"./utils/LottieAnimation\";\r\nimport io from \"socket.io-client\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../store/slices/AppSlice\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#777\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  backgroundColor: \"#777\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ChatpageHeader = ({ setFetchMsgs, setDialogBody }) => {\r\n  const { loggedInUser, clientSocket } = useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n  const appGif = useRef();\r\n\r\n  const [notificationsMenuAnchor, setNotificationsMenuAnchor] = useState(null);\r\n  const [profileSettingsMenuAnchor, setProfileSettingsMenuAnchor] =\r\n    useState(null);\r\n\r\n  const openNotificationMenu = (e) => {\r\n    setNotificationsMenuAnchor(e.target);\r\n  };\r\n\r\n  const openProfileSettingsMenu = (e) => {\r\n    setProfileSettingsMenuAnchor(e.target);\r\n  };\r\n\r\n  // For opening/closing 'search users' left drawer\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n\r\n  return (\r\n    <header\r\n      className={`chatpageDiv d-flex justify-content-between align-items-center user-select-none`}\r\n    >\r\n      {/* Search Users to create/access chat */}\r\n      <CustomTooltip\r\n        title=\"Search Users to Start or Open a Chat\"\r\n        placement=\"bottom-start\"\r\n        arrow\r\n      >\r\n        <button\r\n          style={{ borderRadius: \"20px\" }}\r\n          className={`btn btn-outline-secondary text-light px-3`}\r\n          onClick={() => setIsDrawerOpen(true)}\r\n        >\r\n          <Search className={`me-1`} />\r\n          <span className={`d-none d-md-inline mb-1 fs-5`}>Search Users</span>\r\n        </button>\r\n      </CustomTooltip>\r\n      <SearchUsersDrawer\r\n        setFetchMsgs={setFetchMsgs}\r\n        isDrawerOpen={isDrawerOpen}\r\n        setIsDrawerOpen={setIsDrawerOpen}\r\n      />\r\n\r\n      {/* App Logo */}\r\n      <div className={`d-flex align-items-center ms-3 ms-md-0`}>\r\n        <LottieAnimation\r\n          ref={appGif}\r\n          className={\"d-none d-sm-inline-block mt-2 me-sm-1 me-md-2\"}\r\n          style={{ width: \"35px\", height: \"35px\" }}\r\n          animationData={animationData}\r\n        />\r\n        <span style={{ color: \"orange\" }} className=\"fs-3 fw-bold mt-1\">\r\n          CHAT ZONED\r\n        </span>\r\n      </div>\r\n\r\n      {/* User notification and profile settings icons */}\r\n      <div>\r\n        <CustomTooltip title=\"Notifications\" placement=\"bottom-end\" arrow>\r\n          <IconButton\r\n            onClick={openNotificationMenu}\r\n            sx={{\r\n              color: \"#999999\",\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n          >\r\n            <Notifications className={`text-light`} />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n        <CustomTooltip\r\n          title=\"Profile Settings\"\r\n          size=\"small\"\r\n          placement=\"bottom-end\"\r\n          arrow\r\n        >\r\n          <IconButton\r\n            className=\"mx-md-3 mx-lg-4\"\r\n            sx={{\r\n              color: \"#999999\",\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n            onClick={openProfileSettingsMenu}\r\n          >\r\n            <Avatar\r\n              alt=\"LoggedInUser\"\r\n              className=\"img-fluid\"\r\n              src={loggedInUser?.profilePic}\r\n            />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n        <NotificationsMenu\r\n          anchor={notificationsMenuAnchor}\r\n          setAnchor={setNotificationsMenuAnchor}\r\n        />\r\n        <ProfileSettingsMenu\r\n          anchor={profileSettingsMenuAnchor}\r\n          setAnchor={setProfileSettingsMenuAnchor}\r\n          setDialogBody={setDialogBody}\r\n        />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default ChatpageHeader;\r\n","import { useRef, useState } from \"react\";\r\nimport { Edit, KeyboardDoubleArrowLeft } from \"@mui/icons-material\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport { isImageFile, TWO_MB } from \"../../utils/appUtils\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport axios from \"../../utils/axios\";\r\nimport { Button, CircularProgress, DialogActions } from \"@mui/material\";\r\nimport { btnCustomStyle, btnHoverStyle } from \"../utils/CustomDialog\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  toggleRefresh,\r\n} from \"../../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#111\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\nconst DEFAULT_GROUP_DP = process.env.REACT_APP_DEFAULT_GROUP_DP;\r\n\r\nconst NewGroupBody = ({ closeChildDialog }) => {\r\n  const { loggedInUser, refresh, groupInfo } = useSelector(selectAppState);\r\n  const {\r\n    loading,\r\n    disableIfLoading,\r\n    formFieldClassName,\r\n    inputFieldClassName,\r\n    formLabelClassName,\r\n  } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n\r\n  const { chatDisplayPicUrl, chatName } = groupInfo;\r\n  const [editGroupDpMenuAnchor, setEditGroupDpMenuAnchor] = useState(null);\r\n  const imgInput = useRef();\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") {\r\n      e.target.click();\r\n    }\r\n  };\r\n\r\n  // Create group chat\r\n  const createGroupChat = async () => {\r\n    if (!groupInfo) return;\r\n    const { chatDisplayPic, chatName, users } = groupInfo;\r\n\r\n    if (!chatName) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Enter a Group Name\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    if (users?.length < 2) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Add Atleast 2 Members\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    dispatch(setLoading(true));\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"displayPic\", chatDisplayPic);\r\n      formData.append(\"chatName\", chatName);\r\n      formData.append(\"users\", JSON.stringify(users?.map((user) => user?._id)));\r\n\r\n      await axios.post(\"/api/chat/group\", formData, config);\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Group Created Successfully\",\r\n          type: \"success\",\r\n          duration: 2000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      dispatch(toggleRefresh(!refresh));\r\n      closeChildDialog();\r\n      // Close Parent Dialog as well\r\n      dispatch(hideDialog());\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Create Group\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleImgInputChange = (e) => {\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n\r\n    if (!isImageFile(image.name)) {\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Invalid Image File\",\r\n          message: \"Please Select an Image File (png/jpg/jpeg/svg/webp)\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    if (image.size >= TWO_MB) {\r\n      imgInput.current.value = \"\";\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Select an Image Smaller than 2 MB\",\r\n          type: \"warning\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    dispatch(\r\n      setGroupInfo({\r\n        ...groupInfo,\r\n        chatDisplayPic: image,\r\n        chatDisplayPicUrl: URL.createObjectURL(image),\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleReset = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      setGroupInfo({\r\n        ...groupInfo,\r\n        chatDisplayPic: null,\r\n        chatDisplayPicUrl: DEFAULT_GROUP_DP,\r\n      })\r\n    );\r\n    imgInput.current.value = \"\";\r\n  };\r\n\r\n  const openEditGroupDpMenu = (e) => {\r\n    setEditGroupDpMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Select Display Pic */}\r\n      <section className=\"newGroup d-flex position-relative mb-4\">\r\n        <img\r\n          className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n          src={chatDisplayPicUrl}\r\n          alt=\"displayPic\"\r\n        />\r\n        <CustomTooltip title=\"Edit Group Display Pic\" placement=\"right\" arrow>\r\n          <i\r\n            id=\"editGroupDPTooltip\"\r\n            tabIndex={2}\r\n            onKeyDown={clickOnKeydown}\r\n            className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n            onClick={openEditGroupDpMenu}\r\n          >\r\n            <Edit className=\"text-light fs-6\" />\r\n          </i>\r\n        </CustomTooltip>\r\n        {/* Edit/Delete profile pic menu */}\r\n        <EditPicMenu\r\n          anchor={editGroupDpMenuAnchor}\r\n          setAnchor={setEditGroupDpMenuAnchor}\r\n          selectProfilePic={() => imgInput.current.click()}\r\n          openDeletePhotoConfirmDialog={handleReset}\r\n          deletePhotoCondition={\r\n            !chatDisplayPicUrl?.endsWith(\"group_mbuvht.png\")\r\n          }\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleImgInputChange}\r\n          name=\"groupdp\"\r\n          id=\"editGroupDp\"\r\n          ref={imgInput}\r\n          className={`d-none`}\r\n          disabled={loading}\r\n        />\r\n      </section>\r\n      {/* Group Name input */}\r\n      <section className={`${formFieldClassName}`}>\r\n        <label htmlFor=\"groupName\" className={`${formLabelClassName}`}>\r\n          Group Name <span className=\"required\">*</span>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={chatName}\r\n          onChange={(e) => {\r\n            dispatch(setGroupInfo({ ...groupInfo, chatName: e.target.value }));\r\n          }}\r\n          required\r\n          autoFocus\r\n          name=\"groupname\"\r\n          id=\"groupName\"\r\n          className={`${inputFieldClassName}`}\r\n          disabled={loading}\r\n          placeholder=\"Eg: The Avengers\"\r\n        />\r\n      </section>\r\n      <DialogActions className=\"mt-3\" style={{ marginBottom: \"-17px\" }}>\r\n        <Button\r\n          sx={btnHoverStyle}\r\n          disabled={loading}\r\n          style={btnCustomStyle}\r\n          onClick={closeChildDialog}\r\n        >\r\n          <span>\r\n            <KeyboardDoubleArrowLeft\r\n              className=\"btnArrowIcons\"\r\n              style={{\r\n                margin: \"0px 5px 2px 0px\",\r\n              }}\r\n            />\r\n            Back\r\n          </span>\r\n        </Button>\r\n        <Button\r\n          sx={btnHoverStyle}\r\n          disabled={loading}\r\n          style={btnCustomStyle}\r\n          onClick={createGroupChat}\r\n        >\r\n          {loading ? (\r\n            <>\r\n              <CircularProgress size={25} style={{ marginRight: \"10px\" }} />\r\n              <span>Creating...</span>\r\n            </>\r\n          ) : (\r\n            <>Create Group</>\r\n          )}\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewGroupBody;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport {} from \"@mui/icons-material\";\r\nimport { Avatar, Chip } from \"@mui/material\";\r\nimport axios from \"../../utils/axios\";\r\nimport { debounce, truncateString } from \"../../utils/appUtils\";\r\nimport UserListItem from \"../utils/UserListItem\";\r\nimport SearchInput from \"../utils/SearchInput\";\r\nimport NewGroupBody from \"./NewGroupBody\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport LoadingList from \"../utils/LoadingList\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectAppState, setGroupInfo } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { setDialogAction } from \"../../store/slices/CustomDialogSlice\";\r\n\r\nconst AddMembersToGroup = ({ getAddedMembers, forCreateGroup }) => {\r\n  const { loggedInUser, groupInfo } = useSelector(selectAppState);\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const dispatch = useDispatch();\r\n\r\n  const [groupData, setGroupData] = useState(groupInfo);\r\n  const [fetching, setFetching] = useState(false);\r\n  const groupMembers = groupData?.users;\r\n  const [isMemberSelected, setIsMemberSelected] = useState(false);\r\n  const [addedMembers, setAddedMembers] = useState([]);\r\n\r\n  const searchUserInput = useRef(null);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const { setChildDialogBody, displayChildDialog, closeChildDialog } =\r\n    childDialogMethods;\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setGroupData(groupInfo);\r\n  }, [groupInfo]);\r\n\r\n  // For 'create group chat'\r\n  const openNewGroupDialog = () => {\r\n    if (addedMembers?.length < 2) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Add Atleast 2 Members\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(false);\r\n    dispatch(setGroupInfo(groupData));\r\n    setChildDialogBody(<NewGroupBody closeChildDialog={closeChildDialog} />);\r\n    displayChildDialog({\r\n      title: \"Create New Group\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSearchResults([]);\r\n    setSearchQuery(\"\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // For create group: [Next >>] button\r\n    if (forCreateGroup) dispatch(setDialogAction(openNewGroupDialog));\r\n  }, [groupData]);\r\n\r\n  useEffect(() => {\r\n    // For add more group members\r\n    if (!forCreateGroup) getAddedMembers([...addedMembers]);\r\n  }, [addedMembers]);\r\n\r\n  const searchUsers = debounce(async (e) => {\r\n    const query = e.target?.value?.trim();\r\n    setSearchQuery(query);\r\n    if (!query) return setSearchResults([]);\r\n\r\n    setFetching(true);\r\n    if (isMemberSelected) setIsMemberSelected(false);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n    try {\r\n      const { data } = await axios.get(`/api/user?search=${query}`, config);\r\n\r\n      // Remove all the already added members from search results\r\n      let membersNotAdded = [...data];\r\n      groupMembers.forEach((addedMember) => {\r\n        membersNotAdded = membersNotAdded.filter(\r\n          (m) => m._id !== addedMember._id\r\n        );\r\n      });\r\n\r\n      setFetching(false);\r\n      setSearchResults(membersNotAdded);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Users\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-left\",\r\n        })\r\n      );\r\n      setFetching(false);\r\n    }\r\n  }, 800);\r\n\r\n  const unselectUser = (user) => {\r\n    if (!user) return;\r\n    setGroupData({\r\n      ...groupData,\r\n      users: groupMembers.filter((u) => u._id !== user._id),\r\n    });\r\n    // Remove user from added member list\r\n    setAddedMembers(addedMembers.filter((u) => u._id !== user._id));\r\n    // Add removed user to search result list\r\n    setSearchResults([user, ...searchResults]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"addGroupMembers d-flex flex-column\">\r\n      {/* Selected Users tag list */}\r\n      <section\r\n        className=\"mx-auto px-3 py-2 overflow-auto d-flex flex-wrap\"\r\n        style={{\r\n          flex: \"0.33\",\r\n          borderRadius: \"15px\",\r\n          backgroundColor: \"#303030\",\r\n        }}\r\n      >\r\n        {addedMembers?.map((user) => (\r\n          <Chip\r\n            key={user?._id}\r\n            className=\"userChip text-light bg-success rounded-pill fs-6\"\r\n            avatar={\r\n              <Avatar\r\n                className=\"userChipAvatar\"\r\n                alt={user?.name}\r\n                src={user?.profilePic}\r\n              />\r\n            }\r\n            label={truncateString(user?.name?.split(\" \")[0], 12, 8)}\r\n            onDelete={() => unselectUser(user)}\r\n          />\r\n        ))}\r\n      </section>\r\n      {/* Search Bar */}\r\n      <SearchInput\r\n        ref={searchUserInput}\r\n        searchHandler={searchUsers}\r\n        autoFocus={true}\r\n        placeholder=\"Search Members\"\r\n        clearInput={() => {\r\n          setSearchQuery(\"\");\r\n          setSearchResults([]);\r\n          searchUserInput.current.focus();\r\n        }}\r\n      />\r\n      {/* Search Results */}\r\n      <section\r\n        className=\"position-relative mx-auto mt-2 overflow-auto\"\r\n        style={{ flex: \"1\", marginBottom: \"-10px\" }}\r\n      >\r\n        <div\r\n          // 'Event delegation' (add only one event listener for\r\n          // parent element instead of adding for each child element)\r\n          onClick={(e) => {\r\n            const userId = e.target.dataset.user;\r\n            if (!userId) return;\r\n\r\n            if (!isMemberSelected) setIsMemberSelected(true);\r\n            // Add selected user to tag list\r\n            const selectedUser = searchResults.find((u) => u._id === userId);\r\n            setGroupData({\r\n              ...groupData,\r\n              users: [...groupMembers, selectedUser],\r\n            });\r\n            // Add selected user to added member list\r\n            setAddedMembers([...addedMembers, selectedUser]);\r\n            // Remove selected user from search result list\r\n            setSearchResults(searchResults.filter((u) => u._id !== userId));\r\n          }}\r\n        >\r\n          {fetching ? (\r\n            <LoadingList listOf=\"Member\" dpRadius={\"43px\"} count={6} />\r\n          ) : searchResults.length > 0 ? (\r\n            searchResults.map((user) => (\r\n              <UserListItem\r\n                key={user._id}\r\n                user={user}\r\n                truncateValues={[21, 18]}\r\n              />\r\n            ))\r\n          ) : (\r\n            searchQuery &&\r\n            !fetching && (\r\n              <p className=\"text-light text-center fs-5 mt-3 mx-5\">\r\n                {isMemberSelected ? \"No Other Users \" : \"No Results \"}\r\n                Found for '\r\n                <span className=\"text-info\">\r\n                  {truncateString(searchQuery, 25, 22)}\r\n                </span>\r\n                '\r\n              </p>\r\n            )\r\n          )}\r\n        </div>\r\n      </section>\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMembersToGroup;\r\n","import {\r\n  AudioFile,\r\n  Description,\r\n  DoneAll,\r\n  GifBox,\r\n  Image,\r\n  PictureAsPdf,\r\n  VideoFile,\r\n} from \"@mui/icons-material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport {\r\n  dateStringOf,\r\n  isImageFile,\r\n  msgDateStringOf,\r\n  msgTimeStringOf,\r\n  truncateString,\r\n} from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#E6480C\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  borderRadius: 5,\r\n  backgroundColor: \"#E6480C\",\r\n};\r\n\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ChatListItem = ({ chat }) => {\r\n  const { selectedChat, loggedInUser } = useSelector(selectAppState);\r\n  const {\r\n    _id,\r\n    chatName,\r\n    receiverEmail,\r\n    isGroupChat,\r\n    lastMessage,\r\n    chatDisplayPic,\r\n  } = chat;\r\n\r\n  const tooltipTitle = isGroupChat\r\n    ? `Group: ${chatName}\\n(${chat?.users?.length} Members)`\r\n    : `${chatName}\\n${receiverEmail}`;\r\n\r\n  let lastMsgContent = lastMessage?.content\r\n    ?.replaceAll(\"<br>\", \"\\n\")\r\n    .replaceAll(\"&nbsp;\", \" \")\r\n    .replaceAll(\"<div>\", \"\\n\")\r\n    .replaceAll(\"</div>\", \"\\n\")\r\n    .replaceAll(\"<span>\", \"\")\r\n    .replaceAll(\"</span>\", \"\");\r\n\r\n  const lastMsgDate = new Date(lastMessage?.createdAt);\r\n  const lastMsgDateString = msgDateStringOf(lastMsgDate);\r\n\r\n  const lastMsgFileUrl = lastMessage?.fileUrl;\r\n  const fileContents = lastMessage?.file_name?.split(\"===\") || [];\r\n  const lastMsgFileName = fileContents[0] || \"\";\r\n  const lastMsgData = lastMsgContent || lastMsgFileName;\r\n  const fileType = fileContents[1]?.split(\"+++\")[1];\r\n  let lastMsgFileType;\r\n\r\n  if (lastMsgFileUrl) {\r\n    lastMsgFileType = isImageFile(lastMsgFileUrl)\r\n      ? \"image\"\r\n      : /(\\.gif)$/.test(lastMsgFileUrl)\r\n      ? \"gif\"\r\n      : fileType?.startsWith(\"video/\") ||\r\n        /(\\.mp4|\\.mov|\\.ogv|\\.webm)$/.test(lastMsgFileUrl)\r\n      ? \"video\"\r\n      : fileType?.startsWith(\"audio/\") ||\r\n        /(\\.mp3|\\.ogg|\\.wav)$/.test(lastMsgFileUrl)\r\n      ? \"audio\"\r\n      : /(\\.pdf)$/.test(lastMsgFileUrl)\r\n      ? \"pdf\"\r\n      : \"otherFile\";\r\n  }\r\n\r\n  return (\r\n    <div\r\n      data-chat={_id}\r\n      className={`chatListItem user-select-none text-light pointer ${\r\n        selectedChat?._id === _id ? \"isSelected\" : \"\"\r\n      } d-flex justify-content-start align-items-center`}\r\n    >\r\n      {/* Chat Display Pic */}\r\n      <CustomTooltip\r\n        title={`View ${isGroupChat ? \"Group DP\" : \"Profile Pic\"}`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <img\r\n          src={chatDisplayPic}\r\n          alt={chatName}\r\n          data-chat={_id}\r\n          className={`img-fluid listItemAvatar chatListAvatar rounded-circle`}\r\n        />\r\n      </CustomTooltip>\r\n      {/* Chat Data */}\r\n      <div\r\n        data-chat={_id}\r\n        className=\"chatListData d-flex flex-column align-items-start px-2\"\r\n      >\r\n        {/* Chat Name */}\r\n        <p\r\n          data-chat={_id}\r\n          title={tooltipTitle}\r\n          className=\"chatListName fs-5 fw-bold text-info\"\r\n        >\r\n          {truncateString(chatName, 23, 20)}\r\n        </p>\r\n        {lastMessage && (\r\n          <span className=\"lastMsgDate\" data-chat={_id}>\r\n            {lastMsgDateString === \"Today\"\r\n              ? msgTimeStringOf(lastMsgDate)\r\n              : lastMsgDateString !== \"Yesterday\"\r\n              ? dateStringOf(lastMsgDate)\r\n              : \"Yesterday\"}\r\n          </span>\r\n        )}\r\n        {/* Last Message Data */}\r\n        {(lastMessage || lastMessage === null || isGroupChat) && (\r\n          <p data-chat={_id} className=\"chatListLastMessage\">\r\n            <span data-chat={_id} className=\"text-warning\">\r\n              <>\r\n                {lastMessage === null ||\r\n                (isGroupChat && !lastMessage) ||\r\n                (!isGroupChat &&\r\n                  lastMessage?.sender?._id !== loggedInUser?._id) ? (\r\n                  \"\"\r\n                ) : lastMessage?.sender?._id === loggedInUser?._id ? (\r\n                  <>\r\n                    {isGroupChat ? (\r\n                      <>You: </>\r\n                    ) : (\r\n                      <DoneAll\r\n                        data-chat={_id}\r\n                        className=\"me-1 fs-5\"\r\n                        style={{ color: \"lightblue\" }}\r\n                      />\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  truncateString(\r\n                    lastMessage?.sender?.name?.split(\" \")[0],\r\n                    12,\r\n                    8\r\n                  ) + \": \"\r\n                )}\r\n              </>\r\n            </span>\r\n            {lastMsgFileUrl ? (\r\n              <span data-chat={_id}>\r\n                {lastMsgFileType === \"image\" ? (\r\n                  <span data-chat={_id} title={lastMsgData}>\r\n                    <Image data-chat={_id} className=\"fileIcon\" />{\" \"}\r\n                    {truncateString(lastMsgContent, 25, 22) || \"Photo\"}\r\n                  </span>\r\n                ) : lastMsgFileType === \"gif\" ? (\r\n                  <span data-chat={_id} title={lastMsgData}>\r\n                    <GifBox data-chat={_id} className=\"fileIcon\" />{\" \"}\r\n                    {truncateString(lastMsgContent, 25, 22) || \"Gif\"}\r\n                  </span>\r\n                ) : lastMsgFileType === \"video\" ? (\r\n                  <span data-chat={_id} title={lastMsgData}>\r\n                    <VideoFile data-chat={_id} className=\"fileIcon\" />{\" \"}\r\n                    {truncateString(lastMsgContent, 25, 22) || \"Video\"}\r\n                  </span>\r\n                ) : lastMsgFileType === \"audio\" ? (\r\n                  <span data-chat={_id} title={lastMsgData}>\r\n                    <AudioFile data-chat={_id} className=\"fileIcon\" />{\" \"}\r\n                    {truncateString(lastMsgContent, 25, 22) || \"Audio\"}\r\n                  </span>\r\n                ) : lastMsgFileType === \"pdf\" ? (\r\n                  <span data-chat={_id} title={lastMsgData}>\r\n                    <PictureAsPdf data-chat={_id} className=\"fileIcon\" />{\" \"}\r\n                    {truncateString(lastMsgData, 22, 19) || \"Pdf\"}\r\n                  </span>\r\n                ) : (\r\n                  <span data-chat={_id} title={lastMsgData}>\r\n                    <Description data-chat={_id} className=\"fileIcon\" />{\" \"}\r\n                    {truncateString(lastMsgData, 22, 19) || \"File\"}\r\n                  </span>\r\n                )}\r\n              </span>\r\n            ) : (\r\n              <span data-chat={_id} title={lastMsgContent}>\r\n                {lastMessage === null\r\n                  ? \" Last Message was deleted\"\r\n                  : isGroupChat && !lastMessage\r\n                  ? `New Group Created`\r\n                  : truncateString(lastMsgContent, 25, 22)}\r\n              </span>\r\n            )}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListItem;\r\n","const FILE_STYLES = { width: \"90vw\", height: \"82vh\", borderRadius: 10 };\r\nconst PLACEHOLDER_IMG = process.env.REACT_APP_PLACEHOLDER_IMG_URL;\r\n\r\nconst FullSizeImage = ({ event, audioSrc, videoSrc }) => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n      {audioSrc ? (\r\n        <audio\r\n          src={audioSrc}\r\n          style={{ width: \"clamp(300px, 70%, 600px)\" }}\r\n          autoPlay\r\n          controls\r\n        >\r\n          Your browser does not support audio tag.\r\n        </audio>\r\n      ) : videoSrc ? (\r\n        <video src={videoSrc} style={FILE_STYLES} autoPlay controls>\r\n          Your browser does not support video tag.\r\n        </video>\r\n      ) : (\r\n        <img\r\n          src={event.target?.src || PLACEHOLDER_IMG}\r\n          alt={event.target?.alt || \"fullSizeImg\"}\r\n          className=\"img-fluid d-inline-block mx-auto\"\r\n          style={{ ...FILE_STYLES, objectFit: \"contain\" }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullSizeImage;\r\n","import { GroupAdd } from \"@mui/icons-material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  debounce,\r\n  getOneOnOneChatReceiver,\r\n  truncateString,\r\n} from \"../utils/appUtils\";\r\nimport axios from \"../utils/axios\";\r\nimport AddMembersToGroup from \"./dialogs/AddMembersToGroup\";\r\nimport ChatListItem from \"./utils/ChatListItem\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport FullSizeImage from \"./utils/FullSizeImage\";\r\nimport LoadingList from \"./utils/LoadingList\";\r\nimport SearchInput from \"./utils/SearchInput\";\r\nimport io from \"socket.io-client\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n} from \"../store/slices/AppSlice\";\r\nimport {\r\n  displayDialog,\r\n  setShowDialogActions,\r\n} from \"../store/slices/CustomDialogSlice\";\r\nimport { displayToast } from \"../store/slices/ToastSlice\";\r\n\r\nconst DEFAULT_GROUP_DP = process.env.REACT_APP_DEFAULT_GROUP_DP;\r\n\r\nconst arrowStyles = {\r\n  color: \"#777\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 16,\r\n  backgroundColor: \"#777\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ChatListView = ({ loadingMsgs, setFetchMsgs, setDialogBody }) => {\r\n  const { loggedInUser, selectedChat, refresh, clientSocket } =\r\n    useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n\r\n  const [chats, setChats] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filteredChats, setFilteredChats] = useState(chats);\r\n  const searchChatInput = useRef();\r\n\r\n  const openCreateGroupChatDialog = () => {\r\n    dispatch(\r\n      setGroupInfo({\r\n        chatDisplayPic: null,\r\n        chatDisplayPicUrl: DEFAULT_GROUP_DP,\r\n        chatName: \"\",\r\n        users: [],\r\n      })\r\n    );\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<AddMembersToGroup forCreateGroup={true} />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Add Group Members\",\r\n        nolabel: \"Cancel\",\r\n        yeslabel: \"Next\",\r\n        action: null,\r\n      })\r\n    );\r\n  };\r\n\r\n  const displayFullSizeImage = (e) => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<FullSizeImage event={e} />);\r\n    dispatch(\r\n      displayDialog({\r\n        isFullScreen: true,\r\n        title: e.target?.alt || \"Display Pic\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const fetchChats = async () => {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${loggedInUser?.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`/api/chat`, config);\r\n\r\n      const mappedChats = data.map((chat) => {\r\n        const { isGroupChat, users } = chat;\r\n\r\n        if (!isGroupChat) {\r\n          const receiver = getOneOnOneChatReceiver(loggedInUser, users);\r\n          return {\r\n            ...chat,\r\n            chatName: receiver?.name,\r\n            receiverEmail: receiver?.email,\r\n            chatDisplayPic: receiver?.profilePic,\r\n          };\r\n        }\r\n        return chat;\r\n      });\r\n      setChats(mappedChats);\r\n      setFilteredChats(mappedChats);\r\n      if (loading) setLoading(false);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Chats\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      if (loading) setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Debouncing filterChats method to limit the no. of fn calls\r\n  const searchChats = debounce((e) => {\r\n    const chatNameInput = e.target?.value?.toLowerCase().trim();\r\n    if (!chatNameInput) {\r\n      return setFilteredChats(chats);\r\n    }\r\n    setFilteredChats(\r\n      chats.filter((chat) =>\r\n        chat?.chatName?.toLowerCase().includes(chatNameInput)\r\n      )\r\n    );\r\n  }, 600);\r\n\r\n  useEffect(() => {\r\n    fetchChats();\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <div\r\n      className={`chatpageDiv chatpageView chatListView text-light ${\r\n        selectedChat ? \"d-none d-md-flex\" : \"d-flex\"\r\n      } flex-column user-select-none col-md-5 col-lg-4 mx-1 p-2`}\r\n      style={{ pointerEvents: loadingMsgs ? \"none\" : \"auto\" }}\r\n    >\r\n      <section className=\"position-relative\">\r\n        <p className=\"chatListHeader fw-bold fs-3 rounded-pill bg-info bg-opacity-10 py-2\">\r\n          CHATS\r\n          {/* Create Group Chat */}\r\n          <CustomTooltip\r\n            title=\"Create New Group Chat\"\r\n            placement=\"bottom-end\"\r\n            arrow\r\n          >\r\n            <button\r\n              className={`btnCreateGroup pointer btn btn-outline-secondary text-light px-3`}\r\n              onClick={openCreateGroupChatDialog}\r\n            >\r\n              <GroupAdd />\r\n            </button>\r\n          </CustomTooltip>\r\n        </p>\r\n      </section>\r\n      {/* Search Bar */}\r\n      {chats?.length > 0 && (\r\n        <section className=\"searchChat\">\r\n          <SearchInput\r\n            ref={searchChatInput}\r\n            searchHandler={searchChats}\r\n            autoFocus={false}\r\n            placeholder=\"Search Chat\"\r\n            clearInput={() => setFilteredChats(chats)}\r\n          />\r\n        </section>\r\n      )}\r\n      {/* Chat list */}\r\n      <section className=\"chatList m-1 p-1 overflow-auto position-relative\">\r\n        {loading ? (\r\n          <LoadingList listOf=\"Chat\" dpRadius={\"49px\"} count={8} />\r\n        ) : filteredChats?.length > 0 ? (\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={(e) => {\r\n              const chatId =\r\n                e.target.dataset?.chat || e.target.parentNode.dataset?.chat;\r\n              if (!chatId) return;\r\n\r\n              if (e.target.className?.toString().includes(\"chatListAvatar\")) {\r\n                return displayFullSizeImage(e);\r\n              }\r\n              const clickedChat = filteredChats.find(\r\n                (chat) => chat._id === chatId\r\n              );\r\n              if (clickedChat._id === selectedChat?._id) return;\r\n              dispatch(setSelectedChat(clickedChat));\r\n              setFetchMsgs(true); // To fetch selected chat msgs\r\n              if (clickedChat?.isGroupChat) dispatch(setGroupInfo(clickedChat));\r\n            }}\r\n          >\r\n            {filteredChats\r\n              .filter(\r\n                (chat) => chat.lastMessage !== undefined || chat.isGroupChat\r\n              )\r\n              .map((chat) => (\r\n                <ChatListItem key={chat._id} chat={chat} />\r\n              ))}\r\n          </div>\r\n        ) : (\r\n          <span className=\"d-inline-block w-100 text-light h4 mt-5 mx-auto\">\r\n            No Chats Found\r\n          </span>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListView;\r\n","import { getOneOnOneChatReceiver, truncateString } from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nconst arrowStyles = {\r\n  color: \"#111\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ViewProfileBody = ({ memberProfilePic, memberName, memberEmail }) => {\r\n  const { loggedInUser, selectedChat } = useSelector(selectAppState);\r\n  let name, email, profilePic;\r\n\r\n  if (memberProfilePic && memberName && memberEmail) {\r\n    name = memberName;\r\n    email = memberEmail;\r\n    profilePic = memberProfilePic;\r\n  } else {\r\n    const receiver = getOneOnOneChatReceiver(loggedInUser, selectedChat?.users);\r\n    name = receiver?.name;\r\n    email = receiver?.email;\r\n    profilePic = receiver?.profilePic;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* View Profile Pic */}\r\n      <section className=\"dialogField d-flex position-relative mb-4\">\r\n        <img\r\n          className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n          id=\"view_profilePic\"\r\n          src={profilePic}\r\n          alt={name}\r\n        />\r\n      </section>\r\n      {/* View Name */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-15px\" }}>\r\n          <CustomTooltip\r\n            title={name?.length > 20 ? name : \"\"}\r\n            placement=\"top\"\r\n            arrow\r\n          >\r\n            <div\r\n              className=\"w-100 h1 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"35px\" }}\r\n            >\r\n              {truncateString(name, 25, 21)}\r\n            </div>\r\n          </CustomTooltip>\r\n        </div>\r\n      </section>\r\n      {/* View Email */}\r\n      <section\r\n        className={`dialogField text-center mb-2`}\r\n        style={{ marginTop: \"-10px\" }}\r\n      >\r\n        <CustomTooltip\r\n          title={email?.length > 20 ? email : \"\"}\r\n          placement=\"bottom\"\r\n          arrow\r\n        >\r\n          <span className=\"h4\" style={{ color: \"lightblue\" }}>\r\n            {truncateString(email, 25, 21)}\r\n          </span>\r\n        </CustomTooltip>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewProfileBody;\r\n","import { KeyboardArrowDown } from \"@mui/icons-material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#E6480C\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  borderRadius: 10,\r\n  backgroundColor: \"#E6480C\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst GroupMemberItem = ({ user, truncateValues }) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const { _id, name, email, profilePic } = user;\r\n  const [max, index] = truncateValues;\r\n  const isLoggedInUser = _id === loggedInUser?._id;\r\n\r\n  return (\r\n    <div\r\n      data-user={_id}\r\n      className={`groupMemberItem position-relative user-select-none d-flex text-light justify-content-start align-items-center px-3 ${\r\n        !isLoggedInUser && \"pointer\"\r\n      }`}\r\n    >\r\n      {user?.isGroupAdmin && (\r\n        <span\r\n          className={`adminBadge position-absolute fw-light badge rounded-3 bg-success`}\r\n          style={{ cursor: \"auto\" }}\r\n        >\r\n          Admin\r\n        </span>\r\n      )}\r\n      {!isLoggedInUser && (\r\n        <span\r\n          data-user={_id}\r\n          className=\"memberSettingsIcon text-light position-absolute rounded-circle\"\r\n        >\r\n          <KeyboardArrowDown data-user={_id} />\r\n        </span>\r\n      )}\r\n      <CustomTooltip\r\n        data-user={_id}\r\n        title={`${isLoggedInUser ? \"\" : `${name} (${email})`}`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <img\r\n          src={profilePic}\r\n          alt={_id}\r\n          data-user={_id}\r\n          className={`img-fluid listItemAvatar groupMemberAvatar rounded-circle`}\r\n        />\r\n      </CustomTooltip>\r\n      <div\r\n        data-user={_id}\r\n        className=\"groupMemberData d-flex flex-column align-items-start px-2\"\r\n      >\r\n        <p data-user={_id} className=\"groupMemberName fw-bold text-info\">\r\n          {isLoggedInUser ? \"You\" : truncateString(name, max, index)}\r\n        </p>\r\n        <p data-user={_id} className=\"groupMemberEmail\">\r\n          {truncateString(email, max, index)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupMemberItem;\r\n","import {\r\n  AdminPanelSettings,\r\n  GroupRemove,\r\n  InfoOutlined,\r\n  Message,\r\n} from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport axios from \"../../utils/axios\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport ViewProfileBody from \"../dialogs/ViewProfileBody\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n  toggleRefresh,\r\n} from \"../../store/slices/AppSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { setLoading } from \"../../store/slices/FormfieldSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\n\r\nconst MemberOptionsMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  clickedMember,\r\n  setShowDialogActions,\r\n  setShowDialogClose,\r\n  childDialogMethods,\r\n}) => {\r\n  const { loggedInUser, refresh, groupInfo } = useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n\r\n  const { setChildDialogBody, displayChildDialog } = childDialogMethods;\r\n  const isLoggedInUserGroupAdmin = groupInfo?.groupAdmins?.some(\r\n    (admin) => admin?._id === loggedInUser?._id\r\n  );\r\n  const clickedMemberName = truncateString(\r\n    clickedMember?.name?.split(\" \")[0],\r\n    12,\r\n    9\r\n  );\r\n  const styledMemberName = (\r\n    <span style={{ color: \"violet\", fontSize: \"22px\" }}>\r\n      {clickedMemberName}\r\n    </span>\r\n  );\r\n  const updateView = (data) => {\r\n    dispatch(toggleRefresh(!refresh));\r\n    dispatch(setSelectedChat(data));\r\n  };\r\n\r\n  // Create/Retreive chat when 'Message Member' is clicked\r\n  const openChat = async () => {\r\n    dispatch(hideDialog()); // Close all dialogs by closing parent dialog\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        `/api/chat`,\r\n        { userId: clickedMember?._id },\r\n        config\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Create/Retrieve Chat\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const openViewProfileDialog = () => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    setChildDialogBody(\r\n      <ViewProfileBody\r\n        memberProfilePic={clickedMember?.profilePic}\r\n        memberName={clickedMember?.name}\r\n        memberEmail={clickedMember?.email}\r\n      />\r\n    );\r\n    displayChildDialog({\r\n      title: \"View Profile\",\r\n    });\r\n  };\r\n\r\n  const makeGroupAdmin = async () => {\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        `/api/chat/group/make-admin`,\r\n        { userId: clickedMember?._id, chatId: groupInfo?._id },\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: `${clickedMemberName} is now a Group Admin`,\r\n          type: \"success\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setGroupInfo(data));\r\n      updateView(data);\r\n      dispatch(setLoading(false));\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Make Group Admin Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const dismissAsAdmin = async () => {\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/dismiss-admin`,\r\n        { userId: clickedMember?._id, chatId: groupInfo?._id },\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: `${clickedMemberName} is no longer a Group Admin`,\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      dispatch(setGroupInfo(data));\r\n      updateView(data);\r\n      return \"membersUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Dismiss As Group Admin Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  const removeFromGroup = async () => {\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/remove`,\r\n        {\r\n          userToBeRemoved: clickedMember?._id,\r\n          isGroupAdmin: clickedMember?.isGroupAdmin,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: `${clickedMemberName} removed from Group`,\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      dispatch(setGroupInfo(data));\r\n      updateView(data);\r\n      return \"membersUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Remove From Group Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  // Confirmation dialogs\r\n  const openDismissAsAdminConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>Are you sure you want to dismiss {styledMemberName} as group admin?</>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Dismiss As Admin\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: dismissAsAdmin,\r\n    });\r\n  };\r\n\r\n  const openRemoveFromGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>Are you sure you want to remove {styledMemberName} from this group?</>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Remove From Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: removeFromGroup,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      {/* Message X */}\r\n      <MenuItem sx={menuItemProps} onClick={openChat}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Message />\r\n        </ListItemIcon>\r\n        <MenuItemText>{`Message ${\r\n          clickedMemberName || \"Member\"\r\n        }`}</MenuItemText>\r\n      </MenuItem>\r\n      {/* View X */}\r\n      <MenuItem sx={menuItemProps} onClick={openViewProfileDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <InfoOutlined />\r\n        </ListItemIcon>\r\n        <MenuItemText>{`View ${clickedMemberName || \"Member\"}`}</MenuItemText>\r\n      </MenuItem>\r\n      {/* Make Group Admin / Dismiss as Admin */}\r\n      {isLoggedInUserGroupAdmin && (\r\n        <MenuItem\r\n          sx={menuItemProps}\r\n          onClick={\r\n            clickedMember?.isGroupAdmin\r\n              ? openDismissAsAdminConfirmDialog\r\n              : makeGroupAdmin\r\n          }\r\n        >\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <AdminPanelSettings />\r\n          </ListItemIcon>\r\n          <MenuItemText>\r\n            {clickedMember?.isGroupAdmin\r\n              ? \"Dismiss as Admin\"\r\n              : \"Make Group Admin\"}\r\n          </MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n      {/* Remove X */}\r\n      {isLoggedInUserGroupAdmin && (\r\n        <MenuItem sx={menuItemProps} onClick={openRemoveFromGroupConfirmDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <GroupRemove />\r\n          </ListItemIcon>\r\n          <MenuItemText>{`Remove ${\r\n            clickedMemberName || \"Member\"\r\n          }`}</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MemberOptionsMenu;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { debounce } from \"../../utils/appUtils\";\r\nimport SearchInput from \"../utils/SearchInput\";\r\nimport GroupMemberItem from \"../utils/GroupMemberItem\";\r\nimport MemberOptionsMenu from \"../menus/MemberOptionsMenu\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\n\r\nlet filteredMembersCache = [];\r\n\r\nconst ViewGroupMembers = () => {\r\n  const { loggedInUser, groupInfo } = useSelector(selectAppState);\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n  const groupMembers = groupInfo?.users;\r\n  const admins = groupInfo?.groupAdmins;\r\n  const [clickedMember, setClickedMember] = useState(null);\r\n  const [memberOptionsMenuAnchor, setMemberOptionsMenuAnchor] = useState(null);\r\n  // LoggedInUser and Group Admins should be at the top\r\n  const sortMembers = () => {\r\n    return [\r\n      loggedInUser,\r\n      ...admins?.filter((a) => a?._id !== loggedInUser?._id),\r\n      ...groupMembers?.filter(\r\n        (u) =>\r\n          u?._id !== loggedInUser?._id &&\r\n          admins?.every((a) => a?._id !== u?._id)\r\n      ),\r\n    ].map((member) => {\r\n      return {\r\n        ...member,\r\n        isGroupAdmin: admins?.some((a) => a?._id === member?._id),\r\n      };\r\n    });\r\n  };\r\n\r\n  // Update the member list whenever groupInfo is updated\r\n  useEffect(() => {\r\n    filteredMembersCache = sortMembers();\r\n    setFilteredMembers(filteredMembersCache);\r\n  }, [groupInfo]);\r\n\r\n  const filterMemberInput = useRef(null);\r\n  const [filteredMembers, setFilteredMembers] = useState(filteredMembersCache);\r\n\r\n  // Debouncing filterMembers method to limit the no. of fn calls\r\n  const filterMembers = debounce((e) => {\r\n    const memberNameInput = e.target?.value?.toLowerCase().trim();\r\n    if (!memberNameInput) {\r\n      return setFilteredMembers(filteredMembersCache);\r\n    }\r\n    setFilteredMembers(\r\n      filteredMembersCache?.filter(\r\n        (user) =>\r\n          user?.name?.toLowerCase().includes(memberNameInput) ||\r\n          user?.email?.toLowerCase().includes(memberNameInput)\r\n      )\r\n    );\r\n  }, 600);\r\n\r\n  const openMemberOptionsMenu = (e) => {\r\n    setMemberOptionsMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"addGroupMembers d-flex flex-column\"\r\n      style={{ height: \"75vh\" }}\r\n    >\r\n      {/* Member Count */}\r\n      <p className=\"h3 text-center text-light\" style={{ marginTop: \"5px\" }}>\r\n        {`${groupMembers?.length} Member${groupMembers?.length > 1 ? \"s\" : \"\"}`}\r\n      </p>\r\n      {/* Search Bar */}\r\n      <section className=\"searchChat\" style={{ marginTop: \"-15px\" }}>\r\n        <SearchInput\r\n          ref={filterMemberInput}\r\n          searchHandler={filterMembers}\r\n          autoFocus={false}\r\n          placeholder=\"Search Member\"\r\n          clearInput={() => setFilteredMembers(filteredMembersCache)}\r\n        />\r\n      </section>\r\n      {/* Member list */}\r\n      <section className=\"chatList p-1 overflow-auto position-relative\">\r\n        {filteredMembers?.length > 0 ? (\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={(e) => {\r\n              const userId = e.target?.dataset?.user;\r\n              if (userId) {\r\n                // Don't display member options menu for loggedInUser\r\n                if (loggedInUser?._id === userId) return;\r\n\r\n                setClickedMember(\r\n                  filteredMembers?.find((m) => m?._id === userId)\r\n                );\r\n                openMemberOptionsMenu(e);\r\n              }\r\n            }}\r\n          >\r\n            {filteredMembers.map((member) => (\r\n              <GroupMemberItem\r\n                key={member._id}\r\n                user={member}\r\n                truncateValues={[21, 18]}\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <span className=\"d-inline-block w-100 text-center text-light h5 mt-4 mx-auto\">\r\n            No Members Found\r\n          </span>\r\n        )}\r\n      </section>\r\n      <MemberOptionsMenu\r\n        anchor={memberOptionsMenuAnchor}\r\n        setAnchor={setMemberOptionsMenuAnchor}\r\n        clickedMember={clickedMember}\r\n        setShowDialogActions={setShowDialogActions}\r\n        setShowDialogClose={setShowDialogClose}\r\n        childDialogMethods={childDialogMethods}\r\n      />\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewGroupMembers;\r\n","import { useRef, useState } from \"react\";\r\nimport {\r\n  Delete,\r\n  Edit,\r\n  InfoOutlined,\r\n  Logout,\r\n  PersonAdd,\r\n} from \"@mui/icons-material\";\r\nimport { CircularProgress, IconButton } from \"@mui/material\";\r\nimport axios from \"../../utils/axios\";\r\nimport { isImageFile, truncateString, TWO_MB } from \"../../utils/appUtils\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport EditNameBody from \"./EditNameBody\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport AddMembersToGroup from \"./AddMembersToGroup\";\r\nimport ViewGroupMembers from \"./ViewGroupMembers\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport FullSizeImage from \"../utils/FullSizeImage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n  toggleRefresh,\r\n} from \"../../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#111\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 17,\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst GroupInfoBody = ({ messages }) => {\r\n  const { loggedInUser, refresh, groupInfo } = useSelector(selectAppState);\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const { loading, disableIfLoading } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n  const { setChildDialogBody, displayChildDialog, closeChildDialog } =\r\n    childDialogMethods;\r\n\r\n  const groupDP = groupInfo?.chatDisplayPic;\r\n  const groupName = groupInfo?.chatName;\r\n  const groupMembers = groupInfo?.users;\r\n  const admins = groupInfo?.groupAdmins;\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [editGroupDpMenuAnchor, setEditGroupDpMenuAnchor] = useState(null);\r\n  const isUserGroupAdmin = admins?.some(\r\n    (admin) => admin?._id === loggedInUser?._id\r\n  );\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n  const imgInput = useRef(null);\r\n  const btnClassName = \"w-100 btn text-light fs-5\";\r\n\r\n  const updateView = (data) => {\r\n    dispatch(setGroupInfo(data));\r\n    dispatch(toggleRefresh(!refresh));\r\n    dispatch(setSelectedChat(data)); // To update messages view\r\n  };\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") {\r\n      e.target.click();\r\n    }\r\n  };\r\n\r\n  // To retreive added members from `AddMembersToGroup` dialog\r\n  let updatedName = \"\";\r\n  const getUpdatedName = (updatedValue, options) => {\r\n    updatedName = updatedValue;\r\n    if (options?.submitUpdatedName) updateGroupName({ enterKeyClicked: true });\r\n  };\r\n\r\n  const updateGroupName = async (options) => {\r\n    if (!updatedName) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Enter Valid Group Name\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser?.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/chat/group/update-name\",\r\n        { groupName: updatedName, chatId: groupInfo?._id },\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Group Name Updated Successfully\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n      if (options?.enterKeyClicked) closeChildDialog();\r\n      else return \"profileUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Update Group Name\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Update Group Display Pic\r\n  const handleImgInputChange = async (e) => {\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n\r\n    if (!isImageFile(image.name)) {\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Invalid Image File\",\r\n          message: \"Please Select an Image File (png/jpg/jpeg/svg/webp)\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    if (image.size >= TWO_MB) {\r\n      imgInput.current.value = \"\";\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Select an Image Smaller than 2 MB\",\r\n          type: \"warning\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    dispatch(setLoading(true));\r\n    setUploading(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"displayPic\", image);\r\n    formData.append(\"currentDP\", groupDP);\r\n    formData.append(\"cloudinary_id\", groupInfo?.cloudinary_id);\r\n    formData.append(\"chatId\", groupInfo?._id);\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/chat/group/update-dp\",\r\n        formData,\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Group DP Updated Successfully\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n      updateView(data);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Update Group DP\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const deleteGroupDp = async () => {\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/delete-dp`,\r\n        {\r\n          currentDP: groupDP,\r\n          cloudinary_id: groupInfo?.cloudinary_id,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Group DP Deleted Successfully\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Delete Group DP\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const exitGroup = async () => {\r\n    if (groupMembers?.length === 1) {\r\n      return deleteGroup();\r\n    }\r\n\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/remove`,\r\n        {\r\n          userToBeRemoved: loggedInUser?._id,\r\n          isGroupAdmin: isUserGroupAdmin,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: `Exited From '${data?.chatName}' Group`,\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      updateView(null);\r\n      dispatch(hideDialog());\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Exit Group\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  const deleteGroup = async () => {\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const deleteGroupPromise = axios.put(\r\n        `/api/chat/group/delete`,\r\n        {\r\n          currentDP: groupInfo?.chatDisplayPic,\r\n          cloudinary_id: groupInfo?.cloudinary_id,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n      const deleteMessagesPromise = messages?.length\r\n        ? axios.put(\r\n            `/api/message/delete`,\r\n            {\r\n              messageIds: JSON.stringify(messages?.map((m) => m._id)),\r\n              isDeleteGroupRequest: true,\r\n            },\r\n            config\r\n          )\r\n        : Promise.resolve();\r\n\r\n      // Parallel execution of independent promises\r\n      await Promise.all([deleteGroupPromise, deleteMessagesPromise]);\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Group Deleted Successfully\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      updateView(null);\r\n      dispatch(hideDialog());\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Delete Group\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Open confirm dialogs\r\n  const openExitGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>\r\n        {groupMembers?.length === 1\r\n          ? `Since you're the only group member, this group will be \r\n            DELETED if you exit. Are you sure you want to exit?`\r\n          : `This group will be removed from your chats. \r\n             Are you sure you want to exit this group?`}\r\n      </>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Exit Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Exiting...\",\r\n      action: exitGroup,\r\n    });\r\n  };\r\n\r\n  const openDeleteGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>\r\n        All messages and files related to this group will be deleted and this\r\n        group will be removed from the chats of ALL MEMBERS. Are you sure you\r\n        want to delete this group?\r\n      </>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Delete Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteGroup,\r\n    });\r\n  };\r\n\r\n  // Open edit name dialog\r\n  const openEditGroupNameDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <EditNameBody\r\n        originalName={groupInfo?.chatName}\r\n        getUpdatedName={getUpdatedName}\r\n        placeholder=\"Enter New Group Name\"\r\n      />\r\n    );\r\n    displayChildDialog({\r\n      title: \"Edit Group Name\",\r\n      nolabel: \"CANCEL\",\r\n      yeslabel: \"SAVE\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: updateGroupName,\r\n    });\r\n  };\r\n\r\n  // Open delete photo confirm dialog\r\n  const openDeletePhotoConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(<>Are you sure you want to delete this display pic?</>);\r\n    displayChildDialog({\r\n      title: \"Delete Display Pic\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteGroupDp,\r\n    });\r\n  };\r\n\r\n  // To retreive added members from `AddMembersToGroup` dialog\r\n  let addedMembers = [];\r\n  const getAddedMembers = (updatedMembers) => {\r\n    addedMembers = updatedMembers;\r\n  };\r\n\r\n  const addMembersToGroup = async () => {\r\n    if (!isUserGroupAdmin) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Only Admin Can Add Members to Group\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    if (!addedMembers?.length) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Select Atleast 1 Member to Add\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    dispatch(setLoading(true));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser?.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/chat/group/add\",\r\n        {\r\n          usersToBeAdded: JSON.stringify(addedMembers),\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Successfully Added Member/s to Group\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Add Members to Group\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Open Add members dialog\r\n  const openAddMembersDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(<AddMembersToGroup getAddedMembers={getAddedMembers} />);\r\n    displayChildDialog({\r\n      title: \"Add Group Members\",\r\n      nolabel: \"Cancel\",\r\n      yeslabel: \"Add\",\r\n      loadingYeslabel: \"Adding...\",\r\n      action: addMembersToGroup,\r\n    });\r\n  };\r\n\r\n  const openViewMembersDialog = () => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    setChildDialogBody(<ViewGroupMembers />);\r\n    displayChildDialog({\r\n      title: ``,\r\n    });\r\n  };\r\n\r\n  const displayFullSizeImage = (e) => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    setChildDialogBody(<FullSizeImage event={e} />);\r\n    displayChildDialog({\r\n      title: e.target?.alt || \"Display Pic\",\r\n    });\r\n  };\r\n\r\n  const openEditGroupDpMenu = (e) => {\r\n    setEditGroupDpMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div className=\"groupDialog d-flex flex-column row\">\r\n      {/* View/Edit Display Pic */}\r\n      {loading && uploading ? (\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n          <CircularProgress\r\n            size={60}\r\n            style={{ margin: \"20px 0px\", color: \"lightblue\" }}\r\n          />\r\n          <span style={{ marginBottom: \"45px\" }} className=\"text-light h1\">\r\n            {\" Updating Photo...\"}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <section className=\"dialogField d-flex position-relative mb-4\">\r\n          <CustomTooltip title=\"View DP\" placement=\"right\" arrow>\r\n            <img\r\n              className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle pointer\"\r\n              id=\"groupInfo__displayPic\"\r\n              src={groupDP || \"GroupDp\"}\r\n              style={{ width: \"120px\", height: \"120px\" }}\r\n              onClick={displayFullSizeImage}\r\n              alt={groupName}\r\n            />\r\n          </CustomTooltip>\r\n\r\n          <CustomTooltip title=\"Edit Group DP\" placement=\"right\" arrow>\r\n            <i\r\n              id=\"editProfilePic\"\r\n              tabIndex={2}\r\n              onKeyDown={clickOnKeydown}\r\n              className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n              onClick={openEditGroupDpMenu}\r\n            >\r\n              <Edit className=\"text-light fs-6\" />\r\n            </i>\r\n          </CustomTooltip>\r\n          {/* Edit/Delete display pic menu */}\r\n          <EditPicMenu\r\n            anchor={editGroupDpMenuAnchor}\r\n            setAnchor={setEditGroupDpMenuAnchor}\r\n            selectProfilePic={() => imgInput.current.click()}\r\n            openDeletePhotoConfirmDialog={openDeletePhotoConfirmDialog}\r\n            deletePhotoCondition={!groupDP?.endsWith(\"group_mbuvht.png\")}\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={handleImgInputChange}\r\n            name=\"displayPic\"\r\n            id=\"groupInfo__displayPic\"\r\n            ref={imgInput}\r\n            className={`d-none`}\r\n            disabled={loading}\r\n          />\r\n        </section>\r\n      )}\r\n\r\n      {/* Group Name */}\r\n      <section className={`dialogField text-center mb-3`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-10px\" }}>\r\n          <CustomTooltip\r\n            title={groupName?.length > 24 ? groupName : \"\"}\r\n            placement=\"top\"\r\n            arrow\r\n          >\r\n            <div\r\n              className=\"w-100 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"30px\", lineHeight: \"30px\" }}\r\n            >\r\n              {truncateString(groupName, 25, 21)}\r\n            </div>\r\n          </CustomTooltip>\r\n          <CustomTooltip title=\"Edit Group Name\" placement=\"top\" arrow>\r\n            <IconButton\r\n              tabIndex={3}\r\n              onKeyDown={clickOnKeydown}\r\n              onClick={openEditGroupNameDialog}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: -8,\r\n                top: 0,\r\n                \":hover\": {\r\n                  backgroundColor: \"#aaaaaa30\",\r\n                },\r\n              }}\r\n            >\r\n              <Edit className=\"text-light\" />\r\n            </IconButton>\r\n          </CustomTooltip>\r\n        </div>\r\n      </section>\r\n\r\n      {/* No of members */}\r\n      <section\r\n        className={`dialogField text-center mb-3`}\r\n        style={{ marginTop: \"-10px\", borderRadius: \"10px\" }}\r\n      >\r\n        {`Group : ${groupMembers?.length} Member${\r\n          groupMembers?.length > 1 ? \"s\" : \"\"\r\n        }`}\r\n      </section>\r\n\r\n      {/* View Members */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <button\r\n          className={`${btnClassName} btn-outline-primary`}\r\n          onClick={openViewMembersDialog}\r\n        >\r\n          <InfoOutlined\r\n            className=\"text-light\"\r\n            style={{ marginLeft: \"-15px\" }}\r\n          />\r\n          <span className=\"ms-2\">View Members</span>\r\n        </button>\r\n      </section>\r\n\r\n      {/* Add Members (only for admins) */}\r\n      {isUserGroupAdmin && (\r\n        <section className={`dialogField text-center mb-2`}>\r\n          <button\r\n            className={`${btnClassName} btn-outline-success`}\r\n            onClick={openAddMembersDialog}\r\n          >\r\n            <PersonAdd className=\"text-light\" style={{ marginLeft: \"-20px\" }} />\r\n            <span className=\"ms-2\">Add Members</span>\r\n          </button>\r\n        </section>\r\n      )}\r\n\r\n      {/* Exit Group */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <button\r\n          className={`${btnClassName} btn-outline-danger`}\r\n          onClick={() => {\r\n            if (\r\n              isUserGroupAdmin &&\r\n              admins?.length === 1 &&\r\n              groupMembers?.length !== 1\r\n            ) {\r\n              return dispatch(\r\n                displayToast({\r\n                  message: `Every group must have atleast 1 admin. Since \r\n                you're the only group admin, you won't be allowed\r\n                to exit until you make someone else as the admin.`,\r\n                  type: \"warning\",\r\n                  duration: 10000,\r\n                  position: \"top-center\",\r\n                })\r\n              );\r\n            }\r\n            openExitGroupConfirmDialog();\r\n          }}\r\n        >\r\n          <Logout className=\"text-light\" style={{ marginLeft: \"-30px\" }} />\r\n          <span className=\"ms-2\">Exit Group</span>\r\n        </button>\r\n      </section>\r\n\r\n      {/* Delete Group (only for admins) */}\r\n      {isUserGroupAdmin && (\r\n        <section className={`dialogField text-center mb-2`}>\r\n          <button\r\n            className={`${btnClassName} btn-outline-danger`}\r\n            onClick={openDeleteGroupConfirmDialog}\r\n          >\r\n            <Delete className=\"text-light\" style={{ marginLeft: \"-20px\" }} />\r\n            <span className=\"ms-2\">Delete Group</span>\r\n          </button>\r\n        </section>\r\n      )}\r\n\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupInfoBody;\r\n","import { Skeleton } from \"@mui/material\";\r\n\r\nconst LoadingMsgs = ({ count }) => {\r\n  const skeletonStyle = {\r\n    backgroundColor: \"#777\",\r\n  };\r\n  return (\r\n    <>\r\n      {[...Array(count)].map((e, i) => (\r\n        <div\r\n          key={`loadingMsg${i}`}\r\n          className={`loadingMsg d-flex flex-column align-items-${\r\n            i % 2 ? \"start\" : \"end\"\r\n          } mb-2 mx-4`}\r\n        >\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className={`loadingSender col-3 mb-1`}\r\n            style={skeletonStyle}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className={`loadingContent col-5`}\r\n            style={skeletonStyle}\r\n          />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadingMsgs;\r\n","import {\r\n  Audiotrack,\r\n  Description,\r\n  Download,\r\n  Downloading,\r\n  PictureAsPdf,\r\n  PlayArrow,\r\n  PlayCircle,\r\n  Videocam,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  getFileSizeString,\r\n  isImageOrGifFile,\r\n  truncateString,\r\n} from \"../../utils/appUtils\";\r\nimport animationData from \"../../animations/app-loading.json\";\r\nimport LottieAnimation from \"../utils/LottieAnimation\";\r\nimport { useRef } from \"react\";\r\n\r\nconst IMG_BASE_URL = process.env.REACT_APP_CLOUDINARY_BASE_URL;\r\n\r\nconst MsgAttachment = ({\r\n  msgSent,\r\n  downloadingFileId,\r\n  loadingMediaId,\r\n  isPreview,\r\n  fileData,\r\n}) => {\r\n  const previewStyles = `${\r\n    isPreview ? \"py-4 border border-4 border-secondary previewFile\" : \"\"\r\n  }`;\r\n  const iconStyles = `${isPreview ? \"fs-1\" : \"fs-2\"}`;\r\n\r\n  let { fileUrl, file_id, file_name, size } = fileData;\r\n  const fileContents = file_name.split(\"===\") || [];\r\n  file_name = fileContents[0] || file_name;\r\n  const isMediaFile = fileContents[1]?.includes(\":\");\r\n  const mediaContents = isMediaFile ? fileContents[1].split(\"+++\") : [];\r\n  const mediaFileType = mediaContents[1];\r\n  const mediaFileSize = getFileSizeString(mediaContents[2]);\r\n  const loadingGif = useRef(null);\r\n\r\n  let fileSize = mediaContents[0] || parseInt(fileContents[1]) || size || \"\";\r\n\r\n  if (!isMediaFile) {\r\n    fileSize = getFileSizeString(fileSize);\r\n  }\r\n\r\n  const isDownloadingFile = downloadingFileId === file_id;\r\n  const fileType =\r\n    mediaFileType?.startsWith(\"video/\") ||\r\n    /(\\.mp4|\\.mov|\\.ogv|\\.webm)$/.test(file_name)\r\n      ? \"Video\"\r\n      : mediaFileType?.startsWith(\"audio/\") ||\r\n        /(\\.mp3|\\.ogg|\\.wav)$/.test(file_name)\r\n      ? \"Audio\"\r\n      : /(\\.doc|\\.docx)$/.test(file_name)\r\n      ? \"Word Doc\"\r\n      : /(\\.ppt|\\.pptx)$/.test(file_name)\r\n      ? \"PPT\"\r\n      : /(\\.xlsx|\\.csv|\\.xls)$/.test(file_name)\r\n      ? \"Spreadsheet\"\r\n      : /(\\.pdf)$/.test(file_name)\r\n      ? \"PDF\"\r\n      : file_name.substring(file_name.lastIndexOf(\".\") + 1)?.toUpperCase();\r\n\r\n  const downloadIcon = (\r\n    <span\r\n      data-download={file_id}\r\n      className={`downloadIcon ${isDownloadingFile ? \"downloading\" : \"\"} ${\r\n        isPreview || !msgSent ? \"d-none\" : \"\"\r\n      }`}\r\n      title={isDownloadingFile ? \"Downloading...\" : \"Download File\"}\r\n    >\r\n      {isDownloadingFile ? (\r\n        <Downloading />\r\n      ) : (\r\n        <Download data-download={file_id} />\r\n      )}\r\n    </span>\r\n  );\r\n  const fileNameWrapper = (\r\n    <span className={`${isPreview ? \"fs-4\" : \"fs-6\"}`}>\r\n      &nbsp;&nbsp;\r\n      <span title={file_name}>{truncateString(file_name + \"\", 40, 37)}</span>\r\n    </span>\r\n  );\r\n  const fileInfo = (\r\n    <>\r\n      {fileNameWrapper}\r\n      <div\r\n        className={`${isPreview ? \"fs-5 mt-4\" : \"\"}`}\r\n        style={{ marginBottom: isPreview ? -10 : 0 }}\r\n      >\r\n        {`${fileType} : ${fileSize}`}\r\n      </div>\r\n    </>\r\n  );\r\n  const hideWhileLoadingMedia =\r\n    loadingMediaId === file_id ? \"invisible\" : \"visible\";\r\n\r\n  const displayWhileLoadingMedia =\r\n    loadingMediaId === file_id ? \"visible\" : \"invisible\";\r\n\r\n  return (\r\n    <>\r\n      {fileUrl?.startsWith(IMG_BASE_URL) || isImageOrGifFile(file_name) ? (\r\n        <span className=\"d-inline-block msgImageWrapper mb-2\">\r\n          <img\r\n            src={fileUrl}\r\n            alt={file_name}\r\n            title={file_name}\r\n            data-image-id={file_id}\r\n            className={`msgImageFile d-inline-block`}\r\n          />\r\n        </span>\r\n      ) : (\r\n        <div\r\n          className=\"pointer\"\r\n          style={{ width: isPreview ? \"clamp(270px, 50vmin, 600px)\" : \"100%\" }}\r\n        >\r\n          {fileType === \"PDF\" ? (\r\n            <div className={`${previewStyles} msgFile pdfFile text-light`}>\r\n              <div>\r\n                <PictureAsPdf className={iconStyles} />\r\n                {downloadIcon}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          ) : fileType === \"Spreadsheet\" ? (\r\n            <div className={`${previewStyles} msgFile excelFile bg-success`}>\r\n              <div>\r\n                <Description className={iconStyles} />\r\n                {downloadIcon}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          ) : fileType === \"PPT\" ? (\r\n            <div className={`${previewStyles} msgFile pptFile text-light`}>\r\n              <div>\r\n                <Description className={iconStyles} />\r\n                {downloadIcon}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          ) : fileType === \"Word Doc\" ? (\r\n            <div className={`${previewStyles} msgFile wordFile`}>\r\n              <div>\r\n                <Description className={iconStyles} />\r\n                {downloadIcon}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          ) : fileType === \"Video\" ? (\r\n            <div className={`${previewStyles} msgFile mediaFile`}>\r\n              <div>\r\n                {downloadIcon}\r\n                {` ${mediaFileSize}`}\r\n              </div>\r\n              {fileNameWrapper}\r\n              <div\r\n                data-video={file_id}\r\n                data-video-name={file_name}\r\n                title=\"Click to Play\"\r\n                className=\"mediaMsg bg-gradient py-5\"\r\n              >\r\n                <PlayCircle\r\n                  data-video={file_id}\r\n                  data-video-name={file_name}\r\n                  className={`playMedia ${hideWhileLoadingMedia}`}\r\n                  style={{ fontSize: 40 }}\r\n                />\r\n                <LottieAnimation\r\n                  ref={loadingGif}\r\n                  className={`position-absolute ${displayWhileLoadingMedia}`}\r\n                  style={{\r\n                    marginBottom: 0,\r\n                    height: 50,\r\n                    color: \"white\",\r\n                  }}\r\n                  animationData={animationData}\r\n                />\r\n                <span\r\n                  data-video={file_id}\r\n                  data-video-name={file_name}\r\n                  className=\"mediaDuration videoDuration text-light\"\r\n                >\r\n                  <Videocam data-video={file_id} data-video-name={file_name} />\r\n                  &nbsp;&nbsp;{fileSize}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ) : fileType === \"Audio\" ? (\r\n            <div\r\n              className={`${previewStyles} msgFile mediaFile bg-dark bg-opacity-75`}\r\n            >\r\n              <div>\r\n                {downloadIcon}\r\n                {` ${mediaFileSize}`}\r\n              </div>\r\n              {fileNameWrapper}\r\n              <div\r\n                data-audio={file_id}\r\n                data-audio-name={file_name}\r\n                className=\"mediaMsg bg-gradient px-4 py-2\"\r\n                title=\"Click to Play\"\r\n              >\r\n                <PlayArrow\r\n                  data-audio={file_id}\r\n                  data-audio-name={file_name}\r\n                  className={`playMedia ${hideWhileLoadingMedia}`}\r\n                />\r\n                <LottieAnimation\r\n                  ref={loadingGif}\r\n                  className={`position-absolute ${displayWhileLoadingMedia}`}\r\n                  style={{\r\n                    marginBottom: 0,\r\n                    height: 30,\r\n                    color: \"white\",\r\n                  }}\r\n                  animationData={animationData}\r\n                />\r\n                <span\r\n                  data-audio={file_id}\r\n                  data-audio-name={file_name}\r\n                  className=\"mediaDuration audioDuration text-light\"\r\n                >\r\n                  <Audiotrack\r\n                    data-audio={file_id}\r\n                    data-audio-name={file_name}\r\n                    style={{ fontSize: 20 }}\r\n                  />\r\n                  &nbsp;{fileSize}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={`${previewStyles} msgFile otherFile`}>\r\n              <div>\r\n                <Description className={iconStyles} />\r\n                {downloadIcon}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MsgAttachment;\r\n","import { DoneAll, KeyboardArrowDown } from \"@mui/icons-material\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport {\r\n  msgTimeStringOf,\r\n  msgDateStringOf,\r\n  dateStringOf,\r\n} from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport MsgAttachment from \"./MsgAttachment\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#E6480C\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 16,\r\n  borderRadius: 5,\r\n  backgroundColor: \"#E6480C\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst Message = ({\r\n  downloadingFileId,\r\n  loadingMediaId,\r\n  msgSent,\r\n  currMsg,\r\n  prevMsg,\r\n}) => {\r\n  const { loggedInUser, selectedChat } = useSelector(selectAppState);\r\n  const msgContentRef = useRef(null);\r\n  const { _id, profilePic, name, email } = currMsg?.sender;\r\n  const isLoggedInUser = _id === loggedInUser._id;\r\n  const senderData = `${profilePic}===${name}===${email}`;\r\n  const currMsgId = isLoggedInUser ? currMsg?._id : null;\r\n  const isSameSender = _id === prevMsg?.sender._id;\r\n  const currMsgDate = new Date(currMsg.createdAt);\r\n  const prevMsgDate = new Date(prevMsg?.createdAt);\r\n  const isOtherDay = dateStringOf(currMsgDate) !== dateStringOf(prevMsgDate);\r\n  const showCurrSender =\r\n    !isLoggedInUser &&\r\n    selectedChat?.isGroupChat &&\r\n    (!isSameSender || isOtherDay);\r\n\r\n  useEffect(() => {\r\n    if (msgContentRef?.current)\r\n      msgContentRef.current.innerHTML = currMsg?.content;\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <section\r\n        className={`msgRow d-flex justify-content-${\r\n          isLoggedInUser ? \"end\" : \"start\"\r\n        }`}\r\n        style={{ marginTop: isSameSender ? \"3px\" : \"10px\" }}\r\n      >\r\n        {showCurrSender ? (\r\n          <CustomTooltip title={`View Profile`} placement=\"top-start\" arrow>\r\n            <img\r\n              src={profilePic}\r\n              alt={name}\r\n              data-sender={senderData}\r\n              className=\"senderAvatar rounded-circle pointer\"\r\n            />\r\n          </CustomTooltip>\r\n        ) : (\r\n          selectedChat?.isGroupChat && <span style={{ width: \"31px\" }}></span>\r\n        )}\r\n        <div\r\n          className={`msgBox d-flex flex-column text-start p-2 rounded-3\r\n          mx-2 mx-md-3 ${isLoggedInUser ? \"yourMsg\" : \"receiversMsg\"}`}\r\n          data-msg={currMsgId}\r\n        >\r\n          {showCurrSender && (\r\n            <span data-sender={senderData} className=\"msgSender pointer\">\r\n              {name}\r\n            </span>\r\n          )}\r\n          {isLoggedInUser && msgSent && (\r\n            <span\r\n              data-msg={currMsgId}\r\n              title=\"Edit/Delete Message\"\r\n              className={`msgOptionsIcon text-light position-absolute \r\n              top-0 end-0 w-25 h-100`}\r\n            >\r\n              <KeyboardArrowDown\r\n                data-msg={currMsgId}\r\n                style={{ fontSize: 22 }}\r\n                className=\"position-absolute top-0 end-0\"\r\n              />\r\n            </span>\r\n          )}\r\n          {currMsg?.fileUrl && (\r\n            <MsgAttachment\r\n              msgSent={msgSent}\r\n              downloadingFileId={downloadingFileId}\r\n              loadingMediaId={loadingMediaId}\r\n              fileData={{\r\n                fileUrl: currMsg.fileUrl,\r\n                file_id: currMsg.file_id,\r\n                file_name: currMsg.file_name,\r\n              }}\r\n            />\r\n          )}\r\n          <div data-msg={currMsgId} className=\"msgContent d-flex\">\r\n            {currMsg?.content && <span ref={msgContentRef}></span>}\r\n            <span\r\n              data-msg={currMsgId}\r\n              className=\"msgTime text-end d-flex align-items-end justify-content-end\"\r\n            >\r\n              {msgTimeStringOf(currMsgDate)}\r\n              {isLoggedInUser && (\r\n                <>\r\n                  {msgSent ? (\r\n                    <DoneAll className=\"text-info fs-6 ms-1\" />\r\n                  ) : (\r\n                    <CircularProgress\r\n                      size={10}\r\n                      className=\"sendStatusIcon ms-1\"\r\n                    />\r\n                  )}\r\n                </>\r\n              )}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {isOtherDay && (\r\n        <div className={`msgDate mt-3 mb-2 mx-auto py-1 px-3 rounded-3`}>\r\n          {msgDateStringOf(currMsgDate)}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import { Delete, Edit } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\n\r\nconst MsgOptionsMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  openEditMsgDialog,\r\n  openDeleteMsgConfirmDialog,\r\n}) => {\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={openEditMsgDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Edit />\r\n        </ListItemIcon>\r\n        <MenuItemText>Edit Message</MenuItemText>\r\n      </MenuItem>\r\n      <MenuItem sx={menuItemProps} onClick={openDeleteMsgConfirmDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Delete />\r\n        </ListItemIcon>\r\n        <MenuItemText>Delete Message</MenuItemText>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MsgOptionsMenu;\r\n","import { Close } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport MsgAttachment from \"./MsgAttachment\";\r\n\r\nconst FILE_WRAPPER_CLASS =\r\n  \"mt-4 h-50 d-flex justify-content-center align-items-center\";\r\nconst ATTACHMENT_STYLE = {\r\n  borderRadius: 7,\r\n  width: \"clamp(290px, 90%, 700px)\",\r\n  maxHeight: 250,\r\n};\r\nconst PLACEHOLDER_IMG = process.env.REACT_APP_PLACEHOLDER_IMG_URL;\r\n\r\nconst AttachmentPreview = ({\r\n  attachmentData,\r\n  discardAttachment,\r\n  CustomTooltip,\r\n}) => {\r\n  const {\r\n    attachment: { name, type, size },\r\n    attachmentPreviewUrl,\r\n  } = attachmentData;\r\n\r\n  const previewTitle = type.startsWith(\"application/\") ? \"Attached File\" : name;\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-black bg-gradient bg-opacity-75 h-100 d-flex flex-column justify-content-start align-items-center\"\r\n      style={{ borderRadius: 10 }}\r\n    >\r\n      {/* Discard Attachment button */}\r\n      <CustomTooltip title=\"Discard Attachment\" placement=\"bottom-start\" arrow>\r\n        <IconButton\r\n          onClick={discardAttachment}\r\n          sx={{\r\n            position: \"absolute\",\r\n            left: 15,\r\n            top: 12,\r\n            color: \"#999999\",\r\n            \":hover\": {\r\n              backgroundColor: \"#aaaaaa20\",\r\n            },\r\n          }}\r\n        >\r\n          <Close />\r\n        </IconButton>\r\n      </CustomTooltip>\r\n      {/* Attached File Name */}\r\n      <CustomTooltip\r\n        title={previewTitle?.length > 23 ? previewTitle : \"\"}\r\n        placement=\"top\"\r\n        arrow\r\n      >\r\n        <span\r\n          className={`mt-5 mb-2`}\r\n          style={{ color: \"lightblue\", fontSize: 25, zIndex: 5 }}\r\n        >\r\n          {truncateString(previewTitle || \"Attached File\", 23, 20)}\r\n        </span>\r\n      </CustomTooltip>\r\n      <>\r\n        {type?.startsWith(\"image/\") ? (\r\n          <div className={`${FILE_WRAPPER_CLASS}`}>\r\n            <img\r\n              style={ATTACHMENT_STYLE}\r\n              src={attachmentPreviewUrl || PLACEHOLDER_IMG}\r\n              alt=\"msgAttachment\"\r\n            />\r\n          </div>\r\n        ) : type?.startsWith(\"audio/\") ? (\r\n          <div className={`${FILE_WRAPPER_CLASS}`} style={{ width: \"85%\" }}>\r\n            <audio\r\n              src={attachmentPreviewUrl || \"\"}\r\n              controls\r\n              autoPlay\r\n              style={ATTACHMENT_STYLE}\r\n            >\r\n              {name}\r\n            </audio>\r\n          </div>\r\n        ) : type?.startsWith(\"video/\") ? (\r\n          <div className={`${FILE_WRAPPER_CLASS}`}>\r\n            <video\r\n              src={attachmentPreviewUrl || \"\"}\r\n              controls\r\n              autoPlay\r\n              style={ATTACHMENT_STYLE}\r\n            >\r\n              {name}\r\n            </video>\r\n          </div>\r\n        ) : (\r\n          <div className={`${FILE_WRAPPER_CLASS}`}>\r\n            <MsgAttachment\r\n              isPreview={true}\r\n              fileData={{\r\n                fileUrl: attachmentPreviewUrl,\r\n                file_id: \"\",\r\n                file_name: name,\r\n                size,\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttachmentPreview;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { Avatar, IconButton } from \"@mui/material\";\r\nimport {\r\n  debounce,\r\n  FIVE_MB,\r\n  getOneOnOneChatReceiver,\r\n  isImageOrGifFile,\r\n  truncateString,\r\n} from \"../utils/appUtils\";\r\nimport { ArrowBack, AttachFile, Close, Send } from \"@mui/icons-material\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport animationData from \"../animations/letsChatGif.json\";\r\nimport LottieAnimation from \"./utils/LottieAnimation\";\r\nimport axios from \"../utils/axios\";\r\nimport ViewProfileBody from \"./dialogs/ViewProfileBody\";\r\nimport GroupInfoBody from \"./dialogs/GroupInfoBody\";\r\nimport LoadingMsgs from \"./utils/LoadingMsgs\";\r\nimport FullSizeImage from \"./utils/FullSizeImage\";\r\nimport Message from \"./utils/Message\";\r\nimport MsgOptionsMenu from \"./menus/MsgOptionsMenu\";\r\nimport io from \"socket.io-client\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setClientSocket,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n  setSocketConnected,\r\n  toggleRefresh,\r\n} from \"../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../store/slices/FormfieldSlice\";\r\nimport { displayToast } from \"../store/slices/ToastSlice\";\r\nimport {\r\n  displayDialog,\r\n  setShowDialogActions,\r\n} from \"../store/slices/CustomDialogSlice\";\r\nimport AttachmentPreview from \"./utils/AttachmentPreview\";\r\n\r\nconst arrowStyles = {\r\n  color: \"#777\",\r\n};\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Mirza\",\r\n  fontSize: 16,\r\n  backgroundColor: \"#777\",\r\n};\r\nconst iconStyles = {\r\n  margin: \"4px 0px\",\r\n  padding: \"5px\",\r\n  color: \"#999999\",\r\n  \":hover\": {\r\n    backgroundColor: \"#aaaaaa20\",\r\n  },\r\n};\r\n\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\nconst SOCKET_ENDPOINT = process.env.REACT_APP_SERVER_BASE_URL;\r\n\r\nconst MessagesView = ({\r\n  loadingMsgs,\r\n  setLoadingMsgs,\r\n  fetchMsgs,\r\n  setFetchMsgs,\r\n  setDialogBody,\r\n}) => {\r\n  const letsChatGif = useRef(null);\r\n  const {\r\n    loggedInUser,\r\n    selectedChat,\r\n    refresh,\r\n    clientSocket,\r\n    isSocketConnected,\r\n  } = useSelector(selectAppState);\r\n  const { disableIfLoading } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n  const [sending, setSending] = useState(false);\r\n  const [enableMsgSend, setEnableMsgSend] = useState(false);\r\n  const [fileAttached, setFileAttached] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [clickedMsg, setClickedMsg] = useState(\"\");\r\n  const [attachmentData, setAttachmentData] = useState({\r\n    attachment: null,\r\n    attachmentPreviewUrl: \"\",\r\n  });\r\n\r\n  const msgListBottom = useRef(null);\r\n  const msgFileInput = useRef(null);\r\n  const msgContent = useRef(null);\r\n  const [downloadingFileId, setDownloadingFileId] = useState(\"\");\r\n  const [loadingMediaId, setLoadingMediaId] = useState(\"\");\r\n  const [msgOptionsMenuAnchor, setMsgOptionsMenuAnchor] = useState(null);\r\n\r\n  const chatName = selectedChat?.isGroupChat\r\n    ? selectedChat?.chatName\r\n    : getOneOnOneChatReceiver(loggedInUser, selectedChat?.users)?.name;\r\n\r\n  const resetMsgInput = (options) => {\r\n    setAttachmentData({\r\n      attachment: null,\r\n      attachmentPreviewUrl: \"\",\r\n    });\r\n    msgFileInput.current.value = \"\";\r\n    setFileAttached(false);\r\n    if (options?.discardAttachmentOnly) return;\r\n    setEnableMsgSend(false);\r\n    msgContent.current.innerHTML = \"\";\r\n  };\r\n\r\n  const closeChat = () => {\r\n    setLoadingMsgs(false);\r\n    dispatch(setSelectedChat(null));\r\n    resetMsgInput();\r\n  };\r\n\r\n  const viewMedia = (src, fileData) => {\r\n    if (!src || !fileData) return;\r\n    const { fileName, isAudio } = fileData;\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(\r\n      <FullSizeImage\r\n        audioSrc={isAudio ? src : null}\r\n        videoSrc={!isAudio ? src : null}\r\n      />\r\n    );\r\n    dispatch(\r\n      displayDialog({\r\n        isFullScreen: true,\r\n        title: fileName || `${isAudio ? \"Audio\" : \"Video\"} File`,\r\n      })\r\n    );\r\n    setLoadingMediaId(\"\");\r\n  };\r\n\r\n  const displayFullSizeImage = (e) => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<FullSizeImage event={e} />);\r\n    dispatch(\r\n      displayDialog({\r\n        isFullScreen: true,\r\n        title: e.target?.alt || \"Display Pic\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const loadMedia = async (fileId, options) => {\r\n    if (!fileId || !options) return;\r\n    setLoadingMediaId(fileId);\r\n    const { fileName, isAudio } = options;\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n      responseType: \"blob\",\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`/api/message/files/${fileId}`, config);\r\n\r\n      const mediaSrc = URL.createObjectURL(new Blob([data]));\r\n      viewMedia(mediaSrc, { fileName, isAudio });\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Load Media\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      setLoadingMediaId(\"\");\r\n    }\r\n  };\r\n\r\n  const downloadFile = async (fileId) => {\r\n    if (!fileId) return;\r\n    setDownloadingFileId(fileId);\r\n    setSending(true);\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n      responseType: \"blob\",\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(`/api/message/files/${fileId}`, config);\r\n\r\n      const link = document.createElement(\"a\");\r\n      link.href = URL.createObjectURL(new Blob([data]));\r\n      link.setAttribute(\"download\", fileId.split(\"---\")[1] || fileId);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n\r\n      setDownloadingFileId(\"\");\r\n      setSending(false);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Download File\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      setDownloadingFileId(\"\");\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const fetchMessages = async () => {\r\n    setLoadingMsgs(true);\r\n\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${loggedInUser.token}` },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat?._id}`,\r\n        config\r\n      );\r\n      setMessages(\r\n        data.map((msg) => {\r\n          msg[\"sent\"] = true;\r\n          return msg;\r\n        })\r\n      );\r\n      setLoadingMsgs(false);\r\n      if (fetchMsgs) setFetchMsgs(false);\r\n      setSending(false);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Messages\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      setLoadingMsgs(false);\r\n      if (fetchMsgs) setFetchMsgs(false);\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!attachmentData.attachment && !msgContent.current?.innerHTML) return;\r\n\r\n    const msgData = {\r\n      ...attachmentData,\r\n      content: msgContent.current?.innerHTML || \"\",\r\n    };\r\n    const isNonImageFile = !isImageOrGifFile(msgData.attachment?.name);\r\n\r\n    const newMsg = {\r\n      _id: Date.now(),\r\n      sender: {\r\n        _id: loggedInUser?._id,\r\n        profilePic: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n      },\r\n      fileUrl: msgData?.attachmentPreviewUrl,\r\n      file_id: \"\",\r\n      file_name:\r\n        msgData?.attachment?.name +\r\n        `${\r\n          msgData?.mediaDuration\r\n            ? `===${msgData.mediaDuration}`\r\n            : isNonImageFile\r\n            ? `===${msgData.attachment?.size || \"\"}`\r\n            : \"\"\r\n        }`,\r\n      content: msgData?.content,\r\n      createdAt: new Date().toISOString(),\r\n      sent: false,\r\n    };\r\n    setMessages([newMsg, ...messages]);\r\n    resetMsgInput();\r\n    setSending(true);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      // Upload img/gif to cloudinary, and all other files to aws s3\r\n      const apiUrl = isNonImageFile\r\n        ? `/api/message/upload-to-s3`\r\n        : `/api/message/`;\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"attachment\", msgData.attachment);\r\n      formData.append(\"mediaDuration\", msgData?.mediaDuration);\r\n      formData.append(\"content\", msgData.content);\r\n      formData.append(\"chatId\", selectedChat?._id);\r\n      const { data } = await axios.post(apiUrl, formData, config);\r\n\r\n      clientSocket?.emit(\"new msg sent\", data);\r\n      fetchMessages();\r\n      dispatch(toggleRefresh(!refresh));\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Send Message\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const deleteMessage = async () => {\r\n    dispatch(setLoading(true));\r\n    setSending(true);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${loggedInUser.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      await axios.put(\r\n        `/api/message/delete`,\r\n        { messageIds: JSON.stringify([clickedMsg]) },\r\n        config\r\n      );\r\n\r\n      clientSocket?.emit(\"msg deleted\", {\r\n        deletedMsgId: clickedMsg,\r\n        senderId: loggedInUser?._id,\r\n        chat: selectedChat,\r\n      });\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Message Deleted Successfully\",\r\n          type: \"success\",\r\n          duration: 3000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      setMessages(messages.filter((msg) => msg?._id !== clickedMsg));\r\n      dispatch(setLoading(false));\r\n      dispatch(toggleRefresh(!refresh));\r\n      setSending(false);\r\n      return \"msgActionDone\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Delete Message\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const updateMessage = async () => {};\r\n\r\n  const setMediaDuration = (mediaUrl, msgFile) => {\r\n    const media = new Audio(mediaUrl);\r\n    media.onloadedmetadata = () => {\r\n      const { duration } = media;\r\n      const minutes = parseInt(duration / 60);\r\n      const seconds = parseInt(duration % 60);\r\n      setAttachmentData({\r\n        attachment: msgFile,\r\n        attachmentPreviewUrl: mediaUrl,\r\n        mediaDuration: `${minutes}:${\r\n          seconds < 10 ? `0${seconds}` : seconds\r\n        }+++${msgFile.type}`,\r\n      });\r\n      setFileAttached(true);\r\n    };\r\n  };\r\n\r\n  const handleMsgFileInputChange = (e) => {\r\n    const msgFile = e.target.files[0];\r\n    if (!msgFile) return;\r\n\r\n    if (msgFile.size >= FIVE_MB) {\r\n      msgFileInput.current.value = \"\";\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Select a File Smaller than 5 MB\",\r\n          type: \"warning\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    const fileUrl = URL.createObjectURL(msgFile);\r\n    if (/^(video\\/|audio\\/)/.test(msgFile.type)) {\r\n      setMediaDuration(fileUrl, msgFile);\r\n    } else {\r\n      setAttachmentData({\r\n        attachment: msgFile,\r\n        attachmentPreviewUrl: fileUrl,\r\n      });\r\n      setFileAttached(true);\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    msgListBottom.current?.scrollIntoView({ behaviour: \"smooth\" });\r\n  };\r\n\r\n  // Socket client config\r\n  useEffect(() => {\r\n    dispatch(\r\n      setClientSocket(io(SOCKET_ENDPOINT, { transports: [\"websocket\"] }))\r\n    );\r\n  }, []);\r\n\r\n  // Listening to socket events\r\n  useEffect(() => {\r\n    if (!clientSocket) return;\r\n\r\n    if (!isSocketConnected && clientSocket) {\r\n      clientSocket.emit(\"init user\", loggedInUser?._id);\r\n      clientSocket.on(\"user connected\", () => {\r\n        console.log(\"socket connected\");\r\n        dispatch(setSocketConnected(true));\r\n      });\r\n    }\r\n\r\n    // off() prevents on() to execute multiple times\r\n    clientSocket.off(\"new msg received\").on(\"new msg received\", (newMsg) => {\r\n      const { chat } = newMsg;\r\n      dispatch(toggleRefresh(!refresh));\r\n      if (selectedChat && chat && selectedChat._id === chat._id) {\r\n        newMsg[\"sent\"] = true;\r\n        setMessages([newMsg, ...messages]);\r\n      }\r\n    });\r\n\r\n    clientSocket\r\n      .off(\"remove deleted msg\")\r\n      .on(\"remove deleted msg\", (deletedMsgData) => {\r\n        const { deletedMsgId, chat } = deletedMsgData;\r\n        dispatch(toggleRefresh(!refresh));\r\n        if (selectedChat && chat && selectedChat._id === chat._id)\r\n          setMessages(messages.filter((msg) => msg?._id !== deletedMsgId));\r\n      });\r\n\r\n    clientSocket\r\n      .off(\"update modified msg\")\r\n      .on(\"update modified msg\", (updatedMsg) => {\r\n        const { chat } = updatedMsg;\r\n        dispatch(toggleRefresh(!refresh));\r\n        if (selectedChat && chat && selectedChat._id === chat._id) {\r\n          updatedMsg[\"sent\"] = true;\r\n          setMessages(\r\n            messages.map((msg) => {\r\n              return msg?._id === updatedMsg?._id ? updatedMsg : msg;\r\n            })\r\n          );\r\n        }\r\n      });\r\n\r\n    clientSocket.off(\"display new grp\").on(\"display new grp\", () => {\r\n      dispatch(toggleRefresh(!refresh));\r\n    });\r\n  });\r\n\r\n  // Message input handlers\r\n  const msgInputHandler = debounce((e) => {\r\n    const input = e.target.innerHTML\r\n      ?.replaceAll(\"<br>\", \"\")\r\n      .replaceAll(\"&nbsp;\", \"\")\r\n      .replaceAll(\"<div>\", \"\")\r\n      .replaceAll(\"</div>\", \"\")\r\n      .trim();\r\n    setEnableMsgSend(Boolean(input));\r\n  }, 500);\r\n\r\n  const msgKeydownHandler = (e) => {\r\n    if (e.key === \"Enter\" && !e.shiftKey && (enableMsgSend || fileAttached)) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  // Msgs click handler ('Event Delegation' applied here)\r\n  const msgsClickHandler = (e) => {\r\n    const { dataset } = e.target;\r\n    const senderData = dataset?.sender?.split(\"===\");\r\n    const msgId = dataset?.msg;\r\n    const videoId = dataset?.video || e.target.parentNode.dataset?.video;\r\n    const audioId = dataset?.audio || e.target.parentNode.dataset?.audio;\r\n    const fileId = dataset?.download || e.target.parentNode.dataset?.download;\r\n\r\n    if (fileId) {\r\n      downloadFile(fileId);\r\n    } else if (videoId) {\r\n      // Load video\r\n      loadMedia(videoId, {\r\n        fileName: dataset?.videoName || e.target.parentNode.dataset?.videoName,\r\n        isAudio: false,\r\n      });\r\n    } else if (audioId) {\r\n      // Load audio\r\n      loadMedia(audioId, {\r\n        fileName: dataset?.audioName || e.target.parentNode.dataset?.audioName,\r\n        isAudio: true,\r\n      });\r\n    } else if (dataset?.imageId) {\r\n      displayFullSizeImage(e);\r\n    } else if (senderData?.length) {\r\n      // Open view profile dialog\r\n      const props = {\r\n        memberProfilePic: senderData[0],\r\n        memberName: senderData[1],\r\n        memberEmail: senderData[2],\r\n      };\r\n      openViewProfileDialog(props);\r\n    } else if (msgId) {\r\n      setClickedMsg(msgId);\r\n      openMsgOptionsMenu(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (fetchMsgs) {\r\n      fetchMessages();\r\n      clientSocket?.emit(\"join chat\", selectedChat?._id);\r\n    }\r\n  }, [fetchMsgs]);\r\n\r\n  const openViewProfileDialog = (props) => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(props ? <ViewProfileBody {...props} /> : <ViewProfileBody />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"View Profile\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const openGroupInfoDialog = () => {\r\n    // Open group info dialog\r\n    dispatch(setGroupInfo(selectedChat));\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<GroupInfoBody messages={messages} />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Group Info\",\r\n      })\r\n    );\r\n  };\r\n\r\n  // Open delete photo confirm dialog\r\n  const openDeleteMsgConfirmDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<>Are you sure you want to delete this message?</>);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Delete Message\",\r\n        nolabel: \"NO\",\r\n        yeslabel: \"YES\",\r\n        loadingYeslabel: \"Deleting...\",\r\n        action: deleteMessage,\r\n      })\r\n    );\r\n  };\r\n\r\n  const openMsgOptionsMenu = (e) => {\r\n    if (sending) return;\r\n    setMsgOptionsMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`chatpageDiv chatpageView messagesView col text-light mx-0 mx-md-1 ${\r\n        selectedChat ? \"d-flex\" : \"d-none d-md-flex\"\r\n      } flex-column p-2 user-select-none`}\r\n    >\r\n      {selectedChat ? (\r\n        <>\r\n          <section className=\"messagesHeader pointer-event d-flex justify-content-start position-relative w-100 fw-bold fs-4 bg-info bg-opacity-10 py-2\">\r\n            <CustomTooltip title=\"Go Back\" placement=\"bottom-start\" arrow>\r\n              <IconButton\r\n                onClick={closeChat}\r\n                className={`d-flex d-md-none ms-3`}\r\n                sx={{\r\n                  color: \"#999999\",\r\n                  \":hover\": {\r\n                    backgroundColor: \"#aaaaaa20\",\r\n                  },\r\n                }}\r\n              >\r\n                <ArrowBack />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n            <CustomTooltip\r\n              title={selectedChat?.isGroupChat ? \"Group Info\" : \"View Profile\"}\r\n              placement=\"bottom-start\"\r\n              arrow\r\n            >\r\n              <IconButton\r\n                sx={{\r\n                  margin: \"-8px\",\r\n                  \":hover\": {\r\n                    backgroundColor: \"#aaaaaa20\",\r\n                  },\r\n                }}\r\n                className=\"pointer ms-1 ms-md-4\"\r\n                onClick={\r\n                  selectedChat?.isGroupChat\r\n                    ? openGroupInfoDialog\r\n                    : openViewProfileDialog\r\n                }\r\n              >\r\n                <Avatar\r\n                  src={\r\n                    selectedChat?.isGroupChat\r\n                      ? selectedChat?.chatDisplayPic\r\n                      : getOneOnOneChatReceiver(\r\n                          loggedInUser,\r\n                          selectedChat?.users\r\n                        )?.profilePic || \"\"\r\n                  }\r\n                  alt={\"receiverAvatar\"}\r\n                />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n\r\n            <span className=\"ms-3 mt-1 fs-3 text-info\" title={chatName}>\r\n              {truncateString(chatName, 22, 17)}\r\n            </span>\r\n\r\n            <CustomTooltip title=\"Close Chat\" placement=\"bottom-end\" arrow>\r\n              <IconButton\r\n                onClick={closeChat}\r\n                className=\"d-none d-md-flex\"\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  right: 15,\r\n                  top: 8,\r\n                  color: \"#999999\",\r\n                  \":hover\": {\r\n                    backgroundColor: \"#aaaaaa20\",\r\n                  },\r\n                }}\r\n              >\r\n                <Close />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n          </section>\r\n          <section\r\n            className={`messagesBody position-relative ${\r\n              downloadingFileId || loadingMediaId ? \"pe-none\" : \"pe-auto\"\r\n            } d-flex flex-column m-1 p-2`}\r\n          >\r\n            {/* Messages list */}\r\n            <div className=\"messages rounded-3 d-flex flex-column\">\r\n              <div\r\n                // Event delegation\r\n                onClick={msgsClickHandler}\r\n                className={`msgArea overflow-auto ${\r\n                  fileAttached ? \"d-none\" : \"d-flex\"\r\n                } flex-column-reverse`}\r\n              >\r\n                <div className=\"msgListBottom\" ref={msgListBottom}></div>\r\n                {loadingMsgs && !sending ? (\r\n                  <LoadingMsgs count={8} />\r\n                ) : (\r\n                  messages.map((m, i, msgs) => (\r\n                    <Message\r\n                      downloadingFileId={downloadingFileId}\r\n                      loadingMediaId={loadingMediaId}\r\n                      key={m._id}\r\n                      msgSent={m.sent}\r\n                      currMsg={m}\r\n                      prevMsg={i < msgs.length - 1 ? msgs[i + 1] : null}\r\n                    />\r\n                  ))\r\n                )}\r\n              </div>\r\n            </div>\r\n            {/* Edit/Delete Message menu */}\r\n            <MsgOptionsMenu\r\n              anchor={msgOptionsMenuAnchor}\r\n              setAnchor={setMsgOptionsMenuAnchor}\r\n              clickedMsg={clickedMsg}\r\n              openEditMsgDialog={() => {}}\r\n              openDeleteMsgConfirmDialog={openDeleteMsgConfirmDialog}\r\n            />\r\n            {fileAttached && (\r\n              <AttachmentPreview\r\n                attachmentData={attachmentData}\r\n                discardAttachment={() =>\r\n                  resetMsgInput({ discardAttachmentOnly: true })\r\n                }\r\n                CustomTooltip={CustomTooltip}\r\n              />\r\n            )}\r\n            {/* New Message Input */}\r\n            <div className={`msgInputDiv d-flex position-absolute`}>\r\n              <span\r\n                className={`d-inline-block attachFile ${disableIfLoading} pointer bg-dark`}\r\n              >\r\n                <CustomTooltip\r\n                  title=\"Attach File\"\r\n                  placement=\"bottom-start\"\r\n                  arrow\r\n                >\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      msgFileInput.current?.click();\r\n                    }}\r\n                    className={`d-flex ms-2 my-2`}\r\n                    sx={{ ...iconStyles, transform: \"rotateZ(45deg)\" }}\r\n                  >\r\n                    <AttachFile style={{ fontSize: 22 }} />\r\n                  </IconButton>\r\n                </CustomTooltip>\r\n                {/* Attachment File input */}\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"*\"\r\n                  onChange={handleMsgFileInputChange}\r\n                  name=\"attachment\"\r\n                  id=\"attachMsgFile\"\r\n                  ref={msgFileInput}\r\n                  className={`d-none`}\r\n                  disabled={loadingMsgs}\r\n                />\r\n              </span>\r\n              {/* Content/text input */}\r\n              <div\r\n                onInput={msgInputHandler}\r\n                onKeyDown={msgKeydownHandler}\r\n                ref={msgContent}\r\n                className={`msgInput ${\r\n                  fileAttached ? \"addCaption\" : \"\"\r\n                } w-100 text-start d-flex bg-dark px-3 justify-content-start`}\r\n                contentEditable={true}\r\n                style={{\r\n                  borderRadius:\r\n                    enableMsgSend || fileAttached ? \"0px\" : \"0px 7px 7px 0px\",\r\n                }}\r\n              ></div>\r\n              {/* Send button */}\r\n              {enableMsgSend || fileAttached ? (\r\n                <span\r\n                  className={`d-inline-block btn btn-dark btn-sm sendButton ${disableIfLoading} pointer`}\r\n                  onClick={sendMessage}\r\n                >\r\n                  <IconButton\r\n                    className={`d-flex my-1 mx-0 mx-md-0`}\r\n                    sx={{ margin: \"4px 0px\", padding: \"5px\", color: \"#999999\" }}\r\n                  >\r\n                    <Send style={{ fontSize: 20 }} />\r\n                  </IconButton>\r\n                </span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n          </section>\r\n        </>\r\n      ) : (\r\n        <div className=\"d-flex flex-column justify-content-start align-items-center h-100\">\r\n          <h2 className=\"mx-3 mt-1\">\r\n            Hello{\" \"}\r\n            <span\r\n              className=\"fw-bold\"\r\n              style={{ color: \"#A798F2\" }}\r\n            >{`${loggedInUser?.name?.split(\" \")[0]?.toUpperCase()}`}</span>{\" \"}\r\n            👋\r\n          </h2>\r\n          <LottieAnimation\r\n            ref={letsChatGif}\r\n            className={\"d-inline-block mt-3\"}\r\n            style={{ marginBottom: \"50px\", height: \"50%\" }}\r\n            animationData={animationData}\r\n          />\r\n          <p\r\n            className=\"h4 mx-5\"\r\n            style={{ marginTop: \"-20px\", color: \"#99C5EE\" }}\r\n          >\r\n            Search or Click a Chat, Create a Group, or Search a User to start or\r\n            open a chat.\r\n          </p>\r\n          <p className=\"h2\" style={{ color: \"#99C5EE\" }}>\r\n            Happy Chatting!😀\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesView;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ChatpageHeader from \"../components/ChatpageHeader\";\r\nimport CustomDialog from \"../components/utils/CustomDialog\";\r\nimport ChatListView from \"../components/ChatListView\";\r\nimport MessagesView from \"../components/MessagesView\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { displayToast } from \"../store/slices/ToastSlice\";\r\nimport {\r\n  selectAppState,\r\n  setLoggedInUser,\r\n  setSelectedChat,\r\n} from \"../store/slices/AppSlice\";\r\nimport {\r\n  hideDialog,\r\n  selectCustomDialogState,\r\n} from \"../store/slices/CustomDialogSlice\";\r\n\r\nconst ChatsPage = () => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const { dialogData, showDialogActions } = useSelector(\r\n    selectCustomDialogState\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n  const [fetchMsgs, setFetchMsgs] = useState(false);\r\n  const [loadingMsgs, setLoadingMsgs] = useState(false);\r\n  const [dialogBody, setDialogBody] = useState(<></>);\r\n\r\n  useEffect(() => {\r\n    // Session storage persists data even after page refresh, unlike state\r\n    const user = JSON.parse(localStorage.getItem(\"loggedInUser\"));\r\n    if (!user) return navigate(\"/\");\r\n\r\n    if (Date.now() >= parseInt(user.expiryTime)) {\r\n      navigate(\"/\");\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Session Expired\",\r\n          message: \"Please Login Again\",\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    dispatch(setLoggedInUser(user));\r\n    dispatch(hideDialog());\r\n    dispatch(setSelectedChat(null));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loggedInUser && (\r\n        <div className={`chatpage`}>\r\n          {/* Header component */}\r\n          <ChatpageHeader\r\n            setFetchMsgs={setFetchMsgs}\r\n            setDialogBody={setDialogBody}\r\n          />\r\n\r\n          <section className={`row g-1`}>\r\n            {/* Chat List component */}\r\n            <ChatListView\r\n              loadingMsgs={loadingMsgs}\r\n              setFetchMsgs={setFetchMsgs}\r\n              setDialogBody={setDialogBody}\r\n            />\r\n\r\n            {/* Chat Messages component */}\r\n            <MessagesView\r\n              loadingMsgs={loadingMsgs}\r\n              setLoadingMsgs={setLoadingMsgs}\r\n              fetchMsgs={fetchMsgs}\r\n              setFetchMsgs={setFetchMsgs}\r\n              setDialogBody={setDialogBody}\r\n            />\r\n          </section>\r\n\r\n          {/* Alert dialog */}\r\n          <CustomDialog\r\n            dialogData={dialogData}\r\n            showDialogActions={showDialogActions}\r\n            showDialogClose={true}\r\n          >\r\n            {dialogBody}\r\n          </CustomDialog>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatsPage;\r\n"],"names":["menuPaperProps","elevation","sx","overflow","maxHeight","filter","borderRadius","backgroundColor","mt","menuItemProps","color","fontSize","menuIconProps","children","menuAnchor","setMenuAnchor","transformOrigin","anchorOrigin","isMenuOpen","Boolean","closeMenu","anchorEl","open","onClose","onClick","PaperProps","style","marginBottom","anchor","setAnchor","loggedInUser","useSelector","selectAppState","notifs","useDispatch","notifications","vertical","horizontal","length","map","n","MenuItem","_id","getUpdatedState","selectFormfieldState","loading","disableIfLoading","formLabelClassName","formFieldClassName","inputFieldClassName","useState","showPassword","setShowPassword","currentPassword","newPassword","confirmNewPassword","changePasswordData","setChangePasswordData","handleChangeFor","prop","e","target","value","useEffect","onEnterKeyDown","key","submitUpdatedPassword","className","htmlFor","type","onChange","onKeyDown","required","autoFocus","name","id","disabled","placeholder","PasswordVisibilityToggle","originalName","getUpdatedName","setName","width","submitUpdatedName","selectProfilePic","openDeletePhotoConfirmDialog","deletePhotoCondition","ListItemIcon","Upload","Delete","arrowStyles","tooltipStyles","styled","props","Tooltip","arrow","classes","popper","theme","tooltipClasses","btnHoverStyle","btnCustomStyle","fontFamily","dialogData","showDialogActions","showDialogClose","closeDialog","dispatch","navigate","useNavigate","isFullScreen","isOpen","title","nolabel","yeslabel","loadingYeslabel","action","handleDialogClose","hideDialog","handleYes","result","setSelectedChat","Dialog","fullScreen","backgroundImage","DialogTitle","marginTop","marginRight","truncateString","IconButton","position","right","top","Close","DialogContent","DialogActions","Button","KeyboardDoubleArrowLeft","margin","CircularProgress","size","KeyboardDoubleArrowRight","marginLeft","showChildDialogActions","showChildDialogClose","childDialogData","setChildDialogData","childDialogBody","setChildDialogBody","displayChildDialog","options","closeChildDialog","data","setChildDialogMethods","CustomTooltip","getCustomTooltip","maxWidth","border","childDialogMethods","selectChildDialogState","profilePicUrl","profilePic","email","profileData","setProfileData","editProfilePicMenuAnchor","setEditProfilePicMenuAnchor","editedName","uploading","setUploading","imgInput","useRef","isGuestUser","persistUpdatedUser","updatedUser","localStorage","setItem","JSON","stringify","setLoggedInUser","clickOnKeydown","click","handleImgInputChange","image","files","isImageFile","displayToast","message","duration","TWO_MB","current","setLoading","config","headers","Authorization","token","formData","FormData","append","cloudinary_id","axios","expiryTime","response","deleteProfilePic","currentProfilePic","updatedValue","updateProfileName","enterKeyPressed","newUserName","src","alt","placement","tabIndex","Edit","endsWith","accept","ref","editPasswordData","setDialogBody","updatedState","updatePassword","removeItem","logout","setShowDialogActions","displayDialog","Person","ManageAccounts","Key","Logout","user","truncateValues","max","index","listOf","dpRadius","count","skeletonStyle","Array","i","Skeleton","variant","height","forwardRef","inputRef","searchHandler","clearInput","typing","setTyping","Search","trim","replace","cursor","focus","padding","Clear","setFetchMsgs","isDrawerOpen","setIsDrawerOpen","searchQuery","setSearchQuery","searchResults","setSearchResults","searchUserInput","handleClose","searchUsers","debounce","query","createOrRetrieveChat","userId","Drawer","borderTopRightRadius","borderBottomRightRadius","transitionDuration","ChevronLeft","overflowY","overflowX","dataset","appGif","clientSocket","notificationsMenuAnchor","setNotificationsMenuAnchor","profileSettingsMenuAnchor","setProfileSettingsMenuAnchor","LottieAnimation","animationData","Notifications","Avatar","refresh","groupInfo","chatDisplayPicUrl","chatName","editGroupDpMenuAnchor","setEditGroupDpMenuAnchor","createGroupChat","chatDisplayPic","users","toggleRefresh","preventDefault","setGroupInfo","process","URL","createObjectURL","getAddedMembers","forCreateGroup","groupData","setGroupData","fetching","setFetching","groupMembers","isMemberSelected","setIsMemberSelected","addedMembers","setAddedMembers","setShowDialogClose","openNewGroupDialog","setDialogAction","membersNotAdded","forEach","addedMember","m","flex","Chip","avatar","label","split","onDelete","u","unselectUser","selectedUser","find","lastMsgFileType","chat","selectedChat","receiverEmail","isGroupChat","lastMessage","tooltipTitle","lastMsgContent","content","replaceAll","lastMsgDate","Date","createdAt","lastMsgDateString","msgDateStringOf","lastMsgFileUrl","fileUrl","fileContents","file_name","lastMsgFileName","lastMsgData","fileType","test","startsWith","msgTimeStringOf","dateStringOf","sender","DoneAll","Image","GifBox","VideoFile","AudioFile","PictureAsPdf","Description","FILE_STYLES","event","audioSrc","videoSrc","autoPlay","controls","objectFit","loadingMsgs","chats","setChats","filteredChats","setFilteredChats","searchChatInput","fetchChats","mappedChats","receiver","getOneOnOneChatReceiver","searchChats","chatNameInput","toLowerCase","includes","pointerEvents","GroupAdd","chatId","parentNode","toString","displayFullSizeImage","clickedChat","undefined","memberProfilePic","memberName","memberEmail","isLoggedInUser","isGroupAdmin","KeyboardArrowDown","clickedMember","isLoggedInUserGroupAdmin","groupAdmins","some","admin","clickedMemberName","styledMemberName","updateView","openChat","makeGroupAdmin","dismissAsAdmin","removeFromGroup","userToBeRemoved","Message","InfoOutlined","AdminPanelSettings","GroupRemove","filteredMembersCache","admins","setClickedMember","memberOptionsMenuAnchor","setMemberOptionsMenuAnchor","a","every","member","setFilteredMembers","filterMemberInput","filteredMembers","filterMembers","memberNameInput","openMemberOptionsMenu","messages","groupDP","groupName","isUserGroupAdmin","btnClassName","updatedName","updateGroupName","enterKeyClicked","deleteGroupDp","currentDP","exitGroup","deleteGroup","deleteGroupPromise","deleteMessagesPromise","messageIds","isDeleteGroupRequest","Promise","resolve","all","updatedMembers","addMembersToGroup","usersToBeAdded","lineHeight","PersonAdd","msgSent","downloadingFileId","loadingMediaId","isPreview","fileData","previewStyles","iconStyles","file_id","isMediaFile","mediaContents","mediaFileType","mediaFileSize","getFileSizeString","loadingGif","fileSize","parseInt","isDownloadingFile","substring","lastIndexOf","toUpperCase","downloadIcon","Downloading","Download","fileNameWrapper","fileInfo","hideWhileLoadingMedia","displayWhileLoadingMedia","isImageOrGifFile","PlayCircle","Videocam","PlayArrow","Audiotrack","currMsg","prevMsg","msgContentRef","senderData","currMsgId","isSameSender","currMsgDate","prevMsgDate","isOtherDay","showCurrSender","innerHTML","openEditMsgDialog","openDeleteMsgConfirmDialog","FILE_WRAPPER_CLASS","ATTACHMENT_STYLE","attachmentData","discardAttachment","attachment","attachmentPreviewUrl","previewTitle","left","zIndex","setLoadingMsgs","fetchMsgs","letsChatGif","isSocketConnected","sending","setSending","enableMsgSend","setEnableMsgSend","fileAttached","setFileAttached","setMessages","clickedMsg","setClickedMsg","setAttachmentData","msgListBottom","msgFileInput","msgContent","setDownloadingFileId","setLoadingMediaId","msgOptionsMenuAnchor","setMsgOptionsMenuAnchor","resetMsgInput","discardAttachmentOnly","closeChat","viewMedia","fileName","isAudio","loadMedia","fileId","responseType","mediaSrc","Blob","downloadFile","link","document","createElement","href","setAttribute","body","appendChild","remove","fetchMessages","msg","sendMessage","msgData","isNonImageFile","newMsg","now","mediaDuration","toISOString","sent","apiUrl","emit","deleteMessage","deletedMsgId","senderId","setClientSocket","io","transports","on","console","log","setSocketConnected","off","deletedMsgData","updatedMsg","msgInputHandler","input","scrollIntoView","behaviour","scrollToBottom","openViewProfileDialog","openMsgOptionsMenu","ArrowBack","msgId","videoId","video","audioId","audio","download","videoName","audioName","imageId","msgs","transform","AttachFile","msgFile","FIVE_MB","mediaUrl","media","Audio","onloadedmetadata","minutes","seconds","setMediaDuration","onInput","shiftKey","contentEditable","Send","selectCustomDialogState","dialogBody","parse","getItem"],"sourceRoot":""}