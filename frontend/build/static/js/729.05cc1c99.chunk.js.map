{"version":3,"file":"static/js/729.05cc1c99.chunk.js","mappings":"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","sources":["components/utils/Menu.tsx","components/utils/MenuItemText.tsx","components/menus/NotificationsMenu.tsx","components/dialogs/ChangePasswordBody.tsx","components/dialogs/EditNameBody.tsx","components/menus/EditPicMenu.tsx","components/utils/CustomTooltip.tsx","components/utils/CustomDialog.tsx","components/utils/ChildDialog.tsx","components/dialogs/EditProfileBody.tsx","components/menus/ProfileSettingsMenu.tsx","components/utils/UserListItem.tsx","components/utils/LoadingList.tsx","components/utils/SearchInput.tsx","components/utils/SearchUsersDrawer.tsx","components/ChatpageHeader.tsx","components/dialogs/NewGroupBody.tsx","components/dialogs/AddMembersToGroup.tsx","components/utils/TypingIndicator.tsx","components/utils/ChatListItem.tsx","components/utils/FullSizeImage.tsx","components/GettingStarted.tsx","components/ChatListView.tsx","components/dialogs/ViewProfileBody.tsx","components/utils/GroupMemberItem.tsx","components/menus/MemberOptionsMenu.tsx","components/dialogs/ViewGroupMembers.tsx","components/dialogs/GroupInfoBody.tsx","components/utils/LoadingMsgs.tsx","components/utils/MsgAttachment.tsx","components/utils/AttachmentPreview.tsx","components/utils/Message.tsx","components/menus/MsgOptionsMenu.tsx","components/WelcomeBanner.tsx","components/MsgsHeader.tsx","components/MessagesView.tsx","pages/ChatsPage.tsx"],"sourcesContent":["import { Menu as MuiMenu, MenuProps } from \"@mui/material\";\r\nimport { Dispatch, SetStateAction } from \"react\";\r\nimport { AnchorSetter } from \"../../utils/AppTypes\";\r\n\r\nexport const menuPaperProps = {\r\n  elevation: 0,\r\n  sx: {\r\n    overflow: \"auto\",\r\n    maxHeight: 250,\r\n    filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\r\n    borderRadius: 2,\r\n    backgroundColor: \"#404040\",\r\n    mt: 1,\r\n  },\r\n};\r\n\r\nexport const menuItemProps = {\r\n  \":hover\": { backgroundColor: \"#505050\" },\r\n  color: \"#e0e0e0\",\r\n  fontSize: \"19px\",\r\n};\r\n\r\nexport const menuIconProps = { color: \"lightblue\" };\r\n\r\ninterface AnchorProps {\r\n  menuAnchor: HTMLElement;\r\n  setMenuAnchor: AnchorSetter;\r\n}\r\n\r\nconst Menu = ({\r\n  children,\r\n  open,\r\n  menuAnchor,\r\n  setMenuAnchor,\r\n  transformOrigin,\r\n  anchorOrigin,\r\n}: MenuProps & AnchorProps) => {\r\n  const closeMenu = () => setMenuAnchor(null);\r\n\r\n  return (\r\n    <MuiMenu\r\n      anchorEl={menuAnchor}\r\n      open={open}\r\n      onClose={closeMenu}\r\n      onClick={closeMenu}\r\n      PaperProps={menuPaperProps}\r\n      transformOrigin={transformOrigin}\r\n      anchorOrigin={anchorOrigin}\r\n    >\r\n      {children}\r\n    </MuiMenu>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","interface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst MenuItemText = ({ children }: Props) => {\r\n  return <span style={{ marginBottom: \"3px\" }}>{children}</span>;\r\n};\r\n\r\nexport default MenuItemText;\r\n","import { MenuItem } from \"@mui/material\";\r\nimport Menu, { menuItemProps } from \"../utils/Menu\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setDeleteNotifsOfChat,\r\n  setFetchMsgs,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n} from \"../../store/slices/AppSlice\";\r\nimport { getOneToOneChatReceiver, truncateString } from \"../../utils/appUtils\";\r\nimport {\r\n  AnchorSetter,\r\n  ChatType,\r\n  ClickEventHandler,\r\n  MessageType,\r\n} from \"../../utils/AppTypes\";\r\n\r\ninterface Props {\r\n  chats: ChatType[];\r\n  anchor: HTMLElement;\r\n  setAnchor: AnchorSetter;\r\n}\r\n\r\nconst NotificationsMenu = ({ chats, anchor, setAnchor }: Props) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n  const notifs = [...(loggedInUser?.notifications as MessageType[])];\r\n  const notifGroups: any = {};\r\n\r\n  notifs.forEach((notif: MessageType) => {\r\n    // Notifications grouped by 'chat'\r\n    const notifChat = notif?.chat as ChatType;\r\n    const chatId = notifChat?._id;\r\n    const chatName = notifChat?.isGroupChat\r\n      ? `group===${notifChat?.chatName}`\r\n      : getOneToOneChatReceiver(loggedInUser, notifChat?.users).name;\r\n    const notifGroupId = `${chatId}---${chatName}`;\r\n    if (notifGroups[notifGroupId]) {\r\n      ++notifGroups[notifGroupId];\r\n    } else {\r\n      notifGroups[notifGroupId] = 1;\r\n    }\r\n  });\r\n\r\n  const chatNotifClickHandler: ClickEventHandler = (e) => {\r\n    const chatNotifId =\r\n      (e.target as HTMLElement).dataset.notifGroup ||\r\n      ((e.target as HTMLElement).parentNode as HTMLElement).dataset.notifGroup;\r\n    if (!chatNotifId) return;\r\n\r\n    const chatId = chatNotifId.split(\"---\")[0];\r\n    const chatToBeOpened = chats.find(\r\n      (chat: ChatType) => chat?._id === chatId\r\n    ) as ChatType;\r\n    dispatch(setSelectedChat(chatToBeOpened));\r\n    dispatch(setFetchMsgs(true)); // To fetch selected chat msgs\r\n    dispatch(setDeleteNotifsOfChat(chatId));\r\n    if (chatToBeOpened?.isGroupChat) dispatch(setGroupInfo(chatToBeOpened));\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      open={Boolean(anchor)}\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      {Object.keys(notifGroups).length ? (\r\n        <div onClick={chatNotifClickHandler}>\r\n          {Object.keys(notifGroups).map((notifGroupId) => {\r\n            const fromGroup = notifGroupId.includes(\"group===\");\r\n            const notifCount = notifGroups[notifGroupId];\r\n            let chatName = notifGroupId.split(\"---\")[1];\r\n            chatName = fromGroup ? chatName.split(\"===\")[1] : chatName;\r\n            return (\r\n              <MenuItem\r\n                key={notifGroupId}\r\n                data-notif-group={notifGroupId}\r\n                sx={menuItemProps}\r\n              >\r\n                <MenuItemText>\r\n                  {`${notifCount} message${notifCount > 1 ? \"s\" : \"\"} ${\r\n                    fromGroup ? \"in\" : \"from\"\r\n                  } `}\r\n                  <span\r\n                    title={chatName}\r\n                    data-notif-group={notifGroupId}\r\n                    className=\"text-info\"\r\n                  >\r\n                    {`${truncateString(\r\n                      fromGroup ? chatName : chatName.split(\" \")[0],\r\n                      12,\r\n                      9\r\n                    )}`}\r\n                  </span>\r\n                </MenuItemText>\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <MenuItem sx={menuItemProps}>\r\n          <MenuItemText>No notifications</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default NotificationsMenu;\r\n","import { useEffect, useState } from \"react\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\nimport { useAppSelector } from \"../../store/storeHooks\";\r\nimport { ChangeEventHandler, EditPwdData, EditPwdDataOptions, KeyboardEventHandler } from \"../../utils/AppTypes\";\r\nimport PasswordVisibilityToggle from \"../utils/PasswordVisibilityToggle\";\r\n\r\ninterface Props {\r\n  getUpdatedState: (data: EditPwdData, options?: EditPwdDataOptions) => void;\r\n}\r\n\r\nconst ChangePasswordBody = ({ getUpdatedState }: Props) => {\r\n  const {\r\n    loading,\r\n    disableIfLoading,\r\n    formLabelClassName,\r\n    formFieldClassName,\r\n    inputFieldClassName,\r\n  } = useAppSelector(selectFormfieldState);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [changePasswordData, setChangePasswordData] = useState<EditPwdData>({\r\n    currentPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmNewPassword: \"\",\r\n  });\r\n\r\n  const { currentPassword, newPassword, confirmNewPassword } =\r\n    changePasswordData;\r\n\r\n  const handleChangeFor =\r\n    (prop: string): ChangeEventHandler =>\r\n    (e) => {\r\n      setChangePasswordData({\r\n        ...changePasswordData,\r\n        [prop]: e.target?.value,\r\n      });\r\n    };\r\n\r\n  useEffect(() => {\r\n    // Return updated state to profile settings menu\r\n    getUpdatedState(changePasswordData);\r\n  }, [changePasswordData]);\r\n\r\n  const onEnterKeyDown: KeyboardEventHandler = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      // Submit updated password data\r\n      getUpdatedState(changePasswordData, { submitUpdatedPassword: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Current Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 mt-3 col-md-6 order-md-2`}\r\n      >\r\n        <label htmlFor=\"current_password\" className={`${formLabelClassName}`}>\r\n          Current Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={currentPassword}\r\n            onChange={handleChangeFor(\"currentPassword\")}\r\n            onKeyDown={onEnterKeyDown}\r\n            required\r\n            autoFocus\r\n            name=\"currentPassword\"\r\n            id=\"current_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Used While Signing In\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n      {/* New Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 col-md-6 order-md-2`}\r\n      >\r\n        <label htmlFor=\"new_password\" className={`${formLabelClassName}`}>\r\n          New Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={newPassword}\r\n            onChange={handleChangeFor(\"newPassword\")}\r\n            onKeyDown={onEnterKeyDown}\r\n            required\r\n            name=\"newPassword\"\r\n            id=\"new_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Different from Current\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n      {/* Confirm New Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 col-md-6 order-md-2`}\r\n      >\r\n        <label\r\n          htmlFor=\"confirm_new_password\"\r\n          className={`${formLabelClassName}`}\r\n        >\r\n          Confirm New Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={confirmNewPassword}\r\n            onChange={handleChangeFor(\"confirmNewPassword\")}\r\n            onKeyDown={onEnterKeyDown}\r\n            required\r\n            name=\"confirmNewPassword\"\r\n            id=\"confirm_new_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Exactly as Above\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordBody;\r\n","import { useEffect, useState } from \"react\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\nimport { useAppSelector } from \"../../store/storeHooks\";\r\nimport { ChangeEventHandler } from \"../../utils/AppTypes\";\r\n\r\ninterface Props {\r\n  originalName: string;\r\n  getUpdatedName: Function;\r\n  placeholder: string;\r\n}\r\n\r\nconst EditNameBody = ({ originalName, getUpdatedName, placeholder }: Props) => {\r\n  const { loading, formFieldClassName, inputFieldClassName } =\r\n    useAppSelector(selectFormfieldState);\r\n  const [name, setName] = useState(originalName);\r\n\r\n  const onChangeHandler: ChangeEventHandler = (e) =>\r\n    setName(e.target.value);\r\n\r\n  const onKeyDownHandler: React.KeyboardEventHandler<HTMLInputElement> = (\r\n    e\r\n  ) => {\r\n    if (e.key === \"Enter\") {\r\n      // Submit updated group name\r\n      getUpdatedName(name, { submitUpdatedName: true });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUpdatedName(name);\r\n  }, [name]);\r\n\r\n  return (\r\n    <section\r\n      className={`${formFieldClassName} mx-auto`}\r\n      style={{ width: \"clamp(250px, 60vw, 360px)\" }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={onChangeHandler}\r\n        onKeyDown={onKeyDownHandler}\r\n        name=\"editname\"\r\n        autoFocus\r\n        className={`${inputFieldClassName} mt-1`}\r\n        disabled={loading}\r\n        placeholder={placeholder}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditNameBody;\r\n","import { Delete, Upload } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport { AnchorSetter, ClickEventHandler } from \"../../utils/AppTypes\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\n\r\ninterface Props {\r\n  anchor: HTMLElement;\r\n  setAnchor: AnchorSetter;\r\n  selectProfilePic: ClickEventHandler;\r\n  openDeletePhotoConfirmDialog: ClickEventHandler;\r\n  deletePhotoCondition: boolean;\r\n}\r\n\r\nconst EditPicMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  selectProfilePic,\r\n  openDeletePhotoConfirmDialog,\r\n  deletePhotoCondition,\r\n}: Props) => {\r\n  return (\r\n    <Menu\r\n      open={Boolean(anchor)}\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={selectProfilePic}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Upload />\r\n        </ListItemIcon>\r\n        <MenuItemText>Upload Photo</MenuItemText>\r\n      </MenuItem>\r\n      {deletePhotoCondition && (\r\n        <MenuItem sx={menuItemProps} onClick={openDeletePhotoConfirmDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <Delete />\r\n          </ListItemIcon>\r\n          <MenuItemText>Delete Photo</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default EditPicMenu;\r\n","import { styled } from \"@mui/material/styles\";\r\nimport Tooltip, { tooltipClasses, TooltipProps } from \"@mui/material/Tooltip\";\r\nimport { CustomTooltipType } from \"../../utils/AppTypes\";\r\n\r\nconst getCustomTooltip = (\r\n  arrowStyles: React.CSSProperties,\r\n  tooltipStyles: React.CSSProperties\r\n): CustomTooltipType =>\r\n  styled(({ className, children, title, placement, arrow }: TooltipProps) => (\r\n    <Tooltip\r\n      title={title}\r\n      placement={placement}\r\n      arrow={arrow}\r\n      classes={{ popper: className || \"\" }}\r\n    >\r\n      {children}\r\n    </Tooltip>\r\n  ))(({ theme }) => ({\r\n    [`& .${tooltipClasses.arrow}`]: { ...arrowStyles },\r\n    [`& .${tooltipClasses.tooltip}`]: { ...tooltipStyles },\r\n  }));\r\n\r\nexport default getCustomTooltip;\r\n","import {\r\n  Close,\r\n  KeyboardDoubleArrowLeft,\r\n  KeyboardDoubleArrowRight,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { NavigateFunction, useNavigate } from \"react-router-dom\";\r\nimport { setSelectedChat } from \"../../store/slices/AppSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/storeHooks\";\r\nimport { CustomDialogState } from \"../../utils/AppTypes\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\n\r\nexport const btnHoverStyle = { \":hover\": { backgroundColor: \"#93c2f727\" } };\r\nexport const btnCustomStyle = {\r\n  fontSize: 17,\r\n  color: \"#8cc2ff\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  borderRadius: 10,\r\n};\r\n\r\nconst CustomDialog = ({\r\n  children,\r\n  dialogData,\r\n  showDialogActions,\r\n  showDialogClose,\r\n  closeDialog,\r\n}: CustomDialogState) => {\r\n  const { loading, disableIfLoading } = useAppSelector(selectFormfieldState);\r\n  const dispatch = useAppDispatch();\r\n  const navigate: NavigateFunction = useNavigate();\r\n  const {\r\n    isFullScreen,\r\n    isOpen,\r\n    title,\r\n    nolabel,\r\n    yeslabel,\r\n    loadingYeslabel,\r\n    action,\r\n  } = dialogData;\r\n\r\n  const handleDialogClose = () => {\r\n    if (closeDialog) return closeDialog();\r\n    dispatch(hideDialog());\r\n  };\r\n\r\n  const handleYes = async () => {\r\n    if (!action) return;\r\n    const result = await action();\r\n    if (\r\n      result === \"profileUpdated\" ||\r\n      result === \"membersUpdated\" ||\r\n      result === \"msgActionDone\"\r\n    ) {\r\n      handleDialogClose();\r\n    } else if (result === \"createdGroup\") {\r\n      handleDialogClose();\r\n      // Close Parent Dialog as well\r\n      dispatch(hideDialog());\r\n    } else if (result === \"pwdUpdated\" || result === \"loggingOut\") {\r\n      handleDialogClose();\r\n      dispatch(setSelectedChat(null));\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen={Boolean(isFullScreen)}\r\n      PaperProps={{\r\n        sx: {\r\n          borderRadius: 2,\r\n          backgroundImage: \"linear-gradient(0deg,#353535,#444)\",\r\n        },\r\n      }}\r\n      className={`user-select-none ${disableIfLoading}`}\r\n      open={isOpen as boolean}\r\n      onClose={handleDialogClose}\r\n    >\r\n      <DialogTitle\r\n        style={{\r\n          fontSize: 25,\r\n          color: \"#A4D0F0\",\r\n          fontFamily: \"Trebuchet MS\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        <span\r\n          className=\"d-flex\"\r\n          title={title}\r\n          style={{ marginTop: -5, marginRight: 10 }}\r\n        >\r\n          {truncateString(title, 24, 21)}\r\n        </span>\r\n        {showDialogClose && (\r\n          <IconButton\r\n            onClick={handleDialogClose}\r\n            disabled={loading}\r\n            sx={{\r\n              position: \"absolute\",\r\n              right: 8,\r\n              top: 8,\r\n              color: \"#999999\",\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        )}\r\n      </DialogTitle>\r\n      <DialogContent\r\n        style={{ fontSize: 19, color: \"#e0e0e0\", fontFamily: \"Trebuchet MS\" }}\r\n      >\r\n        {children || <></>}\r\n      </DialogContent>\r\n      {showDialogActions && (\r\n        <DialogActions>\r\n          <Button\r\n            sx={btnHoverStyle}\r\n            disabled={loading}\r\n            style={btnCustomStyle}\r\n            onClick={handleDialogClose}\r\n          >\r\n            {nolabel === \"Back\" ? (\r\n              <span>\r\n                <KeyboardDoubleArrowLeft\r\n                  className=\"btnArrowIcons\"\r\n                  style={{\r\n                    margin: \"0px 5px 2px 0px\",\r\n                  }}\r\n                />\r\n                Back\r\n              </span>\r\n            ) : (\r\n              nolabel\r\n            )}\r\n          </Button>\r\n          <Button\r\n            sx={btnHoverStyle}\r\n            disabled={loading}\r\n            style={btnCustomStyle}\r\n            onClick={handleYes}\r\n          >\r\n            {loading && yeslabel !== \"Next\" ? (\r\n              <>\r\n                <CircularProgress size={25} style={{ marginRight: 12 }} />\r\n                <span style={{ marginRight: 22 }}>{loadingYeslabel}</span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {yeslabel === \"Next\" ? (\r\n                  <span>\r\n                    Next\r\n                    <KeyboardDoubleArrowRight\r\n                      className=\"btnArrowIcons\"\r\n                      style={{\r\n                        marginLeft: 4,\r\n                      }}\r\n                    />\r\n                  </span>\r\n                ) : (\r\n                  yeslabel\r\n                )}\r\n              </>\r\n            )}\r\n          </Button>\r\n        </DialogActions>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CustomDialog;\r\n","import { useEffect, useState } from \"react\";\r\nimport { setChildDialogMethods } from \"../../store/slices/ChildDialogSlice\";\r\nimport { useAppDispatch } from \"../../store/storeHooks\";\r\nimport { DialogData } from \"../../utils/AppTypes\";\r\nimport CustomDialog from \"./CustomDialog\";\r\n\r\ninterface Props {\r\n  showChildDialogActions: boolean;\r\n  showChildDialogClose: boolean;\r\n}\r\n\r\nconst ChildDialog = ({\r\n  showChildDialogActions = true,\r\n  showChildDialogClose = false,\r\n}: Props) => {\r\n  // Child Dialog config\r\n  const [childDialogData, setChildDialogData] = useState<DialogData>({\r\n    isOpen: false,\r\n    title: \"Child Dialog\",\r\n    nolabel: \"NO\",\r\n    yeslabel: \"YES\",\r\n    loadingYeslabel: \"Updating...\",\r\n    action: () => {},\r\n  });\r\n  const [childDialogBody, setChildDialogBody] = useState<React.ReactNode>(\r\n    <></>\r\n  );\r\n  const dispatch = useAppDispatch();\r\n\r\n  const displayChildDialog = (options: DialogData) =>\r\n    setChildDialogData({ ...options, isOpen: true });\r\n\r\n  const closeChildDialog = () =>\r\n    setChildDialogData({ ...childDialogData, isOpen: false });\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setChildDialogMethods({\r\n        setChildDialogBody,\r\n        displayChildDialog,\r\n        closeChildDialog,\r\n      })\r\n    );\r\n  }, [childDialogData]);\r\n\r\n  return (\r\n    <CustomDialog\r\n      dialogData={childDialogData}\r\n      closeDialog={closeChildDialog}\r\n      showDialogActions={showChildDialogActions}\r\n      showDialogClose={showChildDialogClose}\r\n    >\r\n      {childDialogBody}\r\n    </CustomDialog>\r\n  );\r\n};\r\n\r\nexport default ChildDialog;\r\n","import { Edit } from \"@mui/icons-material\";\r\nimport { SetStateAction, useEffect, useRef, useState } from \"react\";\r\nimport axios from \"../../utils/axios\";\r\nimport EditNameBody from \"./EditNameBody\";\r\nimport { CircularProgress, IconButton } from \"@mui/material\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport {\r\n  getAxiosConfig,\r\n  isImageFile,\r\n  truncateString,\r\n  truncateWords,\r\n  TWO_MB,\r\n} from \"../../utils/appUtils\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { selectAppState, setLoggedInUser } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/storeHooks\";\r\nimport {\r\n  AxiosErrorType,\r\n  ChangeEventHandler,\r\n  ClickEventHandler,\r\n  ErrorType,\r\n  KeyboardEventHandler,\r\n  ToastData,\r\n  UserType,\r\n} from \"../../utils/AppTypes\";\r\nimport { AxiosRequestConfig } from \"axios\";\r\n\r\nconst arrowStyles = { color: \"#111\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 260,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  padding: \"5px 10px\",\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\ninterface ProfileData {\r\n  profilePicUrl: string;\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nconst EditProfileBody = () => {\r\n  const { loggedInUser } = useAppSelector(selectAppState);\r\n  const { loading, disableIfLoading } = useAppSelector(selectFormfieldState);\r\n  const { childDialogMethods } = useAppSelector(selectChildDialogState);\r\n  const dispatch = useAppDispatch();\r\n  const { setChildDialogBody, displayChildDialog, closeChildDialog } =\r\n    childDialogMethods;\r\n\r\n  const [profileData, setProfileData] = useState<ProfileData>({\r\n    profilePicUrl: loggedInUser?.profilePic as string,\r\n    name: loggedInUser?.name as string,\r\n    email: loggedInUser?.email as string,\r\n  });\r\n  const [editProfilePicMenuAnchor, setEditProfilePicMenuAnchor] =\r\n    useState<HTMLElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    setProfileData({\r\n      ...profileData,\r\n      profilePicUrl: loggedInUser?.profilePic as string,\r\n      name: loggedInUser?.name as string,\r\n    });\r\n  }, [loggedInUser]);\r\n\r\n  const displayWarning = (message = \"Warning\", duration = 3000) => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"warning\",\r\n        duration,\r\n        position: \"top-center\",\r\n      } as ToastData)\r\n    );\r\n  };\r\n\r\n  const displayError = (\r\n    error: ErrorType = \"Oops! Something went wrong\",\r\n    title = \"Operation Failed\"\r\n  ) => {\r\n    dispatch(\r\n      displayToast({\r\n        title,\r\n        message:\r\n          (error as AxiosErrorType).response?.data?.message ||\r\n          (error as Error)?.message ||\r\n          error,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"top-center\",\r\n      } as ToastData)\r\n    );\r\n  };\r\n\r\n  const displaySuccess = (message = \"Operation Successful\") => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"success\",\r\n        duration: 3000,\r\n        position: \"bottom-center\",\r\n      } as ToastData)\r\n    );\r\n  };\r\n\r\n  // For profile pic upload loading indicator\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const { profilePicUrl, name, email } = profileData;\r\n  const imgInput = useRef<HTMLInputElement>();\r\n  const isGuestUser = loggedInUser?.email === \"guest.user@gmail.com\";\r\n\r\n  const persistUpdatedUser = (updatedUser: UserType) => {\r\n    // localStorage persists updated user even after page refresh\r\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\r\n    dispatch(setLoggedInUser(updatedUser));\r\n  };\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown: KeyboardEventHandler = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") {\r\n      (e.target as HTMLElement).click();\r\n    }\r\n  };\r\n\r\n  // Update Profile Pic\r\n  const handleImgInputChange: ChangeEventHandler = async (e) => {\r\n    if (!e.target?.files) return;\r\n    const imageFile = e.target.files[0];\r\n    if (!imageFile) return;\r\n\r\n    if (!isImageFile(imageFile.name)) {\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Invalid Image File\",\r\n          message: \"Please Select an Image File (png/jpg/jpeg/svg/webp)\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n    }\r\n\r\n    if (imageFile.size >= TWO_MB) {\r\n      if (!imgInput?.current) return;\r\n      imgInput.current.value = \"\";\r\n      return displayWarning(\"Please Select an Image Smaller than 2 MB\", 4000);\r\n    }\r\n    dispatch(setLoading(true));\r\n    setUploading(true);\r\n    const config = getAxiosConfig({ loggedInUser, formData: true });\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"profilePic\", imageFile);\r\n    formData.append(\"currentProfilePic\", loggedInUser?.profilePic as string);\r\n    formData.append(\"cloudinary_id\", loggedInUser?.cloudinary_id as string);\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/update/profile-pic\",\r\n        formData,\r\n        config as AxiosRequestConfig\r\n      );\r\n      displaySuccess(\"ProfilePic Updated Successfully\");\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n      persistUpdatedUser({\r\n        ...data,\r\n        token: loggedInUser?.token,\r\n        expiryTime: loggedInUser?.expiryTime,\r\n      });\r\n    } catch (error) {\r\n      displayError(error as ErrorType, \"ProfilePic Update Failed\");\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const deleteProfilePic = async () => {\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/delete/profile-pic\",\r\n        {\r\n          currentProfilePic: loggedInUser?.profilePic,\r\n          cloudinary_id: loggedInUser?.cloudinary_id,\r\n        },\r\n        config as AxiosRequestConfig\r\n      );\r\n      displaySuccess(\"ProfilePic Deleted Successfully\");\r\n      dispatch(setLoading(false));\r\n      persistUpdatedUser({\r\n        ...data,\r\n        token: loggedInUser?.token,\r\n        expiryTime: loggedInUser?.expiryTime,\r\n      });\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      displayError(error as ErrorType, \"ProfilePic Deletion Failed\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Edited Name config\r\n  let editedName: string;\r\n\r\n  const getUpdatedName = (\r\n    updatedValue: string,\r\n    options?: { submitUpdatedName: boolean }\r\n  ) => {\r\n    editedName = updatedValue;\r\n    if (options?.submitUpdatedName)\r\n      updateProfileName({ enterKeyPressed: true });\r\n  };\r\n\r\n  const updateProfileName = async (options?: { enterKeyPressed: boolean }) => {\r\n    if (!editedName) return displayWarning(\"Please Enter a Valid Name\");\r\n\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/update/name\",\r\n        { newUserName: editedName },\r\n        config as AxiosRequestConfig\r\n      );\r\n      displaySuccess(\"Name Updated Successfully\");\r\n      dispatch(setLoading(false));\r\n      persistUpdatedUser({\r\n        ...data,\r\n        token: loggedInUser?.token,\r\n        expiryTime: loggedInUser?.expiryTime,\r\n      });\r\n      if (options?.enterKeyPressed && closeChildDialog) closeChildDialog();\r\n      else return \"profileUpdated\";\r\n    } catch (error) {\r\n      displayError(error as ErrorType, \"Name Update Failed\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Open edit name dialog\r\n  const openEditNameDialog: ClickEventHandler = () => {\r\n    if (!setChildDialogBody || !displayChildDialog) return;\r\n    setChildDialogBody(\r\n      <EditNameBody\r\n        originalName={loggedInUser?.name as string}\r\n        getUpdatedName={getUpdatedName}\r\n        placeholder=\"Enter New Name\"\r\n      />\r\n    );\r\n    displayChildDialog({\r\n      title: \"Edit Name\",\r\n      nolabel: \"CANCEL\",\r\n      yeslabel: \"SAVE\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: updateProfileName,\r\n    });\r\n  };\r\n\r\n  // Open delete photo confirm dialog\r\n  const openDeletePhotoConfirmDialog = () => {\r\n    if (!setChildDialogBody || !displayChildDialog) return;\r\n    setChildDialogBody(<>Are you sure you want to delete this profile pic?</>);\r\n    displayChildDialog({\r\n      title: \"Delete Profile Pic\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteProfilePic,\r\n    });\r\n  };\r\n\r\n  const openEditProfilePicMenu: ClickEventHandler = (e) => {\r\n    setEditProfilePicMenuAnchor(e.target as SetStateAction<HTMLElement | null>);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* View/Edit Profile Pic */}\r\n      {loading && uploading ? (\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n          <CircularProgress\r\n            size={75}\r\n            style={{ margin: \"30px 0px\", color: \"lightblue\" }}\r\n          />\r\n          <span style={{ marginBottom: \"45px\" }} className=\"text-light h1\">\r\n            {\" Updating Photo...\"}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <section className=\"dialogField d-flex position-relative mb-4\">\r\n          <img\r\n            className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n            id=\"viewedit__profilePic\"\r\n            src={profilePicUrl as string}\r\n            alt=\"profilePic\"\r\n          />\r\n          {!isGuestUser && (\r\n            <CustomTooltip title=\"Edit Profile Pic\" placement=\"top-start\" arrow>\r\n              <i\r\n                id=\"editProfilePic\"\r\n                tabIndex={2}\r\n                onKeyDown={clickOnKeydown}\r\n                className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n                onClick={openEditProfilePicMenu}\r\n              >\r\n                <Edit className=\"text-light fs-6\" />\r\n              </i>\r\n            </CustomTooltip>\r\n          )}\r\n          {/* Edit/Delete profile pic menu */}\r\n          <EditPicMenu\r\n            anchor={editProfilePicMenuAnchor as HTMLElement}\r\n            setAnchor={setEditProfilePicMenuAnchor}\r\n            selectProfilePic={() => imgInput?.current?.click()}\r\n            openDeletePhotoConfirmDialog={openDeletePhotoConfirmDialog}\r\n            deletePhotoCondition={\r\n              !loggedInUser?.profilePic?.endsWith(\"user_dqzjdz.png\")\r\n            }\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={handleImgInputChange}\r\n            name=\"profilepic\"\r\n            id=\"editProfilePic\"\r\n            ref={imgInput as React.LegacyRef<HTMLInputElement>}\r\n            className={`d-none`}\r\n            disabled={loading}\r\n          />\r\n        </section>\r\n      )}\r\n      {/* View Name */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-15px\" }}>\r\n          <CustomTooltip title={name as string} placement=\"top\" arrow>\r\n            <div\r\n              className=\"w-100 h1 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"32px\", wordWrap: \"break-word\" }}\r\n            >\r\n              {truncateWords(name, 14, 11)}\r\n            </div>\r\n          </CustomTooltip>\r\n          {!isGuestUser && (\r\n            <CustomTooltip title=\"Edit Name\" placement=\"top\" arrow>\r\n              <IconButton\r\n                tabIndex={3}\r\n                onKeyDown={clickOnKeydown}\r\n                onClick={openEditNameDialog}\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  right: -8,\r\n                  top: 0,\r\n                  \":hover\": { backgroundColor: \"#aaaaaa30\" },\r\n                }}\r\n              >\r\n                <Edit className=\"text-light\" />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n          )}\r\n        </div>\r\n      </section>\r\n      {/* View Email */}\r\n      <section\r\n        className={`dialogField text-center mb-2`}\r\n        style={{ marginTop: \"-10px\" }}\r\n      >\r\n        <CustomTooltip\r\n          title={((email?.length as number) > 24 ? email : \"\") as string}\r\n          placement=\"bottom\"\r\n          arrow\r\n        >\r\n          <span className=\"h4\" style={{ color: \"lightblue\" }}>\r\n            {truncateString(email, 25, 21)}\r\n          </span>\r\n        </CustomTooltip>\r\n      </section>\r\n      {/* Child confirmation dialog */}\r\n      <ChildDialog showChildDialogActions={true} showChildDialogClose={false} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfileBody;\r\n","import { Key, Logout, ManageAccounts, Person } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport axios from \"../../utils/axios\";\r\nimport ChangePasswordBody from \"../dialogs/ChangePasswordBody\";\r\nimport EditProfileBody from \"../dialogs/EditProfileBody\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\nimport {\r\n  selectAppState,\r\n  setLoggedInUser,\r\n  setSelectedChat,\r\n} from \"../../store/slices/AppSlice\";\r\nimport { setLoading } from \"../../store/slices/FormfieldSlice\";\r\nimport {\r\n  displayDialog,\r\n  hideDialog,\r\n  setShowDialogActions,\r\n} from \"../../store/slices/CustomDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getAxiosConfig } from \"../../utils/appUtils\";\r\nimport {\r\n  AnchorSetter,\r\n  AxiosErrorType,\r\n  EditPwdData,\r\n  EditPwdDataOptions,\r\n  ToastData,\r\n} from \"../../utils/AppTypes\";\r\nimport { AxiosRequestConfig } from \"axios\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/storeHooks\";\r\n\r\ninterface Props {\r\n  anchor: HTMLElement;\r\n  setAnchor: AnchorSetter;\r\n  setDialogBody: (el: React.ReactNode) => void;\r\n}\r\n\r\nconst ProfileSettingsMenu = ({ anchor, setAnchor, setDialogBody }: Props) => {\r\n  const { loggedInUser } = useAppSelector(selectAppState);\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const displaySuccess = (\r\n    message = \"Operation Successful\",\r\n    duration = 3000\r\n  ) => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"success\",\r\n        duration,\r\n        position: \"bottom-center\",\r\n      } as ToastData)\r\n    );\r\n  };\r\n\r\n  const displayWarning = (message = \"Warning\") => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"warning\",\r\n        duration: 5000,\r\n        position: \"top-center\",\r\n      } as ToastData)\r\n    );\r\n  };\r\n\r\n  const isGuestUser = loggedInUser?.email === \"guest.user@gmail.com\";\r\n\r\n  // Edit Password Config\r\n  let editPasswordData: EditPwdData;\r\n\r\n  const getUpdatedState = (\r\n    updatedState: EditPwdData,\r\n    options?: EditPwdDataOptions\r\n  ) => {\r\n    editPasswordData = updatedState;\r\n    if (options?.submitUpdatedPassword)\r\n      updatePassword({ enterKeyPressed: true });\r\n  };\r\n\r\n  const updatePassword = async (options: { enterKeyPressed: boolean }) => {\r\n    const { currentPassword, newPassword, confirmNewPassword } =\r\n      editPasswordData;\r\n\r\n    if (!currentPassword || !newPassword || !confirmNewPassword) {\r\n      return displayWarning(\"Please Enter All the Fields\");\r\n    }\r\n    if (currentPassword === newPassword) {\r\n      return displayWarning(\"New Password Must Differ from Current Password\");\r\n    }\r\n    if (newPassword !== confirmNewPassword) {\r\n      return displayWarning(\"New Password Must Match Confirm New Password\");\r\n    }\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      await axios.put(\r\n        \"/api/user/update/password\",\r\n        { currentPassword, newPassword },\r\n        config as AxiosRequestConfig\r\n      );\r\n      displaySuccess(\r\n        \"Password Updated Successfully. Please Login Again with Updated Password\",\r\n        5000\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      localStorage.removeItem(\"loggedInUser\");\r\n      dispatch(setLoggedInUser(null));\r\n      if (options?.enterKeyPressed) {\r\n        dispatch(hideDialog());\r\n        dispatch(setSelectedChat(null));\r\n        navigate(\"/\");\r\n        return;\r\n      }\r\n      return \"pwdUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Password Update Failed\",\r\n          message:\r\n            (error as AxiosErrorType).response?.data?.message ||\r\n            (error as Error).message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        } as ToastData)\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"loggedInUser\");\r\n    dispatch(setLoggedInUser(null));\r\n    dispatch(\r\n      displayToast({\r\n        message: \"Logged Out\",\r\n        type: \"success\",\r\n        duration: 1500,\r\n        position: \"bottom-center\",\r\n      } as ToastData)\r\n    );\r\n    return \"loggingOut\";\r\n  };\r\n\r\n  // Open dialogs\r\n  const openLogoutConfirmDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<>Are you sure you want to log out?</>);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Logout Confirmation\",\r\n        nolabel: \"NO\",\r\n        yeslabel: \"YES\",\r\n        loadingYeslabel: \"Logging Out...\",\r\n        action: logout,\r\n      })\r\n    );\r\n  };\r\n\r\n  const openEditProfileDialog = () => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<EditProfileBody />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: isGuestUser ? \"View Profile\" : \"Edit Profile\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const openEditPasswordDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<ChangePasswordBody getUpdatedState={getUpdatedState} />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Change Password\",\r\n        nolabel: \"CANCEL\",\r\n        yeslabel: \"SAVE\",\r\n        loadingYeslabel: \"Saving...\",\r\n        action: updatePassword,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      open={Boolean(anchor)}\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={openEditProfileDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          {isGuestUser ? <Person /> : <ManageAccounts />}\r\n        </ListItemIcon>\r\n        <MenuItemText>{isGuestUser ? \"View\" : \"Edit\"} Profile</MenuItemText>\r\n      </MenuItem>\r\n      {!isGuestUser && (\r\n        <MenuItem sx={menuItemProps} onClick={openEditPasswordDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <Key />\r\n          </ListItemIcon>\r\n          <MenuItemText>Change Password</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n      <MenuItem sx={menuItemProps} onClick={openLogoutConfirmDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Logout />\r\n        </ListItemIcon>\r\n        <MenuItemText>Logout</MenuItemText>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default ProfileSettingsMenu;\r\n","import { Avatar } from \"@mui/material\";\r\nimport { UserType } from \"../../utils/AppTypes\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"./CustomTooltip\";\r\n\r\nconst arrowStyles = { color: \"#A30CA7\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  padding: \"5px 12px\",\r\n  borderRadius: 5,\r\n  backgroundColor: \"#A30CA7\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\ninterface Props {\r\n  user: UserType;\r\n  truncateValues: number[];\r\n}\r\n\r\nconst UserListItem = ({ user, truncateValues }: Props) => {\r\n  if (!user) return <></>;\r\n  const { _id, name, email, profilePic } = user;\r\n  const [max, index] = truncateValues;\r\n\r\n  return (\r\n    <div\r\n      data-user={_id}\r\n      className={`userListItem user-select-none d-flex text-light justify-content-start align-items-center pointer px-3`}\r\n    >\r\n      <CustomTooltip\r\n        data-user={_id}\r\n        title={`${name} (${email})`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <Avatar\r\n          src={profilePic}\r\n          alt={_id}\r\n          data-user={_id}\r\n          className={`listItemAvatar userListAvatar`}\r\n        />\r\n      </CustomTooltip>\r\n      <div\r\n        data-user={_id}\r\n        className=\"userListData d-flex flex-column align-items-start px-2\"\r\n      >\r\n        <p data-user={_id} className=\"userListName fs-5 fw-bold text-info\">\r\n          {truncateString(name, max, index)}\r\n        </p>\r\n        <p data-user={_id} className=\"userListEmail fs-6\">\r\n          {truncateString(email, max, index)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n","import { Skeleton } from \"@mui/material\";\r\n\r\ninterface Props {\r\n  listOf: string;\r\n  dpRadius: string;\r\n  count: number;\r\n}\r\n\r\nconst LoadingList = ({ listOf, dpRadius, count }: Props) => {\r\n  const skeletonStyle = { backgroundColor: \"#999\" };\r\n  return (\r\n    <>\r\n      {[...Array(count)].map((e, i) => (\r\n        <div key={`loadingListOf${listOf + i}`} className=\"loadingListItem row\">\r\n          <Skeleton\r\n            variant=\"circular\"\r\n            className=\"loadingDp rounded-circle\"\r\n            style={{ ...skeletonStyle, width: dpRadius, height: dpRadius }}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className=\"loadingTitle col-5\"\r\n            style={skeletonStyle}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className=\"loadingDesc col-7\"\r\n            style={skeletonStyle}\r\n          />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadingList;\r\n","import { Clear, Search } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { forwardRef, LegacyRef, useState } from \"react\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\nimport { useAppSelector } from \"../../store/storeHooks\";\r\nimport { ChangeEventHandler, InputRef } from \"../../utils/AppTypes\";\r\n\r\ninterface Props {\r\n  searchHandler: ChangeEventHandler;\r\n  autoFocus: boolean;\r\n  placeholder: string;\r\n  clearInput: () => void;\r\n}\r\n\r\nconst SearchInput = forwardRef<HTMLInputElement, Props>((props, inputRef) => {\r\n  const { searchHandler, autoFocus, placeholder, clearInput } = props;\r\n  const { disableIfLoading, formFieldClassName, inputFieldClassName } =\r\n    useAppSelector(selectFormfieldState);\r\n\r\n  // To display/hide clear search (<Close />) icon when typing\r\n  const [typing, setTyping] = useState(false);\r\n\r\n  const onClearIconClick = () => {\r\n    if (!inputRef || !(inputRef as InputRef).current) return;\r\n    (inputRef as InputRef).current.value = \"\";\r\n    setTyping(false); // Hide '<Close />' icon\r\n    (inputRef as InputRef).current.focus();\r\n    clearInput();\r\n  };\r\n\r\n  const onChangeHandler: ChangeEventHandler = (e) => {\r\n    setTyping(Boolean(e.target.value.trim()));\r\n    searchHandler(e);\r\n  };\r\n\r\n  return (\r\n    <section className={`${formFieldClassName} pt-3 pb-2 mx-1`}>\r\n      {/* Input box */}\r\n      <div className=\"input-group\">\r\n        <span\r\n          className={`input-group-text ${disableIfLoading} bg-black bg-gradient border-secondary text-light rounded-pill rounded-end`}\r\n        >\r\n          <Search className=\"mx-0\" style={{ marginTop: \"3px\" }} />\r\n        </span>\r\n        <input\r\n          type=\"text\"\r\n          ref={inputRef as LegacyRef<HTMLInputElement>}\r\n          onChange={onChangeHandler}\r\n          autoFocus={autoFocus}\r\n          placeholder={placeholder}\r\n          className={`${inputFieldClassName\r\n            .replace(\"text-center\", \"text-start\")\r\n            .replace(\"pill\", \"0\")} border-start-0 border-end-0 d-inline-block`}\r\n          style={{ cursor: \"auto\", fontSize: \"18px\" }}\r\n        />\r\n        {/* Clear icon button */}\r\n        <span\r\n          className={`input-group-text ${disableIfLoading} bg-black bg-gradient border-secondary text-light rounded-pill rounded-start border-start-0`}\r\n        >\r\n          <IconButton\r\n            onClick={onClearIconClick}\r\n            className={`${typing ? \"d-inline-block\" : \"d-none\"}`}\r\n            style={{\r\n              padding: \"0px 9px 3px 9px\",\r\n              margin: \"-7px\",\r\n              color: \"#999999\",\r\n            }}\r\n            sx={{ \":hover\": { backgroundColor: \"#aaaaaa20\" } }}\r\n          >\r\n            <Clear style={{ fontSize: \"19px\" }} />\r\n          </IconButton>\r\n        </span>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default SearchInput;\r\n","import { ChevronLeft } from \"@mui/icons-material\";\r\nimport { Drawer, IconButton } from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"../../utils/axios\";\r\nimport { debounce, getAxiosConfig, truncateString } from \"../../utils/appUtils\";\r\nimport UserListItem from \"./UserListItem\";\r\nimport LoadingList from \"./LoadingList\";\r\nimport SearchInput from \"./SearchInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setDeleteNotifsOfChat,\r\n  setFetchMsgs,\r\n  setSelectedChat,\r\n} from \"../../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport {\r\n  AxiosErrorType,\r\n  ClickEventHandler,\r\n  StateSetter,\r\n  ToastData,\r\n  UserType,\r\n} from \"../../utils/AppTypes\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/storeHooks\";\r\nimport { AxiosRequestConfig } from \"axios\";\r\n\r\ninterface Props {\r\n  isDrawerOpen: boolean;\r\n  setIsDrawerOpen: StateSetter<boolean>;\r\n}\r\n\r\nconst SearchUsersDrawer = ({ isDrawerOpen, setIsDrawerOpen }: Props) => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState<UserType[]>([]);\r\n  const { loggedInUser } = useAppSelector(selectAppState);\r\n  const { loading } = useAppSelector(selectFormfieldState);\r\n  const dispatch = useAppDispatch();\r\n  const searchUserInput = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (isDrawerOpen) {\r\n      setSearchResults([]);\r\n      dispatch(setLoading(false));\r\n      setSearchQuery(\"\");\r\n    }\r\n  }, [isDrawerOpen]);\r\n\r\n  const handleClose = () => setIsDrawerOpen(false);\r\n\r\n  // Debouncing fetchUsers method to limit the no. of API calls\r\n  const searchUsers = debounce(async (e: InputEvent) => {\r\n    const query = (e.target as HTMLInputElement)?.value?.trim();\r\n    setSearchQuery(query);\r\n    if (!query) return setSearchResults([]);\r\n\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.get(\r\n        `/api/user?search=${query}`,\r\n        config as AxiosRequestConfig\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      setSearchResults(data);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Users\",\r\n          message:\r\n            (error as AxiosErrorType).response?.data?.message ||\r\n            (error as Error).message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-left\",\r\n        } as ToastData)\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  }, 800);\r\n\r\n  // Create/Retreive chat when a user item is clicked\r\n  const createOrRetrieveChat = async (userId: string) => {\r\n    handleClose();\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.post(\r\n        `/api/chat`,\r\n        { userId },\r\n        config as AxiosRequestConfig\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      dispatch(setSelectedChat(data));\r\n      dispatch(setFetchMsgs(true));\r\n      dispatch(setDeleteNotifsOfChat(data._id));\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Create/Retrieve Chat\",\r\n          message:\r\n            (error as AxiosErrorType).response?.data?.message ||\r\n            (error as Error).message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const onUserItemClick: ClickEventHandler = (e) => {\r\n    const userId =\r\n      (e.target as HTMLElement).dataset.user ||\r\n      (e.target as HTMLImageElement).alt;\r\n    if (!userId) return;\r\n    createOrRetrieveChat(userId);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        PaperProps={{\r\n          sx: {\r\n            borderTopRightRadius: 10,\r\n            borderBottomRightRadius: 10,\r\n            backgroundImage: \"linear-gradient(0deg,#222,#444)\",\r\n            padding: \"10px\",\r\n            width: \"350px\",\r\n          },\r\n        }}\r\n        anchor=\"left\"\r\n        open={isDrawerOpen}\r\n        onClose={handleClose}\r\n        transitionDuration={350}\r\n      >\r\n        <div className=\"d-flex justify-content-center\">\r\n          <span\r\n            className=\"text-center mt-1 user-select-none text-light\"\r\n            style={{ marginTop: 0, fontSize: 27 }}\r\n          >\r\n            Search Users\r\n            <IconButton\r\n              onClick={handleClose}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: 8,\r\n                top: 5,\r\n                color: \"#999999\",\r\n                \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n              }}\r\n            >\r\n              <ChevronLeft className=\"text-light m-1\" />\r\n            </IconButton>\r\n          </span>\r\n        </div>\r\n        {/* Search Bar */}\r\n        <SearchInput\r\n          ref={searchUserInput}\r\n          searchHandler={searchUsers}\r\n          autoFocus={true}\r\n          placeholder=\"Search by Name or Email\"\r\n          clearInput={() => {\r\n            setSearchQuery(\"\");\r\n            setSearchResults([]);\r\n            searchUserInput?.current?.focus();\r\n          }}\r\n        />\r\n        {/* Search Results */}\r\n        <section\r\n          className=\"position-relative mx-1 my-2 h-100\"\r\n          style={{ overflowY: \"auto\", overflowX: \"hidden\" }}\r\n        >\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={onUserItemClick}\r\n          >\r\n            {loading ? (\r\n              <LoadingList listOf=\"User\" dpRadius={\"42px\"} count={8} />\r\n            ) : searchResults.length > 0 ? (\r\n              searchResults.map((user: UserType) => (\r\n                <UserListItem\r\n                  key={user?._id}\r\n                  user={user}\r\n                  truncateValues={[27, 24]}\r\n                />\r\n              ))\r\n            ) : searchQuery && !loading ? (\r\n              <p className=\"text-light text-center fs-5 mt-3 mx-5\">\r\n                No results found for '\r\n                <span className=\"text-info\">\r\n                  {truncateString(searchQuery, 30, 26)}\r\n                </span>\r\n                '\r\n              </p>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        </section>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchUsersDrawer;\r\n","import { Notifications, Search } from \"@mui/icons-material\";\r\nimport { Avatar, IconButton } from \"@mui/material\";\r\nimport { SetStateAction, useEffect, useRef, useState } from \"react\";\r\nimport NotificationsMenu from \"./menus/NotificationsMenu\";\r\nimport ProfileSettingsMenu from \"./menus/ProfileSettingsMenu\";\r\nimport SearchUsersDrawer from \"./utils/SearchUsersDrawer\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport animationData from \"../animations/chat-gif.json\";\r\nimport LottieAnimation from \"./utils/LottieAnimation\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../store/slices/AppSlice\";\r\nimport {\r\n  ChatType,\r\n  ClickEventHandler,\r\n  DialogBodySetter,\r\n  SpanRef,\r\n} from \"../utils/AppTypes\";\r\n\r\ninterface Props {\r\n  chats: ChatType[];\r\n  setDialogBody: DialogBodySetter;\r\n}\r\n\r\nconst arrowStyles = { color: \"#666\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 16,\r\n  padding: \"5px 15px\",\r\n  backgroundColor: \"#666\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ChatpageHeader = ({ chats, setDialogBody }: Props) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const appGif = useRef<HTMLSpanElement>();\r\n  const notifCount = loggedInUser?.notifications?.length || \"\";\r\n\r\n  const [animateNotif, setAnimateNotif] = useState(false);\r\n  const [notificationsMenuAnchor, setNotificationsMenuAnchor] =\r\n    useState<HTMLElement | null>(null);\r\n  const [profileSettingsMenuAnchor, setProfileSettingsMenuAnchor] =\r\n    useState<HTMLElement | null>(null);\r\n\r\n  const openNotificationMenu: ClickEventHandler = (e) =>\r\n    setNotificationsMenuAnchor(e.target as SetStateAction<HTMLElement | null>);\r\n\r\n  const openProfileSettingsMenu: ClickEventHandler = (e) =>\r\n    setProfileSettingsMenuAnchor(\r\n      e.target as SetStateAction<HTMLElement | null>\r\n    );\r\n\r\n  // For opening/closing 'search users' left drawer\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (animateNotif) return;\r\n    setAnimateNotif(true);\r\n    let timeout = setTimeout(() => {\r\n      setAnimateNotif(false);\r\n    }, 1000);\r\n    return () => clearTimeout(timeout);\r\n  }, [notifCount]);\r\n\r\n  return (\r\n    <header\r\n      className={`chatpageDiv d-flex justify-content-between align-items-center user-select-none`}\r\n    >\r\n      {/* Search Users to create/access chat */}\r\n      <CustomTooltip\r\n        title=\"Search Users to Start or Open a Chat\"\r\n        placement=\"bottom-start\"\r\n        arrow\r\n      >\r\n        <button\r\n          style={{ borderRadius: \"20px\" }}\r\n          className={`btn btn-outline-secondary text-light px-3`}\r\n          onClick={() => setIsDrawerOpen(true)}\r\n        >\r\n          <Search className={`me-1`} />\r\n          <span className={`d-none d-md-inline mb-1 fs-5`}>Search Users</span>\r\n        </button>\r\n      </CustomTooltip>\r\n      <SearchUsersDrawer\r\n        isDrawerOpen={isDrawerOpen}\r\n        setIsDrawerOpen={setIsDrawerOpen}\r\n      />\r\n\r\n      {/* App Logo */}\r\n      <div className={`d-flex align-items-center ms-3 ms-md-0`}>\r\n        <LottieAnimation\r\n          ref={appGif as SpanRef}\r\n          className={\"d-none d-sm-inline-block mt-2 me-sm-1 me-md-2\"}\r\n          style={{ width: \"35px\", height: \"35px\" }}\r\n          animationData={animationData}\r\n        />\r\n        <span style={{ color: \"orange\" }} className=\"fs-4 fw-bold mt-1\">\r\n          CHAT ZONED\r\n        </span>\r\n      </div>\r\n\r\n      {/* User notification and profile settings icons */}\r\n      <div>\r\n        <CustomTooltip title={`Notifications`} placement=\"bottom-end\" arrow>\r\n          <IconButton\r\n            className=\"position-relative mx-1\"\r\n            onClick={openNotificationMenu}\r\n            sx={{\r\n              color: \"#999999\",\r\n              \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n            }}\r\n          >\r\n            {notifCount && (\r\n              <span\r\n                className={`notifBadge ${\r\n                  animateNotif ? \"notifCountChange\" : \"\"\r\n                } badge rounded-circle bg-danger \r\n               position-absolute`}\r\n                style={{\r\n                  fontSize: notifCount > 99 ? 12 : 13,\r\n                  top: -2,\r\n                  right: notifCount > 99 ? -11 : notifCount > 9 ? -5 : -2,\r\n                  padding:\r\n                    notifCount > 99\r\n                      ? \"6px 5px\"\r\n                      : notifCount > 9\r\n                      ? \"4px 5px\"\r\n                      : \"4px 7px\",\r\n                }}\r\n              >\r\n                {!notifCount ? \"\" : notifCount > 99 ? \"99+\" : notifCount}\r\n              </span>\r\n            )}\r\n            <Notifications className={`text-light`} />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n        <CustomTooltip title=\"Profile Settings\" placement=\"bottom-end\" arrow>\r\n          <IconButton\r\n            className=\"mx-md-3 mx-lg-4\"\r\n            sx={{\r\n              color: \"#999999\",\r\n              \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n            }}\r\n            onClick={openProfileSettingsMenu}\r\n          >\r\n            <Avatar\r\n              alt=\"LoggedInUser\"\r\n              className=\"img-fluid\"\r\n              src={loggedInUser?.profilePic}\r\n            />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n        <NotificationsMenu\r\n          chats={chats}\r\n          anchor={notificationsMenuAnchor as HTMLElement}\r\n          setAnchor={setNotificationsMenuAnchor}\r\n        />\r\n        <ProfileSettingsMenu\r\n          anchor={profileSettingsMenuAnchor as HTMLElement}\r\n          setAnchor={setProfileSettingsMenuAnchor}\r\n          setDialogBody={setDialogBody}\r\n        />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default ChatpageHeader;\r\n","import { SetStateAction, useRef, useState } from \"react\";\r\nimport { Edit, KeyboardDoubleArrowLeft } from \"@mui/icons-material\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport { getAxiosConfig, isImageFile, TWO_MB } from \"../../utils/appUtils\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport axios from \"../../utils/axios\";\r\nimport { Button, CircularProgress, DialogActions } from \"@mui/material\";\r\nimport { btnCustomStyle, btnHoverStyle } from \"../utils/CustomDialog\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  toggleRefresh,\r\n} from \"../../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\nimport {\r\n  AxiosErrorType,\r\n  ChangeEventHandler,\r\n  ClickEventHandler,\r\n  KeyboardEventHandler,\r\n  ToastData,\r\n  UserType,\r\n} from \"../../utils/AppTypes\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/storeHooks\";\r\nimport { AxiosRequestConfig } from \"axios\";\r\n\r\nconst arrowStyles = { color: \"#111\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  padding: \"5px 10px\",\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\nconst DEFAULT_GROUP_DP = process.env.REACT_APP_DEFAULT_GROUP_DP;\r\n\r\ninterface Props {\r\n  closeChildDialog: () => void;\r\n}\r\n\r\nconst NewGroupBody = ({ closeChildDialog }: Props) => {\r\n  const { loggedInUser, groupInfo, clientSocket, isSocketConnected } =\r\n    useAppSelector(selectAppState);\r\n  const {\r\n    loading,\r\n    disableIfLoading,\r\n    formFieldClassName,\r\n    inputFieldClassName,\r\n    formLabelClassName,\r\n  } = useAppSelector(selectFormfieldState);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { chatDisplayPicUrl, chatName } = groupInfo;\r\n  const [editGroupDpMenuAnchor, setEditGroupDpMenuAnchor] =\r\n    useState<HTMLElement | null>(null);\r\n  const imgInput = useRef<HTMLInputElement | null>(null);\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown: KeyboardEventHandler = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") (e.target as HTMLElement)?.click();\r\n  };\r\n\r\n  const displayWarning = (message = \"Warning\", duration = 3000) => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"warning\",\r\n        duration,\r\n        position: \"top-center\",\r\n      } as ToastData)\r\n    );\r\n  };\r\n\r\n  // Create group chat\r\n  const createGroupChat = async () => {\r\n    if (!groupInfo) return;\r\n    const { chatDisplayPic, chatName, users } = groupInfo;\r\n\r\n    if (!chatName) return displayWarning(\"Please Enter a Group Name\");\r\n\r\n    if (users?.length < 2)\r\n      return displayWarning(\"Please Add Atleast 2 Members\");\r\n\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser, formData: true });\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"displayPic\", chatDisplayPic);\r\n      formData.append(\"chatName\", chatName);\r\n      formData.append(\r\n        \"users\",\r\n        JSON.stringify(users?.map((user: UserType) => user?._id))\r\n      );\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/chat/group\",\r\n        formData,\r\n        config as AxiosRequestConfig\r\n      );\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"new_grp_created\", {\r\n          admin: loggedInUser,\r\n          newGroup: data,\r\n        });\r\n      }\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Group Created Successfully\",\r\n          type: \"success\",\r\n          duration: 2000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      dispatch(toggleRefresh());\r\n      closeChildDialog();\r\n      // Close Parent Dialog as well\r\n      dispatch(hideDialog());\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Create Group\",\r\n          message:\r\n            (error as AxiosErrorType).response?.data?.message ||\r\n            (error as Error)?.message ||\r\n            error,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        } as ToastData)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleImgInputChange: ChangeEventHandler = (e) => {\r\n    if (!e.target?.files) return;\r\n    const imageFile = e.target.files[0];\r\n    if (!imageFile) return;\r\n\r\n    if (!isImageFile(imageFile.name)) {\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Invalid Image File\",\r\n          message: \"Please Select an Image File (png/jpg/jpeg/svg/webp)\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n    }\r\n\r\n    if (imageFile.size >= TWO_MB) {\r\n      if (!imgInput?.current) return;\r\n      imgInput.current.value = \"\";\r\n      return displayWarning(\"Please Select an Image Smaller than 2 MB\", 4000);\r\n    }\r\n    dispatch(\r\n      setGroupInfo({\r\n        ...groupInfo,\r\n        chatDisplayPic: imageFile,\r\n        chatDisplayPicUrl: URL.createObjectURL(imageFile),\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleReset: ClickEventHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      setGroupInfo({\r\n        ...groupInfo,\r\n        chatDisplayPic: null,\r\n        chatDisplayPicUrl: DEFAULT_GROUP_DP,\r\n      })\r\n    );\r\n    if (!imgInput?.current) return;\r\n    imgInput.current.value = \"\";\r\n  };\r\n\r\n  const openEditGroupDpMenu: ClickEventHandler = (e) => {\r\n    setEditGroupDpMenuAnchor(e.target as SetStateAction<HTMLElement | null>);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Select Display Pic */}\r\n      <section className=\"newGroup d-flex position-relative mb-4\">\r\n        <img\r\n          className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n          src={chatDisplayPicUrl}\r\n          alt=\"displayPic\"\r\n        />\r\n        <CustomTooltip\r\n          title=\"Edit Group Display Pic\"\r\n          placement=\"top-start\"\r\n          arrow\r\n        >\r\n          <i\r\n            id=\"editGroupDPTooltip\"\r\n            tabIndex={2}\r\n            onKeyDown={clickOnKeydown}\r\n            className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n            onClick={openEditGroupDpMenu}\r\n          >\r\n            <Edit className=\"text-light fs-6\" />\r\n          </i>\r\n        </CustomTooltip>\r\n        {/* Edit/Delete profile pic menu */}\r\n        <EditPicMenu\r\n          anchor={editGroupDpMenuAnchor as HTMLElement}\r\n          setAnchor={setEditGroupDpMenuAnchor}\r\n          selectProfilePic={() => imgInput?.current?.click()}\r\n          openDeletePhotoConfirmDialog={handleReset}\r\n          deletePhotoCondition={\r\n            !chatDisplayPicUrl?.endsWith(\"group_mbuvht.png\")\r\n          }\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleImgInputChange}\r\n          name=\"groupdp\"\r\n          id=\"editGroupDp\"\r\n          ref={imgInput}\r\n          className={`d-none`}\r\n          disabled={loading}\r\n        />\r\n      </section>\r\n      {/* Group Name input */}\r\n      <section className={`${formFieldClassName}`}>\r\n        <label htmlFor=\"groupName\" className={`${formLabelClassName}`}>\r\n          Group Name <span className=\"required\">*</span>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={chatName}\r\n          onChange={(e) => {\r\n            dispatch(setGroupInfo({ ...groupInfo, chatName: e.target.value }));\r\n          }}\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\") createGroupChat();\r\n          }}\r\n          required\r\n          autoFocus\r\n          name=\"groupname\"\r\n          id=\"groupName\"\r\n          className={`${inputFieldClassName}`}\r\n          disabled={loading}\r\n          placeholder=\"Eg: The Avengers\"\r\n        />\r\n      </section>\r\n      <DialogActions className=\"mt-3\" style={{ marginBottom: \"-17px\" }}>\r\n        <Button\r\n          sx={btnHoverStyle}\r\n          disabled={loading}\r\n          style={btnCustomStyle}\r\n          onClick={closeChildDialog}\r\n        >\r\n          <span>\r\n            <KeyboardDoubleArrowLeft\r\n              className=\"btnArrowIcons\"\r\n              style={{\r\n                margin: \"0px 5px 2px 0px\",\r\n              }}\r\n            />\r\n            Back\r\n          </span>\r\n        </Button>\r\n        <Button\r\n          sx={btnHoverStyle}\r\n          disabled={loading}\r\n          style={btnCustomStyle}\r\n          onClick={createGroupChat}\r\n        >\r\n          {loading ? (\r\n            <>\r\n              <CircularProgress size={25} style={{ marginRight: \"10px\" }} />\r\n              <span>Creating...</span>\r\n            </>\r\n          ) : (\r\n            <>Create Group</>\r\n          )}\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewGroupBody;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { Avatar, Chip } from \"@mui/material\";\r\nimport axios from \"../../utils/axios\";\r\nimport { debounce, getAxiosConfig, truncateString } from \"../../utils/appUtils\";\r\nimport UserListItem from \"../utils/UserListItem\";\r\nimport SearchInput from \"../utils/SearchInput\";\r\nimport NewGroupBody from \"./NewGroupBody\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport LoadingList from \"../utils/LoadingList\";\r\nimport { selectAppState, setGroupInfo } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { setDialogAction } from \"../../store/slices/CustomDialogSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/storeHooks\";\r\nimport { AxiosErrorType, ToastData, UserType } from \"../../utils/AppTypes\";\r\nimport { AxiosRequestConfig } from \"axios\";\r\n\r\ninterface Props {\r\n  getAddedMembers?: ((addedMembers: UserType[]) => void) | null;\r\n  forCreateGroup?: boolean;\r\n}\r\n\r\nconst AddMembersToGroup = ({ getAddedMembers, forCreateGroup }: Props) => {\r\n  const { loggedInUser, groupInfo } = useAppSelector(selectAppState);\r\n  const { childDialogMethods } = useAppSelector(selectChildDialogState);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [groupData, setGroupData] = useState(groupInfo);\r\n  const [fetching, setFetching] = useState(false);\r\n  const groupMembers = groupData?.users as UserType[];\r\n  const [isMemberSelected, setIsMemberSelected] = useState(false);\r\n  const [addedMembers, setAddedMembers] = useState<UserType[]>([]);\r\n\r\n  const searchUserInput = useRef<HTMLInputElement>(null);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState<UserType[]>([]);\r\n  const { setChildDialogBody, displayChildDialog, closeChildDialog } =\r\n    childDialogMethods;\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setGroupData(groupInfo);\r\n  }, [groupInfo]);\r\n\r\n  // For 'create group chat'\r\n  const openNewGroupDialog = () => {\r\n    if (addedMembers?.length < 2) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Add Atleast 2 Members\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        } as ToastData)\r\n      );\r\n    }\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(false);\r\n    dispatch(setGroupInfo(groupData));\r\n    if (!setChildDialogBody || !displayChildDialog) return;\r\n    setChildDialogBody(<NewGroupBody closeChildDialog={closeChildDialog as () => void} />);\r\n    displayChildDialog({\r\n      title: \"Create New Group\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSearchResults([]);\r\n    setSearchQuery(\"\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // For create group: [Next >>] button\r\n    if (forCreateGroup) dispatch(setDialogAction(openNewGroupDialog));\r\n  }, [groupData]);\r\n\r\n  useEffect(() => {\r\n    // For add more group members\r\n    if (!forCreateGroup && getAddedMembers) getAddedMembers([...addedMembers]);\r\n  }, [addedMembers]);\r\n\r\n  const searchUsers = debounce(async (e: InputEvent) => {\r\n    const query = (e.target as HTMLInputElement)?.value?.trim();\r\n    setSearchQuery(query);\r\n    if (!query) return setSearchResults([]);\r\n\r\n    setFetching(true);\r\n    if (isMemberSelected) setIsMemberSelected(false);\r\n\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.get(\r\n        `/api/user?search=${query}`,\r\n        config as AxiosRequestConfig\r\n      );\r\n\r\n      // Remove all the already added members from search results\r\n      let membersNotAdded = [...data];\r\n      groupMembers?.forEach((addedMember) => {\r\n        membersNotAdded = membersNotAdded.filter(\r\n          (m) => m._id !== addedMember?._id\r\n        );\r\n      });\r\n\r\n      setFetching(false);\r\n      setSearchResults(membersNotAdded);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Users\",\r\n          message:\r\n            (error as AxiosErrorType).response?.data?.message ||\r\n            (error as Error).message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-left\",\r\n        } as ToastData)\r\n      );\r\n      setFetching(false);\r\n    }\r\n  }, 800);\r\n\r\n  const unselectUser = (user: UserType) => {\r\n    if (!user) return;\r\n    setGroupData({\r\n      ...groupData,\r\n      users: groupMembers?.filter((u: UserType) => u?._id !== user._id),\r\n    });\r\n    // Remove user from added member list\r\n    setAddedMembers(addedMembers.filter((u: UserType) => u?._id !== user._id));\r\n    // Add removed user to search result list\r\n    setSearchResults([user, ...searchResults]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"addGroupMembers d-flex flex-column\">\r\n      {/* Selected Users tag list */}\r\n      <section\r\n        className=\"mx-auto px-3 py-2 overflow-auto d-flex flex-wrap\"\r\n        style={{\r\n          flex: \"0.33\",\r\n          borderRadius: \"15px\",\r\n          backgroundColor: \"#303030\",\r\n        }}\r\n      >\r\n        {addedMembers?.map((user: UserType) => (\r\n          <Chip\r\n            key={user?._id}\r\n            className=\"userChip text-light bg-success rounded-pill fs-6\"\r\n            avatar={\r\n              <Avatar\r\n                className=\"userChipAvatar\"\r\n                alt={user?.name}\r\n                src={user?.profilePic}\r\n              />\r\n            }\r\n            label={truncateString(user?.name?.split(\" \")[0], 12, 8)}\r\n            onDelete={() => unselectUser(user)}\r\n          />\r\n        ))}\r\n      </section>\r\n      {/* Search Bar */}\r\n      <SearchInput\r\n        ref={searchUserInput}\r\n        searchHandler={searchUsers}\r\n        autoFocus={true}\r\n        placeholder=\"Search Members\"\r\n        clearInput={() => {\r\n          setSearchQuery(\"\");\r\n          setSearchResults([]);\r\n          if (!searchUserInput) return;\r\n          searchUserInput.current?.focus();\r\n        }}\r\n      />\r\n      {/* Search Results */}\r\n      <section\r\n        className=\"position-relative mx-auto mt-2 overflow-auto\"\r\n        style={{ flex: \"1\", marginBottom: \"-10px\" }}\r\n      >\r\n        <div\r\n          // 'Event delegation'\r\n          onClick={(e) => {\r\n            const userId =\r\n              (e.target as HTMLElement).dataset.user ||\r\n              (e.target as HTMLImageElement).alt;\r\n            if (!userId) return;\r\n\r\n            if (!isMemberSelected) setIsMemberSelected(true);\r\n            // Add selected user to tag list\r\n            const selectedUser = searchResults.find(\r\n              (u: UserType) => u?._id === userId\r\n            );\r\n            setGroupData({\r\n              ...groupData,\r\n              users: [...groupMembers, selectedUser],\r\n            });\r\n            // Add selected user to added member list\r\n            setAddedMembers([\r\n              ...(addedMembers as UserType[]),\r\n              selectedUser as UserType,\r\n            ]);\r\n            // Remove selected user from search result list\r\n            setSearchResults(\r\n              searchResults.filter((u: UserType) => u?._id !== userId)\r\n            );\r\n          }}\r\n        >\r\n          {fetching ? (\r\n            <LoadingList listOf=\"Member\" dpRadius={\"43px\"} count={6} />\r\n          ) : searchResults.length > 0 ? (\r\n            searchResults.map((user) => (\r\n              <UserListItem\r\n                key={(user as UserType)?._id}\r\n                user={user}\r\n                truncateValues={[21, 18]}\r\n              />\r\n            ))\r\n          ) : (\r\n            searchQuery &&\r\n            !fetching && (\r\n              <p className=\"text-light text-center fs-5 mt-3 mx-5\">\r\n                {isMemberSelected ? \"No Other Users \" : \"No Results \"}\r\n                Found for '\r\n                <span className=\"text-info\">\r\n                  {truncateString(searchQuery, 25, 22)}\r\n                </span>\r\n                '\r\n              </p>\r\n            )\r\n          )}\r\n        </div>\r\n      </section>\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMembersToGroup;\r\n","import { Avatar } from \"@mui/material\";\r\nimport LottieAnimation from \"./LottieAnimation\";\r\nimport typingAnimData from \"../../animations/typing.json\";\r\nimport { useRef } from \"react\";\r\n\r\ninterface Props {\r\n  typingChatUser: string;\r\n  showAvatar: boolean;\r\n}\r\n\r\nconst TypingIndicator = ({ typingChatUser, showAvatar }: Props) => {\r\n  const typingGif = useRef<HTMLSpanElement>(null);\r\n  const typingUserData = typingChatUser?.toString().split(\"---\") || [];\r\n  const typingUserName = typingUserData[1] || \"\";\r\n  const isGroupChat = typingUserData[3] === \"true\";\r\n  return (\r\n    <span\r\n      className={`typingIndicator ${\r\n        typingChatUser ? \"displayTyping\" : \"hideTyping\"\r\n      } \r\n      d-flex pt-2 rounded-3 ps-2 ms-3`}\r\n    >\r\n      {showAvatar && (\r\n        <Avatar\r\n          alt={typingUserName || \"Receiver\"}\r\n          src={typingUserData[2] || \"Receiver\"}\r\n          style={{ height: 30, width: 30 }}\r\n        />\r\n      )}\r\n      <span className=\"ms-2\">\r\n        {typingUserName && isGroupChat ? `${typingUserName} is ` : \"\"}typing\r\n      </span>\r\n      <LottieAnimation\r\n        ref={typingGif}\r\n        className={\"\"}\r\n        style={{ height: 30, bottom: 0 }}\r\n        animationData={typingAnimData}\r\n      />\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default TypingIndicator;\r\n","import {\r\n  AudioFile,\r\n  Description,\r\n  DoneAll,\r\n  GifBox,\r\n  Image,\r\n  PictureAsPdf,\r\n  VideoFile,\r\n} from \"@mui/icons-material\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport { useAppSelector } from \"../../store/storeHooks\";\r\nimport { ChatType, MessageType } from \"../../utils/AppTypes\";\r\nimport {\r\n  dateStringOf,\r\n  isImageFile,\r\n  msgDateStringOf,\r\n  msgTimeStringOf,\r\n  truncateString,\r\n} from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"./CustomTooltip\";\r\nimport TypingIndicator from \"./TypingIndicator\";\r\n\r\nconst arrowStyles = { color: \"#A30CA7\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  padding: \"5px 12px\",\r\n  borderRadius: 5,\r\n  backgroundColor: \"#A30CA7\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\ninterface Props {\r\n  chat: ChatType;\r\n  chatNotifCount: number | string;\r\n  typingChatUser: string;\r\n}\r\n\r\nconst ChatListItem = ({ chat, chatNotifCount, typingChatUser }: Props) => {\r\n  const { selectedChat, loggedInUser } = useAppSelector(selectAppState);\r\n  if (!chat) return <></>;\r\n  const {\r\n    _id,\r\n    chatName,\r\n    receiverEmail,\r\n    isGroupChat,\r\n    lastMessage,\r\n    chatDisplayPic,\r\n  } = chat;\r\n  const tooltipTitle = isGroupChat\r\n    ? `Group: ${chatName}\\n(${chat?.users?.length} Members)`\r\n    : `${chatName}\\n${receiverEmail}`;\r\n\r\n  let lastMsgContent = lastMessage?.content\r\n    ?.replaceAll(\"<br>\", \"\\n\")\r\n    .replaceAll(\"&nbsp;\", \" \")\r\n    .replaceAll(\"<div>\", \"\\n\")\r\n    .replaceAll(\"</div>\", \"\\n\")\r\n    .replaceAll(\"<span>\", \"\")\r\n    .replaceAll(\"</span>\", \"\");\r\n\r\n  const lastMsgDate = new Date(\r\n    (lastMessage as MessageType)?.createdAt as string\r\n  );\r\n  const lastMsgDateString = msgDateStringOf(lastMsgDate);\r\n\r\n  const lastMsgFileUrl = lastMessage?.fileUrl;\r\n  const fileContents = lastMessage?.file_name?.split(\"===\") || [];\r\n  const lastMsgFileName = fileContents[0] || \"\";\r\n  const lastMsgData = lastMsgContent || lastMsgFileName;\r\n  const fileType = fileContents[1]?.split(\"+++\")[1];\r\n  let lastMsgFileType;\r\n\r\n  if (lastMsgFileUrl) {\r\n    lastMsgFileType = isImageFile(lastMsgFileUrl)\r\n      ? \"image\"\r\n      : /(\\.gif)$/.test(lastMsgFileUrl)\r\n      ? \"gif\"\r\n      : fileType?.startsWith(\"video/\") ||\r\n        /(\\.mp4|\\.mov|\\.ogv|\\.webm)$/.test(lastMsgFileUrl)\r\n      ? \"video\"\r\n      : fileType?.startsWith(\"audio/\") ||\r\n        /(\\.mp3|\\.ogg|\\.wav)$/.test(lastMsgFileUrl)\r\n      ? \"audio\"\r\n      : /(\\.pdf)$/.test(lastMsgFileUrl)\r\n      ? \"pdf\"\r\n      : \"otherFile\";\r\n  }\r\n\r\n  return (\r\n    <div\r\n      data-chat={_id}\r\n      data-has-notifs={chatNotifCount}\r\n      className={`chatListItem w-100 user-select-none text-light pointer ${\r\n        selectedChat?._id === _id ? \"isSelected\" : \"\"\r\n      } d-flex justify-content-start align-items-center`}\r\n    >\r\n      {/* Chat Display Pic */}\r\n      <CustomTooltip\r\n        title={`View ${isGroupChat ? \"Group DP\" : \"Profile Pic\"}`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <Avatar\r\n          src={chatDisplayPic as string}\r\n          alt={chatName}\r\n          data-chat={_id}\r\n          data-has-notifs={chatNotifCount}\r\n          className={`img-fluid listItemAvatar chatListAvatar rounded-circle`}\r\n        />\r\n      </CustomTooltip>\r\n      {/* Chat Data */}\r\n      <div\r\n        data-chat={_id}\r\n        data-has-notifs={chatNotifCount}\r\n        className=\"chatListData w-100 d-flex flex-column align-items-start px-2\"\r\n      >\r\n        {/* Chat Name */}\r\n        <p\r\n          data-chat={_id}\r\n          data-has-notifs={chatNotifCount}\r\n          title={tooltipTitle}\r\n          className=\"chatListName fs-5 fw-bold text-info text-start\"\r\n        >\r\n          {truncateString(chatName, 31, 28)}\r\n        </p>\r\n        {lastMessage && (\r\n          <span\r\n            className=\"lastMsgDate\"\r\n            data-chat={_id}\r\n            data-has-notifs={chatNotifCount}\r\n            style={{ color: chatNotifCount ? \"#50F0B8\" : \"#b9b9b9\" }}\r\n          >\r\n            {lastMsgDateString === \"Today\"\r\n              ? msgTimeStringOf(lastMsgDate)\r\n              : lastMsgDateString !== \"Yesterday\"\r\n              ? dateStringOf(lastMsgDate)\r\n              : \"Yesterday\"}\r\n          </span>\r\n        )}\r\n        {lastMessage && chatNotifCount && (\r\n          <span\r\n            className={`notifBadge badge rounded-circle\r\n             position-absolute text-black bg-gradient`}\r\n            data-chat={_id}\r\n            data-has-notifs={chatNotifCount}\r\n            style={{\r\n              fontSize: chatNotifCount > 99 ? 12 : 13,\r\n              right: 17,\r\n              bottom: chatNotifCount > 9 ? 8 : 9,\r\n              padding:\r\n                chatNotifCount > 99\r\n                  ? \"6px 4px\"\r\n                  : chatNotifCount > 9\r\n                  ? \"6px 5px\"\r\n                  : \"4px 7px\",\r\n            }}\r\n          >\r\n            {chatNotifCount || \"\"}\r\n          </span>\r\n        )}\r\n        {/* Last Message Data */}\r\n        {typingChatUser ? (\r\n          <span style={{ color: \"#73F76D\", margin: \"-6px 0px -4px -30px\" }}>\r\n            <TypingIndicator\r\n              showAvatar={false}\r\n              typingChatUser={typingChatUser}\r\n            />\r\n          </span>\r\n        ) : (\r\n          (lastMessage || lastMessage === null || isGroupChat) && (\r\n            <p\r\n              data-chat={_id}\r\n              data-has-notifs={chatNotifCount}\r\n              className=\"chatListLastMessage text-start\"\r\n            >\r\n              <span\r\n                data-chat={_id}\r\n                data-has-notifs={chatNotifCount}\r\n                className=\"text-warning\"\r\n              >\r\n                <>\r\n                  {lastMessage === null ||\r\n                  (isGroupChat && !lastMessage) ||\r\n                  (!isGroupChat &&\r\n                    lastMessage?.sender?._id !== loggedInUser?._id) ? (\r\n                    \"\"\r\n                  ) : lastMessage?.sender?._id === loggedInUser?._id ? (\r\n                    <>\r\n                      {isGroupChat ? (\r\n                        <>You: </>\r\n                      ) : (\r\n                        <DoneAll\r\n                          data-chat={_id}\r\n                          data-has-notifs={chatNotifCount}\r\n                          className=\"me-1 fs-5\"\r\n                          style={{ color: \"lightblue\" }}\r\n                        />\r\n                      )}\r\n                    </>\r\n                  ) : (\r\n                    truncateString(\r\n                      lastMessage?.sender?.name?.split(\" \")[0],\r\n                      12,\r\n                      8\r\n                    ) + \": \"\r\n                  )}\r\n                </>\r\n              </span>\r\n              {lastMsgFileUrl ? (\r\n                <span data-chat={_id} data-has-notifs={chatNotifCount}>\r\n                  {lastMsgFileType === \"image\" ? (\r\n                    <span\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      title={lastMsgData}\r\n                    >\r\n                      <Image\r\n                        data-chat={_id}\r\n                        data-has-notifs={chatNotifCount}\r\n                        className=\"fileIcon\"\r\n                      />{\" \"}\r\n                      {truncateString(lastMsgContent, 25, 22) || \"Photo\"}\r\n                    </span>\r\n                  ) : lastMsgFileType === \"gif\" ? (\r\n                    <span\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      title={lastMsgData}\r\n                    >\r\n                      <GifBox\r\n                        data-chat={_id}\r\n                        data-has-notifs={chatNotifCount}\r\n                        className=\"fileIcon\"\r\n                      />{\" \"}\r\n                      {truncateString(lastMsgContent, 25, 22) || \"Gif\"}\r\n                    </span>\r\n                  ) : lastMsgFileType === \"video\" ? (\r\n                    <span\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      title={lastMsgData}\r\n                    >\r\n                      <VideoFile\r\n                        data-chat={_id}\r\n                        data-has-notifs={chatNotifCount}\r\n                        className=\"fileIcon\"\r\n                      />{\" \"}\r\n                      {truncateString(lastMsgContent, 25, 22) || \"Video\"}\r\n                    </span>\r\n                  ) : lastMsgFileType === \"audio\" ? (\r\n                    <span\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      title={lastMsgData}\r\n                    >\r\n                      <AudioFile\r\n                        data-chat={_id}\r\n                        data-has-notifs={chatNotifCount}\r\n                        className=\"fileIcon\"\r\n                      />{\" \"}\r\n                      {truncateString(lastMsgContent, 25, 22) || \"Audio\"}\r\n                    </span>\r\n                  ) : lastMsgFileType === \"pdf\" ? (\r\n                    <span\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      title={lastMsgData}\r\n                    >\r\n                      <PictureAsPdf\r\n                        data-chat={_id}\r\n                        data-has-notifs={chatNotifCount}\r\n                        className=\"fileIcon\"\r\n                      />{\" \"}\r\n                      {truncateString(lastMsgData, 22, 19) || \"Pdf\"}\r\n                    </span>\r\n                  ) : (\r\n                    <span\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      title={lastMsgData}\r\n                    >\r\n                      <Description\r\n                        data-chat={_id}\r\n                        data-has-notifs={chatNotifCount}\r\n                        className=\"fileIcon\"\r\n                      />{\" \"}\r\n                      {truncateString(lastMsgData, 22, 19) || \"File\"}\r\n                    </span>\r\n                  )}\r\n                </span>\r\n              ) : (\r\n                <span\r\n                  data-chat={_id}\r\n                  data-has-notifs={chatNotifCount}\r\n                  title={lastMsgContent}\r\n                >\r\n                  {lastMessage === null\r\n                    ? \" Last Message was deleted\"\r\n                    : isGroupChat && !lastMessage\r\n                    ? `New Group Created`\r\n                    : truncateString(lastMsgContent, 35, 32)}\r\n                </span>\r\n              )}\r\n            </p>\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListItem;\r\n","const FILE_STYLES = { width: \"90vw\", height: \"82vh\", borderRadius: 10 };\r\nconst PLACEHOLDER_IMG = process.env.REACT_APP_PLACEHOLDER_IMG_URL as string;\r\n\r\ninterface Props {\r\n  event: React.MouseEvent;\r\n  audioSrc?: string;\r\n  videoSrc?: string;\r\n}\r\n\r\nconst FullSizeImage = ({ event, audioSrc, videoSrc }: Props) => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n      {Boolean(audioSrc) ? (\r\n        <audio\r\n          src={audioSrc}\r\n          style={{ width: \"clamp(300px, 70%, 600px)\" }}\r\n          autoPlay\r\n          controls\r\n        >\r\n          Your browser does not support audio tag.\r\n        </audio>\r\n      ) : Boolean(videoSrc) ? (\r\n        <video src={videoSrc} style={FILE_STYLES} autoPlay controls>\r\n          Your browser does not support video tag.\r\n        </video>\r\n      ) : (\r\n        <img\r\n          src={(event?.target as HTMLImageElement)?.src || PLACEHOLDER_IMG}\r\n          alt={(event?.target as HTMLImageElement)?.alt || \"fullSizeImg\"}\r\n          className=\"img-fluid d-inline-block mx-auto\"\r\n          style={{ ...FILE_STYLES, objectFit: \"contain\" }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullSizeImage;\r\n","import { GroupAdd, Search } from \"@mui/icons-material\";\r\n\r\nconst GettingStarted = () => {\r\n  const iconWrapperStyles = \"text-light border d-inline-block rounded-pill\";\r\n\r\n  return (\r\n    <div\r\n      className=\"w-75 mt-4 mx-auto\"\r\n      style={{ color: \"lightblue\", fontSize: 18 }}\r\n    >\r\n      <p>\r\n        Click on{\" \"}\r\n        <span className={`${iconWrapperStyles} px-2`}>\r\n          <Search />\r\n        </span>{\" \"}\r\n        button at the top left, to search users by name or email, and then click\r\n        on a user to start a one-to-one chat.\r\n      </p>\r\n      <p>\r\n        You can also click on{\" \"}\r\n        <span\r\n          className={`${iconWrapperStyles}`}\r\n          style={{ padding: \"0px 10px 3px 13px\" }}\r\n        >\r\n          <GroupAdd />\r\n        </span>{\" \"}\r\n        button to search users and create a group chat.\r\n      </p>\r\n      <p style={{ color: \"#F2AFEC\" }}>\r\n        If you're not sure what to search, enter{\" \"}\r\n        <span className={`${iconWrapperStyles} bg-secondary border-0 px-2`}>\r\n          .\r\n        </span>{\" \"}\r\n        in search box to list all users.\r\n      </p>\r\n      <p>\r\n        After creating a chat, click the chat avatar at top-left of messages\r\n        view, for receiver/group info.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GettingStarted;\r\n","import { GroupAdd } from \"@mui/icons-material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  debounce,\r\n  getAxiosConfig,\r\n  getOneToOneChatReceiver,\r\n  truncateString,\r\n} from \"../utils/appUtils\";\r\nimport axios from \"../utils/axios\";\r\nimport AddMembersToGroup from \"./dialogs/AddMembersToGroup\";\r\nimport ChatListItem from \"./utils/ChatListItem\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport FullSizeImage from \"./utils/FullSizeImage\";\r\nimport LoadingList from \"./utils/LoadingList\";\r\nimport SearchInput from \"./utils/SearchInput\";\r\nimport {\r\n  selectAppState,\r\n  setDeleteNotifsOfChat,\r\n  setFetchMsgs,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n} from \"../store/slices/AppSlice\";\r\nimport {\r\n  displayDialog,\r\n  setShowDialogActions,\r\n} from \"../store/slices/CustomDialogSlice\";\r\nimport { displayToast } from \"../store/slices/ToastSlice\";\r\nimport GettingStarted from \"./GettingStarted\";\r\nimport {\r\n  AxiosErrorType,\r\n  ChatType,\r\n  ClickEventHandler,\r\n  DialogBodySetter,\r\n  InputRef,\r\n  MessageType,\r\n  StateSetter,\r\n  ToastData,\r\n} from \"../utils/AppTypes\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/storeHooks\";\r\nimport { AxiosRequestConfig } from \"axios\";\r\n\r\nconst DEFAULT_GROUP_DP = process.env.REACT_APP_DEFAULT_GROUP_DP;\r\n\r\ninterface Props {\r\n  chats: ChatType[];\r\n  setChats: StateSetter<ChatType[]>;\r\n  loadingMsgs: boolean;\r\n  setDialogBody: DialogBodySetter;\r\n  typingChatUsers: string[];\r\n}\r\n\r\nconst arrowStyles = { color: \"#666\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 16,\r\n  padding: \"5px 12px\",\r\n  backgroundColor: \"#666\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ChatListView = ({\r\n  chats,\r\n  setChats,\r\n  loadingMsgs,\r\n  setDialogBody,\r\n  typingChatUsers,\r\n}: Props) => {\r\n  const { loggedInUser, selectedChat, refresh } =\r\n    useAppSelector(selectAppState);\r\n  const notifs = [...(loggedInUser?.notifications as MessageType[])];\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [filteredChats, setFilteredChats] = useState<ChatType[]>(chats);\r\n  const searchChatInput = useRef<HTMLInputElement>();\r\n\r\n  const openCreateGroupChatDialog = () => {\r\n    dispatch(\r\n      setGroupInfo({\r\n        chatDisplayPic: null,\r\n        chatDisplayPicUrl: DEFAULT_GROUP_DP,\r\n        chatName: \"\",\r\n        users: [],\r\n      })\r\n    );\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<AddMembersToGroup forCreateGroup={true} />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Add Group Members\",\r\n        nolabel: \"Cancel\",\r\n        yeslabel: \"Next\",\r\n        action: null,\r\n      })\r\n    );\r\n  };\r\n\r\n  const displayFullSizeImage = (e: React.MouseEvent) => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<FullSizeImage event={e} />);\r\n    dispatch(\r\n      displayDialog({\r\n        isFullScreen: true,\r\n        title: (e.target as HTMLImageElement)?.alt || \"Display Pic\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const fetchChats = async () => {\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.get(\r\n        `/api/chat`,\r\n        config as AxiosRequestConfig\r\n      );\r\n\r\n      const mappedChats = data\r\n        .map((chat: ChatType) => {\r\n          if (!chat) return null;\r\n          const { isGroupChat, users } = chat;\r\n\r\n          if (!isGroupChat && chat) {\r\n            const receiver = getOneToOneChatReceiver(loggedInUser, users);\r\n            chat[\"chatName\"] = receiver?.name;\r\n            chat[\"receiverEmail\"] = receiver?.email;\r\n            chat[\"chatDisplayPic\"] = receiver?.profilePic;\r\n          }\r\n          return chat;\r\n        })\r\n        .filter(\r\n          (chat: ChatType) =>\r\n            chat?.lastMessage !== undefined || chat?.isGroupChat\r\n        );\r\n\r\n      setChats(mappedChats);\r\n      setFilteredChats(mappedChats);\r\n      if (loading) setLoading(false);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Chats\",\r\n          message:\r\n            (error as AxiosErrorType).response?.data?.message ||\r\n            (error as Error).message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n      if (loading) setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Debouncing filterChats method to limit the no. of fn calls\r\n  const searchChats = debounce((e: InputEvent) => {\r\n    const chatNameInput = (e.target as HTMLInputElement).value\r\n      ?.toLowerCase()\r\n      .trim();\r\n    if (!chatNameInput) return setFilteredChats(chats);\r\n    setFilteredChats(\r\n      chats.filter((chat) =>\r\n        chat?.chatName?.toLowerCase().includes(chatNameInput)\r\n      )\r\n    );\r\n  }, 600);\r\n\r\n  const onChatItemClick: ClickEventHandler = (e) => {\r\n    const { dataset } = e.target as HTMLElement;\r\n    const parentDataset = ((e.target as HTMLElement)?.parentNode as HTMLElement)\r\n      .dataset;\r\n    const clickedChatId = dataset.chat || parentDataset.chat;\r\n    const hasNotifs = dataset.hasNotifs || parentDataset.hasNotifs;\r\n    if (!clickedChatId) return;\r\n\r\n    if (\r\n      (e.target as HTMLElement).className?.toString().includes(\"MuiAvatar-img\")\r\n    ) {\r\n      return displayFullSizeImage(e);\r\n    }\r\n    const clickedChat = filteredChats.find(\r\n      (chat: ChatType) => chat?._id === clickedChatId\r\n    ) as ChatType;\r\n    if (clickedChat?._id === selectedChat?._id) return;\r\n    dispatch(setSelectedChat(clickedChat));\r\n    dispatch(setFetchMsgs(true)); // To fetch selected chat msgs\r\n    if (clickedChat?.isGroupChat)\r\n      dispatch(setGroupInfo(clickedChat as ChatType));\r\n\r\n    // Delete notifications if notif badge is present\r\n    if (hasNotifs) dispatch(setDeleteNotifsOfChat(clickedChatId));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchChats();\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <div\r\n      className={`chatpageDiv chatpageView chatListView text-light ${\r\n        selectedChat ? \"d-none d-md-flex\" : \"d-flex\"\r\n      } flex-column user-select-none mx-1 p-2 ${\r\n        loadingMsgs ? \"pe-none\" : \"pe-auto\"\r\n      }`}\r\n    >\r\n      <section className=\"position-relative\">\r\n        <p className=\"chatListHeader fw-bold fs-4 rounded-pill bg-info bg-opacity-10 py-2\">\r\n          CHATS\r\n          {/* Create Group Chat */}\r\n          <CustomTooltip\r\n            title=\"Create New Group Chat\"\r\n            placement=\"bottom-end\"\r\n            arrow\r\n          >\r\n            <button\r\n              className={`btnCreateGroup pointer btn btn-outline-secondary text-light px-3`}\r\n              onClick={openCreateGroupChatDialog}\r\n            >\r\n              <GroupAdd />\r\n            </button>\r\n          </CustomTooltip>\r\n        </p>\r\n      </section>\r\n      {/* Search Bar */}\r\n      {chats?.length > 0 && (\r\n        <section className=\"searchChat\">\r\n          <SearchInput\r\n            ref={searchChatInput as InputRef}\r\n            searchHandler={searchChats}\r\n            autoFocus={false}\r\n            placeholder=\"Search Chat\"\r\n            clearInput={() => setFilteredChats(chats)}\r\n          />\r\n        </section>\r\n      )}\r\n      {/* Chat list */}\r\n      <section className=\"chatList m-1 p-1 overflow-auto position-relative\">\r\n        {loading ? (\r\n          <LoadingList listOf=\"Chat\" dpRadius={\"49px\"} count={8} />\r\n        ) : filteredChats?.length > 0 ? (\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={onChatItemClick}\r\n          >\r\n            {filteredChats.map((chat: ChatType) => {\r\n              let chatNotifCount = 0;\r\n              notifs?.forEach((notif: MessageType) => {\r\n                if ((notif?.chat as ChatType)?._id === chat?._id)\r\n                  ++chatNotifCount;\r\n              });\r\n              return (\r\n                <ChatListItem\r\n                  key={chat?._id}\r\n                  chat={chat}\r\n                  chatNotifCount={chatNotifCount || (\"\" as number | string)}\r\n                  typingChatUser={\r\n                    typingChatUsers?.find(\r\n                      (u) => u?.toString()?.split(\"---\")[0] === chat?._id\r\n                    ) as string\r\n                  }\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <span className=\"d-inline-block w-100 text-light fs-3 mt-4 mx-auto\">\r\n              {chats?.length === 0\r\n                ? `Hi ${\r\n                    truncateString(loggedInUser?.name?.split(\" \")[0], 12, 9) ||\r\n                    \"There\"\r\n                  } 😎`\r\n                : \"No Chats Found\"}\r\n            </span>\r\n            {chats?.length === 0 && <GettingStarted />}\r\n          </>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListView;\r\n","import { getOneToOneChatReceiver, truncateString } from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport FullSizeImage from \"../utils/FullSizeImage\";\r\nimport { useState } from \"react\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport { useAppSelector } from \"../../store/storeHooks\";\r\nimport { ClickEventHandler, ProfileData } from \"../../utils/AppTypes\";\r\n\r\nconst arrowStyles = { color: \"#111\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  padding: \"5px 10px\",\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ViewProfileBody = ({\r\n  memberProfilePic,\r\n  memberName,\r\n  memberEmail,\r\n}: ProfileData) => {\r\n  const { loggedInUser, selectedChat } = useAppSelector(selectAppState);\r\n  let name, email, profilePic;\r\n  const { childDialogMethods } = useAppSelector(selectChildDialogState);\r\n  const { setChildDialogBody, displayChildDialog } = childDialogMethods;\r\n\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n\r\n  if (memberProfilePic && memberName && memberEmail) {\r\n    name = memberName;\r\n    email = memberEmail;\r\n    profilePic = memberProfilePic;\r\n  } else {\r\n    const receiver = getOneToOneChatReceiver(loggedInUser, selectedChat?.users);\r\n    name = receiver?.name;\r\n    email = receiver?.email;\r\n    profilePic = receiver?.profilePic;\r\n  }\r\n\r\n  const displayFullSizeImage: ClickEventHandler = (e) => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    if (!setChildDialogBody || !displayChildDialog) return;\r\n\r\n    setChildDialogBody(<FullSizeImage event={e} />);\r\n    displayChildDialog({\r\n      isFullScreen: true,\r\n      title: (e.target as HTMLImageElement)?.alt || \"Profile Pic\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* View Profile Pic */}\r\n      <section className=\"dialogField d-flex position-relative mb-4\">\r\n        <CustomTooltip title=\"View Profile Pic\" placement=\"top\" arrow>\r\n          <img\r\n            className=\"img-fluid pointer d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n            id=\"view_profilePic\"\r\n            onClick={displayFullSizeImage}\r\n            src={profilePic}\r\n            alt={name}\r\n          />\r\n        </CustomTooltip>\r\n      </section>\r\n      {/* View Name */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-15px\" }}>\r\n          <CustomTooltip\r\n            title={name?.length > 20 ? name : \"\"}\r\n            placement=\"top\"\r\n            arrow\r\n          >\r\n            <div\r\n              className=\"w-100 h1 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"32px\" }}\r\n            >\r\n              {truncateString(name, 25, 21)}\r\n            </div>\r\n          </CustomTooltip>\r\n        </div>\r\n      </section>\r\n      {/* View Email */}\r\n      <section\r\n        className={`dialogField text-center mb-2`}\r\n        style={{ marginTop: \"-10px\" }}\r\n      >\r\n        <CustomTooltip\r\n          title={email?.length > 20 ? email : \"\"}\r\n          placement=\"bottom\"\r\n          arrow\r\n        >\r\n          <span className=\"fs-4\" style={{ color: \"lightblue\" }}>\r\n            {truncateString(email, 25, 21)}\r\n          </span>\r\n        </CustomTooltip>\r\n      </section>\r\n\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewProfileBody;\r\n","import { KeyboardArrowDown } from \"@mui/icons-material\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport { useAppSelector } from \"../../store/storeHooks\";\r\nimport { UserType } from \"../../utils/AppTypes\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"./CustomTooltip\";\r\n\r\nconst arrowStyles = { color: \"#E6480C\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  borderRadius: 10,\r\n  backgroundColor: \"#E6480C\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\ninterface Props {\r\n  user: UserType;\r\n  truncateValues: number[];\r\n}\r\n\r\nconst GroupMemberItem = ({ user, truncateValues }: Props) => {\r\n  const { loggedInUser } = useAppSelector(selectAppState);\r\n  if (!user) return <></>;\r\n  const { _id, name, email, profilePic } = user;\r\n  const [max, index] = truncateValues;\r\n  const isLoggedInUser = _id === loggedInUser?._id;\r\n\r\n  return (\r\n    <div\r\n      data-user={_id}\r\n      className={`groupMemberItem position-relative user-select-none d-flex text-light justify-content-start align-items-center px-3 ${\r\n        !isLoggedInUser && \"pointer\"\r\n      }`}\r\n    >\r\n      {user?.isGroupAdmin && (\r\n        <span\r\n          className={`adminBadge position-absolute fw-light badge rounded-3 bg-success`}\r\n          style={{ cursor: \"auto\" }}\r\n        >\r\n          Admin\r\n        </span>\r\n      )}\r\n      {!isLoggedInUser && (\r\n        <span\r\n          data-user={_id}\r\n          className=\"memberSettingsIcon text-light position-absolute rounded-circle\"\r\n        >\r\n          <KeyboardArrowDown data-user={_id} />\r\n        </span>\r\n      )}\r\n      <CustomTooltip\r\n        data-user={_id}\r\n        title={`${isLoggedInUser ? \"\" : `${name} (${email})`}`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <Avatar\r\n          src={profilePic}\r\n          alt={_id}\r\n          data-user={_id}\r\n          className={`listItemAvatar groupMemberAvatar`}\r\n        />\r\n      </CustomTooltip>\r\n      <div\r\n        data-user={_id}\r\n        className=\"groupMemberData d-flex flex-column align-items-start px-2\"\r\n      >\r\n        <p data-user={_id} className=\"groupMemberName fw-bold text-info\">\r\n          {isLoggedInUser ? \"You\" : truncateString(name, max, index)}\r\n        </p>\r\n        <p data-user={_id} className=\"groupMemberEmail\">\r\n          {truncateString(email, max, index)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupMemberItem;\r\n","import {\r\n  AdminPanelSettings,\r\n  GroupRemove,\r\n  InfoOutlined,\r\n  Message,\r\n} from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport axios from \"../../utils/axios\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\nimport { getAxiosConfig, truncateString } from \"../../utils/appUtils\";\r\nimport ViewProfileBody from \"../dialogs/ViewProfileBody\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setDeleteNotifsOfChat,\r\n  setFetchMsgs,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n  toggleRefresh,\r\n} from \"../../store/slices/AppSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { setLoading } from \"../../store/slices/FormfieldSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\nimport {\r\n  AnchorSetter,\r\n  AxiosErrorType,\r\n  ChatType,\r\n  ChildDialogMethods,\r\n  ErrorType,\r\n  ToastData,\r\n  UserType,\r\n} from \"../../utils/AppTypes\";\r\nimport { AxiosRequestConfig } from \"axios\";\r\n\r\ninterface Props {\r\n  anchor: HTMLElement;\r\n  setAnchor: AnchorSetter;\r\n  clickedMember: UserType;\r\n  setShowDialogActions: (flag: boolean) => void;\r\n  setShowDialogClose: (flag: boolean) => void;\r\n  childDialogMethods: ChildDialogMethods;\r\n}\r\n\r\nconst MemberOptionsMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  clickedMember,\r\n  setShowDialogActions,\r\n  setShowDialogClose,\r\n  childDialogMethods,\r\n}: Props) => {\r\n  const { loggedInUser, groupInfo, clientSocket, isSocketConnected } =\r\n    useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n\r\n  const { setChildDialogBody, displayChildDialog } = childDialogMethods;\r\n  const isLoggedInUserGroupAdmin = groupInfo?.groupAdmins?.some(\r\n    (admin: UserType) => admin?._id === loggedInUser?._id\r\n  );\r\n  const clickedMemberName: string = truncateString(\r\n    clickedMember?.name?.split(\" \")[0],\r\n    12,\r\n    9\r\n  );\r\n  const styledMemberName = (\r\n    <span style={{ color: \"violet\", fontSize: \"22px\" }}>\r\n      {clickedMemberName}\r\n    </span>\r\n  );\r\n  const updateView = (data: ChatType) => {\r\n    dispatch(toggleRefresh());\r\n    dispatch(setSelectedChat(data));\r\n  };\r\n\r\n  const displayError = (\r\n    error: ErrorType = \"Oops! Something went wrong\",\r\n    title: string = \"Operation Failed\"\r\n  ) => {\r\n    dispatch(\r\n      displayToast({\r\n        title,\r\n        message:\r\n          (error as AxiosErrorType).response?.data?.message ||\r\n          (error as Error)?.message ||\r\n          error,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"bottom-center\",\r\n      } as ToastData)\r\n    );\r\n  };\r\n\r\n  // Create/Retreive chat when 'Message Member' is clicked\r\n  const openChat = async () => {\r\n    dispatch(hideDialog()); // Close all dialogs by closing parent dialog\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.post(\r\n        `/api/chat`,\r\n        { userId: clickedMember?._id },\r\n        config as AxiosRequestConfig\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n      dispatch(setFetchMsgs(true));\r\n      dispatch(setDeleteNotifsOfChat(data._id));\r\n    } catch (error) {\r\n      displayError(error as ErrorType, \"Couldn't Create/Retrieve Chat\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const openViewProfileDialog = () => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    if (!setChildDialogBody || !displayChildDialog) return;\r\n\r\n    setChildDialogBody(\r\n      <ViewProfileBody\r\n        memberProfilePic={clickedMember?.profilePic}\r\n        memberName={clickedMember?.name}\r\n        memberEmail={clickedMember?.email}\r\n      />\r\n    );\r\n    displayChildDialog({ title: \"View Profile\" });\r\n  };\r\n\r\n  const makeGroupAdmin = async () => {\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.post(\r\n        `/api/chat/group/make-admin`,\r\n        { userId: clickedMember?._id, chatId: groupInfo?._id },\r\n        config as AxiosRequestConfig\r\n      );\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp_updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n          createdAdmin: clickedMember,\r\n        });\r\n      }\r\n      dispatch(\r\n        displayToast({\r\n          message: `${clickedMemberName} is now a Group Admin`,\r\n          type: \"success\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n      dispatch(setGroupInfo(data));\r\n      updateView(data);\r\n      dispatch(setLoading(false));\r\n    } catch (error) {\r\n      displayError(error as ErrorType, \"Make Group Admin Failed\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const dismissAsAdmin = async () => {\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/dismiss-admin`,\r\n        { userId: clickedMember?._id, chatId: groupInfo?._id },\r\n        config as AxiosRequestConfig\r\n      );\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp_updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n          dismissedAdmin: clickedMember,\r\n        });\r\n      }\r\n      dispatch(\r\n        displayToast({\r\n          message: `${clickedMemberName} is no longer a Group Admin`,\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n      dispatch(setLoading(false));\r\n      dispatch(setGroupInfo(data));\r\n      updateView(data);\r\n      return \"membersUpdated\";\r\n    } catch (error) {\r\n      displayError(error as ErrorType, \"Dismiss As Group Admin Failed\");\r\n      dispatch(setLoading(false));\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  const removeFromGroup = async () => {\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/remove`,\r\n        {\r\n          userToBeRemoved: clickedMember?._id,\r\n          isGroupAdmin: clickedMember?.isGroupAdmin,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config as AxiosRequestConfig\r\n      );\r\n\r\n      data[\"removedUser\"] = clickedMember;\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp_updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n        });\r\n      }\r\n      dispatch(\r\n        displayToast({\r\n          message: `${clickedMemberName} removed from Group`,\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n      dispatch(setLoading(false));\r\n      dispatch(setGroupInfo(data));\r\n      updateView(data);\r\n      return \"membersUpdated\";\r\n    } catch (error) {\r\n      displayError(error as ErrorType, \"Remove From Group Failed\");\r\n      dispatch(setLoading(false));\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  // Confirmation dialogs\r\n  const openDismissAsAdminConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    if (!setChildDialogBody || !displayChildDialog) return;\r\n\r\n    setChildDialogBody(\r\n      <>Are you sure you want to dismiss {styledMemberName} as group admin?</>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Dismiss As Admin\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: dismissAsAdmin,\r\n    });\r\n  };\r\n\r\n  const openRemoveFromGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    if (!setChildDialogBody || !displayChildDialog) return;\r\n\r\n    setChildDialogBody(\r\n      <>Are you sure you want to remove {styledMemberName} from this group?</>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Remove From Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: removeFromGroup,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      open={Boolean(anchor)}\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      {/* Message X */}\r\n      <MenuItem sx={menuItemProps} onClick={openChat}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Message />\r\n        </ListItemIcon>\r\n        <MenuItemText>{`Message ${\r\n          clickedMemberName || \"Member\"\r\n        }`}</MenuItemText>\r\n      </MenuItem>\r\n      {/* View X */}\r\n      <MenuItem sx={menuItemProps} onClick={openViewProfileDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <InfoOutlined />\r\n        </ListItemIcon>\r\n        <MenuItemText>{`View ${clickedMemberName || \"Member\"}`}</MenuItemText>\r\n      </MenuItem>\r\n      {/* Make Group Admin / Dismiss as Admin */}\r\n      {isLoggedInUserGroupAdmin && (\r\n        <MenuItem\r\n          sx={menuItemProps}\r\n          onClick={\r\n            clickedMember?.isGroupAdmin\r\n              ? openDismissAsAdminConfirmDialog\r\n              : makeGroupAdmin\r\n          }\r\n        >\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <AdminPanelSettings />\r\n          </ListItemIcon>\r\n          <MenuItemText>\r\n            {clickedMember?.isGroupAdmin\r\n              ? \"Dismiss as Admin\"\r\n              : \"Make Group Admin\"}\r\n          </MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n      {/* Remove X */}\r\n      {isLoggedInUserGroupAdmin && (\r\n        <MenuItem sx={menuItemProps} onClick={openRemoveFromGroupConfirmDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <GroupRemove />\r\n          </ListItemIcon>\r\n          <MenuItemText>{`Remove ${\r\n            clickedMemberName || \"Member\"\r\n          }`}</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MemberOptionsMenu;\r\n","import { SetStateAction, useEffect, useRef, useState } from \"react\";\r\nimport { debounce } from \"../../utils/appUtils\";\r\nimport SearchInput from \"../utils/SearchInput\";\r\nimport GroupMemberItem from \"../utils/GroupMemberItem\";\r\nimport MemberOptionsMenu from \"../menus/MemberOptionsMenu\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport { useAppSelector } from \"../../store/storeHooks\";\r\nimport { ClickEventHandler, UserType } from \"../../utils/AppTypes\";\r\n\r\nlet filteredMembersCache: UserType[] = [];\r\n\r\nconst ViewGroupMembers = () => {\r\n  const { loggedInUser, groupInfo } = useAppSelector(selectAppState);\r\n  const { childDialogMethods } = useAppSelector(selectChildDialogState);\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n  const groupMembers = groupInfo?.users;\r\n  const admins = groupInfo?.groupAdmins;\r\n  const [clickedMember, setClickedMember] = useState<UserType | null>(null);\r\n  const [memberOptionsMenuAnchor, setMemberOptionsMenuAnchor] =\r\n    useState<HTMLElement | null>(null);\r\n  // LoggedInUser and Group Admins should be at the top\r\n  const sortMembers = () => {\r\n    return [\r\n      loggedInUser,\r\n      ...admins?.filter((admin: UserType) => admin?._id !== loggedInUser?._id),\r\n      ...groupMembers?.filter(\r\n        (member: UserType) =>\r\n          member?._id !== loggedInUser?._id &&\r\n          admins?.every((admin: UserType) => admin?._id !== member?._id)\r\n      ),\r\n    ].map((member) => {\r\n      return {\r\n        ...member,\r\n        isGroupAdmin: admins?.some(\r\n          (admin: UserType) => member?._id === admin?._id\r\n        ),\r\n      };\r\n    });\r\n  };\r\n\r\n  // Update the member list whenever groupInfo is updated\r\n  useEffect(() => {\r\n    if (!groupInfo) return;\r\n    filteredMembersCache = sortMembers();\r\n    setFilteredMembers(filteredMembersCache);\r\n  }, [groupInfo]);\r\n\r\n  const filterMemberInput = useRef(null);\r\n  const [filteredMembers, setFilteredMembers] =\r\n    useState<UserType[]>(filteredMembersCache);\r\n\r\n  // Debouncing filterMembers method to limit the no. of fn calls\r\n  const filterMembers = debounce((e: KeyboardEvent) => {\r\n    const memberNameInput = (e.target as HTMLInputElement)?.value\r\n      ?.toLowerCase()\r\n      .trim();\r\n    if (!memberNameInput) {\r\n      return setFilteredMembers(filteredMembersCache);\r\n    }\r\n    setFilteredMembers(\r\n      filteredMembersCache?.filter(\r\n        (user) =>\r\n          user?.name?.toLowerCase().includes(memberNameInput) ||\r\n          user?.email?.toLowerCase().includes(memberNameInput)\r\n      )\r\n    );\r\n  }, 600);\r\n\r\n  const onGroupMemberItemClick: ClickEventHandler = (e) => {\r\n    const userId =\r\n      (e.target as HTMLElement)?.dataset.user ||\r\n      ((e.target as HTMLElement)?.parentNode as HTMLElement).dataset.user ||\r\n      (e.target as HTMLImageElement).alt;\r\n    if (userId) {\r\n      // Don't display member options menu for loggedInUser\r\n      if (loggedInUser?._id === userId) return;\r\n\r\n      setClickedMember(\r\n        filteredMembers?.find((m: UserType) => m?._id === userId) as UserType\r\n      );\r\n      openMemberOptionsMenu(e);\r\n    }\r\n  };\r\n\r\n  const openMemberOptionsMenu: ClickEventHandler = (e) =>\r\n    setMemberOptionsMenuAnchor(e.target as SetStateAction<HTMLElement | null>);\r\n\r\n  const clearInputHandler: () => void = () =>\r\n    setFilteredMembers(filteredMembersCache);\r\n\r\n  return (\r\n    <div\r\n      className=\"addGroupMembers d-flex flex-column\"\r\n      style={{ height: \"75vh\" }}\r\n    >\r\n      {/* Member Count */}\r\n      <p className=\"h3 text-center text-light\" style={{ marginTop: \"-5px\" }}>\r\n        {`${groupMembers?.length} Member${groupMembers?.length > 1 ? \"s\" : \"\"}`}\r\n      </p>\r\n      {/* Search Bar */}\r\n      <section className=\"searchChat\" style={{ marginTop: \"-15px\" }}>\r\n        <SearchInput\r\n          ref={filterMemberInput}\r\n          searchHandler={filterMembers}\r\n          autoFocus={false}\r\n          placeholder=\"Search Member\"\r\n          clearInput={clearInputHandler}\r\n        />\r\n      </section>\r\n      {/* Member list */}\r\n      <section className=\"chatList p-1 overflow-auto position-relative\">\r\n        {filteredMembers?.length > 0 ? (\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={onGroupMemberItemClick}\r\n          >\r\n            {filteredMembers.map((member: UserType) => (\r\n              <GroupMemberItem\r\n                key={member?._id}\r\n                user={member}\r\n                truncateValues={[21, 18]}\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <span className=\"d-inline-block w-100 text-center text-light h5 mt-4 mx-auto\">\r\n            No Members Found\r\n          </span>\r\n        )}\r\n      </section>\r\n      <MemberOptionsMenu\r\n        anchor={memberOptionsMenuAnchor as HTMLElement}\r\n        setAnchor={setMemberOptionsMenuAnchor}\r\n        clickedMember={clickedMember}\r\n        setShowDialogActions={setShowDialogActions}\r\n        setShowDialogClose={setShowDialogClose}\r\n        childDialogMethods={childDialogMethods}\r\n      />\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewGroupMembers;\r\n","import { SetStateAction, useRef, useState } from \"react\";\r\nimport {\r\n  Delete,\r\n  Edit,\r\n  InfoOutlined,\r\n  Logout,\r\n  PersonAdd,\r\n} from \"@mui/icons-material\";\r\nimport { CircularProgress, IconButton } from \"@mui/material\";\r\nimport axios from \"../../utils/axios\";\r\nimport {\r\n  getAxiosConfig,\r\n  isImageFile,\r\n  truncateString,\r\n  TWO_MB,\r\n} from \"../../utils/appUtils\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport EditNameBody from \"./EditNameBody\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport AddMembersToGroup from \"./AddMembersToGroup\";\r\nimport ViewGroupMembers from \"./ViewGroupMembers\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport FullSizeImage from \"../utils/FullSizeImage\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n  toggleRefresh,\r\n} from \"../../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/storeHooks\";\r\nimport {\r\n  AxiosErrorType,\r\n  ChangeEventHandler,\r\n  ChatType,\r\n  ClickEventHandler,\r\n  ErrorType,\r\n  KeyboardEventHandler,\r\n  MessageType,\r\n  ToastData,\r\n  UserType,\r\n} from \"../../utils/AppTypes\";\r\nimport { AxiosRequestConfig } from \"axios\";\r\n\r\nconst arrowStyles = { color: \"#111\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  padding: \"5px 10px\",\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\ninterface Props {\r\n  messages: MessageType[];\r\n}\r\n\r\nconst GroupInfoBody = ({ messages }: Props) => {\r\n  const { loggedInUser, groupInfo, clientSocket, isSocketConnected } =\r\n    useAppSelector(selectAppState);\r\n  const { childDialogMethods } = useAppSelector(selectChildDialogState);\r\n  const { loading, disableIfLoading } = useAppSelector(selectFormfieldState);\r\n  const dispatch = useAppDispatch();\r\n  const { setChildDialogBody, displayChildDialog, closeChildDialog } =\r\n    childDialogMethods;\r\n\r\n  const groupDP = groupInfo?.chatDisplayPic;\r\n  const groupName = groupInfo?.chatName;\r\n  const groupMembers = groupInfo?.users;\r\n  const admins = groupInfo?.groupAdmins;\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [editGroupDpMenuAnchor, setEditGroupDpMenuAnchor] =\r\n    useState<HTMLElement | null>(null);\r\n  const isUserGroupAdmin = admins?.some(\r\n    (admin: UserType) => admin?._id === loggedInUser?._id\r\n  );\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n  const imgInput = useRef<HTMLInputElement | null>(null);\r\n  const btnClassName = \"w-100 btn text-light fs-5\";\r\n\r\n  const displayWarning = (message = \"Warning\", duration = 3000) => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"warning\",\r\n        duration,\r\n        position: \"top-center\",\r\n      } as ToastData)\r\n    );\r\n  };\r\n\r\n  const displayError = (\r\n    error: ErrorType = \"Oops! Something went wrong\",\r\n    title = \"Operation Failed\"\r\n  ) => {\r\n    dispatch(\r\n      displayToast({\r\n        title,\r\n        message:\r\n          (error as AxiosErrorType).response?.data?.message ||\r\n          (error as Error)?.message ||\r\n          error,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"top-center\",\r\n      } as ToastData)\r\n    );\r\n  };\r\n\r\n  const displaySuccess = (message = \"Operation Successful\") => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"success\",\r\n        duration: 3000,\r\n        position: \"bottom-center\",\r\n      } as ToastData)\r\n    );\r\n  };\r\n\r\n  const updateView = (data: ChatType) => {\r\n    dispatch(setGroupInfo(data));\r\n    dispatch(toggleRefresh());\r\n    dispatch(setSelectedChat(data)); // To update messages view\r\n  };\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown: KeyboardEventHandler = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") {\r\n      (e.target as HTMLElement)?.click();\r\n    }\r\n  };\r\n\r\n  // To retreive added members from `AddMembersToGroup` dialog\r\n  let updatedName = \"\";\r\n  const getUpdatedName = (\r\n    updatedValue: string,\r\n    options: { submitUpdatedName: boolean }\r\n  ) => {\r\n    updatedName = updatedValue;\r\n    if (options?.submitUpdatedName) updateGroupName({ enterKeyClicked: true });\r\n  };\r\n\r\n  const updateGroupName = async (options: { enterKeyClicked: boolean }) => {\r\n    if (!updatedName) return displayWarning(\"Please Enter Valid Group Name\");\r\n\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/chat/group/update-name\",\r\n        { groupName: updatedName, chatId: groupInfo?._id },\r\n        config as AxiosRequestConfig\r\n      );\r\n\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp_updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n        });\r\n      }\r\n      displaySuccess(\"Group Name Updated Successfully\");\r\n\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n      if (options?.enterKeyClicked && closeChildDialog) closeChildDialog();\r\n      else return \"profileUpdated\";\r\n    } catch (error) {\r\n      displayError(error as ErrorType, \"Couldn't Update Group Name\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Update Group Display Pic\r\n  const updateGroupDp: ChangeEventHandler = async (e) => {\r\n    if (!e.target?.files) return;\r\n    const imageFile = e.target.files[0];\r\n    if (!imageFile) return;\r\n\r\n    if (!isImageFile(imageFile.name)) {\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Invalid Image File\",\r\n          message: \"Please Select an Image File (png/jpg/jpeg/svg/webp)\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n    }\r\n\r\n    if (imageFile.size >= TWO_MB) {\r\n      if (!imgInput?.current) return;\r\n      imgInput.current.value = \"\";\r\n      return displayWarning(\"Please Select an Image Smaller than 2 MB\", 4000);\r\n    }\r\n    dispatch(setLoading(true));\r\n    setUploading(true);\r\n    const config = getAxiosConfig({ loggedInUser, formData: true });\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"displayPic\", imageFile);\r\n    formData.append(\"currentDP\", groupDP);\r\n    formData.append(\"cloudinary_id\", groupInfo?.cloudinary_id);\r\n    formData.append(\"chatId\", groupInfo?._id);\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/chat/group/update-dp\",\r\n        formData,\r\n        config as AxiosRequestConfig\r\n      );\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp_updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n        });\r\n      }\r\n      displaySuccess(\"Group DP Updated Successfully\");\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n      updateView(data);\r\n    } catch (error) {\r\n      displayError(error as ErrorType, \"Couldn't Update Group DP\");\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const deleteGroupDp = async () => {\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/delete-dp`,\r\n        {\r\n          currentDP: groupDP,\r\n          cloudinary_id: groupInfo?.cloudinary_id,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config as AxiosRequestConfig\r\n      );\r\n\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp_updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n        });\r\n      }\r\n      displaySuccess(\"Group DP Deleted Successfully\");\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      displayError(error as ErrorType, \"Couldn't Delete Group DP\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const exitGroup = async () => {\r\n    if (groupMembers?.length === 1) return deleteGroup();\r\n\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/remove`,\r\n        {\r\n          userToBeRemoved: loggedInUser?._id,\r\n          isGroupAdmin: isUserGroupAdmin,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config as AxiosRequestConfig\r\n      );\r\n\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp_updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n        });\r\n      }\r\n      dispatch(\r\n        displayToast({\r\n          message: `Exited From '${data?.chatName}' Group`,\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n      dispatch(setLoading(false));\r\n      updateView(null);\r\n      dispatch(hideDialog());\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Exit Group\",\r\n          message:\r\n            (error as AxiosErrorType).response?.data?.message ||\r\n            (error as Error)?.message ||\r\n            error,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n      dispatch(setLoading(false));\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  const deleteGroup = async () => {\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const deleteGroupPromise = axios.put(\r\n        `/api/chat/group/delete`,\r\n        {\r\n          currentDP: groupInfo?.chatDisplayPic,\r\n          cloudinary_id: groupInfo?.cloudinary_id,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config as AxiosRequestConfig\r\n      );\r\n      const deleteMessagesPromise = messages?.length\r\n        ? axios.put(\r\n            `/api/message/delete`,\r\n            {\r\n              messageIds: JSON.stringify(\r\n                messages?.map((m: MessageType) => m?._id)\r\n              ),\r\n              isDeleteGroupRequest: true,\r\n            },\r\n            config as AxiosRequestConfig\r\n          )\r\n        : Promise.resolve();\r\n\r\n      // Parallel execution of independent promises\r\n      await Promise.all([deleteGroupPromise, deleteMessagesPromise]);\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp_deleted\", {\r\n          admin: loggedInUser,\r\n          deletedGroup: groupInfo,\r\n        });\r\n      }\r\n      displaySuccess(\"Group Deleted Successfully\");\r\n      dispatch(setLoading(false));\r\n      updateView(null);\r\n      dispatch(hideDialog());\r\n    } catch (error) {\r\n      displayError(error as ErrorType, \"Couldn't Delete Group\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Open confirm dialogs\r\n  const openExitGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    if (!setChildDialogBody || !displayChildDialog) return;\r\n    setChildDialogBody(\r\n      <>\r\n        {groupMembers?.length === 1\r\n          ? `Since you're the only group member, this group will be \r\n            DELETED if you exit. Are you sure you want to exit?`\r\n          : `This group will be removed from your chats. \r\n             Are you sure you want to exit this group?`}\r\n      </>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Exit Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Exiting...\",\r\n      action: exitGroup,\r\n    });\r\n  };\r\n\r\n  const openDeleteGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    if (!setChildDialogBody || !displayChildDialog) return;\r\n    setChildDialogBody(\r\n      <>\r\n        All messages and files related to this group will be deleted and this\r\n        group will be removed from the chats of ALL MEMBERS. Are you sure you\r\n        want to delete this group?\r\n      </>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Delete Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteGroup,\r\n    });\r\n  };\r\n\r\n  // Open edit name dialog\r\n  const openEditGroupNameDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    if (!setChildDialogBody || !displayChildDialog) return;\r\n    setChildDialogBody(\r\n      <EditNameBody\r\n        originalName={groupInfo?.chatName}\r\n        getUpdatedName={getUpdatedName}\r\n        placeholder=\"Enter New Group Name\"\r\n      />\r\n    );\r\n    displayChildDialog({\r\n      title: \"Edit Group Name\",\r\n      nolabel: \"CANCEL\",\r\n      yeslabel: \"SAVE\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: updateGroupName,\r\n    });\r\n  };\r\n\r\n  // Open delete photo confirm dialog\r\n  const openDeletePhotoConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    if (!setChildDialogBody || !displayChildDialog) return;\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(<>Are you sure you want to delete this display pic?</>);\r\n    displayChildDialog({\r\n      title: \"Delete Display Pic\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteGroupDp,\r\n    });\r\n  };\r\n\r\n  // To retreive added members from `AddMembersToGroup` dialog\r\n  let addedMembers: UserType[] = [];\r\n  const getAddedMembers = (updatedMembers: UserType[]) => {\r\n    addedMembers = updatedMembers;\r\n  };\r\n\r\n  const addMembersToGroup = async () => {\r\n    if (!isUserGroupAdmin)\r\n      return displayWarning(\"Only Admin Can Add Members to Group\");\r\n\r\n    if (!addedMembers?.length)\r\n      return displayWarning(\"Please Select Atleast 1 Member to Add\");\r\n\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/chat/group/add\",\r\n        {\r\n          usersToBeAdded: JSON.stringify(addedMembers),\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config as AxiosRequestConfig\r\n      );\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp_updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n        });\r\n      }\r\n      displaySuccess(\"Successfully Added Member/s to Group\");\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      displayError(error as ErrorType, \"Couldn't Add Members to Group\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Open Add members dialog\r\n  const openAddMembersDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    if (!setChildDialogBody || !displayChildDialog) return;\r\n\r\n    setChildDialogBody(<AddMembersToGroup getAddedMembers={getAddedMembers} />);\r\n    displayChildDialog({\r\n      title: \"Add Group Members\",\r\n      nolabel: \"Cancel\",\r\n      yeslabel: \"Add\",\r\n      loadingYeslabel: \"Adding...\",\r\n      action: addMembersToGroup,\r\n    });\r\n  };\r\n\r\n  const openViewMembersDialog = () => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    if (!setChildDialogBody || !displayChildDialog) return;\r\n    setChildDialogBody(<ViewGroupMembers />);\r\n    displayChildDialog({\r\n      title: ``,\r\n    });\r\n  };\r\n\r\n  const displayFullSizeImage: ClickEventHandler = (e) => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    if (!setChildDialogBody || !displayChildDialog) return;\r\n    setChildDialogBody(<FullSizeImage event={e} />);\r\n    displayChildDialog({\r\n      isFullScreen: true,\r\n      title: (e.target as HTMLImageElement)?.alt || \"Display Pic\",\r\n    });\r\n  };\r\n\r\n  const openEditGroupDpMenu: ClickEventHandler = (e) => {\r\n    setEditGroupDpMenuAnchor(e.target as SetStateAction<HTMLElement | null>);\r\n  };\r\n\r\n  return (\r\n    <div className=\"groupDialog d-flex flex-column row\">\r\n      {/* View/Edit Display Pic */}\r\n      {loading && uploading ? (\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n          <CircularProgress\r\n            size={60}\r\n            style={{ margin: \"20px 0px\", color: \"lightblue\" }}\r\n          />\r\n          <span style={{ marginBottom: \"45px\" }} className=\"text-light h1\">\r\n            {\" Updating Photo...\"}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <section className=\"dialogField d-flex position-relative mb-4\">\r\n          <CustomTooltip title=\"View DP\" placement=\"right\" arrow>\r\n            <img\r\n              className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle pointer\"\r\n              src={groupDP || \"GroupDp\"}\r\n              style={{ width: \"120px\", height: \"120px\" }}\r\n              onClick={displayFullSizeImage}\r\n              alt={groupName}\r\n            />\r\n          </CustomTooltip>\r\n\r\n          <CustomTooltip title=\"Edit Group DP\" placement=\"right\" arrow>\r\n            <i\r\n              id=\"editProfilePic\"\r\n              tabIndex={2}\r\n              onKeyDown={clickOnKeydown}\r\n              className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n              onClick={openEditGroupDpMenu}\r\n            >\r\n              <Edit className=\"text-light fs-6\" />\r\n            </i>\r\n          </CustomTooltip>\r\n          {/* Edit/Delete display pic menu */}\r\n          <EditPicMenu\r\n            anchor={editGroupDpMenuAnchor as HTMLElement}\r\n            setAnchor={setEditGroupDpMenuAnchor}\r\n            selectProfilePic={() => imgInput?.current?.click()}\r\n            openDeletePhotoConfirmDialog={openDeletePhotoConfirmDialog}\r\n            deletePhotoCondition={!groupDP?.endsWith(\"group_mbuvht.png\")}\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={updateGroupDp}\r\n            name=\"displayPic\"\r\n            id=\"groupInfo__displayPic\"\r\n            ref={imgInput}\r\n            className={`d-none`}\r\n            disabled={loading}\r\n          />\r\n        </section>\r\n      )}\r\n\r\n      {/* Group Name */}\r\n      <section className={`dialogField text-center mb-3`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-10px\" }}>\r\n          <CustomTooltip\r\n            title={groupName?.length > 24 ? groupName : \"\"}\r\n            placement=\"top\"\r\n            arrow\r\n          >\r\n            <div\r\n              className=\"w-100 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"28px\", lineHeight: \"30px\" }}\r\n            >\r\n              {truncateString(groupName, 25, 21)}\r\n            </div>\r\n          </CustomTooltip>\r\n          <CustomTooltip title=\"Edit Group Name\" placement=\"top\" arrow>\r\n            <IconButton\r\n              tabIndex={3}\r\n              onKeyDown={clickOnKeydown}\r\n              onClick={openEditGroupNameDialog}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: -8,\r\n                top: 0,\r\n                \":hover\": { backgroundColor: \"#aaaaaa30\" },\r\n              }}\r\n            >\r\n              <Edit className=\"text-light\" />\r\n            </IconButton>\r\n          </CustomTooltip>\r\n        </div>\r\n      </section>\r\n\r\n      {/* No of members */}\r\n      <section\r\n        className={`dialogField text-center mb-3 text-light text-opacity-75`}\r\n        style={{ marginTop: \"-5px\", borderRadius: \"10px\" }}\r\n      >\r\n        {`${groupMembers?.length} Member${groupMembers?.length > 1 ? \"s\" : \"\"}`}\r\n      </section>\r\n\r\n      {/* View Members */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <button\r\n          className={`${btnClassName} btn-outline-primary`}\r\n          onClick={openViewMembersDialog}\r\n        >\r\n          <InfoOutlined\r\n            className=\"text-light\"\r\n            style={{ marginLeft: \"-15px\" }}\r\n          />\r\n          <span className=\"ms-2\">View Members</span>\r\n        </button>\r\n      </section>\r\n\r\n      {/* Add Members (only for admins) */}\r\n      {isUserGroupAdmin && (\r\n        <section className={`dialogField text-center mb-2`}>\r\n          <button\r\n            className={`${btnClassName} btn-outline-success`}\r\n            onClick={openAddMembersDialog}\r\n          >\r\n            <PersonAdd className=\"text-light\" style={{ marginLeft: \"-20px\" }} />\r\n            <span className=\"ms-2\">Add Members</span>\r\n          </button>\r\n        </section>\r\n      )}\r\n\r\n      {/* Exit Group */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <button\r\n          className={`${btnClassName} btn-outline-danger`}\r\n          onClick={() => {\r\n            if (\r\n              isUserGroupAdmin &&\r\n              admins?.length === 1 &&\r\n              groupMembers?.length !== 1\r\n            ) {\r\n              return displayWarning(\r\n                `Every group must have atleast 1 admin. Since \r\n              you're the only group admin, you won't be allowed\r\n              to exit until you make someone else as the admin.`,\r\n                10000\r\n              );\r\n            }\r\n            openExitGroupConfirmDialog();\r\n          }}\r\n        >\r\n          <Logout className=\"text-light\" style={{ marginLeft: \"-30px\" }} />\r\n          <span className=\"ms-2\">Exit Group</span>\r\n        </button>\r\n      </section>\r\n\r\n      {/* Delete Group (only for admins) */}\r\n      {isUserGroupAdmin && (\r\n        <section className={`dialogField text-center mb-2`}>\r\n          <button\r\n            className={`${btnClassName} btn-outline-danger`}\r\n            onClick={openDeleteGroupConfirmDialog}\r\n          >\r\n            <Delete className=\"text-light\" style={{ marginLeft: \"-20px\" }} />\r\n            <span className=\"ms-2\">Delete Group</span>\r\n          </button>\r\n        </section>\r\n      )}\r\n\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupInfoBody;\r\n","import { Skeleton } from \"@mui/material\";\r\n\r\nconst LoadingMsgs = ({ count }: { count: number }) => {\r\n  const skeletonStyle = { backgroundColor: \"#777\" };\r\n  return (\r\n    <>\r\n      {[...Array(count)].map((e, i) => (\r\n        <div\r\n          key={`loadingMsg${i}`}\r\n          className={`loadingMsg d-flex flex-column align-items-${\r\n            i % 2 ? \"start\" : \"end\"\r\n          } mb-2 mx-4`}\r\n        >\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className={`loadingSender col-3 mb-1`}\r\n            style={skeletonStyle}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className={`loadingContent col-5`}\r\n            style={skeletonStyle}\r\n          />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadingMsgs;\r\n","import {\r\n  Audiotrack,\r\n  Description,\r\n  Download,\r\n  Downloading,\r\n  PictureAsPdf,\r\n  PlayArrow,\r\n  PlayCircle,\r\n  Videocam,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  getFileSizeString,\r\n  isImageOrGifFile,\r\n  truncateString,\r\n} from \"../../utils/appUtils\";\r\nimport animationData from \"../../animations/app-loading.json\";\r\nimport LottieAnimation from \"./LottieAnimation\";\r\nimport { useRef } from \"react\";\r\nimport {\r\n  AttachmentFileData,\r\n  SpanRef,\r\n  MsgAttachmentProps,\r\n} from \"../../utils/AppTypes\";\r\n\r\nconst IMG_BASE_URL = process.env.REACT_APP_CLOUDINARY_BASE_URL as string;\r\n\r\nconst MsgAttachment = ({\r\n  msgSent,\r\n  isEditMode,\r\n  fileEditIcons,\r\n  downloadingFileId,\r\n  loadingMediaId,\r\n  isPreview,\r\n  fileData,\r\n}: MsgAttachmentProps) => {\r\n  const previewStyles = `${\r\n    isPreview && !isEditMode\r\n      ? \"py-4 border border-4 border-secondary previewFile\"\r\n      : \"p-2\"\r\n  }`;\r\n  const iconStyles = `${isPreview && !isEditMode ? \"fs-1\" : \"fs-2\"}`;\r\n\r\n  let { fileUrl, file_id, file_name, size } = fileData as AttachmentFileData;\r\n  const fileContents = file_name.split(\"===\") || [];\r\n  file_name = fileContents[0] || file_name;\r\n  const isMediaFile = fileContents[1]?.includes(\":\");\r\n  const mediaContents = isMediaFile ? fileContents[1].split(\"+++\") : [];\r\n  const mediaFileType = mediaContents[1];\r\n  const mediaFileSize = getFileSizeString(mediaContents[2]);\r\n  const loadingGif = useRef<HTMLSpanElement>(null);\r\n\r\n  let fileSize = mediaContents[0] || parseInt(fileContents[1]) || size || \"\";\r\n\r\n  if (!isMediaFile) {\r\n    fileSize = getFileSizeString(fileSize);\r\n  }\r\n\r\n  const isDownloadingFile = downloadingFileId === file_id;\r\n  const fileType =\r\n    mediaFileType?.startsWith(\"video/\") ||\r\n    /(\\.mp4|\\.mov|\\.ogv|\\.webm)$/.test(file_name)\r\n      ? \"Video\"\r\n      : mediaFileType?.startsWith(\"audio/\") ||\r\n        /(\\.mp3|\\.ogg|\\.wav)$/.test(file_name)\r\n      ? \"Audio\"\r\n      : /(\\.doc|\\.docx)$/.test(file_name)\r\n      ? \"Word Doc\"\r\n      : /(\\.ppt|\\.pptx)$/.test(file_name)\r\n      ? \"PPT\"\r\n      : /(\\.xlsx|\\.csv|\\.xls)$/.test(file_name)\r\n      ? \"Spreadsheet\"\r\n      : /(\\.pdf)$/.test(file_name)\r\n      ? \"PDF\"\r\n      : file_name.substring(file_name.lastIndexOf(\".\") + 1)?.toUpperCase();\r\n\r\n  const attachmentHeader = (\r\n    <>\r\n      {isEditMode ? (\r\n        <span\r\n          className=\"d-flex justify-content-center w-100 mx-auto\"\r\n          style={{ zIndex: 6 }}\r\n        >\r\n          {fileEditIcons}\r\n        </span>\r\n      ) : (\r\n        <span\r\n          data-download={file_id}\r\n          className={`downloadIcon ${isDownloadingFile ? \"downloading\" : \"\"} ${\r\n            isPreview || !msgSent ? \"d-none\" : \"\"\r\n          }`}\r\n          title={isDownloadingFile ? \"Downloading...\" : \"Download File\"}\r\n        >\r\n          {isDownloadingFile ? (\r\n            <Downloading />\r\n          ) : (\r\n            <Download data-download={file_id} />\r\n          )}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n  const fileNameWrapper = (\r\n    <span className={`${isPreview && !isEditMode ? \"fs-4\" : \"fs-6\"}`}>\r\n      &nbsp;&nbsp;\r\n      <span title={file_name}>{truncateString(file_name + \"\", 40, 37)}</span>\r\n    </span>\r\n  );\r\n  const fileInfo = (\r\n    <>\r\n      {fileNameWrapper}\r\n      <div\r\n        className={`${isPreview && !isEditMode ? \"fs-5 mt-4\" : \"\"}`}\r\n        style={{ marginBottom: isPreview && !isEditMode ? -10 : 0 }}\r\n      >\r\n        {`${fileType} : ${fileSize}`}\r\n      </div>\r\n    </>\r\n  );\r\n  const hideWhileLoadingMedia =\r\n    loadingMediaId === file_id ? \"invisible\" : \"visible\";\r\n\r\n  const displayWhileLoadingMedia =\r\n    loadingMediaId === file_id ? \"visible\" : \"invisible\";\r\n\r\n  return (\r\n    <>\r\n      {fileUrl?.startsWith(IMG_BASE_URL) || isImageOrGifFile(file_name) ? (\r\n        <span className=\"d-inline-block msgImageWrapper mb-2 position-relative\">\r\n          <img\r\n            src={fileUrl}\r\n            alt={file_name}\r\n            title={file_name}\r\n            data-image-id={file_id}\r\n            className={`msgImageFile d-inline-block`}\r\n          />\r\n          {isEditMode && (\r\n            <span className=\"position-absolute top-0 start-0\">\r\n              {fileEditIcons}\r\n            </span>\r\n          )}\r\n        </span>\r\n      ) : (\r\n        <div\r\n          className=\"pointer\"\r\n          style={{\r\n            margin: \"0px 0px -8px 0px\",\r\n            width:\r\n              isPreview && !isEditMode ? \"clamp(270px, 50vmin, 600px)\" : \"100%\",\r\n          }}\r\n        >\r\n          {fileType === \"PDF\" ? (\r\n            <div className={`${previewStyles} msgFile pdfFile text-light`}>\r\n              <div>\r\n                {!isEditMode && <PictureAsPdf className={iconStyles} />}\r\n                {attachmentHeader}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          ) : fileType === \"Spreadsheet\" ? (\r\n            <div className={`${previewStyles} msgFile excelFile bg-success`}>\r\n              <div>\r\n                {!isEditMode && <Description className={iconStyles} />}\r\n                {attachmentHeader}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          ) : fileType === \"PPT\" ? (\r\n            <div className={`${previewStyles} msgFile pptFile text-light`}>\r\n              <div>\r\n                {!isEditMode && <Description className={iconStyles} />}\r\n                {attachmentHeader}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          ) : fileType === \"Word Doc\" ? (\r\n            <div\r\n              className={`${previewStyles} msgFile wordFile`}\r\n              style={{ borderRadius: isEditMode ? 10 : 5 }}\r\n            >\r\n              <div>\r\n                {!isEditMode && <Description className={iconStyles} />}\r\n                {attachmentHeader}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          ) : fileType === \"Video\" ? (\r\n            <div className={`${previewStyles} msgFile mediaFile`}>\r\n              <div>\r\n                {attachmentHeader}\r\n                {!isEditMode && ` ${mediaFileSize}`}\r\n              </div>\r\n              {fileNameWrapper}\r\n              <div\r\n                data-video={file_id}\r\n                data-video-name={file_name}\r\n                title=\"Click to Play\"\r\n                className=\"mediaMsg bg-gradient py-5\"\r\n              >\r\n                <PlayCircle\r\n                  data-video={file_id}\r\n                  data-video-name={file_name}\r\n                  className={`playMedia ${hideWhileLoadingMedia}`}\r\n                  style={{ fontSize: 40 }}\r\n                />\r\n                <LottieAnimation\r\n                  ref={loadingGif as SpanRef}\r\n                  className={`position-absolute ${displayWhileLoadingMedia}`}\r\n                  style={{\r\n                    marginBottom: 0,\r\n                    height: 50,\r\n                    color: \"white\",\r\n                  }}\r\n                  animationData={animationData}\r\n                />\r\n                <span\r\n                  data-video={file_id}\r\n                  data-video-name={file_name}\r\n                  className=\"mediaDuration videoDuration text-light\"\r\n                >\r\n                  <Videocam data-video={file_id} data-video-name={file_name} />\r\n                  &nbsp;&nbsp;{fileSize}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ) : fileType === \"Audio\" ? (\r\n            <div\r\n              className={`${previewStyles} msgFile mediaFile bg-dark bg-opacity-75`}\r\n            >\r\n              <div>\r\n                {attachmentHeader}\r\n                {!isEditMode && ` ${mediaFileSize}`}\r\n              </div>\r\n              {fileNameWrapper}\r\n              <div\r\n                data-audio={file_id}\r\n                data-audio-name={file_name}\r\n                className=\"mediaMsg bg-gradient px-4 py-2\"\r\n                title=\"Click to Play\"\r\n              >\r\n                <PlayArrow\r\n                  data-audio={file_id}\r\n                  data-audio-name={file_name}\r\n                  className={`playMedia ${hideWhileLoadingMedia}`}\r\n                />\r\n                <LottieAnimation\r\n                  ref={loadingGif as SpanRef}\r\n                  className={`position-absolute ${displayWhileLoadingMedia}`}\r\n                  style={{\r\n                    marginBottom: 0,\r\n                    height: 30,\r\n                    color: \"white\",\r\n                  }}\r\n                  animationData={animationData}\r\n                />\r\n                <span\r\n                  data-audio={file_id}\r\n                  data-audio-name={file_name}\r\n                  className=\"mediaDuration audioDuration text-light\"\r\n                >\r\n                  <Audiotrack\r\n                    data-audio={file_id}\r\n                    data-audio-name={file_name}\r\n                    style={{ fontSize: 20 }}\r\n                  />\r\n                  &nbsp;{fileSize}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={`${previewStyles} msgFile otherFile`}>\r\n              <div>\r\n                {!isEditMode && <Description className={iconStyles} />}\r\n                {attachmentHeader}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MsgAttachment;\r\n","import { Close } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport {\r\n  AttachmentData,\r\n  CustomTooltipType,\r\n  FileMetaData,\r\n} from \"../../utils/AppTypes\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport MsgAttachment from \"./MsgAttachment\";\r\n\r\nconst PLACEHOLDER_IMG = process.env.REACT_APP_PLACEHOLDER_IMG_URL;\r\n\r\ninterface Props {\r\n  isEditMode: boolean;\r\n  attachmentData: AttachmentData;\r\n  CustomTooltip: CustomTooltipType;\r\n  fileEditIcons?: React.ReactNode;\r\n}\r\n\r\nconst AttachmentPreview = ({\r\n  isEditMode,\r\n  attachmentData,\r\n  CustomTooltip,\r\n  fileEditIcons,\r\n}: Props) => {\r\n  const { name, type, size } = attachmentData?.attachment as FileMetaData;\r\n  const { attachmentPreviewUrl } = attachmentData;\r\n\r\n  const FILE_WRAPPER_CLASS = `${\r\n    isEditMode ? \"h-100\" : \"mt-4 h-50\"\r\n  } d-flex justify-content-center align-items-center`;\r\n  const ATTACHMENT_STYLE = {\r\n    borderRadius: 7,\r\n    width: \"calc(100%)\",\r\n    maxHeight: isEditMode ? 200 : 250,\r\n  };\r\n  const editIconsWrapper = (\r\n    <span className=\"position-absolute top-0 start-0 m-1\" style={{ zIndex: 6 }}>\r\n      {fileEditIcons}\r\n    </span>\r\n  );\r\n\r\n  const previewTitle = type.startsWith(\"application/\") ? \"Attached File\" : name;\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-black bg-gradient bg-opacity-75 h-100 d-flex flex-column justify-content-start align-items-center\"\r\n      style={{ borderRadius: 10 }}\r\n    >\r\n      {/* Discard Attachment button */}\r\n      {!isEditMode && (\r\n        <CustomTooltip\r\n          title=\"Discard Attachment\"\r\n          placement=\"bottom-start\"\r\n          arrow\r\n        >\r\n          <IconButton\r\n            data-discard-file={true}\r\n            sx={{\r\n              position: \"absolute\",\r\n              left: 15,\r\n              top: 12,\r\n              color: \"#999999\",\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n          >\r\n            <Close data-discard-file={true} />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      )}\r\n\r\n      {/* Attached File Name */}\r\n      {!isEditMode && (\r\n        <CustomTooltip\r\n          title={previewTitle?.length > 23 ? previewTitle : \"\"}\r\n          placement=\"top\"\r\n          arrow\r\n        >\r\n          <span\r\n            className={`mt-5 mb-2`}\r\n            style={{ color: \"lightblue\", fontSize: 25, zIndex: 5 }}\r\n          >\r\n            {truncateString(previewTitle, 23, 20) || \"Attached File\"}\r\n          </span>\r\n        </CustomTooltip>\r\n      )}\r\n\r\n      <>\r\n        {type?.startsWith(\"image/\") ? (\r\n          <div className={`${FILE_WRAPPER_CLASS} position-relative`}>\r\n            {editIconsWrapper}\r\n            <img\r\n              style={ATTACHMENT_STYLE}\r\n              src={attachmentPreviewUrl || PLACEHOLDER_IMG}\r\n              alt=\"msgAttachment\"\r\n            />\r\n          </div>\r\n        ) : type?.startsWith(\"audio/\") ? (\r\n          <div\r\n            className={`${FILE_WRAPPER_CLASS} flex-column`}\r\n            style={{ width: \"clamp(190px, 48vw, 290px)\" }}\r\n          >\r\n            <span className=\"m-2\" style={{ zIndex: 6 }}>\r\n              {fileEditIcons}\r\n            </span>\r\n            <audio\r\n              src={attachmentPreviewUrl || \"\"}\r\n              controls\r\n              autoPlay\r\n              style={ATTACHMENT_STYLE}\r\n            >\r\n              {name}\r\n            </audio>\r\n          </div>\r\n        ) : type?.startsWith(\"video/\") ? (\r\n          <div className={`${FILE_WRAPPER_CLASS} position-relative`}>\r\n            {editIconsWrapper}\r\n            <video\r\n              src={attachmentPreviewUrl || \"\"}\r\n              controls\r\n              autoPlay\r\n              style={ATTACHMENT_STYLE}\r\n            >\r\n              {name}\r\n            </video>\r\n          </div>\r\n        ) : (\r\n          <MsgAttachment\r\n            isEditMode={isEditMode}\r\n            fileEditIcons={fileEditIcons}\r\n            isPreview={true}\r\n            fileData={{\r\n              fileUrl: attachmentPreviewUrl as string,\r\n              file_id: \"\",\r\n              file_name: name,\r\n              size,\r\n            }}\r\n          />\r\n        )}\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttachmentPreview;\r\n","import { StyledComponent } from \"@emotion/styled\";\r\nimport {\r\n  AttachFile,\r\n  Close,\r\n  Delete,\r\n  Done,\r\n  DoneAll,\r\n  Edit,\r\n  KeyboardArrowDown,\r\n} from \"@mui/icons-material\";\r\nimport { Avatar, CircularProgress, IconButton, TooltipProps } from \"@mui/material\";\r\nimport { forwardRef, useEffect, useRef } from \"react\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport { useAppSelector } from \"../../store/storeHooks\";\r\nimport { AttachmentData, AttachmentFileData, CustomTooltipType, MessageType, SpanRef } from \"../../utils/AppTypes\";\r\nimport {\r\n  msgTimeStringOf,\r\n  msgDateStringOf,\r\n  dateStringOf,\r\n  setCaretPosition,\r\n} from \"../../utils/appUtils\";\r\nimport AttachmentPreview from \"./AttachmentPreview\";\r\nimport MsgAttachment from \"./MsgAttachment\";\r\n\r\nconst IconButtonSx = {\r\n  color: \"lightblue\",\r\n  \":hover\": { backgroundColor: \"#cccccc20\" },\r\n};\r\n\r\ninterface Props {\r\n  downloadingFileId: string;\r\n  loadingMediaId: string;\r\n  msgEditMode: boolean;\r\n  clickedMsgId: string;\r\n  msgFileRemoved: boolean;\r\n  CustomTooltip: CustomTooltipType;\r\n  msgSent: boolean;\r\n  currMsg: MessageType;\r\n  prevMsg: MessageType;\r\n  attachmentData: AttachmentData;\r\n}\r\n\r\nconst Message = forwardRef(\r\n  (\r\n    {\r\n      downloadingFileId,\r\n      loadingMediaId,\r\n      msgEditMode,\r\n      clickedMsgId,\r\n      msgFileRemoved,\r\n      CustomTooltip,\r\n      msgSent,\r\n      currMsg,\r\n      prevMsg,\r\n      attachmentData,\r\n    }: Props,\r\n    editableMsgRef: React.ForwardedRef<HTMLSpanElement>\r\n  ) => {\r\n    const { loggedInUser, selectedChat } = useAppSelector(selectAppState);\r\n\r\n    const fileUrl = currMsg?.fileUrl;\r\n    const file_id = currMsg?.file_id;\r\n    const file_name = currMsg?.file_name;\r\n\r\n    const _id = currMsg?.sender?._id;\r\n    const profilePic = currMsg?.sender?.profilePic;\r\n    const name = currMsg?.sender?.name;\r\n    const email = currMsg?.sender?.email;\r\n\r\n    const isLoggedInUser = _id === loggedInUser?._id;\r\n    const senderData = `${profilePic}===${name}===${email}`;\r\n    const isSameSender = _id === prevMsg?.sender?._id;\r\n    const currMsgDate = new Date(currMsg?.createdAt as string);\r\n    const prevMsgDate = new Date(prevMsg?.createdAt as string);\r\n    const msgContentRef = useRef<HTMLSpanElement>(null); // Local ref (in non-edit mode)\r\n    const currMsgId = isLoggedInUser ? currMsg?._id : null;\r\n    const isClickedMsgCurrMsg = clickedMsgId === currMsgId;\r\n    const isEditMode = msgEditMode && isClickedMsgCurrMsg;\r\n    const isOtherDay = dateStringOf(currMsgDate) !== dateStringOf(prevMsgDate);\r\n    const showCurrSender =\r\n      !isLoggedInUser &&\r\n      selectedChat?.isGroupChat &&\r\n      (!isSameSender || isOtherDay);\r\n\r\n    useEffect(() => {\r\n      if (isEditMode) {\r\n        setCaretPosition((editableMsgRef as SpanRef)?.current);\r\n      }\r\n    }, [msgEditMode]);\r\n\r\n    useEffect(() => {\r\n      if (msgContentRef?.current) {\r\n        msgContentRef.current.innerHTML = currMsg?.content as string;\r\n      }\r\n    }, []);\r\n\r\n    const fileEditIcons = (\r\n      <>\r\n        <CustomTooltip title=\"Remove Attachment\" placement=\"top\" arrow>\r\n          <IconButton\r\n            data-remove-msg-file={true}\r\n            className={`m-1 bg-black bg-opacity-75`}\r\n            sx={IconButtonSx}\r\n          >\r\n            <Delete data-remove-msg-file={true} style={{ fontSize: 20 }} />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n        <CustomTooltip title=\"Change Attachment\" placement=\"top\" arrow>\r\n          <IconButton\r\n            data-edit-msg-file={true}\r\n            className={`m-1 bg-black bg-opacity-75`}\r\n            sx={IconButtonSx}\r\n          >\r\n            <Edit data-edit-msg-file={true} style={{ fontSize: 20 }} />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <section\r\n          className={`msgRow d-flex justify-content-${\r\n            isLoggedInUser ? \"end\" : \"start\"\r\n          }`}\r\n          style={{ marginTop: isSameSender ? 3 : 10 }}\r\n        >\r\n          {showCurrSender ? (\r\n            <CustomTooltip title={`View Profile`} placement=\"top-start\" arrow>\r\n              <Avatar\r\n                src={profilePic}\r\n                alt={name}\r\n                data-sender={senderData}\r\n                className=\"senderAvatar pointer\"\r\n              />\r\n            </CustomTooltip>\r\n          ) : (\r\n            selectedChat?.isGroupChat && <span style={{ width: 30 }}></span>\r\n          )}\r\n          <div\r\n            className={`msgBox d-flex flex-column text-start p-2 rounded-3\r\n          mx-2 mx-md-3 ${isLoggedInUser ? \"yourMsg\" : \"receiversMsg\"}`}\r\n            data-msg={currMsgId}\r\n            data-file-exists={file_id}\r\n          >\r\n            {isEditMode ? (\r\n              <div\r\n                className=\"d-flex justify-content-end\"\r\n                style={{ margin: \"-5px -5px 3px 0px\" }}\r\n              >\r\n                {(!currMsg?.fileUrl ||\r\n                  (msgFileRemoved && !attachmentData?.attachment)) && (\r\n                  <CustomTooltip title=\"Attach File\" placement=\"top-end\" arrow>\r\n                    <IconButton\r\n                      data-attach-msg-file={true}\r\n                      className={`me-1`}\r\n                      sx={{ ...IconButtonSx, transform: \"rotateZ(45deg)\" }}\r\n                    >\r\n                      <AttachFile\r\n                        data-attach-msg-file={true}\r\n                        style={{ fontSize: 20 }}\r\n                      />\r\n                    </IconButton>\r\n                  </CustomTooltip>\r\n                )}\r\n                <CustomTooltip title=\"Discard Draft\" placement=\"top-end\" arrow>\r\n                  <IconButton\r\n                    data-discard-draft={true}\r\n                    className={``}\r\n                    sx={IconButtonSx}\r\n                  >\r\n                    <Close data-discard-draft={true} style={{ fontSize: 20 }} />\r\n                  </IconButton>\r\n                </CustomTooltip>\r\n                <CustomTooltip title=\"Update Message\" placement=\"top-end\" arrow>\r\n                  <IconButton\r\n                    data-update-msg={true}\r\n                    data-msg-created-at={currMsg?.createdAt}\r\n                    className={`ms-1`}\r\n                    sx={IconButtonSx}\r\n                  >\r\n                    <Done\r\n                      data-update-msg={true}\r\n                      data-msg-created-at={currMsg?.createdAt}\r\n                      style={{ fontSize: 20 }}\r\n                    />\r\n                  </IconButton>\r\n                </CustomTooltip>\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {showCurrSender && (\r\n              <span data-sender={senderData} className=\"msgSender pointer\">\r\n                {name}\r\n              </span>\r\n            )}\r\n            {isLoggedInUser && msgSent && !msgEditMode && (\r\n              <span\r\n                data-msg={currMsgId}\r\n                data-file-exists={file_id}\r\n                title=\"Edit/Delete Message\"\r\n                className={`msgOptionsIcon text-light position-absolute \r\n              top-0 end-0 w-25 h-100`}\r\n              >\r\n                <KeyboardArrowDown\r\n                  data-msg={currMsgId}\r\n                  data-file-exists={file_id}\r\n                  style={{ fontSize: 22 }}\r\n                  className=\"position-absolute top-0 end-0\"\r\n                />\r\n              </span>\r\n            )}\r\n            {currMsg?.fileUrl && !isEditMode && (\r\n              <MsgAttachment\r\n                msgSent={msgSent}\r\n                isPreview={false}\r\n                isEditMode={isEditMode}\r\n                fileEditIcons={fileEditIcons}\r\n                downloadingFileId={downloadingFileId}\r\n                loadingMediaId={loadingMediaId}\r\n                fileData={\r\n                  {\r\n                    msgId: currMsgId,\r\n                    fileUrl,\r\n                    file_id,\r\n                    file_name,\r\n                  } as AttachmentFileData\r\n                }\r\n              />\r\n            )}\r\n            {isEditMode && attachmentData?.attachment && (\r\n              <AttachmentPreview\r\n                isEditMode={isEditMode}\r\n                attachmentData={attachmentData}\r\n                CustomTooltip={CustomTooltip}\r\n                fileEditIcons={fileEditIcons}\r\n              />\r\n            )}\r\n            {currMsg?.fileUrl &&\r\n              isEditMode &&\r\n              !attachmentData?.attachment &&\r\n              !msgFileRemoved && (\r\n                <MsgAttachment\r\n                  msgSent={msgSent}\r\n                  isEditMode={isEditMode}\r\n                  isPreview={false}\r\n                  fileEditIcons={fileEditIcons}\r\n                  downloadingFileId={downloadingFileId}\r\n                  loadingMediaId={loadingMediaId}\r\n                  fileData={\r\n                    {\r\n                      msgId: currMsgId,\r\n                      fileUrl,\r\n                      file_id,\r\n                      file_name,\r\n                    } as AttachmentFileData\r\n                  }\r\n                />\r\n              )}\r\n            <div\r\n              data-msg={currMsgId}\r\n              data-file-exists={file_id}\r\n              className={`msgContent d-flex ${\r\n                file_id || attachmentData?.attachment ? \"mt-2\" : \"\"\r\n              }`}\r\n            >\r\n              <span\r\n                id={`${currMsg?._id}---content`}\r\n                className=\"w-100\"\r\n                style={{ outline: \"none\" }}\r\n                contentEditable={isEditMode}\r\n                data-msg-created-at={currMsg?.createdAt}\r\n                ref={\r\n                  (isEditMode\r\n                    ? editableMsgRef\r\n                    : msgContentRef) as React.LegacyRef<HTMLSpanElement>\r\n                }\r\n              ></span>\r\n              <span\r\n                data-msg={currMsgId}\r\n                data-file-exists={file_id}\r\n                className=\"msgTime text-end d-flex align-items-end justify-content-end\"\r\n              >\r\n                {msgTimeStringOf(currMsgDate)}\r\n                {isLoggedInUser && (\r\n                  <>\r\n                    {msgSent ? (\r\n                      <DoneAll\r\n                        data-msg={currMsgId}\r\n                        data-file-exists={file_id}\r\n                        className=\"text-info fs-6 ms-1\"\r\n                      />\r\n                    ) : (\r\n                      <CircularProgress\r\n                        size={10}\r\n                        className=\"sendStatusIcon ms-1\"\r\n                      />\r\n                    )}\r\n                  </>\r\n                )}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {isOtherDay && (\r\n          <div className={`msgDate mt-3 mb-2 mx-auto py-1 px-3 rounded-3`}>\r\n            {msgDateStringOf(currMsgDate)}\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n);\r\nexport default Message;\r\n","import { Delete, Edit } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport { AnchorSetter, ClickEventHandler } from \"../../utils/AppTypes\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\n\r\ninterface Props {\r\n  anchor: HTMLElement;\r\n  setAnchor: AnchorSetter;\r\n  editMsgHandler: ClickEventHandler;\r\n  openDeleteMsgConfirmDialog: ClickEventHandler;\r\n}\r\n\r\nconst MsgOptionsMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  editMsgHandler,\r\n  openDeleteMsgConfirmDialog,\r\n}: Props) => {\r\n  return (\r\n    <Menu\r\n      open={Boolean(anchor)}\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={editMsgHandler}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Edit />\r\n        </ListItemIcon>\r\n        <MenuItemText>Edit Message</MenuItemText>\r\n      </MenuItem>\r\n      <MenuItem sx={menuItemProps} onClick={openDeleteMsgConfirmDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Delete />\r\n        </ListItemIcon>\r\n        <MenuItemText>Delete Message</MenuItemText>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MsgOptionsMenu;\r\n","import { useRef } from \"react\";\r\nimport letsChatAnimData from \"../animations/letsChatGif.json\";\r\nimport { selectAppState } from \"../store/slices/AppSlice\";\r\nimport { useAppSelector } from \"../store/storeHooks\";\r\nimport { SpanRef } from \"../utils/AppTypes\";\r\nimport { truncateString } from \"../utils/appUtils\";\r\nimport LottieAnimation from \"./utils/LottieAnimation\";\r\n\r\nconst WelcomeBanner = ({ isNewUser }: { isNewUser: boolean }) => {\r\n  const { loggedInUser } = useAppSelector(selectAppState);\r\n  const letsChatGif = useRef<HTMLSpanElement>(null);\r\n  return (\r\n    <div className=\"d-flex flex-column justify-content-start align-items-center h-100\">\r\n      {!isNewUser && (\r\n        <h2 className=\"mx-3 mt-1\">\r\n          Hello{\" \"}\r\n          <span\r\n            className=\"fw-bold\"\r\n            style={{ color: \"#A798F2\" }}\r\n          >{`${truncateString(\r\n            loggedInUser?.name?.split(\" \")[0],\r\n            12,\r\n            9\r\n          )?.toUpperCase()}`}</span>{\" \"}\r\n          👋\r\n        </h2>\r\n      )}\r\n      <LottieAnimation\r\n        ref={letsChatGif as SpanRef}\r\n        className={\"d-inline-block mt-3\"}\r\n        style={{ marginBottom: 50, height: \"50%\" }}\r\n        animationData={letsChatAnimData}\r\n      />\r\n      <p className=\"h4 mx-5 mb-3\" style={{ marginTop: -40, color: \"#99C5EE\" }}>\r\n        Create one-to-one chats, group chats, send/edit/delete text messages and\r\n        files to get 'Chat-Zoned'😉.\r\n      </p>\r\n      <p className=\"h2\" style={{ color: \"#DDBEF9\" }}>\r\n        Happy Chatting!😀\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomeBanner;\r\n","import { ArrowBack, Close } from \"@mui/icons-material\";\r\nimport { Avatar, IconButton } from \"@mui/material\";\r\nimport { selectAppState } from \"../store/slices/AppSlice\";\r\nimport { useAppSelector } from \"../store/storeHooks\";\r\nimport { ClickEventHandler, CustomTooltipType } from \"../utils/AppTypes\";\r\nimport { getOneToOneChatReceiver, truncateString } from \"../utils/appUtils\";\r\n\r\ninterface Props {\r\n  closeChat: ClickEventHandler;\r\n  openGroupInfoDialog: ClickEventHandler;\r\n  openViewProfileDialog: ClickEventHandler;\r\n  hideEmojiPicker: ClickEventHandler;\r\n  CustomTooltip: CustomTooltipType;\r\n}\r\n\r\nconst MsgsHeader = ({\r\n  closeChat,\r\n  openGroupInfoDialog,\r\n  openViewProfileDialog,\r\n  hideEmojiPicker,\r\n  CustomTooltip,\r\n}: Props) => {\r\n  const { loggedInUser, selectedChat } = useAppSelector(selectAppState);\r\n  const chatName = selectedChat?.isGroupChat\r\n    ? selectedChat?.chatName\r\n    : getOneToOneChatReceiver(loggedInUser, selectedChat?.users)?.name;\r\n  return (\r\n    <section\r\n      className={`messagesHeader pointer-event d-flex justify-content-start \r\n            position-relative w-100 fw-bold bg-info bg-opacity-10 py-2`}\r\n      onClick={hideEmojiPicker}\r\n    >\r\n      <CustomTooltip title=\"Go Back\" placement=\"bottom-start\" arrow>\r\n        <IconButton\r\n          onClick={closeChat}\r\n          className={`d-flex d-md-none ms-3`}\r\n          sx={{\r\n            color: \"#999999\",\r\n            \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n          }}\r\n        >\r\n          <ArrowBack />\r\n        </IconButton>\r\n      </CustomTooltip>\r\n      <CustomTooltip\r\n        title={selectedChat?.isGroupChat ? \"Group Info\" : \"View Profile\"}\r\n        placement=\"bottom-start\"\r\n        arrow\r\n      >\r\n        <IconButton\r\n          sx={{\r\n            margin: \"-8px\",\r\n            \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n          }}\r\n          className=\"pointer ms-0 ms-md-4\"\r\n          onClick={\r\n            selectedChat?.isGroupChat\r\n              ? openGroupInfoDialog\r\n              : openViewProfileDialog\r\n          }\r\n        >\r\n          <Avatar\r\n            src={\r\n              selectedChat?.isGroupChat\r\n                ? selectedChat?.chatDisplayPic\r\n                : getOneToOneChatReceiver(loggedInUser, selectedChat?.users)\r\n                    ?.profilePic || \"\"\r\n            }\r\n            alt={\"receiverAvatar\"}\r\n          />\r\n        </IconButton>\r\n      </CustomTooltip>\r\n\r\n      <span className=\"ms-2 mt-1 fs-4 text-info\" title={chatName}>\r\n        {truncateString(chatName, 22, 17)}\r\n      </span>\r\n\r\n      <CustomTooltip title=\"Close Chat\" placement=\"bottom-end\" arrow>\r\n        <IconButton\r\n          onClick={closeChat}\r\n          className=\"d-none d-md-flex\"\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 15,\r\n            top: 8,\r\n            color: \"#999999\",\r\n            \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n          }}\r\n        >\r\n          <Close />\r\n        </IconButton>\r\n      </CustomTooltip>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MsgsHeader;\r\n","import { SetStateAction, useEffect, useRef, useState } from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport {\r\n  debounce,\r\n  FIVE_MB,\r\n  getAxiosConfig,\r\n  isImageOrGifFile,\r\n  parseInnerHTML,\r\n  setCaretPosition,\r\n} from \"../utils/appUtils\";\r\nimport { AttachFile, EmojiEmotions, Send } from \"@mui/icons-material\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport axios from \"../utils/axios\";\r\nimport ViewProfileBody from \"./dialogs/ViewProfileBody\";\r\nimport GroupInfoBody from \"./dialogs/GroupInfoBody\";\r\nimport LoadingMsgs from \"./utils/LoadingMsgs\";\r\nimport FullSizeImage from \"./utils/FullSizeImage\";\r\nimport Message from \"./utils/Message\";\r\nimport MsgOptionsMenu from \"./menus/MsgOptionsMenu\";\r\nimport { io } from \"socket.io-client\";\r\nimport {\r\n  selectAppState,\r\n  setClientSocket,\r\n  setFetchMsgs,\r\n  setGroupInfo,\r\n  setLoggedInUser,\r\n  setSelectedChat,\r\n  setSocketConnected,\r\n  toggleRefresh,\r\n} from \"../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../store/slices/FormfieldSlice\";\r\nimport { displayToast } from \"../store/slices/ToastSlice\";\r\nimport {\r\n  displayDialog,\r\n  setShowDialogActions,\r\n} from \"../store/slices/CustomDialogSlice\";\r\nimport AttachmentPreview from \"./utils/AttachmentPreview\";\r\nimport WelcomeBanner from \"./WelcomeBanner\";\r\nimport MsgsHeader from \"./MsgsHeader\";\r\nimport TypingIndicator from \"./utils/TypingIndicator\";\r\nimport EmojiPicker, { IEmojiData } from \"emoji-picker-react\";\r\nimport {\r\n  AttachmentData,\r\n  AxiosErrorType,\r\n  ChangeEventHandler,\r\n  ChatType,\r\n  ClickEventHandler,\r\n  ErrorType,\r\n  FileData,\r\n  KeyboardEventHandler,\r\n  MessageType,\r\n  ProfileData,\r\n  StateSetter,\r\n  ToastData,\r\n  UserType,\r\n} from \"../utils/AppTypes\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/storeHooks\";\r\nimport { AxiosRequestConfig } from \"axios\";\r\n\r\nconst arrowStyles = { color: \"#111\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 16,\r\n  padding: \"5px 10px\",\r\n  borderRadius: 5,\r\n  border: \"1px solid #555\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst iconStyles = {\r\n  margin: \"4px 0px\",\r\n  padding: \"5px\",\r\n  color: \"#999999\",\r\n  \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n};\r\n\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\nconst SOCKET_ENDPOINT = process.env.REACT_APP_SERVER_BASE_URL as string;\r\nlet msgFileAlreadyExists = false;\r\nlet currentlyTyping = false;\r\nlet preventStopTyping = true;\r\n\r\ninterface Props {\r\n  loadingMsgs: boolean;\r\n  setLoadingMsgs: StateSetter<boolean>;\r\n  setDialogBody: StateSetter<React.ReactNode>;\r\n  deletePersistedNotifs: any;\r\n  isNewUser: boolean;\r\n  typingChatUser: string;\r\n}\r\n\r\nconst MessagesView = ({\r\n  loadingMsgs,\r\n  setLoadingMsgs,\r\n  setDialogBody,\r\n  deletePersistedNotifs,\r\n  isNewUser,\r\n  typingChatUser,\r\n}: Props) => {\r\n  const {\r\n    loggedInUser,\r\n    selectedChat,\r\n    fetchMsgs,\r\n    clientSocket,\r\n    isSocketConnected,\r\n  } = useAppSelector(selectAppState);\r\n  const { disableIfLoading } = useAppSelector(selectFormfieldState);\r\n  const dispatch = useAppDispatch();\r\n  const [sending, setSending] = useState(false);\r\n  const [isMsgFileRemoved, setIsMsgFileRemoved] = useState(\"false\");\r\n  const [enableMsgSend, setEnableMsgSend] = useState(false);\r\n  const [fileAttached, setFileAttached] = useState(false);\r\n  const [messages, setMessages] = useState<MessageType[]>([]);\r\n  const [clickedMsgId, setClickedMsgId] = useState(\"\");\r\n  const [dontScrollToBottom, setDontScrollToBottom] = useState(false);\r\n  const [attachmentData, setAttachmentData] = useState<AttachmentData>({\r\n    attachment: \"\",\r\n    attachmentPreviewUrl: \"\",\r\n  });\r\n  const msgListBottom = useRef<HTMLDivElement | null>(null);\r\n  const msgFileInput = useRef<HTMLInputElement | null>(null);\r\n  const msgContent = useRef<HTMLDivElement | null>(null);\r\n  const editableMsgContent = useRef<React.ReactNode | HTMLElement | null>(null);\r\n  const [downloadingFileId, setDownloadingFileId] = useState(\"\");\r\n  const [loadingMediaId, setLoadingMediaId] = useState(\"\");\r\n  const [msgEditMode, setMsgEditMode] = useState(false);\r\n  const [msgOptionsMenuAnchor, setMsgOptionsMenuAnchor] =\r\n    useState<HTMLElement | null>(null);\r\n\r\n  const resetMsgInput = (options?: { discardAttachmentOnly: boolean }) => {\r\n    setAttachmentData({\r\n      attachment: \"\",\r\n      attachmentPreviewUrl: \"\",\r\n    });\r\n    if (!msgFileInput?.current) return;\r\n    msgFileInput.current.value = \"\";\r\n    setFileAttached(false);\r\n\r\n    if (options?.discardAttachmentOnly) return;\r\n    setEnableMsgSend(false);\r\n\r\n    if (!msgContent?.current) return;\r\n    msgContent.current.innerHTML = \"\";\r\n  };\r\n\r\n  // Emoji picker config\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const onEmojiIconClick = () => {\r\n    preventStopTyping = true;\r\n    setShowEmojiPicker(!showEmojiPicker);\r\n    let timeout = setTimeout(() => {\r\n      document\r\n        .querySelector(\".emoji-search\")\r\n        ?.setAttribute(\"placeholder\", \"Search an emoji...\");\r\n      clearTimeout(timeout);\r\n    });\r\n  };\r\n  const hideEmojiPicker = () => {\r\n    if (showEmojiPicker) setShowEmojiPicker(false);\r\n  };\r\n  const onEmojiClick = (event: React.MouseEvent, emojiObject: IEmojiData) => {\r\n    if (!msgContent?.current) return;\r\n    msgContent.current.innerHTML += emojiObject.emoji;\r\n    setCaretPosition(msgContent.current);\r\n    setEnableMsgSend(true);\r\n  };\r\n\r\n  const selectAttachment = () => {\r\n    preventStopTyping = true;\r\n    hideEmojiPicker();\r\n    msgFileInput.current?.click();\r\n  };\r\n\r\n  const discardAttachment = () =>\r\n    resetMsgInput({ discardAttachmentOnly: true });\r\n\r\n  const persistUpdatedUser = (updatedUser: UserType) => {\r\n    // localStorage persists updated user even after page refresh\r\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\r\n    dispatch(setLoggedInUser(updatedUser));\r\n  };\r\n\r\n  const displayError = (\r\n    error: ErrorType = \"Oops! Something went wrong\",\r\n    title = \"Operation Failed\"\r\n  ) => {\r\n    dispatch(\r\n      displayToast({\r\n        title,\r\n        message:\r\n          (error as AxiosErrorType).response?.data?.message ||\r\n          (error as Error)?.message ||\r\n          error,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"bottom-center\",\r\n      } as ToastData)\r\n    );\r\n  };\r\n\r\n  const displaySuccess = (message = \"Operation Successful\") => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"success\",\r\n        duration: 1500,\r\n        position: \"bottom-center\",\r\n      } as ToastData)\r\n    );\r\n  };\r\n\r\n  const closeChat = () => {\r\n    setLoadingMsgs(false);\r\n    dispatch(setSelectedChat(null));\r\n    resetMsgInput();\r\n    setIsMsgFileRemoved(\"false\");\r\n    setMsgEditMode(false);\r\n    setDontScrollToBottom(false);\r\n  };\r\n\r\n  const viewMedia = (e: React.MouseEvent, src: string, fileData: FileData) => {\r\n    if (!src || !fileData) return;\r\n    const { fileName, isAudio } = fileData;\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(\r\n      <FullSizeImage\r\n        event={e}\r\n        audioSrc={(isAudio ? src : \"\") as string}\r\n        videoSrc={(!isAudio ? src : \"\") as string}\r\n      />\r\n    );\r\n    dispatch(\r\n      displayDialog({\r\n        isFullScreen: true,\r\n        title: fileName || `${isAudio ? \"Audio\" : \"Video\"} File`,\r\n      })\r\n    );\r\n    setLoadingMediaId(\"\");\r\n  };\r\n\r\n  const displayFullSizeImage: ClickEventHandler = (e) => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<FullSizeImage event={e} />);\r\n    dispatch(\r\n      displayDialog({\r\n        isFullScreen: true,\r\n        title: (e.target as HTMLImageElement)?.alt || \"Display Pic\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const loadMedia = async (\r\n    e: React.MouseEvent,\r\n    fileId: string,\r\n    options: FileData\r\n  ) => {\r\n    if (!fileId || !options) return;\r\n    setLoadingMediaId(fileId);\r\n    const config = getAxiosConfig({ loggedInUser, blob: true });\r\n    try {\r\n      const { data } = await axios.get(\r\n        `/api/message/files/${fileId}`,\r\n        config as AxiosRequestConfig\r\n      );\r\n\r\n      const mediaSrc = URL.createObjectURL(new Blob([data]));\r\n      viewMedia(e, mediaSrc, options);\r\n    } catch (error) {\r\n      displayError(error as ErrorType, \"Couldn't Load Media\");\r\n      setLoadingMediaId(\"\");\r\n    }\r\n  };\r\n\r\n  const downloadFile = async (fileId: string) => {\r\n    if (!fileId) return;\r\n    setDownloadingFileId(fileId);\r\n    setSending(true);\r\n    const config = getAxiosConfig({ loggedInUser, blob: true });\r\n    try {\r\n      const { data } = await axios.get(\r\n        `/api/message/files/${fileId}`,\r\n        config as AxiosRequestConfig\r\n      );\r\n\r\n      const link = document.createElement(\"a\");\r\n      link.href = URL.createObjectURL(new Blob([data]));\r\n      link.setAttribute(\"download\", fileId.split(\"---\")[1] || fileId);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n\r\n      setDownloadingFileId(\"\");\r\n      setSending(false);\r\n    } catch (error) {\r\n      displayError(error as ErrorType, \"Couldn't Download File\");\r\n      setDownloadingFileId(\"\");\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const fetchMessages = async (options?: { updatingMsg: boolean }) => {\r\n    setLoadingMsgs(true);\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat?._id}`,\r\n        config as AxiosRequestConfig\r\n      );\r\n      setMessages(\r\n        data.map((msg: MessageType) => {\r\n          if (msg) msg[\"sent\"] = true;\r\n          return msg;\r\n        })\r\n      );\r\n      setLoadingMsgs(false);\r\n      if (fetchMsgs) dispatch(setFetchMsgs(false));\r\n      if (options?.updatingMsg) displaySuccess(\"Message Updated Successfully\");\r\n      setSending(false);\r\n    } catch (error) {\r\n      displayError(error as ErrorType, \"Couldn't Fetch Messages\");\r\n      setLoadingMsgs(false);\r\n      if (fetchMsgs) dispatch(setFetchMsgs(false));\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    preventStopTyping = false;\r\n    emitStopTyping();\r\n    hideEmojiPicker();\r\n    if (!attachmentData.attachment && !msgContent.current?.innerHTML) return;\r\n\r\n    const msgData = {\r\n      ...attachmentData,\r\n      content: msgContent.current?.innerHTML || \"\",\r\n    };\r\n    const newMsgFile = msgData?.attachment as File;\r\n    const isNonImageFile = !isImageOrGifFile(newMsgFile?.name);\r\n\r\n    const dummyNewMsg: MessageType = {\r\n      _id: `${Date.now()}` as string,\r\n      chat: selectedChat?._id as string,\r\n      sender: {\r\n        _id: loggedInUser?._id as string,\r\n        profilePic: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        cloudinary_id: \"\",\r\n        expiryTime: Date.now(),\r\n        notifications: [],\r\n        token: \"\",\r\n      },\r\n      fileUrl: msgData?.attachmentPreviewUrl,\r\n      file_id: \"\",\r\n      file_name:\r\n        newMsgFile?.name +\r\n        `${\r\n          msgData?.mediaDuration\r\n            ? `===${msgData.mediaDuration}`\r\n            : isNonImageFile\r\n            ? `===${newMsgFile?.size || \"\"}`\r\n            : \"\"\r\n        }`,\r\n      content: msgData?.content,\r\n      createdAt: new Date().toISOString(),\r\n      sent: false,\r\n    };\r\n    setDontScrollToBottom(false);\r\n    setMessages([dummyNewMsg, ...messages]);\r\n    resetMsgInput();\r\n    setSending(true);\r\n    const config = getAxiosConfig({ loggedInUser, formData: true });\r\n\r\n    try {\r\n      // Upload img/gif to cloudinary, and all other files to aws s3\r\n      const apiUrl = isNonImageFile\r\n        ? `/api/message/upload-to-s3`\r\n        : `/api/message/`;\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"attachment\", newMsgFile);\r\n      formData.append(\"mediaDuration\", msgData?.mediaDuration as string);\r\n      formData.append(\"content\", msgData.content);\r\n      formData.append(\"chatId\", selectedChat?._id as string);\r\n      const { data } = await axios.post(\r\n        apiUrl,\r\n        formData,\r\n        config as AxiosRequestConfig\r\n      );\r\n\r\n      if (isSocketConnected) clientSocket?.emit(\"new_msg_sent\", data);\r\n      fetchMessages();\r\n      dispatch(toggleRefresh());\r\n    } catch (error) {\r\n      displayError(error as ErrorType, \"Couldn't Send Message\");\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const deleteMessage = async () => {\r\n    dispatch(setLoading(true));\r\n    setSending(true);\r\n    const config = getAxiosConfig({ loggedInUser });\r\n\r\n    try {\r\n      await axios.put(\r\n        `/api/message/delete`,\r\n        { messageIds: JSON.stringify([clickedMsgId]) },\r\n        config as AxiosRequestConfig\r\n      );\r\n      if (isSocketConnected) {\r\n        clientSocket?.emit(\"msg_deleted\", {\r\n          deletedMsgId: clickedMsgId,\r\n          senderId: loggedInUser?._id,\r\n          chat: selectedChat,\r\n        });\r\n      }\r\n      displaySuccess(\"Message Deleted Successfully\");\r\n      setMessages(messages.filter((msg) => msg?._id !== clickedMsgId));\r\n      dispatch(setLoading(false));\r\n      dispatch(toggleRefresh());\r\n      setSending(false);\r\n      return \"msgActionDone\";\r\n    } catch (error) {\r\n      displayError(error as ErrorType, \"Couldn't Delete Message\");\r\n      dispatch(setLoading(false));\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const updateMessage = async (\r\n    updatedMsgContent: string,\r\n    msgDateString: string\r\n  ) => {\r\n    if (\r\n      !(\r\n        attachmentData.attachment ||\r\n        (msgFileAlreadyExists && isMsgFileRemoved === \"false\")\r\n      ) &&\r\n      !parseInnerHTML(updatedMsgContent)\r\n    ) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"A Message Must Contain Either a File or some Text Content\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        } as ToastData)\r\n      );\r\n    }\r\n    setMsgEditMode(false);\r\n    setDontScrollToBottom(true);\r\n\r\n    const msgData: AttachmentData = {\r\n      ...attachmentData,\r\n      content: updatedMsgContent || \"\",\r\n    };\r\n    const updatedMsgFile = msgData?.attachment as File;\r\n    const isNonImageFile = !isImageOrGifFile(updatedMsgFile?.name);\r\n\r\n    const updatedMsg: MessageType = {\r\n      _id: `${Date.now()}`,\r\n      chat: selectedChat?._id as string,\r\n      sender: {\r\n        _id: loggedInUser?._id as string,\r\n        profilePic: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        cloudinary_id: \"\",\r\n        expiryTime: Date.now(),\r\n        notifications: [],\r\n        token: \"\",\r\n      },\r\n      fileUrl: msgData?.attachmentPreviewUrl,\r\n      file_id: \"\",\r\n      file_name:\r\n        updatedMsgFile?.name +\r\n        `${\r\n          msgData?.mediaDuration\r\n            ? `===${msgData.mediaDuration}`\r\n            : isNonImageFile\r\n            ? `===${updatedMsgFile?.size || \"\"}`\r\n            : \"\"\r\n        }`,\r\n      content: msgData?.content as string,\r\n      createdAt: msgDateString,\r\n      sent: false,\r\n    };\r\n    setMessages(\r\n      messages.map((msg: MessageType) =>\r\n        msg?._id === clickedMsgId ? updatedMsg : msg\r\n      )\r\n    );\r\n    discardAttachment();\r\n    setSending(true);\r\n    const config = getAxiosConfig({ loggedInUser, formData: true });\r\n\r\n    try {\r\n      // Upload img/gif to cloudinary, and all other files to aws s3\r\n      const apiUrl = isNonImageFile\r\n        ? `/api/message/update-in-s3`\r\n        : `/api/message/update`;\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"attachment\", updatedMsgFile);\r\n      formData.append(\"msgFileRemoved\", isMsgFileRemoved as string);\r\n      formData.append(\"mediaDuration\", msgData?.mediaDuration as string);\r\n      formData.append(\"updatedContent\", msgData?.content as string);\r\n      formData.append(\"messageId\", clickedMsgId);\r\n      const { data } = await axios.put(\r\n        apiUrl,\r\n        formData,\r\n        config as AxiosRequestConfig\r\n      );\r\n\r\n      if (isSocketConnected) clientSocket?.emit(\"msg_updated\", data);\r\n      fetchMessages({ updatingMsg: true });\r\n      dispatch(toggleRefresh());\r\n      setIsMsgFileRemoved(\"false\");\r\n    } catch (error) {\r\n      displayError(error as ErrorType, \"Couldn't Update Message\");\r\n      setSending(false);\r\n      setIsMsgFileRemoved(\"false\");\r\n    }\r\n  };\r\n\r\n  const editMsgHandler = () => setMsgEditMode(true);\r\n\r\n  const setMediaDuration = (mediaUrl: string, msgFile: File) => {\r\n    const media = new Audio(mediaUrl);\r\n    media.onloadedmetadata = () => {\r\n      const duration = media?.duration as number;\r\n      const minutes = Math.trunc(duration / 60);\r\n      const seconds = Math.trunc(duration % 60);\r\n      setAttachmentData({\r\n        attachment: msgFile,\r\n        attachmentPreviewUrl: mediaUrl,\r\n        mediaDuration: `${minutes}:${\r\n          seconds < 10 ? `0${seconds}` : seconds\r\n        }+++${msgFile.type}`,\r\n      });\r\n      setFileAttached(true);\r\n    };\r\n  };\r\n\r\n  const handleMsgFileInputChange: ChangeEventHandler = (e) => {\r\n    if (!e.target?.files) return;\r\n    const msgFile = e.target.files[0];\r\n    if (!msgFile) return;\r\n\r\n    if (msgFile.size >= FIVE_MB) {\r\n      if (!msgFileInput?.current) return;\r\n      msgFileInput.current.value = \"\";\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Select a File Smaller than 5 MB\",\r\n          type: \"warning\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        } as ToastData)\r\n      );\r\n    }\r\n    const fileUrl = URL.createObjectURL(msgFile);\r\n    if (/^(video\\/|audio\\/)/.test(msgFile.type)) {\r\n      setMediaDuration(fileUrl, msgFile);\r\n    } else {\r\n      setAttachmentData({\r\n        attachment: msgFile,\r\n        attachmentPreviewUrl: fileUrl,\r\n      });\r\n      setFileAttached(true);\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    msgListBottom.current?.scrollIntoView();\r\n  };\r\n\r\n  // Initializing Client Socket\r\n  useEffect(() => {\r\n    dispatch(\r\n      setClientSocket(io(SOCKET_ENDPOINT, { transports: [\"websocket\"] }) as any)\r\n    );\r\n  }, []);\r\n\r\n  // Socket event handlers\r\n  const newMsgSocketEventHandler = () => {\r\n    // off() prevents on() from executing multiple times\r\n    clientSocket\r\n      .off(\"new_msg_received\")\r\n      .on(\r\n        \"new_msg_received\",\r\n        (newMsg: MessageType, notifications: MessageType[]) => {\r\n          const chat = newMsg?.chat as ChatType;\r\n          dispatch(toggleRefresh());\r\n          if (\r\n            selectedChat &&\r\n            chat &&\r\n            selectedChat?._id === chat?._id &&\r\n            newMsg\r\n          ) {\r\n            newMsg[\"sent\"] = true;\r\n            setMessages([newMsg, ...messages]);\r\n            deletePersistedNotifs([newMsg?._id]);\r\n          } else {\r\n            const updatedUser = {\r\n              ...loggedInUser,\r\n              notifications: notifications?.reverse(),\r\n            };\r\n            persistUpdatedUser(updatedUser as UserType);\r\n          }\r\n        }\r\n      );\r\n  };\r\n\r\n  const deletedMsgSocketEventHandler = () => {\r\n    clientSocket\r\n      .off(\"remove_deleted_msg\")\r\n      .on(\r\n        \"remove_deleted_msg\",\r\n        (deletedMsgData: {\r\n          deletedMsgId: string;\r\n          senderId: string;\r\n          chat: ChatType;\r\n        }) => {\r\n          const { deletedMsgId, chat } = deletedMsgData;\r\n          dispatch(toggleRefresh());\r\n          if (selectedChat && chat && selectedChat._id === chat._id) {\r\n            setMessages(messages.filter((m) => m?._id !== deletedMsgId));\r\n          } else {\r\n            // Remove notification of 'deleted msg' from global state\r\n            // and localStorage\r\n            const notifs = loggedInUser?.notifications;\r\n            const updatedUser = {\r\n              ...loggedInUser,\r\n              notifications: notifs?.filter(\r\n                (n: MessageType) => n?._id !== deletedMsgId\r\n              ),\r\n            };\r\n            persistUpdatedUser(updatedUser as UserType);\r\n          }\r\n        }\r\n      );\r\n  };\r\n\r\n  const updatedMsgSocketEventHandler = () => {\r\n    clientSocket\r\n      .off(\"update_modified_msg\")\r\n      .on(\"update_modified_msg\", (updatedMsg: MessageType) => {\r\n        if (!updatedMsg) return;\r\n        const chat = updatedMsg?.chat as ChatType;\r\n        dispatch(toggleRefresh());\r\n        if (\r\n          selectedChat &&\r\n          chat &&\r\n          selectedChat?._id === chat?._id &&\r\n          updatedMsg\r\n        ) {\r\n          updatedMsg[\"sent\"] = true;\r\n          updatedMsg[\"chat\"] = (updatedMsg.chat as ChatType)?._id as string;\r\n          setTimeout(() => {\r\n            // Only updating msg content using 'document' method\r\n            // as updating 'messages' state will re-render all\r\n            // msgs and scroll to bottom, which may prevent the\r\n            // receiver to edit or view his/her msg, causing bad UX\r\n            (\r\n              document.getElementById(\r\n                `${updatedMsg._id}---content`\r\n              ) as HTMLElement\r\n            ).innerHTML = updatedMsg.content;\r\n          }, 10);\r\n          // Updating 'state' is the only way to update attachment\r\n        }\r\n      });\r\n  };\r\n\r\n  // Listening to all socket events\r\n  useEffect(() => {\r\n    if (!clientSocket) return;\r\n\r\n    if (!isSocketConnected && clientSocket) {\r\n      clientSocket.emit(\"init_user\", loggedInUser?._id);\r\n      clientSocket.on(\"user_connected\", () => {\r\n        // console.log(\"socket connected\");\r\n        dispatch(setSocketConnected(true));\r\n      });\r\n    }\r\n    newMsgSocketEventHandler();\r\n    deletedMsgSocketEventHandler();\r\n    updatedMsgSocketEventHandler();\r\n  });\r\n\r\n  // Discard msg update draft\r\n  const discardMsgDraft = () => {\r\n    discardAttachment();\r\n    setMsgEditMode(false);\r\n    setSending(true);\r\n    setMessages([]);\r\n    // To execute after the entire code is run\r\n    setTimeout(() => {\r\n      setMessages(messages);\r\n      setSending(false);\r\n      // To execute after all the messages have been mapped\r\n      setTimeout(() => {\r\n        document.getElementById(clickedMsgId)?.scrollIntoView();\r\n      }, 10);\r\n    }, 0);\r\n    setIsMsgFileRemoved(\"false\");\r\n    return \"msgActionDone\";\r\n  };\r\n\r\n  // Open discard draft confirm dialog\r\n  const openDiscardDraftConfirmDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<>Are you sure you want to discard this draft?</>);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Discard Draft\",\r\n        nolabel: \"NO\",\r\n        yeslabel: \"YES\",\r\n        loadingYeslabel: \"Discarding...\",\r\n        action: discardMsgDraft,\r\n      })\r\n    );\r\n  };\r\n\r\n  // Message input handlers\r\n  const emitTyping = () => {\r\n    if (isSocketConnected && !currentlyTyping) {\r\n      clientSocket?.emit(\"typing\", selectedChat, loggedInUser);\r\n      currentlyTyping = true;\r\n    }\r\n  };\r\n\r\n  const emitStopTyping = () => {\r\n    if (isSocketConnected && currentlyTyping) {\r\n      clientSocket?.emit(\"stop_typing\", selectedChat, loggedInUser);\r\n      currentlyTyping = false;\r\n    }\r\n  };\r\n\r\n  const onInputFocus = () => {\r\n    preventStopTyping = false;\r\n  };\r\n\r\n  const onInputBlur = () => {\r\n    setTimeout(() => {\r\n      if (!preventStopTyping) emitStopTyping();\r\n    }, 1000);\r\n  };\r\n\r\n  const msgInputHandler: ChangeEventHandler = debounce((e: KeyboardEvent) => {\r\n    const isNonEmptyInput = Boolean(\r\n      parseInnerHTML((e.target as HTMLElement).innerHTML)\r\n    );\r\n    setEnableMsgSend(isNonEmptyInput);\r\n    if (!isNonEmptyInput) emitStopTyping();\r\n    if (isNonEmptyInput) emitTyping();\r\n  }, 500);\r\n\r\n  const msgKeydownHandler: KeyboardEventHandler = (e) => {\r\n    hideEmojiPicker();\r\n    if (\r\n      e.key === \"Enter\" &&\r\n      !e.shiftKey &&\r\n      (enableMsgSend || fileAttached || msgEditMode)\r\n    ) {\r\n      e.preventDefault();\r\n      if (msgEditMode) {\r\n        const msgDate =\r\n          (e.target as HTMLElement).dataset.msgCreatedAt ||\r\n          ((e.target as HTMLElement).parentNode as HTMLElement).dataset\r\n            .msgCreatedAt;\r\n        updateMessage(\r\n          (editableMsgContent?.current as HTMLElement)?.innerHTML,\r\n          msgDate as string\r\n        );\r\n      } else {\r\n        sendMessage();\r\n      }\r\n    }\r\n  };\r\n\r\n  // Msgs click handler ('Event Delegation' applied here)\r\n  const msgsClickHandler: ClickEventHandler = (e) => {\r\n    const { dataset } = e.target as HTMLElement;\r\n    const parentDataset = ((e.target as HTMLElement).parentNode as HTMLElement)\r\n      .dataset;\r\n    const senderData = (dataset.sender || parentDataset.sender)?.split(\"===\");\r\n    const msgId = dataset.msg || parentDataset.msg;\r\n    const videoId = dataset.video || parentDataset.video;\r\n    const audioId = dataset.audio || parentDataset.audio;\r\n    const fileId = dataset.download || parentDataset.download;\r\n    const updateEditedMsg = dataset.updateMsg || parentDataset.updateMsg;\r\n    const attachMsgFileClicked =\r\n      dataset.attachMsgFile || parentDataset.attachMsgFile;\r\n    const removeMsgFileClicked =\r\n      dataset.removeMsgFile || parentDataset.removeMsgFile;\r\n    const editMsgFileClicked = dataset.editMsgFile || parentDataset.editMsgFile;\r\n    const discardDraftClicked =\r\n      dataset.discardDraft || parentDataset.discardDraft;\r\n\r\n    hideEmojiPicker();\r\n    if (fileId) {\r\n      downloadFile(fileId);\r\n    } else if (videoId) {\r\n      // Load video\r\n      loadMedia(e, videoId, {\r\n        fileName: dataset.videoName || parentDataset.videoName || null,\r\n        isAudio: false,\r\n      });\r\n    } else if (audioId) {\r\n      // Load audio\r\n      loadMedia(e, audioId, {\r\n        fileName: dataset.audioName || parentDataset.audioName || null,\r\n        isAudio: true,\r\n      });\r\n    } else if (dataset.imageId) {\r\n      displayFullSizeImage(e);\r\n    } else if (senderData?.length) {\r\n      // Open view profile dialog\r\n      const props = {\r\n        memberProfilePic: senderData[0],\r\n        memberName: senderData[1],\r\n        memberEmail: senderData[2],\r\n      };\r\n      openViewProfileDialogWithProps(props);\r\n    } else if (msgId && !msgEditMode) {\r\n      msgFileAlreadyExists = Boolean(\r\n        dataset.fileExists || parentDataset.fileExists\r\n      );\r\n      setClickedMsgId(msgId);\r\n      openMsgOptionsMenu(e);\r\n    } else if (attachMsgFileClicked || editMsgFileClicked) {\r\n      selectAttachment();\r\n    } else if (removeMsgFileClicked) {\r\n      setIsMsgFileRemoved(\"true\");\r\n      discardAttachment();\r\n    } else if (discardDraftClicked) {\r\n      openDiscardDraftConfirmDialog();\r\n    } else if (updateEditedMsg) {\r\n      const msgDate = dataset.msgCreatedAt || parentDataset.msgCreatedAt;\r\n      updateMessage(\r\n        (editableMsgContent?.current as HTMLElement)?.innerHTML,\r\n        msgDate as string\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!dontScrollToBottom) scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (fetchMsgs) {\r\n      fetchMessages();\r\n      if (isSocketConnected) clientSocket?.emit(\"join_chat\", selectedChat?._id);\r\n    }\r\n  }, [fetchMsgs]);\r\n\r\n  const openViewProfileDialog: ClickEventHandler = (e) => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<ViewProfileBody />);\r\n    dispatch(displayDialog({ title: \"View Profile\" }));\r\n  };\r\n\r\n  const openViewProfileDialogWithProps = (props: ProfileData) => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<ViewProfileBody {...props} />);\r\n    dispatch(displayDialog({ title: \"View Profile\" }));\r\n  };\r\n\r\n  const openGroupInfoDialog: ClickEventHandler = (e) => {\r\n    // Open group info dialog\r\n    dispatch(setGroupInfo(selectedChat));\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<GroupInfoBody messages={messages} />);\r\n    dispatch(displayDialog({ title: \"Group Info\" }));\r\n  };\r\n\r\n  // Open delete msg confirm dialog\r\n  const openDeleteMsgConfirmDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<>Are you sure you want to delete this message?</>);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Delete Message\",\r\n        nolabel: \"NO\",\r\n        yeslabel: \"YES\",\r\n        loadingYeslabel: \"Deleting...\",\r\n        action: deleteMessage,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (msgContent?.current) msgContent.current.innerHTML = \"\";\r\n  }, [selectedChat]);\r\n\r\n  const openMsgOptionsMenu: ClickEventHandler = (e) => {\r\n    if (sending) return;\r\n    setMsgOptionsMenuAnchor(e.target as SetStateAction<HTMLElement | null>);\r\n  };\r\n\r\n  const onDiscardFileClick: ClickEventHandler = (e) => {\r\n    const { dataset } = e.target as HTMLElement;\r\n    const parentDataset = ((e.target as HTMLElement).parentNode as HTMLElement)\r\n      .dataset;\r\n    const discardFileClicked = dataset.discardFile || parentDataset.discardFile;\r\n    if (discardFileClicked) discardAttachment();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`chatpageDiv chatpageView messagesView col text-light mx-0 mx-md-1 ${\r\n        selectedChat ? \"d-flex\" : \"d-none d-md-flex\"\r\n      } flex-column p-2 user-select-none`}\r\n    >\r\n      {selectedChat ? (\r\n        <>\r\n          <MsgsHeader\r\n            closeChat={closeChat}\r\n            openGroupInfoDialog={openGroupInfoDialog}\r\n            openViewProfileDialog={openViewProfileDialog}\r\n            hideEmojiPicker={hideEmojiPicker}\r\n            CustomTooltip={CustomTooltip}\r\n          />\r\n          <section\r\n            className={`messagesBody position-relative ${\r\n              downloadingFileId || loadingMediaId ? \"pe-none\" : \"pe-auto\"\r\n            } d-flex flex-column m-1 p-2`}\r\n            onClick={onDiscardFileClick}\r\n          >\r\n            {/* Messages list */}\r\n            <div className=\"messages rounded-3 d-flex flex-column\">\r\n              <div\r\n                // Event delegation\r\n                onClick={msgsClickHandler}\r\n                onKeyDown={msgKeydownHandler}\r\n                className={`msgArea overflow-auto ${\r\n                  fileAttached && !msgEditMode ? \"d-none\" : \"d-flex\"\r\n                } flex-column-reverse`}\r\n              >\r\n                <div className=\"msgListBottom\" ref={msgListBottom}></div>\r\n                {loadingMsgs && !sending ? (\r\n                  <LoadingMsgs count={8} />\r\n                ) : (\r\n                  messages.map(\r\n                    (m: MessageType, i: number, msgs: MessageType[]) => (\r\n                      <Message\r\n                        downloadingFileId={downloadingFileId}\r\n                        loadingMediaId={loadingMediaId}\r\n                        msgEditMode={msgEditMode}\r\n                        clickedMsgId={clickedMsgId}\r\n                        msgFileRemoved={isMsgFileRemoved === \"true\"}\r\n                        attachmentData={attachmentData}\r\n                        ref={editableMsgContent as React.Ref<HTMLSpanElement>}\r\n                        CustomTooltip={CustomTooltip}\r\n                        key={m?._id}\r\n                        msgSent={m?.sent as boolean}\r\n                        currMsg={m}\r\n                        prevMsg={i < msgs.length - 1 ? msgs[i + 1] : null}\r\n                      />\r\n                    )\r\n                  )\r\n                )}\r\n              </div>\r\n            </div>\r\n            {/* Edit/Delete Message menu */}\r\n            <MsgOptionsMenu\r\n              anchor={msgOptionsMenuAnchor as HTMLElement}\r\n              setAnchor={setMsgOptionsMenuAnchor}\r\n              editMsgHandler={editMsgHandler}\r\n              openDeleteMsgConfirmDialog={openDeleteMsgConfirmDialog}\r\n            />\r\n            {fileAttached && !msgEditMode && (\r\n              <AttachmentPreview\r\n                isEditMode={false}\r\n                attachmentData={attachmentData}\r\n                CustomTooltip={CustomTooltip}\r\n              />\r\n            )}\r\n            {/* Typing indicator */}\r\n            <span className={`${typingChatUser ? \"d-inline-block\" : \"d-none\"}`}>\r\n              <TypingIndicator\r\n                typingChatUser={typingChatUser}\r\n                showAvatar={true}\r\n              />\r\n            </span>\r\n            {/* New Message Input */}\r\n            <div\r\n              className={`msgInputDiv d-flex position-absolute ${\r\n                msgEditMode || sending ? \"pe-none\" : \"pe-auto\"\r\n              }`}\r\n            >\r\n              <span\r\n                className={`d-flex attachFile ${disableIfLoading} pointer bg-dark`}\r\n              >\r\n                <IconButton\r\n                  onClick={onEmojiIconClick}\r\n                  className={`d-flex ms-2 me-1 my-1`}\r\n                  sx={iconStyles}\r\n                >\r\n                  <EmojiEmotions style={{ fontSize: 28 }} />\r\n                </IconButton>\r\n                <CustomTooltip title=\"Attach File\" placement=\"top-start\" arrow>\r\n                  <IconButton\r\n                    onClick={selectAttachment}\r\n                    className={`d-flex my-2`}\r\n                    sx={{ ...iconStyles, transform: \"rotateZ(45deg)\" }}\r\n                  >\r\n                    <AttachFile style={{ fontSize: 22 }} />\r\n                  </IconButton>\r\n                </CustomTooltip>\r\n                {/* Emoji Picker */}\r\n                {showEmojiPicker && (\r\n                  <span className=\"emojiPicker position-absolute start-0\">\r\n                    <EmojiPicker\r\n                      onEmojiClick={onEmojiClick}\r\n                      disableAutoFocus={true}\r\n                      native={true}\r\n                      // searchPlaceholder={\"Search an emoji...\"}\r\n                    />\r\n                  </span>\r\n                )}\r\n                {/* Attachment File input */}\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"*\"\r\n                  onChange={handleMsgFileInputChange}\r\n                  name=\"attachment\"\r\n                  id=\"attachMsgFile\"\r\n                  ref={msgFileInput}\r\n                  className={`d-none`}\r\n                  disabled={loadingMsgs}\r\n                />\r\n              </span>\r\n              {/* Content/text input */}\r\n              <div\r\n                onFocus={onInputFocus}\r\n                onBlur={onInputBlur}\r\n                onInput={msgInputHandler}\r\n                onKeyDown={msgKeydownHandler}\r\n                onClick={hideEmojiPicker}\r\n                ref={msgContent}\r\n                className={`msgInput ${\r\n                  fileAttached && !msgEditMode ? \"addCaption\" : \"\"\r\n                } w-100 text-start d-flex bg-dark px-2 justify-content-start`}\r\n                contentEditable={true}\r\n                style={{\r\n                  borderRadius:\r\n                    enableMsgSend || (fileAttached && !msgEditMode)\r\n                      ? \"0px\"\r\n                      : \"0px 7px 7px 0px\",\r\n                }}\r\n              ></div>\r\n              {/* Send button */}\r\n              {enableMsgSend || (fileAttached && !msgEditMode) ? (\r\n                <span\r\n                  className={`d-inline-block btn btn-dark btn-sm sendButton ${disableIfLoading} pointer`}\r\n                  onClick={sendMessage}\r\n                >\r\n                  <IconButton\r\n                    className={`d-flex my-1 mx-0 mx-md-0`}\r\n                    sx={{ margin: \"4px 0px\", padding: \"5px\", color: \"#999999\" }}\r\n                  >\r\n                    <Send style={{ fontSize: 20 }} />\r\n                  </IconButton>\r\n                </span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n          </section>\r\n        </>\r\n      ) : (\r\n        <WelcomeBanner isNewUser={isNewUser} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesView;\r\n","import { useEffect, useState } from \"react\";\r\nimport { NavigateFunction, useNavigate } from \"react-router-dom\";\r\nimport ChatpageHeader from \"../components/ChatpageHeader\";\r\nimport CustomDialog from \"../components/utils/CustomDialog\";\r\nimport ChatListView from \"../components/ChatListView\";\r\nimport MessagesView from \"../components/MessagesView\";\r\nimport { displayToast } from \"../store/slices/ToastSlice\";\r\nimport {\r\n  selectAppState,\r\n  setDeleteNotifsOfChat,\r\n  setGroupInfo,\r\n  setLoggedInUser,\r\n  setSelectedChat,\r\n  toggleRefresh,\r\n} from \"../store/slices/AppSlice\";\r\nimport {\r\n  hideDialog,\r\n  selectCustomDialogState,\r\n} from \"../store/slices/CustomDialogSlice\";\r\nimport { getAxiosConfig, truncateString } from \"../utils/appUtils\";\r\nimport axios from \"../utils/axios\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/storeHooks\";\r\nimport { ChatType, MessageType, ToastData, UserType } from \"../utils/AppTypes\";\r\nimport { AxiosRequestConfig } from \"axios\";\r\n\r\nconst ChatsPage = () => {\r\n  const {\r\n    loggedInUser,\r\n    deleteNotifsOfChat,\r\n    clientSocket,\r\n    selectedChat,\r\n    isSocketConnected,\r\n  } = useAppSelector(selectAppState);\r\n  const { dialogData, showDialogActions } = useAppSelector(\r\n    selectCustomDialogState\r\n  );\r\n  const dispatch = useAppDispatch();\r\n  const navigate: NavigateFunction = useNavigate();\r\n  const [loadingMsgs, setLoadingMsgs] = useState<boolean>(false);\r\n  const [dialogBody, setDialogBody] = useState<React.ReactNode>(<></>);\r\n  const [chats, setChats] = useState<ChatType[]>([]);\r\n  const [typingChatUsers, setTypingChatUsers] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    // localStorage persists data even after page refresh, unlike state\r\n    const user = JSON.parse(localStorage.getItem(\"loggedInUser\") as string);\r\n    if (!user) {\r\n      navigate(\"/\");\r\n      return;\r\n    }\r\n\r\n    if (Date.now() >= parseInt(user.expiryTime)) {\r\n      navigate(\"/\");\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Session Expired\",\r\n          message: \"Please Login Again\",\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        } as ToastData)\r\n      );\r\n      return;\r\n    }\r\n\r\n    dispatch(setLoggedInUser(user));\r\n    dispatch(hideDialog());\r\n    dispatch(setSelectedChat(null));\r\n  }, []);\r\n\r\n  const getTypingUserName = (typingUser: UserType) =>\r\n    truncateString(typingUser?.name?.toString().split(\" \")[0], 12, 9) || \" \";\r\n\r\n  const getTypingChatId = (chatUser: string) =>\r\n    chatUser?.toString().split(\"---\")[0];\r\n\r\n  const displayInfo = (message = \"Operation Executed\") => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"info\",\r\n        duration: 5000,\r\n        position: \"bottom-center\",\r\n      } as ToastData)\r\n    );\r\n  };\r\n\r\n  const groupSocketEventHandlers = () => {\r\n    clientSocket\r\n      .off(\"display_updated_grp\")\r\n      .on(\r\n        \"display_updated_grp\",\r\n        (updatedGroupData: {\r\n          updatedGroup: ChatType;\r\n          createdAdmin: UserType;\r\n          dismissedAdmin: UserType;\r\n        }) => {\r\n          const { updatedGroup, createdAdmin, dismissedAdmin } =\r\n            updatedGroupData;\r\n          dispatch(toggleRefresh());\r\n          if (!updatedGroup) return;\r\n          const { _id, chatName, removedUser } = updatedGroup;\r\n          const isLoggedInUserRemoved = removedUser?._id === loggedInUser?._id;\r\n          const isGroupInfoDialogOpen =\r\n            dialogData.isOpen && dialogData.title === \"Group Info\";\r\n\r\n          if (selectedChat?._id === _id) {\r\n            let groupData = updatedGroup as ChatType;\r\n            if (isLoggedInUserRemoved) {\r\n              dispatch(hideDialog());\r\n              groupData = null;\r\n            }\r\n            dispatch(setSelectedChat(groupData));\r\n            dispatch(setGroupInfo(groupData as ChatType));\r\n            if (\r\n              isGroupInfoDialogOpen &&\r\n              createdAdmin?._id === loggedInUser?._id\r\n            ) {\r\n              displayInfo(`You are now an Admin of '${chatName}' group`);\r\n            }\r\n            if (\r\n              isGroupInfoDialogOpen &&\r\n              dismissedAdmin?._id === loggedInUser?._id\r\n            ) {\r\n              displayInfo(`You are no longer an Admin of '${chatName}' group`);\r\n            }\r\n          }\r\n          if (isLoggedInUserRemoved) {\r\n            displayInfo(`You have been removed from '${chatName}' group`);\r\n          }\r\n        }\r\n      );\r\n\r\n    clientSocket\r\n      .off(\"remove_deleted_grp\")\r\n      .on(\"remove_deleted_grp\", (deletedGroup: ChatType) => {\r\n        dispatch(toggleRefresh());\r\n        if (!deletedGroup) return;\r\n        if (selectedChat?._id === deletedGroup?._id) {\r\n          dispatch(hideDialog());\r\n          dispatch(setSelectedChat(null));\r\n          dispatch(setGroupInfo(null));\r\n        }\r\n        displayInfo(`'${deletedGroup.chatName}' Group Deleted by Admin`);\r\n      });\r\n\r\n    clientSocket.off(\"display_new_grp\").on(\"display_new_grp\", () => {\r\n      dispatch(toggleRefresh());\r\n    });\r\n  };\r\n\r\n  const typingSocketEventHandler = () => {\r\n    clientSocket\r\n      .off(\"display_typing\")\r\n      .on(\"display_typing\", (chat: ChatType, typingUser: UserType) => {\r\n        if (!chat || !typingUser) return;\r\n        setTypingChatUsers([\r\n          ...typingChatUsers,\r\n          `${chat._id}---${getTypingUserName(typingUser)}---${\r\n            typingUser.profilePic\r\n          }---${chat.isGroupChat}`,\r\n        ]);\r\n      });\r\n\r\n    clientSocket\r\n      .off(\"hide_typing\")\r\n      .on(\"hide_typing\", (chat: ChatType, typingUser: UserType) => {\r\n        if (!chat || !typingUser) return;\r\n        setTypingChatUsers(\r\n          typingChatUsers.filter(\r\n            (chatUser) =>\r\n              chatUser !==\r\n              `${chat._id}---${getTypingUserName(typingUser)}---${\r\n                typingUser.profilePic\r\n              }---${chat.isGroupChat}`\r\n          )\r\n        );\r\n      });\r\n  };\r\n\r\n  // Listening to socket events\r\n  useEffect(() => {\r\n    if (!clientSocket || !isSocketConnected) return;\r\n    groupSocketEventHandlers();\r\n    typingSocketEventHandler();\r\n  });\r\n\r\n  const deletePersistedNotifs = async (notifsToBeDeleted: string[]) => {\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      await axios.put(\r\n        `/api/user/delete/notifications`,\r\n        { notificationIds: JSON.stringify(notifsToBeDeleted) },\r\n        config as AxiosRequestConfig\r\n      );\r\n    } catch (error) {\r\n      console.log(\"Couldn't Delete Notifications : \", (error as Error).message);\r\n    }\r\n  };\r\n\r\n  const deleteNotifications = (clickedChatId: string) => {\r\n    // Delete notifs from global state and localStorage\r\n    const notifs = [...(loggedInUser?.notifications as MessageType[])];\r\n    const notifsToBeDeleted = [];\r\n    if (!notifs) return;\r\n    for (let i = 0; i < notifs.length; ++i) {\r\n      if ((notifs[i]?.chat as ChatType)?._id === clickedChatId) {\r\n        const deletedNotif = notifs.splice(i, 1)[0];\r\n        notifsToBeDeleted.push(deletedNotif?._id);\r\n        // After deleting element at 'i', next element (i+1) shifts back\r\n        // to 'i' index\r\n        --i;\r\n      }\r\n    }\r\n    const updatedUser = { ...loggedInUser, notifications: notifs };\r\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\r\n    dispatch(setLoggedInUser(updatedUser as UserType));\r\n\r\n    // Delete notifs that were persisted in mongodb\r\n    deletePersistedNotifs(notifsToBeDeleted as string[]);\r\n    dispatch(setDeleteNotifsOfChat(\"\"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!deleteNotifsOfChat) return;\r\n    deleteNotifications(deleteNotifsOfChat);\r\n  }, [deleteNotifsOfChat]);\r\n\r\n  return (\r\n    <>\r\n      {loggedInUser && (\r\n        <div className={`chatpage`}>\r\n          {/* Header component */}\r\n          <ChatpageHeader chats={chats} setDialogBody={setDialogBody} />\r\n\r\n          <section className={`row g-1`}>\r\n            {/* Chat List component */}\r\n            <ChatListView\r\n              chats={chats}\r\n              setChats={setChats}\r\n              loadingMsgs={loadingMsgs}\r\n              setDialogBody={setDialogBody}\r\n              typingChatUsers={typingChatUsers}\r\n            />\r\n\r\n            {/* Chat Messages component */}\r\n            <MessagesView\r\n              loadingMsgs={loadingMsgs}\r\n              setLoadingMsgs={setLoadingMsgs}\r\n              setDialogBody={setDialogBody}\r\n              deletePersistedNotifs={deletePersistedNotifs}\r\n              isNewUser={chats?.length === 0}\r\n              typingChatUser={\r\n                typingChatUsers.find(\r\n                  (u) => getTypingChatId(u) === selectedChat?._id\r\n                ) as string\r\n              }\r\n            />\r\n          </section>\r\n\r\n          {/* App Parent Dialog */}\r\n          <CustomDialog\r\n            dialogData={dialogData}\r\n            showDialogActions={showDialogActions}\r\n            showDialogClose={true}\r\n          >\r\n            {dialogBody}\r\n          </CustomDialog>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatsPage;\r\n"],"names":["menuPaperProps","elevation","sx","overflow","maxHeight","filter","borderRadius","backgroundColor","mt","menuItemProps","color","fontSize","menuIconProps","children","open","menuAnchor","setMenuAnchor","transformOrigin","anchorOrigin","closeMenu","anchorEl","onClose","onClick","PaperProps","style","marginBottom","chats","anchor","setAnchor","loggedInUser","useSelector","selectAppState","dispatch","useDispatch","notifs","notifications","notifGroups","forEach","notif","notifChat","chat","chatId","_id","chatName","isGroupChat","getOneToOneChatReceiver","users","name","notifGroupId","Boolean","vertical","horizontal","Object","keys","length","e","chatNotifId","target","dataset","notifGroup","parentNode","split","chatToBeOpened","find","setSelectedChat","setFetchMsgs","setDeleteNotifsOfChat","setGroupInfo","map","fromGroup","includes","notifCount","MenuItem","title","className","truncateString","getUpdatedState","useAppSelector","selectFormfieldState","loading","disableIfLoading","formLabelClassName","formFieldClassName","inputFieldClassName","useState","showPassword","setShowPassword","currentPassword","newPassword","confirmNewPassword","changePasswordData","setChangePasswordData","handleChangeFor","prop","value","useEffect","onEnterKeyDown","key","submitUpdatedPassword","htmlFor","type","onChange","onKeyDown","required","autoFocus","id","disabled","placeholder","PasswordVisibilityToggle","originalName","getUpdatedName","setName","width","submitUpdatedName","selectProfilePic","openDeletePhotoConfirmDialog","deletePhotoCondition","ListItemIcon","Upload","Delete","arrowStyles","tooltipStyles","styled","placement","arrow","Tooltip","classes","popper","theme","tooltipClasses","btnHoverStyle","btnCustomStyle","fontFamily","dialogData","showDialogActions","showDialogClose","closeDialog","useAppDispatch","navigate","useNavigate","isFullScreen","isOpen","nolabel","yeslabel","loadingYeslabel","action","handleDialogClose","hideDialog","handleYes","result","Dialog","fullScreen","backgroundImage","DialogTitle","fontWeight","marginTop","marginRight","IconButton","position","right","top","Close","DialogContent","DialogActions","Button","KeyboardDoubleArrowLeft","margin","CircularProgress","size","KeyboardDoubleArrowRight","marginLeft","showChildDialogActions","showChildDialogClose","childDialogData","setChildDialogData","childDialogBody","setChildDialogBody","displayChildDialog","options","closeChildDialog","setChildDialogMethods","CustomTooltip","getCustomTooltip","maxWidth","padding","border","childDialogMethods","selectChildDialogState","profilePicUrl","profilePic","email","profileData","setProfileData","editProfilePicMenuAnchor","setEditProfilePicMenuAnchor","editedName","displayWarning","message","duration","displayToast","displayError","error","response","data","displaySuccess","uploading","setUploading","imgInput","useRef","isGuestUser","persistUpdatedUser","updatedUser","localStorage","setItem","JSON","stringify","setLoggedInUser","clickOnKeydown","click","handleImgInputChange","files","imageFile","isImageFile","TWO_MB","current","setLoading","config","getAxiosConfig","formData","FormData","append","cloudinary_id","axios","token","expiryTime","deleteProfilePic","currentProfilePic","updatedValue","updateProfileName","enterKeyPressed","newUserName","src","alt","tabIndex","Edit","endsWith","accept","ref","wordWrap","truncateWords","editPasswordData","setDialogBody","updatedState","updatePassword","removeItem","logout","setShowDialogActions","displayDialog","Person","ManageAccounts","Key","Logout","user","truncateValues","max","index","Avatar","listOf","dpRadius","count","skeletonStyle","Array","i","Skeleton","variant","height","forwardRef","props","inputRef","searchHandler","clearInput","typing","setTyping","Search","trim","replace","cursor","focus","Clear","isDrawerOpen","setIsDrawerOpen","searchQuery","setSearchQuery","searchResults","setSearchResults","searchUserInput","handleClose","searchUsers","debounce","query","createOrRetrieveChat","userId","Drawer","borderTopRightRadius","borderBottomRightRadius","transitionDuration","ChevronLeft","overflowY","overflowX","appGif","animateNotif","setAnimateNotif","notificationsMenuAnchor","setNotificationsMenuAnchor","profileSettingsMenuAnchor","setProfileSettingsMenuAnchor","timeout","setTimeout","clearTimeout","LottieAnimation","animationData","Notifications","groupInfo","clientSocket","isSocketConnected","chatDisplayPicUrl","editGroupDpMenuAnchor","setEditGroupDpMenuAnchor","createGroupChat","chatDisplayPic","emit","admin","newGroup","toggleRefresh","preventDefault","process","URL","createObjectURL","getAddedMembers","forCreateGroup","groupData","setGroupData","fetching","setFetching","groupMembers","isMemberSelected","setIsMemberSelected","addedMembers","setAddedMembers","setShowDialogClose","openNewGroupDialog","setDialogAction","membersNotAdded","addedMember","m","flex","Chip","avatar","label","onDelete","u","unselectUser","selectedUser","typingChatUser","showAvatar","typingGif","typingUserData","toString","typingUserName","bottom","typingAnimData","chatNotifCount","selectedChat","lastMsgFileType","receiverEmail","lastMessage","tooltipTitle","lastMsgContent","content","replaceAll","lastMsgDate","Date","createdAt","lastMsgDateString","msgDateStringOf","lastMsgFileUrl","fileUrl","fileContents","file_name","lastMsgFileName","lastMsgData","fileType","test","startsWith","msgTimeStringOf","dateStringOf","sender","DoneAll","Image","GifBox","VideoFile","AudioFile","PictureAsPdf","Description","FILE_STYLES","event","audioSrc","videoSrc","autoPlay","controls","objectFit","iconWrapperStyles","GroupAdd","setChats","loadingMsgs","typingChatUsers","refresh","filteredChats","setFilteredChats","searchChatInput","fetchChats","mappedChats","receiver","undefined","searchChats","chatNameInput","toLowerCase","parentDataset","clickedChatId","hasNotifs","displayFullSizeImage","clickedChat","memberProfilePic","memberName","memberEmail","isLoggedInUser","isGroupAdmin","KeyboardArrowDown","clickedMember","isLoggedInUserGroupAdmin","groupAdmins","some","clickedMemberName","styledMemberName","updateView","openChat","makeGroupAdmin","updater","updatedGroup","createdAdmin","dismissAsAdmin","dismissedAdmin","removeFromGroup","userToBeRemoved","Message","InfoOutlined","AdminPanelSettings","GroupRemove","filteredMembersCache","admins","setClickedMember","memberOptionsMenuAnchor","setMemberOptionsMenuAnchor","member","every","setFilteredMembers","filterMemberInput","filteredMembers","filterMembers","memberNameInput","openMemberOptionsMenu","messages","groupDP","groupName","isUserGroupAdmin","btnClassName","updatedName","updateGroupName","enterKeyClicked","updateGroupDp","deleteGroupDp","currentDP","exitGroup","deleteGroup","deleteGroupPromise","deleteMessagesPromise","messageIds","isDeleteGroupRequest","Promise","resolve","all","deletedGroup","updatedMembers","addMembersToGroup","usersToBeAdded","lineHeight","PersonAdd","msgSent","isEditMode","fileEditIcons","downloadingFileId","loadingMediaId","isPreview","fileData","previewStyles","iconStyles","file_id","isMediaFile","mediaContents","mediaFileType","mediaFileSize","getFileSizeString","loadingGif","fileSize","parseInt","isDownloadingFile","substring","lastIndexOf","toUpperCase","attachmentHeader","zIndex","Downloading","Download","fileNameWrapper","fileInfo","hideWhileLoadingMedia","displayWhileLoadingMedia","isImageOrGifFile","PlayCircle","Videocam","PlayArrow","Audiotrack","attachmentData","attachment","attachmentPreviewUrl","FILE_WRAPPER_CLASS","ATTACHMENT_STYLE","editIconsWrapper","previewTitle","left","IconButtonSx","editableMsgRef","msgEditMode","clickedMsgId","msgFileRemoved","currMsg","prevMsg","senderData","isSameSender","currMsgDate","prevMsgDate","msgContentRef","currMsgId","isOtherDay","showCurrSender","setCaretPosition","innerHTML","transform","AttachFile","Done","msgId","outline","contentEditable","editMsgHandler","openDeleteMsgConfirmDialog","isNewUser","letsChatGif","letsChatAnimData","closeChat","openGroupInfoDialog","openViewProfileDialog","hideEmojiPicker","ArrowBack","msgFileAlreadyExists","currentlyTyping","preventStopTyping","setLoadingMsgs","deletePersistedNotifs","fetchMsgs","sending","setSending","isMsgFileRemoved","setIsMsgFileRemoved","enableMsgSend","setEnableMsgSend","fileAttached","setFileAttached","setMessages","setClickedMsgId","dontScrollToBottom","setDontScrollToBottom","setAttachmentData","msgListBottom","msgFileInput","msgContent","editableMsgContent","setDownloadingFileId","setLoadingMediaId","setMsgEditMode","msgOptionsMenuAnchor","setMsgOptionsMenuAnchor","resetMsgInput","discardAttachmentOnly","showEmojiPicker","setShowEmojiPicker","selectAttachment","discardAttachment","viewMedia","fileName","isAudio","loadMedia","fileId","blob","mediaSrc","Blob","downloadFile","link","document","createElement","href","setAttribute","body","appendChild","remove","fetchMessages","msg","updatingMsg","sendMessage","emitStopTyping","msgData","newMsgFile","isNonImageFile","dummyNewMsg","now","mediaDuration","toISOString","sent","apiUrl","deleteMessage","deletedMsgId","senderId","updateMessage","updatedMsgContent","msgDateString","parseInnerHTML","updatedMsgFile","updatedMsg","setClientSocket","io","transports","on","setSocketConnected","off","newMsg","reverse","deletedMsgData","n","getElementById","discardMsgDraft","scrollIntoView","msgInputHandler","isNonEmptyInput","msgKeydownHandler","shiftKey","msgDate","msgCreatedAt","scrollToBottom","openViewProfileDialogWithProps","openMsgOptionsMenu","discardFile","videoId","video","audioId","audio","download","updateEditedMsg","updateMsg","attachMsgFileClicked","attachMsgFile","removeMsgFileClicked","removeMsgFile","editMsgFileClicked","editMsgFile","discardDraftClicked","discardDraft","videoName","audioName","imageId","fileExists","msgs","querySelector","EmojiEmotions","onEmojiClick","emojiObject","emoji","disableAutoFocus","native","msgFile","FIVE_MB","mediaUrl","media","Audio","onloadedmetadata","minutes","Math","trunc","seconds","setMediaDuration","onFocus","onBlur","onInput","Send","deleteNotifsOfChat","selectCustomDialogState","dialogBody","setTypingChatUsers","parse","getItem","getTypingUserName","typingUser","displayInfo","updatedGroupData","removedUser","isLoggedInUserRemoved","isGroupInfoDialogOpen","chatUser","notifsToBeDeleted","notificationIds","console","log","deletedNotif","splice","push","deleteNotifications"],"sourceRoot":""}