{"version":3,"file":"static/js/738.739d46cc.chunk.js","mappings":"6SAEaA,EAAiB,CAC5BC,UAAW,EACXC,GAAI,CACFC,SAAU,OACVC,UAAW,IACXC,OAAQ,4CACRC,aAAc,EACdC,gBAAiB,UACjBC,GAAI,IAIKC,EAAgB,CAC3B,SAAU,CAAEF,gBAAiB,WAC7BG,MAAO,UACPC,SAAU,QAGCC,EAAgB,CAAEF,MAAO,aA2BtC,EAzBa,SAAC,GAMP,IALLG,EAKI,EALJA,SACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,aAEMC,EAAaC,QAAQL,GACrBM,EAAY,kBAAML,EAAc,OAEtC,OACE,SAAC,IAAD,CACEM,SAAUP,EACVQ,KAAMJ,EACNK,QAASH,EACTI,QAASJ,EACTK,WAAYzB,EACZgB,gBAAiBA,EACjBC,aAAcA,EAPhB,SASGJ,KCtCP,EAJqB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACtB,OAAO,iBAAMa,MAAO,CAAEC,aAAc,OAA7B,SAAuCd,K,wCCoIhD,EApH0B,SAAC,GAAgD,IAA9Ce,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAChDC,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAA7BF,aACFG,GAAWC,EAAAA,EAAAA,MACXC,GAAM,cAAOL,QAAP,IAAOA,OAAP,EAAOA,EAAcM,eAC3BC,EAAc,GAEpBF,EAAOG,SAAQ,SAACC,GAEd,IAAMC,EAAYD,EAAME,KAClBC,EAASF,EAAUG,IACnBC,EAAWJ,EAAUK,YAAV,kBACFL,EAAUI,WACrBE,EAAAA,EAAAA,IAAwBhB,EAAcU,EAAUO,OAAOC,KACrDC,EAAY,UAAMP,EAAN,cAAkBE,GAChCP,EAAYY,KACZZ,EAAYY,GAEdZ,EAAYY,GAAgB,KAIhC,IAAMC,EAAqB,mCAAG,WAAOC,GAAP,8EACtBC,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IADJ,kBAGpBwB,EAAAA,EAAAA,IAAA,iCAEJ,CAAEC,gBAAiBC,KAAKC,UAAUN,IAClCC,GANwB,sDAS1BM,QAAQC,IAAI,mCAAoC,KAAMC,SAT5B,wDAAH,sDA8C3B,OACE,SAAC,EAAD,CACEhD,WAAYgB,EACZf,cAAegB,EACff,gBAAiB,CAAE+C,SAAU,MAAOC,WAAY,SAChD/C,aAAc,CAAE8C,SAAU,SAAUC,WAAY,SAJlD,SAMGC,OAAOC,KAAK3B,GAAa4B,QACxB,gBAAK3C,QArBmB,SAAC4C,GAC7B,IAAMC,EACJD,EAAEE,OAAOC,QAAQC,YAAcJ,EAAEE,OAAOG,WAAWF,QAAQC,WAC7D,GAAKH,EAAL,CAEA,IAAMzB,EAASyB,EAAYK,MAAM,OAAO,GAClCC,EAAiB/C,EAAMgD,MAAK,SAACjC,GAAD,OAAUA,EAAKE,MAAQD,KACzDT,GAAS0C,EAAAA,EAAAA,IAAgBF,IACzB9C,GAAa,GA5Ba,SAACiD,GAG3B,IADA,IAAMzB,EAAoB,GACjB0B,EAAI,EAAGA,EAAI1C,EAAO8B,SAAUY,EACnC,GAAI1C,EAAO0C,GAAGpC,KAAKE,MAAQiC,EAAe,CACxC,IAAME,EAAe3C,EAAO4C,OAAOF,EAAG,GAAG,GACzC1B,EAAkB6B,KAAKF,EAAanC,OAGlCkC,EAGN,IAAMI,GAAW,kBAAQnD,GAAR,IAAsBM,cAAeD,IACtD+C,aAAaC,QAAQ,eAAgB3B,KAAKC,UAAUwB,IACpDhD,GAASmD,EAAAA,EAAAA,IAAgBH,IAGzB/B,EAAsBC,GAYtBkC,CAAoB3C,GACpB,OAAI+B,QAAJ,IAAIA,GAAAA,EAAgB5B,aAAaZ,GAASqD,EAAAA,EAAAA,IAAab,MAWnD,SACGV,OAAOC,KAAK3B,GAAakD,KAAI,SAACtC,GAC7B,IAAMuC,EAAYvC,EAAawC,SAAS,YAClCC,EAAarD,EAAYY,GAC3BL,EAAWK,EAAauB,MAAM,OAAO,GAEzC,OADA5B,EAAW4C,EAAY5C,EAAS4B,MAAM,OAAO,GAAK5B,GAEhD,SAAC+C,EAAA,EAAD,CAEE,mBAAkB1C,EAClBjD,GAAIO,EAHN,UAKE,UAAC,EAAD,qBACMmF,EADN,mBAC2BA,EAAa,EAAI,IAAM,GADlD,YAEIF,EAAY,KAAO,OAFvB,MAIE,iBACEI,MAAOhD,EACP,mBAAkBK,EAClB4C,UAAU,YAHZ,oBAKMC,EAAAA,EAAAA,IACFN,EAAY5C,EAAWA,EAAS4B,MAAM,KAAK,GAC3C,GACA,UAhBDvB,SAyBb,SAAC0C,EAAA,EAAD,CAAU3F,GAAIO,EAAd,UACE,SAAC,EAAD,oC,gFCKV,EA9H2B,SAAC,GAAyB,IAAvBwF,EAAsB,EAAtBA,gBAC5B,GAMIhE,EAAAA,EAAAA,IAAYiE,EAAAA,IALdC,EADF,EACEA,QACAC,EAFF,EAEEA,iBACAC,EAHF,EAGEA,mBACAC,EAJF,EAIEA,mBACAC,EALF,EAKEA,oBAGF,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoDF,EAAAA,EAAAA,UAAS,CAC3DG,gBAAiB,GACjBC,YAAa,GACbC,mBAAoB,KAHtB,eAAOC,EAAP,KAA2BC,EAA3B,KAMQJ,EACNG,EADMH,gBAAiBC,EACvBE,EADuBF,YAAaC,EACpCC,EADoCD,mBAGhCG,EAAkB,SAACC,GAAD,OAAU,SAAC7C,GACjC2C,GAAsB,kBAAKD,GAAN,cAA2BG,EAAO7C,EAAEE,OAAO4C,YAGlEC,EAAAA,EAAAA,YAAU,WAERlB,EAAgBa,KACf,CAACA,IAEJ,IAAMM,EAAiB,SAAChD,GACR,UAAVA,EAAEiD,KAEJpB,EAAgBa,EAAoB,CAAEQ,uBAAuB,KAIjE,OACE,iCAEE,qBACEvB,UAAS,sBAAiBO,EAAjB,kCADX,WAGE,mBAAOiB,QAAQ,mBAAmBxB,UAAS,UAAKM,GAAhD,+BACmB,iBAAMN,UAAU,WAAhB,mBAEnB,iBAAKA,UAAU,cAAf,WACE,kBACEyB,KAAMf,EAAe,OAAS,WAC9BS,MAAOP,EACPc,SAAUT,EAAgB,mBAC1BU,UAAWN,EACXO,UAAQ,EACRC,WAAS,EACT1E,KAAK,kBACL2E,GAAG,mBACH9B,UAAS,UAAKQ,EAAL,gBACTuB,SAAU3B,EACV4B,YAAY,2BAEd,SAACC,EAAA,EAAD,CACE5B,iBAAkBA,EAClBK,aAAcA,EACdC,gBAAiBA,WAKvB,qBACEX,UAAS,sBAAiBO,EAAjB,6BADX,WAGE,mBAAOiB,QAAQ,eAAexB,UAAS,UAAKM,GAA5C,2BACe,iBAAMN,UAAU,WAAhB,mBAEf,iBAAKA,UAAU,cAAf,WACE,kBACEyB,KAAMf,EAAe,OAAS,WAC9BS,MAAON,EACPa,SAAUT,EAAgB,eAC1BU,UAAWN,EACXO,UAAQ,EACRzE,KAAK,cACL2E,GAAG,eACH9B,UAAS,UAAKQ,EAAL,gBACTuB,SAAU3B,EACV4B,YAAY,4BAEd,SAACC,EAAA,EAAD,CACE5B,iBAAkBA,EAClBK,aAAcA,EACdC,gBAAiBA,WAKvB,qBACEX,UAAS,sBAAiBO,EAAjB,6BADX,WAGE,mBACEiB,QAAQ,uBACRxB,UAAS,UAAKM,GAFhB,mCAIuB,iBAAMN,UAAU,WAAhB,mBAEvB,iBAAKA,UAAU,cAAf,WACE,kBACEyB,KAAMf,EAAe,OAAS,WAC9BS,MAAOL,EACPY,SAAUT,EAAgB,sBAC1BU,UAAWN,EACXO,UAAQ,EACRzE,KAAK,qBACL2E,GAAG,uBACH9B,UAAS,UAAKQ,EAAL,gBACTuB,SAAU3B,EACV4B,YAAY,sBAEd,SAACC,EAAA,EAAD,CACE5B,iBAAkBA,EAClBK,aAAcA,EACdC,gBAAiBA,c,UCrF7B,EAlCqB,SAAC,GAAmD,IAAjDuB,EAAgD,EAAhDA,aAAcC,EAAkC,EAAlCA,eAAgBH,EAAkB,EAAlBA,YACpD,GACE9F,EAAAA,EAAAA,IAAYiE,EAAAA,IADNC,EAAR,EAAQA,QAASG,EAAjB,EAAiBA,mBAAoBC,EAArC,EAAqCA,oBAErC,GAAwBC,EAAAA,EAAAA,UAASyB,GAAjC,eAAO/E,EAAP,KAAaiF,EAAb,KAMA,OAJAhB,EAAAA,EAAAA,YAAU,WACRe,EAAehF,KACd,CAACA,KAGF,oBACE6C,UAAS,UAAKO,EAAL,YACT5E,MAAO,CAAE0G,MAAO,6BAFlB,UAIE,kBACEZ,KAAK,OACLN,MAAOhE,EACPuE,SAAU,SAACrD,GAAD,OAAO+D,EAAQ/D,EAAEE,OAAO4C,QAClCQ,UAAW,SAACtD,GACI,UAAVA,EAAEiD,KAEJa,EAAehF,EAAM,CAAEmF,mBAAmB,KAG9CnF,KAAK,WACL0E,WAAS,EACT7B,UAAS,UAAKQ,EAAL,SACTuB,SAAU3B,EACV4B,YAAaA,O,8BCKrB,EAhCoB,SAAC,GAMd,IALLjG,EAKI,EALJA,OACAC,EAII,EAJJA,UACAuG,EAGI,EAHJA,iBACAC,EAEI,EAFJA,6BACAC,EACI,EADJA,qBAEA,OACE,UAAC,EAAD,CACE1H,WAAYgB,EACZf,cAAegB,EACff,gBAAiB,CAAE+C,SAAU,MAAOC,WAAY,QAChD/C,aAAc,CAAE8C,SAAU,SAAUC,WAAY,SAJlD,WAME,UAAC6B,EAAA,EAAD,CAAU3F,GAAIO,EAAee,QAAS8G,EAAtC,WACE,SAACG,EAAA,EAAD,CAAcvI,GAAIU,EAAlB,UACE,SAAC8H,EAAA,EAAD,OAEF,SAAC,EAAD,8BAEDF,IACC,UAAC3C,EAAA,EAAD,CAAU3F,GAAIO,EAAee,QAAS+G,EAAtC,WACE,SAACE,EAAA,EAAD,CAAcvI,GAAIU,EAAlB,UACE,SAAC+H,EAAA,EAAD,OAEF,SAAC,EAAD,kC,wDCnBV,EARyB,SAACC,EAAaC,GAAd,OACvBC,EAAAA,EAAAA,KAAO,gBAAG/C,EAAH,EAAGA,UAAcgD,GAAjB,mBACL,SAACC,EAAA,GAAD,kBAAaD,GAAb,IAAoBE,OAAK,EAACC,QAAS,CAAEC,OAAQpD,QAD/C+C,EAEG,oBAAGM,MAAH,mCACMC,EAAAA,EAAAA,QADN,UACoCT,KADpC,sBAEMS,EAAAA,EAAAA,UAFN,UAEsCR,IAFtC,M,wGCeQS,GAAgB,CAAE,SAAU,CAAE/I,gBAAiB,cAC/CgJ,GAAiB,CAC5B5I,SAAU,GACVD,MAAO,UACP8I,WAAY,eACZlJ,aAAc,IA2JhB,GAxJqB,SAAC,GAMf,IALLO,EAKI,EALJA,SACA4I,EAII,EAJJA,WACAC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,YAEA,GAAsC3H,EAAAA,EAAAA,IAAYiE,EAAAA,IAA1CC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,iBACXjE,GAAWC,EAAAA,EAAAA,MACXyH,GAAWC,EAAAA,EAAAA,MAEfC,EAOEN,EAPFM,aACAC,EAMEP,EANFO,OACAlE,EAKE2D,EALF3D,MACAmE,EAIER,EAJFQ,QACAC,EAGET,EAHFS,SACAC,EAEEV,EAFFU,gBACAC,EACEX,EADFW,OAGIC,EAAoB,WACxB,GAAIT,EAAa,OAAOA,IACxBzH,GAASmI,EAAAA,GAAAA,QAGLC,EAAS,mCAAG,oGACKH,IADL,OAGH,oBAFPI,EADU,SAIH,mBAAXA,GACW,kBAAXA,EAEAH,IACoB,iBAAXG,GACTH,IAEAlI,GAASmI,EAAAA,GAAAA,QACW,eAAXE,GAAsC,eAAXA,IACpCH,IACAlI,GAAS0C,EAAAA,EAAAA,IAAgB,OACzBgF,EAAS,MAfK,2CAAH,qDAmBf,OACE,UAACY,EAAA,EAAD,CACEC,WAAYvJ,QAAQ4I,GACpBtI,WAAY,CACVvB,GAAI,CACFI,aAAc,EACdqK,gBAAiB,uCAGrB5E,UAAS,2BAAsBK,GAC/B9E,KAAM0I,EACNzI,QAAS8I,EAVX,WAYE,UAACO,GAAA,EAAD,CACElJ,MAAO,CACLf,SAAU,GACVD,MAAO,UACP8I,WAAY,eACZqB,WAAY,QALhB,WAQE,iBACE9E,UAAU,SACVD,MAAOA,EACPpE,MAAO,CAAEoJ,WAAY,EAAGC,YAAa,IAHvC,UAKG/E,EAAAA,EAAAA,IAAeF,EAAO,GAAI,MAE5B6D,IACC,SAACqB,EAAA,EAAD,CACExJ,QAAS6I,EACTvC,SAAU3B,EACVjG,GAAI,CACF+K,SAAU,WACVC,MAAO,EACPC,IAAK,EACLzK,MAAO,UACP,SAAU,CACRH,gBAAiB,cATvB,UAaE,SAAC6K,EAAA,EAAD,UAIN,SAACC,GAAA,EAAD,CACE3J,MAAO,CAAEf,SAAU,GAAID,MAAO,UAAW8I,WAAY,gBADvD,SAGG3I,IAAY,0BAEd6I,IACC,UAAC4B,GAAA,EAAD,YACE,SAACC,GAAA,EAAD,CACErL,GAAIoJ,GACJxB,SAAU3B,EACVzE,MAAO6H,GACP/H,QAAS6I,EAJX,SAMe,SAAZJ,GACC,6BACE,SAACuB,EAAA,EAAD,CACEzF,UAAU,gBACVrE,MAAO,CACL+J,OAAQ,qBAJd,UAUAxB,KAGJ,SAACsB,GAAA,EAAD,CACErL,GAAIoJ,GACJxB,SAAU3B,EACVzE,MAAO6H,GACP/H,QAAS+I,EAJX,SAMGpE,GAAwB,SAAb+D,GACV,iCACE,SAACwB,EAAA,EAAD,CAAkBC,KAAM,GAAIjK,MAAO,CAAEqJ,YAAa,OAClD,iBAAMrJ,MAAO,CAAEqJ,YAAa,IAA5B,SAAmCZ,QAGrC,8BACgB,SAAbD,GACC,oCAEE,SAAC0B,EAAA,EAAD,CACE7F,UAAU,gBACVrE,MAAO,CACLmK,WAAY,QAKlB3B,aC1HlB,GA3CoB,SAAC,GAGd,IAAD,IAFJ4B,uBAAAA,OAEI,aADJC,qBAAAA,OACI,SAEJ,GAA8CvF,EAAAA,EAAAA,UAAS,CACrDwD,QAAQ,EACRlE,MAAO,eACPmE,QAAS,KACTC,SAAU,MACVC,gBAAiB,cACjBC,OAAQ,eANV,eAAO4B,EAAP,KAAwBC,EAAxB,KAQA,GAA8CzF,EAAAA,EAAAA,WAAS,yBAAvD,eAAO0F,EAAP,KAAwBC,EAAxB,KACMhK,GAAWC,EAAAA,EAAAA,MACXgK,EAAqB,SAACC,GAAD,OACzBJ,GAAmB,kBAAKI,GAAN,IAAerC,QAAQ,MAErCsC,EAAmB,SAACC,GAAD,OACvBN,GAAmB,kBAAKM,GAAN,IAAYvC,QAAQ,MAYxC,OAVA7C,EAAAA,EAAAA,YAAU,WACRhF,GACEqK,EAAAA,EAAAA,IAAsB,CACpBL,mBAAAA,EACAC,mBAAAA,EACAE,iBAAAA,OAGH,CAACN,KAGF,SAAC,GAAD,CACEvC,WAAYuC,EACZpC,YAAa0C,EACb5C,kBAAmBoC,EACnBnC,gBAAiBoC,EAJnB,SAMGG,K,WCVDO,GAAgBC,EAVF,CAAEhM,MAAO,QACP,CACpBiM,SAAU,IACVjM,MAAO,OACP8I,WAAY,eACZ7I,SAAU,GACViM,QAAS,WACTC,OAAQ,iBACRtM,gBAAiB,SAsVnB,GAlVwB,WAAO,IAAD,EACpByB,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAA7BF,aACR,GAAsCC,EAAAA,EAAAA,IAAYiE,EAAAA,IAA1CC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,iBACT0G,GAAuB7K,EAAAA,EAAAA,IAAY8K,EAAAA,IAAnCD,mBACF3K,GAAWC,EAAAA,EAAAA,MACT+J,EACNW,EADMX,mBAAoBC,EAC1BU,EAD0BV,mBAAoBE,EAC9CQ,EAD8CR,iBAGhD,GAAsC9F,EAAAA,EAAAA,UAAS,CAC7CwG,cAAa,OAAEhL,QAAF,IAAEA,OAAF,EAAEA,EAAciL,WAC7B/J,KAAI,OAAElB,QAAF,IAAEA,OAAF,EAAEA,EAAckB,KACpBgK,MAAK,OAAElL,QAAF,IAAEA,OAAF,EAAEA,EAAckL,QAHvB,eAAOC,EAAP,KAAoBC,EAApB,KAKA,GACE5G,EAAAA,EAAAA,UAAS,MADX,eAAO6G,EAAP,KAAiCC,EAAjC,MAGAnG,EAAAA,EAAAA,YAAU,WACRiG,GAAe,kBACVD,GADS,IAEZH,cAAa,OAAEhL,QAAF,IAAEA,OAAF,EAAEA,EAAciL,WAC7B/J,KAAI,OAAElB,QAAF,IAAEA,OAAF,EAAEA,EAAckB,UAErB,CAAClB,IAEJ,IAuIIuL,EAvIEC,EAAiB,WAA2C,IAA1C1J,EAAyC,uDAA/B,UAAW2J,EAAoB,uDAAT,IACtDtL,GACEuL,EAAAA,GAAAA,IAAa,CACX5J,QAAAA,EACA0D,KAAM,UACNiG,SAAAA,EACAxC,SAAU,iBAKV0C,EAAe,WAGf,IAAD,IAFHC,EAEG,uDAFK,6BACR9H,EACG,uDADK,mBAER3D,GACEuL,EAAAA,GAAAA,IAAa,CACX5H,MAAAA,EACAhC,SAAS,UAAA8J,EAAMC,gBAAN,mBAAgBtB,YAAhB,eAAsBzI,UAAW8J,EAAM9J,QAChD0D,KAAM,QACNiG,SAAU,IACVxC,SAAU,iBAKV6C,EAAiB,WAAuC,IAAtChK,EAAqC,uDAA3B,uBAChC3B,GACEuL,EAAAA,GAAAA,IAAa,CACX5J,QAAAA,EACA0D,KAAM,UACNiG,SAAU,IACVxC,SAAU,oBAMhB,GAAkCzE,EAAAA,EAAAA,WAAS,GAA3C,eAAOuH,EAAP,KAAkBC,EAAlB,KAEQhB,EAA+BG,EAA/BH,cAAe9J,EAAgBiK,EAAhBjK,KAAMgK,EAAUC,EAAVD,MACvBe,GAAWC,EAAAA,EAAAA,UACXC,EAAsC,0BAAZ,OAAZnM,QAAY,IAAZA,OAAA,EAAAA,EAAckL,OAE5BkB,EAAqB,SAACjJ,GAE1BC,aAAaC,QAAQ,eAAgB3B,KAAKC,UAAUwB,IACpDhD,GAASmD,EAAAA,EAAAA,IAAgBH,KAIrBkJ,EAAiB,SAACjK,GACR,MAAVA,EAAEiD,KAAyB,UAAVjD,EAAEiD,KACrBjD,EAAEE,OAAOgK,SAKPC,EAAoB,mCAAG,WAAOnK,GAAP,kFACrBoK,EAAQpK,EAAEE,OAAOmK,MAAM,GADF,qDAItBC,EAAAA,EAAAA,IAAYF,EAAMtL,MAJI,yCAKlBf,GACLuL,EAAAA,GAAAA,IAAa,CACX5H,MAAO,qBACPhC,QAAS,sDACT0D,KAAM,UACNiG,SAAU,IACVxC,SAAU,oBAXW,YAgBvBuD,EAAM7C,MAAQgD,EAAAA,IAhBS,uBAiBzBV,EAASW,QAAQ1H,MAAQ,GAjBA,kBAkBlBsG,EAAe,2CAA4C,MAlBzC,cAoB3BrL,GAAS0M,EAAAA,EAAAA,KAAW,IACpBb,GAAa,GACP1K,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,EAAc8M,UAAU,KAElDA,EAAW,IAAIC,UACZC,OAAO,aAAcR,GAC9BM,EAASE,OAAO,oBAAhB,OAAqChN,QAArC,IAAqCA,OAArC,EAAqCA,EAAciL,YACnD6B,EAASE,OAAO,gBAAhB,OAAiChN,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAciN,eA3BpB,oBA8BFzL,EAAAA,EAAAA,IACrB,+BACAsL,EACAxL,GAjCuB,iBA8BjBiJ,EA9BiB,EA8BjBA,KAKRuB,EAAe,mCACf3L,GAAS0M,EAAAA,EAAAA,KAAW,IACpBb,GAAa,GACbI,GAAmB,kBACd7B,GADa,IAEhB2C,MAAOlN,EAAakN,MACpBC,WAAYnN,EAAamN,cAzCF,mDA4CzBxB,EAAa,EAAD,GAAQ,4BACpBxL,GAAS0M,EAAAA,EAAAA,KAAW,IACpBb,GAAa,GA9CY,2DAAH,sDAkDpBoB,EAAgB,mCAAG,+FACvBjN,GAAS0M,EAAAA,EAAAA,KAAW,IACdvL,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IAFT,kBAIEwB,EAAAA,EAAAA,IACrB,+BACA,CACE6L,kBAAiB,OAAErN,QAAF,IAAEA,OAAF,EAAEA,EAAciL,WACjCgC,cAAa,OAAEjN,QAAF,IAAEA,OAAF,EAAEA,EAAciN,eAE/B3L,GAVmB,uBAIbiJ,EAJa,EAIbA,KAQRuB,EAAe,mCACf3L,GAAS0M,EAAAA,EAAAA,KAAW,IACpBT,GAAmB,kBACd7B,GADa,IAEhB2C,MAAOlN,EAAakN,MACpBC,WAAYnN,EAAamN,cAjBN,kBAmBd,kBAnBc,kCAqBrBxB,EAAa,EAAD,GAAQ,8BACpBxL,GAAS0M,EAAAA,EAAAA,KAAW,IAtBC,0DAAH,qDA6BhB3G,EAAiB,SAACoH,EAAcjD,GACpCkB,EAAa+B,EACb,OAAIjD,QAAJ,IAAIA,GAAAA,EAAShE,mBACXkH,EAAkB,CAAEC,iBAAiB,KAGnCD,EAAiB,mCAAG,WAAOlD,GAAP,8EACnBkB,EADmB,yCACAC,EAAe,8BADf,cAGxBrL,GAAS0M,EAAAA,EAAAA,KAAW,IACdvL,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IAJR,kBAMCwB,EAAAA,EAAAA,IACrB,wBACA,CAAEiM,YAAalC,GACfjK,GAToB,mBAMdiJ,EANc,EAMdA,KAKRuB,EAAe,6BACf3L,GAAS0M,EAAAA,EAAAA,KAAW,IACpBT,GAAmB,kBACd7B,GADa,IAEhB2C,MAAOlN,EAAakN,MACpBC,WAAYnN,EAAamN,cAhBL,OAkBlB9C,QAlBkB,IAkBlBA,IAAAA,EAASmD,gBAlBS,iBAkBQlD,IAlBR,iDAmBV,kBAnBU,0DAqBtBqB,EAAa,EAAD,GAAQ,sBACpBxL,GAAS0M,EAAAA,EAAAA,KAAW,IAtBE,0DAAH,sDA4DvB,OACE,gCAEG1I,GAAW4H,GACV,iBAAKhI,UAAU,+DAAf,WACE,SAAC2F,EAAA,EAAD,CACEC,KAAM,GACNjK,MAAO,CAAE+J,OAAQ,WAAY/K,MAAO,gBAEtC,iBAAMgB,MAAO,CAAEC,aAAc,QAAUoE,UAAU,gBAAjD,SACG,2BAIL,qBAASA,UAAU,4CAAnB,WACE,gBACEA,UAAU,8EACV8B,GAAG,uBACH6H,IAAK1C,EACL2C,IAAI,gBAEJxB,IACA,SAAC,GAAD,CAAerI,MAAM,mBAAmB8J,UAAU,YAAY3G,OAAK,EAAnE,UACE,cACEpB,GAAG,iBACHgI,SAAU,EACVnI,UAAW2G,EACXtI,UAAS,qDAAgDK,EAAhD,gFACT5E,QAhCiB,SAAC4C,GAC9BkJ,EAA4BlJ,EAAEE,SA0BpB,UAOE,SAACwL,EAAA,EAAD,CAAM/J,UAAU,yBAKtB,SAAC,EAAD,CACEjE,OAAQuL,EACRtL,UAAWuL,EACXhF,iBAAkB,kBAAM2F,EAASW,QAAQN,SACzC/F,6BAtD2B,WACnC4D,GAAmB,qFACnBC,EAAmB,CACjBtG,MAAO,qBACPmE,QAAS,KACTC,SAAU,MACVC,gBAAiB,cACjBC,OAAQgF,KAgDF5G,uBACE,OAACxG,QAAD,IAACA,GAAD,UAACA,EAAciL,kBAAf,OAAC,EAA0B8C,SAAS,uBAGxC,kBACEvI,KAAK,OACLwI,OAAO,UACPvI,SAAU8G,EACVrL,KAAK,aACL2E,GAAG,iBACHoI,IAAKhC,EACLlI,UAAS,SACT+B,SAAU3B,QAKhB,oBAASJ,UAAS,+BAAlB,UACE,iBAAKA,UAAU,cAAcrE,MAAO,CAAEoJ,UAAW,SAAjD,WACE,SAAC,GAAD,CACEhF,OAAW,OAAJ5C,QAAI,IAAJA,OAAA,EAAAA,EAAMiB,QAAS,GAAKjB,EAAO,GAClC0M,UAAU,YACV3G,OAAK,EAHP,UAKE,gBACElD,UAAU,kCACVrE,MAAO,CAAEf,SAAU,OAAQuP,UAAW,aAFxC,UAIGlK,EAAAA,EAAAA,IAAe9C,EAAM,GAAI,SAG5BiL,IACA,SAAC,GAAD,CAAerI,MAAM,YAAY8J,UAAU,MAAM3G,OAAK,EAAtD,UACE,SAAC+B,EAAA,EAAD,CACE6E,SAAU,EACVnI,UAAW2G,EACX7M,QA7Ga,WACzB2K,GACE,SAAC,EAAD,CACElE,aAAY,OAAEjG,QAAF,IAAEA,OAAF,EAAEA,EAAckB,KAC5BgF,eAAgBA,EAChBH,YAAY,oBAGhBqE,EAAmB,CACjBtG,MAAO,YACPmE,QAAS,SACTC,SAAU,OACVC,gBAAiB,YACjBC,OAAQmF,KAiGErP,GAAI,CACF+K,SAAU,WACVC,OAAQ,EACRC,IAAK,EACL,SAAU,CAAE5K,gBAAiB,cARjC,UAWE,SAACuP,EAAA,EAAD,CAAM/J,UAAU,yBAO1B,oBACEA,UAAS,+BACTrE,MAAO,CAAEoJ,UAAW,SAFtB,UAIE,SAAC,GAAD,CACEhF,OAAY,OAALoH,QAAK,IAALA,OAAA,EAAAA,EAAO/I,QAAS,GAAK+I,EAAQ,GACpC0C,UAAU,SACV3G,OAAK,EAHP,UAKE,iBAAMlD,UAAU,KAAKrE,MAAO,CAAEhB,MAAO,aAArC,UACGsF,EAAAA,EAAAA,IAAekH,EAAO,GAAI,WAKjC,SAAC,GAAD,QC1KN,GA/K4B,SAAC,GAA0C,IAiCjEiD,EAjCyBrO,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,UAAWqO,EAAoB,EAApBA,cACxCpO,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAA7BF,aACFG,GAAWC,EAAAA,EAAAA,MACXyH,GAAWC,EAAAA,EAAAA,MAEXgE,EAAiB,WAGjB,IAFJhK,EAEG,uDAFO,uBACV2J,EACG,uDADQ,IAEXtL,GACEuL,EAAAA,GAAAA,IAAa,CACX5J,QAAAA,EACA0D,KAAM,UACNiG,SAAAA,EACAxC,SAAU,oBAKVuC,EAAiB,WAA0B,IAAzB1J,EAAwB,uDAAd,UAChC3B,GACEuL,EAAAA,GAAAA,IAAa,CACX5J,QAAAA,EACA0D,KAAM,UACNiG,SAAU,IACVxC,SAAU,iBAKVkD,EAAsC,0BAAZ,OAAZnM,QAAY,IAAZA,OAAA,EAAAA,EAAckL,OAK5BjH,EAAkB,SAACoK,EAAchE,GACrC8D,EAAmBE,EACnB,OAAIhE,QAAJ,IAAIA,GAAAA,EAAS/E,uBACXgJ,EAAe,CAAEd,iBAAiB,KAGhCc,EAAc,mCAAG,WAAOjE,GAAP,sFACb1F,GADa,EAEnBwJ,GADMxJ,gBAAiBC,EADJ,EACIA,YAAaC,EADjB,EACiBA,mBAGjCF,GAAoBC,GAAgBC,EAJpB,yCAKZ2G,EAAe,gCALH,UAOjB7G,IAAoBC,EAPH,yCAQZ4G,EAAe,mDARH,UAUjB5G,IAAgBC,EAVC,yCAWZ2G,EAAe,iDAXH,cAarBrL,GAAS0M,EAAAA,EAAAA,KAAW,IACdvL,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IAdX,mBAgBbwB,EAAAA,EAAAA,IACJ,4BACA,CAAEmD,gBAAAA,EAAiBC,YAAAA,GACnBtD,GAnBiB,WAqBnBwK,EACE,0EACA,KAGF3L,GAAS0M,EAAAA,EAAAA,KAAW,IACpBzJ,aAAamL,WAAW,gBACxBpO,GAASmD,EAAAA,EAAAA,IAAgB,OA5BN,OA6Bf+G,QA7Be,IA6BfA,IAAAA,EAASmD,gBA7BM,wBA8BjBrN,GAASmI,EAAAA,GAAAA,OACTnI,GAAS0C,EAAAA,EAAAA,IAAgB,OACzBgF,EAAS,KAhCQ,oDAmCZ,cAnCY,kCAqCnB1H,GACEuL,EAAAA,GAAAA,IAAa,CACX5H,MAAO,yBACPhC,SAAS,eAAM+J,gBAAN,mBAAgBtB,YAAhB,eAAsBzI,UAAW,KAAMA,QAChD0D,KAAM,QACNiG,SAAU,IACVxC,SAAU,gBAGd9I,GAAS0M,EAAAA,EAAAA,KAAW,IA9CD,0DAAH,sDAkDd2B,EAAS,WAWb,OAVApL,aAAamL,WAAW,gBACxBpO,GAASmD,EAAAA,EAAAA,IAAgB,OACzBnD,GACEuL,EAAAA,GAAAA,IAAa,CACX5J,QAAS,aACT0D,KAAM,UACNiG,SAAU,KACVxC,SAAU,mBAGP,cA0CT,OACE,UAAC,EAAD,CACEnK,WAAYgB,EACZf,cAAegB,EACff,gBAAiB,CAAE+C,SAAU,MAAOC,WAAY,SAChD/C,aAAc,CAAE8C,SAAU,SAAUC,WAAY,SAJlD,WAME,UAAC6B,EAAA,EAAD,CAAU3F,GAAIO,EAAee,QA/BH,WAC5BW,GAASsO,EAAAA,GAAAA,KAAqB,IAC9BL,GAAc,SAAC,GAAD,KACdjO,GACEuO,EAAAA,GAAAA,IAAc,CACZ5K,MAAOqI,EAAc,eAAiB,mBA0BxC,WACE,SAAC1F,EAAA,EAAD,CAAcvI,GAAIU,EAAlB,SACGuN,GAAc,SAACwC,EAAA,EAAD,KAAa,SAACC,EAAA,EAAD,OAE9B,UAAC,EAAD,WAAezC,EAAc,OAAS,OAAtC,kBAEAA,IACA,UAACtI,EAAA,EAAD,CAAU3F,GAAIO,EAAee,QA5BJ,WAC7BW,GAASsO,EAAAA,GAAAA,KAAqB,IAC9BL,GAAc,SAAC,EAAD,CAAoBnK,gBAAiBA,KACnD9D,GACEuO,EAAAA,GAAAA,IAAc,CACZ5K,MAAO,kBACPmE,QAAS,SACTC,SAAU,OACVC,gBAAiB,YACjBC,OAAQkG,MAmBR,WACE,SAAC7H,EAAA,EAAD,CAAcvI,GAAIU,EAAlB,UACE,SAACiQ,EAAA,EAAD,OAEF,SAAC,EAAD,kCAGJ,UAAChL,EAAA,EAAD,CAAU3F,GAAIO,EAAee,QA3DD,WAC9BW,GAASsO,EAAAA,GAAAA,KAAqB,IAC9BL,GAAc,qEACdjO,GACEuO,EAAAA,GAAAA,IAAc,CACZ5K,MAAO,sBACPmE,QAAS,KACTC,SAAU,MACVC,gBAAiB,iBACjBC,OAAQoG,MAkDV,WACE,SAAC/H,EAAA,EAAD,CAAcvI,GAAIU,EAAlB,UACE,SAACkQ,EAAA,EAAD,OAEF,SAAC,EAAD,4B,sBClLFrE,GAAgBC,EAVF,CAAEhM,MAAO,WACP,CACpBiM,SAAU,IACVjM,MAAO,OACP8I,WAAY,eACZ7I,SAAU,GACViM,QAAS,WACTtM,aAAc,EACdC,gBAAiB,YAyCnB,GArCqB,SAAC,GAA8B,IAA5BwQ,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,eACpBnO,EAAiCkO,EAAjClO,IAAKK,EAA4B6N,EAA5B7N,KAAMgK,EAAsB6D,EAAtB7D,MAAOD,EAAe8D,EAAf9D,WAC1B,UAAqB+D,EAArB,GAAOC,EAAP,KAAYC,EAAZ,KAEA,OACE,iBACE,YAAWrO,EACXkD,UAAS,wGAFX,WAIE,SAAC,GAAD,CACE,YAAWlD,EACXiD,MAAK,UAAK5C,EAAL,aAAcgK,EAAd,KACL0C,UAAU,YACV3G,OAAK,EAJP,UAME,SAACkI,EAAA,EAAD,CACEzB,IAAKzC,EACL0C,IAAK9M,EACL,YAAWA,EACXkD,UAAS,qCAGb,iBACE,YAAWlD,EACXkD,UAAU,yDAFZ,WAIE,cAAG,YAAWlD,EAAKkD,UAAU,sCAA7B,UACGC,EAAAA,EAAAA,IAAe9C,EAAM+N,EAAKC,MAE7B,cAAG,YAAWrO,EAAKkD,UAAU,qBAA7B,UACGC,EAAAA,EAAAA,IAAekH,EAAO+D,EAAKC,Y,WCjBtC,GA3BoB,SAAC,GAAiC,IAA/BE,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACjCC,EAAgB,CAAEhR,gBAAiB,QACzC,OACE,+BACG,OAAIiR,MAAMF,IAAQ7L,KAAI,SAACrB,EAAGW,GAAJ,OACrB,iBAAwCgB,UAAU,sBAAlD,WACE,SAAC0L,GAAA,EAAD,CACEC,QAAQ,WACR3L,UAAU,2BACVrE,OAAK,kBAAO6P,GAAP,IAAsBnJ,MAAOiJ,EAAUM,OAAQN,OAEtD,SAACI,GAAA,EAAD,CACEC,QAAQ,cACR3L,UAAU,qBACVrE,MAAO6P,KAET,SAACE,GAAA,EAAD,CACEC,QAAQ,cACR3L,UAAU,oBACVrE,MAAO6P,MAdX,uBAA0BH,EAASrM,U,WCyD3C,IA1DoB6M,EAAAA,EAAAA,aAAW,SAAC7I,EAAO8I,GACrC,IAAQC,EAAsD/I,EAAtD+I,cAAelK,EAAuCmB,EAAvCnB,UAAWG,EAA4BgB,EAA5BhB,YAAagK,EAAehJ,EAAfgJ,WAC/C,GACE9P,EAAAA,EAAAA,IAAYiE,EAAAA,IADNE,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,mBAAoBC,EAA9C,EAA8CA,oBAI9C,GAA4BC,EAAAA,EAAAA,WAAS,GAArC,eAAOwL,EAAP,KAAeC,EAAf,KAEA,OACE,oBAASlM,UAAS,UAAKO,EAAL,mBAAlB,UAEE,iBAAKP,UAAU,cAAf,WACE,iBACEA,UAAS,2BAAsBK,EAAtB,8EADX,UAGE,SAAC8L,EAAA,EAAD,CAAQnM,UAAU,OAAOrE,MAAO,CAAEoJ,UAAW,YAE/C,kBACEtD,KAAK,OACLyI,IAAK4B,EACLpK,SAAU,SAACrD,GACT6N,EAAU9Q,QAAQiD,EAAEE,OAAO4C,MAAMiL,SACjCL,EAAc1N,IAEhBwD,UAAWA,EACXG,YAAaA,EACbhC,UAAS,UAAKQ,EACX6L,QAAQ,cAAe,cACvBA,QAAQ,OAAQ,KAFV,+CAGT1Q,MAAO,CAAE2Q,OAAQ,OAAQ1R,SAAU,WAGrC,iBACEoF,UAAS,2BAAsBK,EAAtB,+FADX,UAGE,SAAC4E,EAAA,EAAD,CACExJ,QAAS,WACPqQ,EAASjD,QAAQ1H,MAAQ,GACzB+K,GAAU,GACVJ,EAASjD,QAAQ0D,QACjBP,KAEFhM,UAAS,UAAKiM,EAAS,iBAAmB,UAC1CtQ,MAAO,CACLkL,QAAS,kBACTnB,OAAQ,OACR/K,MAAO,WAETR,GAAI,CAAE,SAAU,CAAEK,gBAAiB,cAbrC,UAeE,SAACgS,GAAA,EAAD,CAAO7Q,MAAO,CAAEf,SAAU,sBCyHtC,GAjK0B,SAAC,GAAqD,IAAnDkB,EAAkD,EAAlDA,aAAc2Q,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,gBACvD,GAAsCjM,EAAAA,EAAAA,UAAS,IAA/C,eAAOkM,EAAP,KAAoBC,EAApB,KACA,GAA0CnM,EAAAA,EAAAA,UAAS,IAAnD,eAAOoM,EAAP,KAAsBC,EAAtB,KACQ7Q,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAA7BF,aACAmE,GAAYlE,EAAAA,EAAAA,IAAYiE,EAAAA,IAAxBC,QACFhE,GAAWC,EAAAA,EAAAA,MACX0Q,GAAkB5E,EAAAA,EAAAA,QAAO,OAE/B/G,EAAAA,EAAAA,YAAU,WACJqL,IACFK,EAAiB,IACjB1Q,GAAS0M,EAAAA,EAAAA,KAAW,IACpB8D,EAAe,OAEhB,CAACH,IAEJ,IAAMO,EAAc,kBAAMN,GAAgB,IAGpCO,GAAcC,EAAAA,EAAAA,IAAQ,mCAAC,WAAO7O,GAAP,wFACrB8O,EADqB,UACb9O,EAAEE,cADW,iBACb,EAAU4C,aADG,aACb,EAAiBiL,OAC/BQ,EAAeO,GACVA,EAHsB,yCAGRL,EAAiB,KAHT,cAK3B1Q,GAAS0M,EAAAA,EAAAA,KAAW,IACdvL,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IANL,kBAQFwB,EAAAA,EAAAA,IAAA,2BAA8B0P,GAAS5P,GARrC,gBAQjBiJ,EARiB,EAQjBA,KAERpK,GAAS0M,EAAAA,EAAAA,KAAW,IACpBgE,EAAiBtG,GAXQ,kDAazBpK,GACEuL,EAAAA,GAAAA,IAAa,CACX5H,MAAO,uBACPhC,SAAS,eAAM+J,gBAAN,mBAAgBtB,YAAhB,eAAsBzI,UAAW,KAAMA,QAChD0D,KAAM,QACNiG,SAAU,IACVxC,SAAU,iBAGd9I,GAAS0M,EAAAA,EAAAA,KAAW,IAtBK,0DAAD,sDAwBzB,KAGGsE,EAAoB,mCAAG,WAAOC,GAAP,sFAC3BL,IACA5Q,GAAS0M,EAAAA,EAAAA,KAAW,IACdvL,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IAHL,kBAKFwB,EAAAA,EAAAA,KAAA,YAAwB,CAAE4P,OAAAA,GAAU9P,GALlC,gBAKjBiJ,EALiB,EAKjBA,KAERpK,GAAS0M,EAAAA,EAAAA,KAAW,IACpB1M,GAAS0C,EAAAA,EAAAA,IAAgB0H,IACzB1K,GAAa,GATY,kDAWzBM,GACEuL,EAAAA,GAAAA,IAAa,CACX5H,MAAO,gCACPhC,SAAS,eAAM+J,gBAAN,mBAAgBtB,YAAhB,eAAsBzI,UAAW,KAAMA,QAChD0D,KAAM,QACNiG,SAAU,IACVxC,SAAU,mBAGd9I,GAAS0M,EAAAA,EAAAA,KAAW,IApBK,0DAAH,sDAwB1B,OACE,+BACE,UAACwE,GAAA,GAAD,CACE5R,WAAY,CACVvB,GAAI,CACFoT,qBAAsB,GACtBC,wBAAyB,GACzB5I,gBAAiB,kCACjBiC,QAAS,OACTxE,MAAO,UAGXtG,OAAO,OACPR,KAAMkR,EACNjR,QAASwR,EACTS,mBAAoB,IAbtB,WAeE,gBAAKzN,UAAU,gCAAf,UACE,kBACEA,UAAU,+CACVrE,MAAO,CAAEoJ,UAAW,EAAGnK,SAAU,IAFnC,0BAKE,SAACqK,EAAA,EAAD,CACExJ,QAASuR,EACT7S,GAAI,CACF+K,SAAU,WACVC,MAAO,EACPC,IAAK,EACLzK,MAAO,UACP,SAAU,CAAEH,gBAAiB,cAPjC,UAUE,SAACkT,GAAA,EAAD,CAAa1N,UAAU,2BAK7B,SAAC,GAAD,CACEkK,IAAK6C,EACLhB,cAAekB,EACfpL,WAAW,EACXG,YAAY,0BACZgK,WAAY,WACVY,EAAe,IACfE,EAAiB,IACjBC,EAAgBlE,QAAQ0D,YAI5B,oBACEvM,UAAU,oCACVrE,MAAO,CAAEgS,UAAW,OAAQC,UAAW,UAFzC,UAIE,gBAGEnS,QAAS,SAAC4C,GACR,IAAMgP,EAAShP,EAAEE,OAAOC,QAAQwM,MAAQ3M,EAAEE,OAAOqL,IAC5CyD,GACLD,EAAqBC,IANzB,SASGjN,GACC,SAAC,GAAD,CAAaiL,OAAO,OAAOC,SAAU,OAAQC,MAAO,IAClDsB,EAAczO,OAAS,EACzByO,EAAcnN,KAAI,SAACsL,GAAD,OAChB,SAAC,GAAD,CAEEA,KAAMA,EACNC,eAAgB,CAAC,GAAI,KAFhBD,EAAKlO,QAKZ6P,IAAgBvM,GAClB,eAAGJ,UAAU,wCAAb,oCAEE,iBAAMA,UAAU,YAAhB,UACGC,EAAAA,EAAAA,IAAe0M,EAAa,GAAI,MAHrC,QAQA,kC,sBCnJRjG,GAAgBC,EATF,CAAEhM,MAAO,QACP,CACpBiM,SAAU,IACVjM,MAAO,OACP8I,WAAY,eACZ7I,SAAU,GACViM,QAAS,WACTrM,gBAAiB,SA2InB,GAvIuB,SAAC,GAA4C,IAAD,EAAzCqB,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,aAAcuO,EAAoB,EAApBA,cACrCpO,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAA7BF,aACF4R,GAAS1F,EAAAA,EAAAA,UACTtI,GAAyB,OAAZ5D,QAAY,IAAZA,GAAA,UAAAA,EAAcM,qBAAd,eAA6B6B,SAAU,GAE1D,GAAwCqC,EAAAA,EAAAA,WAAS,GAAjD,eAAOqN,EAAP,KAAqBC,EAArB,KACA,GAA8DtN,EAAAA,EAAAA,UAAS,MAAvE,eAAOuN,EAAP,KAAgCC,EAAhC,KACA,GACExN,EAAAA,EAAAA,UAAS,MADX,eAAOyN,EAAP,KAAkCC,EAAlC,KAOA,GAAwC1N,EAAAA,EAAAA,WAAS,GAAjD,eAAOgM,EAAP,KAAqBC,EAArB,KAWA,OATAtL,EAAAA,EAAAA,YAAU,WACR,IAAI0M,EAAJ,CACAC,GAAgB,GAChB,IAAIK,EAAUC,YAAW,WACvBN,GAAgB,KACf,KACH,OAAO,kBAAMO,aAAaF,OACzB,CAACvO,KAGF,oBACEG,UAAS,iFADX,WAIE,SAAC,GAAD,CACED,MAAM,uCACN8J,UAAU,eACV3G,OAAK,EAHP,UAKE,oBACEvH,MAAO,CAAEpB,aAAc,QACvByF,UAAS,4CACTvE,QAAS,kBAAMiR,GAAgB,IAHjC,WAKE,SAACP,EAAA,EAAD,CAAQnM,UAAS,UACjB,iBAAMA,UAAS,+BAAf,gCAGJ,SAAC,GAAD,CACElE,aAAcA,EACd2Q,aAAcA,EACdC,gBAAiBA,KAInB,iBAAK1M,UAAS,yCAAd,WACE,SAACuO,GAAA,EAAD,CACErE,IAAK2D,EACL7N,UAAW,gDACXrE,MAAO,CAAE0G,MAAO,OAAQuJ,OAAQ,QAChC4C,cAAeA,MAEjB,iBAAM7S,MAAO,CAAEhB,MAAO,UAAYqF,UAAU,oBAA5C,4BAMF,4BACE,SAAC,GAAD,CAAeD,MAAK,gBAAmB8J,UAAU,aAAa3G,OAAK,EAAnE,UACE,UAAC+B,EAAA,EAAD,CACEjF,UAAU,yBACVvE,QA1DmB,SAAC4C,GAAD,OAAO4P,EAA2B5P,EAAEE,SA2DvDpE,GAAI,CACFQ,MAAO,UACP,SAAU,CAAEH,gBAAiB,cALjC,UAQGqF,IACC,iBACEG,UAAS,qBACP8N,EAAe,mBAAqB,GAD7B,sEAITnS,MAAO,CACLf,SAAUiF,EAAa,GAAK,GAAK,GACjCuF,KAAM,EACND,MAAOtF,EAAa,IAAM,GAAKA,EAAa,GAAK,GAAK,EACtDgH,QACEhH,EAAa,GACT,UACAA,EAAa,EACb,UACA,WAdV,SAiBIA,EAAkBA,EAAa,GAAK,MAAQA,EAA/B,MAGnB,SAAC4O,EAAA,EAAD,CAAezO,UAAS,qBAG5B,SAAC,GAAD,CACED,MAAM,mBACN6F,KAAK,QACLiE,UAAU,aACV3G,OAAK,EAJP,UAME,SAAC+B,EAAA,EAAD,CACEjF,UAAU,kBACV7F,GAAI,CACFQ,MAAO,UACP,SAAU,CAAEH,gBAAiB,cAE/BiB,QAnGsB,SAAC4C,GAAD,OAAO8P,EAA6B9P,EAAEE,SA6F9D,UAQE,SAAC6M,EAAA,EAAD,CACExB,IAAI,eACJ5J,UAAU,YACV2J,IAAG,OAAE1N,QAAF,IAAEA,OAAF,EAAEA,EAAciL,kBAIzB,SAAC,EAAD,CACErL,MAAOA,EACPC,aAAcA,EACdC,OAAQiS,EACRhS,UAAWiS,KAEb,SAAC,GAAD,CACElS,OAAQmS,EACRlS,UAAWmS,EACX9D,cAAeA,W,sBCxHnB3D,GAAgBC,EAVF,CAAEhM,MAAO,QACP,CACpBiM,SAAU,IACVjM,MAAO,OACP8I,WAAY,eACZ7I,SAAU,GACViM,QAAS,WACTC,OAAQ,iBACRtM,gBAAiB,SA2OnB,GAtOqB,SAAC,GAA0B,IAAxB+L,EAAuB,EAAvBA,iBACtB,GACErK,EAAAA,EAAAA,IAAYC,EAAAA,IADNF,EAAR,EAAQA,aAAcyS,EAAtB,EAAsBA,QAASC,EAA/B,EAA+BA,UAAWC,EAA1C,EAA0CA,aAAcC,EAAxD,EAAwDA,kBAExD,GAMI3S,EAAAA,EAAAA,IAAYiE,EAAAA,IALdC,EADF,EACEA,QACAC,EAFF,EAEEA,iBACAE,EAHF,EAGEA,mBACAC,EAJF,EAIEA,oBACAF,EALF,EAKEA,mBAEIlE,GAAWC,EAAAA,EAAAA,MAETyS,EAAgCH,EAAhCG,kBAAmB/R,EAAa4R,EAAb5R,SAC3B,GAA0D0D,EAAAA,EAAAA,UAAS,MAAnE,eAAOsO,EAAP,KAA8BC,EAA9B,KACM9G,GAAWC,EAAAA,EAAAA,UAOXV,EAAiB,WAA2C,IAA1C1J,EAAyC,uDAA/B,UAAW2J,EAAoB,uDAAT,IACtDtL,GACEuL,EAAAA,GAAAA,IAAa,CACX5J,QAAAA,EACA0D,KAAM,UACNiG,SAAAA,EACAxC,SAAU,iBAMV+J,EAAe,mCAAG,uGACjBN,EADiB,oDAEdO,EAAoCP,EAApCO,eAAgBnS,EAAoB4R,EAApB5R,SAAUG,EAAUyR,EAAVzR,MAE7BH,EAJiB,yCAIA0K,EAAe,8BAJf,aAMb,OAALvK,QAAK,IAALA,OAAA,EAAAA,EAAOkB,QAAS,GANE,yCAObqJ,EAAe,iCAPF,cAStBrL,GAAS0M,EAAAA,EAAAA,KAAW,IACdvL,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,EAAc8M,UAAU,IAVlC,UAYdA,EAAW,IAAIC,UACZC,OAAO,aAAciG,GAC9BnG,EAASE,OAAO,WAAYlM,GAC5BgM,EAASE,OAAO,QAAStL,KAAKC,UAAL,OAAeV,QAAf,IAAeA,OAAf,EAAeA,EAAOwC,KAAI,SAACsL,GAAD,cAAUA,QAAV,IAAUA,OAAV,EAAUA,EAAMlO,SAf/C,UAiBGW,EAAAA,EAAAA,KAAW,kBAAmBsL,EAAUxL,GAjB3C,iBAiBZiJ,EAjBY,EAiBZA,KACJqI,GACFD,EAAaO,KAAK,kBAAmB,CACnCC,MAAOnT,EACPoT,SAAU7I,IAGdpK,GACEuL,EAAAA,GAAAA,IAAa,CACX5J,QAAS,6BACT0D,KAAM,UACNiG,SAAU,IACVxC,SAAU,mBAId9I,GAAS0M,EAAAA,EAAAA,KAAW,IACpB1M,GAASkT,EAAAA,EAAAA,KAAeZ,IACxBnI,IAEAnK,GAASmI,EAAAA,GAAAA,OArCW,kDAuCpBnI,GACEuL,EAAAA,GAAAA,IAAa,CACX5H,MAAO,wBACPhC,SAAS,eAAM+J,gBAAN,mBAAgBtB,YAAhB,eAAsBzI,UAAW,KAAMA,QAChD0D,KAAM,QACNiG,SAAU,IACVxC,SAAU,gBA7CM,0DAAH,qDAgGrB,OACE,4BAEE,qBAASlF,UAAU,yCAAnB,WACE,gBACEA,UAAU,8EACV2J,IAAKmF,EACLlF,IAAI,gBAEN,SAAC,GAAD,CAAe7J,MAAM,yBAAyB8J,UAAU,YAAY3G,OAAK,EAAzE,UACE,cACEpB,GAAG,qBACHgI,SAAU,EACVnI,UA7Ha,SAACtD,GACR,MAAVA,EAAEiD,KAAyB,UAAVjD,EAAEiD,KAAiBjD,EAAEE,OAAOgK,SA6HzCvI,UAAS,qDAAgDK,EAAhD,gFACT5E,QAnBkB,SAAC4C,GAC3B2Q,EAAyB3Q,EAAEE,SAarB,UAOE,SAACwL,EAAA,EAAD,CAAM/J,UAAU,yBAIpB,SAAC,EAAD,CACEjE,OAAQgT,EACR/S,UAAWgT,EACXzM,iBAAkB,kBAAM2F,EAASW,QAAQN,SACzC/F,6BAzCY,SAACnE,GACnBA,EAAEkR,iBACFnT,GACEqD,EAAAA,EAAAA,KAAa,kBACRkP,GADO,IAEVO,eAAgB,KAChBJ,kBAzHiBU,uFA4HrBtH,EAASW,QAAQ1H,MAAQ,IAiCnBsB,uBACE,OAACqM,QAAD,IAACA,GAAAA,EAAmB9E,SAAS,wBAGjC,kBACEvI,KAAK,OACLwI,OAAO,UACPvI,SA9EqB,SAACrD,GAC5B,IAAMoK,EAAQpK,EAAEE,OAAOmK,MAAM,GAC7B,GAAKD,EAEL,OAAKE,EAAAA,EAAAA,IAAYF,EAAMtL,MAYnBsL,EAAM7C,MAAQgD,EAAAA,IAChBV,EAASW,QAAQ1H,MAAQ,GAClBsG,EAAe,2CAA4C,WAEpErL,GACEqD,EAAAA,EAAAA,KAAa,kBACRkP,GADO,IAEVO,eAAgBzG,EAChBqG,kBAAmBW,IAAIC,gBAAgBjH,OAnBlCrM,GACLuL,EAAAA,GAAAA,IAAa,CACX5H,MAAO,qBACPhC,QAAS,sDACT0D,KAAM,UACNiG,SAAU,IACVxC,SAAU,oBAoEV/H,KAAK,UACL2E,GAAG,cACHoI,IAAKhC,EACLlI,UAAS,SACT+B,SAAU3B,QAId,qBAASJ,UAAS,UAAKO,GAAvB,WACE,mBAAOiB,QAAQ,YAAYxB,UAAS,UAAKM,GAAzC,yBACa,iBAAMN,UAAU,WAAhB,mBAEb,kBACEyB,KAAK,OACLN,MAAOpE,EACP2E,SAAU,SAACrD,GACTjC,GAASqD,EAAAA,EAAAA,KAAa,kBAAKkP,GAAN,IAAiB5R,SAAUsB,EAAEE,OAAO4C,WAE3DQ,UAAW,SAACtD,GACI,UAAVA,EAAEiD,KAAiB2N,KAEzBrN,UAAQ,EACRC,WAAS,EACT1E,KAAK,YACL2E,GAAG,YACH9B,UAAS,UAAKQ,GACduB,SAAU3B,EACV4B,YAAY,yBAGhB,UAACuD,GAAA,EAAD,CAAevF,UAAU,OAAOrE,MAAO,CAAEC,aAAc,SAAvD,WACE,SAAC4J,GAAA,EAAD,CACErL,GAAIoJ,GACJxB,SAAU3B,EACVzE,MAAO6H,GACP/H,QAAS8K,EAJX,UAME,6BACE,SAACd,EAAA,EAAD,CACEzF,UAAU,gBACVrE,MAAO,CACL+J,OAAQ,qBAJd,aAUF,SAACF,GAAA,EAAD,CACErL,GAAIoJ,GACJxB,SAAU3B,EACVzE,MAAO6H,GACP/H,QAASwT,EAJX,SAMG7O,GACC,iCACE,SAACuF,EAAA,EAAD,CAAkBC,KAAM,GAAIjK,MAAO,CAAEqJ,YAAa,WAClD,8CAGF,wDCrCZ,GA5M0B,SAAC,GAAyC,IAAvC2K,EAAsC,EAAtCA,gBAAiBC,EAAqB,EAArBA,eAC5C,GAAoC1T,EAAAA,EAAAA,IAAYC,EAAAA,IAAxCF,EAAR,EAAQA,aAAc0S,EAAtB,EAAsBA,UACd5H,GAAuB7K,EAAAA,EAAAA,IAAY8K,EAAAA,IAAnCD,mBACF3K,GAAWC,EAAAA,EAAAA,MAEjB,GAAkCoE,EAAAA,EAAAA,UAASkO,GAA3C,eAAOkB,EAAP,KAAkBC,EAAlB,KACA,GAAgCrP,EAAAA,EAAAA,WAAS,GAAzC,eAAOsP,EAAP,KAAiBC,EAAjB,KACMC,EAAY,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAW3S,MAChC,GAAgDuD,EAAAA,EAAAA,WAAS,GAAzD,eAAOyP,EAAP,KAAyBC,EAAzB,KACA,GAAwC1P,EAAAA,EAAAA,UAAS,IAAjD,eAAO2P,EAAP,KAAqBC,EAArB,KAEMtD,GAAkB5E,EAAAA,EAAAA,QAAO,MAC/B,GAAsC1H,EAAAA,EAAAA,UAAS,IAA/C,eAAOkM,EAAP,KAAoBC,EAApB,KACA,GAA0CnM,EAAAA,EAAAA,UAAS,IAAnD,eAAOoM,EAAP,KAAsBC,EAAtB,KACQ1G,EACNW,EADMX,mBAAoBC,EAC1BU,EAD0BV,mBAAoBE,EAC9CQ,EAD8CR,iBAEhD,GAAkD9F,EAAAA,EAAAA,WAAS,GAA3D,eAAOkD,EAAP,KAA0B+G,EAA1B,KACA,IAA8CjK,EAAAA,EAAAA,WAAS,GAAvD,iBAAOmD,GAAP,MAAwB0M,GAAxB,OAEAlP,EAAAA,EAAAA,YAAU,WACR0O,EAAanB,KACZ,CAACA,IAGJ,IAAM4B,GAAqB,WACzB,IAAgB,OAAZH,QAAY,IAAZA,OAAA,EAAAA,EAAchS,QAAS,EACzB,OAAOhC,GACLuL,EAAAA,GAAAA,IAAa,CACX5J,QAAS,+BACT0D,KAAM,UACNiG,SAAU,IACVxC,SAAU,gBAIhBwF,GAAqB,GACrB4F,IAAmB,GACnBlU,GAASqD,EAAAA,EAAAA,IAAaoQ,IACtBzJ,GAAmB,SAAC,GAAD,CAAcG,iBAAkBA,KACnDF,EAAmB,CACjBtG,MAAO,uBAIXqB,EAAAA,EAAAA,YAAU,WACR0L,EAAiB,IACjBF,EAAe,MACd,KAEHxL,EAAAA,EAAAA,YAAU,WAEJwO,GAAgBxT,GAASoU,EAAAA,GAAAA,IAAgBD,OAC5C,CAACV,KAEJzO,EAAAA,EAAAA,YAAU,WAEHwO,GAAgBD,GAAgB,OAAIS,MACxC,CAACA,IAEJ,IAAMnD,IAAcC,EAAAA,EAAAA,IAAQ,mCAAC,WAAO7O,GAAP,0FACrB8O,EADqB,UACb9O,EAAEE,cADW,iBACb,EAAU4C,aADG,aACb,EAAiBiL,OAC/BQ,EAAeO,GACVA,EAHsB,yCAGRL,EAAiB,KAHT,cAK3BkD,GAAY,GACRE,GAAkBC,GAAoB,GAEpC5S,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IARL,mBAUFwB,EAAAA,EAAAA,IAAA,2BAA8B0P,GAAS5P,GAVrC,iBAUjBiJ,EAViB,EAUjBA,KAGJiK,GAbqB,OAaCjK,GAC1ByJ,EAAaxT,SAAQ,SAACiU,GACpBD,EAAkBA,EAAgBnW,QAChC,SAACqW,GAAD,OAAOA,EAAE7T,MAAQ4T,EAAY5T,UAIjCkT,GAAY,GACZlD,EAAiB2D,GArBQ,kDAuBzBrU,GACEuL,EAAAA,GAAAA,IAAa,CACX5H,MAAO,uBACPhC,SAAS,eAAM+J,gBAAN,mBAAgBtB,YAAhB,eAAsBzI,UAAW,KAAMA,QAChD0D,KAAM,QACNiG,SAAU,IACVxC,SAAU,iBAGd8K,GAAY,GAhCa,0DAAD,sDAkCzB,KAcH,OACE,iBAAKhQ,UAAU,qCAAf,WAEE,oBACEA,UAAU,mDACVrE,MAAO,CACLiV,KAAM,OACNrW,aAAc,OACdC,gBAAiB,WALrB,gBAQG4V,QARH,IAQGA,OARH,EAQGA,EAAc1Q,KAAI,SAACsL,GAAD,aACjB,SAAC6F,GAAA,EAAD,CAEE7Q,UAAU,mDACV8Q,QACE,SAAC1F,EAAA,EAAD,CACEpL,UAAU,iBACV4J,IAAG,OAAEoB,QAAF,IAAEA,OAAF,EAAEA,EAAM7N,KACXwM,IAAG,OAAEqB,QAAF,IAAEA,OAAF,EAAEA,EAAM9D,aAGf6J,OAAO9Q,EAAAA,EAAAA,IAAc,OAAC+K,QAAD,IAACA,GAAD,UAACA,EAAM7N,YAAP,aAAC,EAAYwB,MAAM,KAAK,GAAI,GAAI,GACrDqS,SAAU,kBAnCC,SAAChG,GACfA,IACL8E,GAAa,kBACRD,GADO,IAEV3S,MAAO+S,EAAa3V,QAAO,SAAC2W,GAAD,OAAOA,EAAEnU,MAAQkO,EAAKlO,UAGnDuT,EAAgBD,EAAa9V,QAAO,SAAC2W,GAAD,OAAOA,EAAEnU,MAAQkO,EAAKlO,QAE1DgQ,EAAiB,CAAC9B,GAAF,eAAW6B,MA0BHqE,CAAalG,KAX/B,OACOA,QADP,IACOA,OADP,EACOA,EAAMlO,WAejB,SAAC,GAAD,CACEoN,IAAK6C,EACLhB,cAAekB,GACfpL,WAAW,EACXG,YAAY,iBACZgK,WAAY,WACVY,EAAe,IACfE,EAAiB,IACjBC,EAAgBlE,QAAQ0D,YAI5B,oBACEvM,UAAU,+CACVrE,MAAO,CAAEiV,KAAM,IAAKhV,aAAc,SAFpC,UAIE,gBAEEH,QAAS,SAAC4C,GACR,IAAMgP,EAAShP,EAAEE,OAAOC,QAAQwM,MAAQ3M,EAAEE,OAAOqL,IACjD,GAAKyD,EAAL,CAEK6C,GAAkBC,GAAoB,GAE3C,IAAMgB,EAAetE,EAAchO,MAAK,SAACoS,GAAD,OAAOA,EAAEnU,MAAQuQ,KACzDyC,GAAa,kBACRD,GADO,IAEV3S,MAAM,GAAD,eAAM+S,GAAN,CAAoBkB,OAG3Bd,EAAgB,GAAD,eAAKD,GAAL,CAAmBe,KAElCrE,EAAiBD,EAAcvS,QAAO,SAAC2W,GAAD,OAAOA,EAAEnU,MAAQuQ,QAhB3D,SAmBG0C,GACC,SAAC,GAAD,CAAa1E,OAAO,SAASC,SAAU,OAAQC,MAAO,IACpDsB,EAAczO,OAAS,EACzByO,EAAcnN,KAAI,SAACsL,GAAD,OAChB,SAAC,GAAD,CAEEA,KAAMA,EACNC,eAAgB,CAAC,GAAI,KAFhBD,EAAKlO,QAMd6P,IACCoD,IACC,eAAG/P,UAAU,wCAAb,UACGkQ,EAAmB,kBAAoB,cAD1C,eAGE,iBAAMlQ,UAAU,YAAhB,UACGC,EAAAA,EAAAA,IAAe0M,EAAa,GAAI,MAJrC,YAaR,SAAC,GAAD,CACE5G,uBAAwBpC,EACxBqC,qBAAsBpC,S,0jKCjL9B,GA/BwB,SAAC,GAAoC,IAAlCwN,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,WACnCC,GAAYnJ,EAAAA,EAAAA,QAAO,MACnBoJ,GAA+B,OAAdH,QAAc,IAAdA,OAAA,EAAAA,EAAgBI,WAAW7S,MAAM,SAAU,GAC5D8S,EAAiBF,EAAe,IAAM,GAC5C,OACE,kBACEvR,UAAS,0BACPoR,EAAiB,gBAAkB,aAD5B,4CADX,UAMGC,IACC,SAACjG,EAAA,EAAD,CACExB,IAAK6H,GAAkB,WACvB9H,IAAK4H,EAAe,IAAM,WAC1B5V,MAAO,CAAEiQ,OAAQ,GAAIvJ,MAAO,OAGhC,kBAAMrC,UAAU,OAAhB,UACGyR,EAAc,UAAMA,EAAN,QAA6B,GAD9C,aAGA,SAAClD,GAAA,EAAD,CACErE,IAAKoH,EACLtR,UAAW,GACXrE,MAAO,CAAEiQ,OAAQ,GAAI8F,OAAQ,GAC7BlD,cAAemD,SCEjBjL,GAAgBC,EAVF,CAAEhM,MAAO,WACP,CACpBiM,SAAU,IACVjM,MAAO,OACP8I,WAAY,eACZ7I,SAAU,GACViM,QAAS,WACTtM,aAAc,EACdC,gBAAiB,YAgRnB,GA5QqB,SAAC,GAA8C,IAAD,gBA8B7DoX,EA9BkBhV,EAA2C,EAA3CA,KAAMiV,EAAqC,EAArCA,eAAgBT,EAAqB,EAArBA,eAC5C,GAAuClV,EAAAA,EAAAA,IAAYC,EAAAA,IAA3C2V,EAAR,EAAQA,aAAc7V,EAAtB,EAAsBA,aAEpBa,EAMEF,EANFE,IACAC,EAKEH,EALFG,SACAgV,EAIEnV,EAJFmV,cACA/U,EAGEJ,EAHFI,YACAgV,EAEEpV,EAFFoV,YACA9C,EACEtS,EADFsS,eAEI+C,EAAejV,EAAW,iBAClBD,EADkB,qBACJH,QADI,IACJA,GADI,UACJA,EAAMM,aADF,aACJ,EAAakB,OADT,uBAEzBrB,EAFyB,aAEZgV,GAEhBG,EAAc,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAaG,eAAhB,aAAG,EACjBC,WAAW,OAAQ,MACpBA,WAAW,SAAU,KACrBA,WAAW,QAAS,MACpBA,WAAW,SAAU,MACrBA,WAAW,SAAU,IACrBA,WAAW,UAAW,IAEnBC,EAAc,IAAIC,KAAJ,OAASN,QAAT,IAASA,OAAT,EAASA,EAAaO,WACpCC,GAAoBC,EAAAA,EAAAA,IAAgBJ,GAEpCK,EAAc,OAAGV,QAAH,IAAGA,OAAH,EAAGA,EAAaW,QAC9BC,GAA0B,OAAXZ,QAAW,IAAXA,GAAA,UAAAA,EAAaa,iBAAb,eAAwBlU,MAAM,SAAU,GACvDmU,EAAkBF,EAAa,IAAM,GACrCG,EAAcb,GAAkBY,EAChCE,EAAQ,UAAGJ,EAAa,UAAhB,aAAG,EAAiBjU,MAAM,OAAO,GAmB/C,OAhBI+T,IACFd,GAAkBjJ,EAAAA,EAAAA,IAAY+J,GAC1B,QACA,WAAWO,KAAKP,GAChB,MACQ,OAARM,QAAQ,IAARA,GAAAA,EAAUE,WAAW,WACrB,8BAA8BD,KAAKP,GACnC,QACQ,OAARM,QAAQ,IAARA,GAAAA,EAAUE,WAAW,WACrB,uBAAuBD,KAAKP,GAC5B,QACA,WAAWO,KAAKP,GAChB,MACA,cAIJ,iBACE,YAAW5V,EACX,kBAAiB+U,EACjB7R,UAAS,4DACK,OAAZ8R,QAAY,IAAZA,OAAA,EAAAA,EAAchV,OAAQA,EAAM,aAAe,GADpC,oDAHX,WAQE,SAAC,GAAD,CACEiD,MAAK,eAAU/C,EAAc,WAAa,eAC1C6M,UAAU,YACV3G,OAAK,EAHP,UAKE,SAACkI,EAAA,EAAD,CACEzB,IAAKuF,EACLtF,IAAK7M,EACL,YAAWD,EACX,kBAAiB+U,EACjB7R,UAAS,8DAIb,iBACE,YAAWlD,EACX,kBAAiB+U,EACjB7R,UAAU,yDAHZ,WAME,cACE,YAAWlD,EACX,kBAAiB+U,EACjB9R,MAAOkS,EACPjS,UAAU,iDAJZ,UAMGC,EAAAA,EAAAA,IAAelD,EAAU,GAAI,MAE/BiV,IACC,iBACEhS,UAAU,cACV,YAAWlD,EACX,kBAAiB+U,EACjBlW,MAAO,CAAEhB,MAAOkX,EAAiB,UAAY,WAJ/C,SAMyB,UAAtBW,GACGW,EAAAA,EAAAA,IAAgBd,GACM,cAAtBG,GACAY,EAAAA,EAAAA,IAAaf,GACb,cAGPL,GAAeH,IACd,iBACE7R,UAAS,yFAET,YAAWlD,EACX,kBAAiB+U,EACjBlW,MAAO,CACLf,SAAUiX,EAAiB,GAAK,GAAK,GACrC1M,MAAO,GACPuM,OAAQG,EAAiB,EAAI,EAAI,EACjChL,QACEgL,EAAiB,GACb,UACAA,EAAiB,EACjB,UACA,WAdV,SAiBGA,GAAkB,KAItBT,GACC,iBAAMzV,MAAO,CAAEhB,MAAO,UAAW+K,OAAQ,uBAAzC,UACE,SAAC,GAAD,CAAiB0L,eAAgBA,OAGlCY,GAA+B,OAAhBA,GAAwBhV,KACtC,eACE,YAAWF,EACX,kBAAiB+U,EACjB7R,UAAU,sBAHZ,WAKE,iBACE,YAAWlD,EACX,kBAAiB+U,EACjB7R,UAAU,eAHZ,UAKE,8BACmB,OAAhBgS,GACAhV,IAAgBgV,IACfhV,IACW,OAAXgV,QAAW,IAAXA,GAAA,UAAAA,EAAaqB,cAAb,eAAqBvW,QAArB,OAA6Bb,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAca,KAC3C,IACa,OAAXkV,QAAW,IAAXA,GAAA,UAAAA,EAAaqB,cAAb,eAAqBvW,QAArB,OAA6Bb,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAca,MAC7C,8BACGE,GACC,yCAEA,SAACsW,GAAA,EAAD,CACE,YAAWxW,EACX,kBAAiB+U,EACjB7R,UAAU,YACVrE,MAAO,CAAEhB,MAAO,kBAKtBsF,EAAAA,EAAAA,IAAc,OACZ+R,QADY,IACZA,GADY,UACZA,EAAaqB,cADD,iBACZ,EAAqBlW,YADT,aACZ,EAA2BwB,MAAM,KAAK,GACtC,GACA,GACE,SAIT+T,GACC,iBAAM,YAAW5V,EAAK,kBAAiB+U,EAAvC,SACuB,UAApBD,GACC,kBACE,YAAW9U,EACX,kBAAiB+U,EACjB9R,MAAOgT,EAHT,WAKE,SAACQ,GAAA,EAAD,CACE,YAAWzW,EACX,kBAAiB+U,EACjB7R,UAAU,aACT,KACFC,EAAAA,EAAAA,IAAeiS,EAAgB,GAAI,KAAO,WAEvB,QAApBN,GACF,kBACE,YAAW9U,EACX,kBAAiB+U,EACjB9R,MAAOgT,EAHT,WAKE,SAACS,GAAA,EAAD,CACE,YAAW1W,EACX,kBAAiB+U,EACjB7R,UAAU,aACT,KACFC,EAAAA,EAAAA,IAAeiS,EAAgB,GAAI,KAAO,SAEvB,UAApBN,GACF,kBACE,YAAW9U,EACX,kBAAiB+U,EACjB9R,MAAOgT,EAHT,WAKE,SAACU,GAAA,EAAD,CACE,YAAW3W,EACX,kBAAiB+U,EACjB7R,UAAU,aACT,KACFC,EAAAA,EAAAA,IAAeiS,EAAgB,GAAI,KAAO,WAEvB,UAApBN,GACF,kBACE,YAAW9U,EACX,kBAAiB+U,EACjB9R,MAAOgT,EAHT,WAKE,SAACW,GAAA,EAAD,CACE,YAAW5W,EACX,kBAAiB+U,EACjB7R,UAAU,aACT,KACFC,EAAAA,EAAAA,IAAeiS,EAAgB,GAAI,KAAO,WAEvB,QAApBN,GACF,kBACE,YAAW9U,EACX,kBAAiB+U,EACjB9R,MAAOgT,EAHT,WAKE,SAACY,GAAA,EAAD,CACE,YAAW7W,EACX,kBAAiB+U,EACjB7R,UAAU,aACT,KACFC,EAAAA,EAAAA,IAAe8S,EAAa,GAAI,KAAO,UAG1C,kBACE,YAAWjW,EACX,kBAAiB+U,EACjB9R,MAAOgT,EAHT,WAKE,SAACa,GAAA,EAAD,CACE,YAAW9W,EACX,kBAAiB+U,EACjB7R,UAAU,aACT,KACFC,EAAAA,EAAAA,IAAe8S,EAAa,GAAI,KAAO,aAK9C,iBACE,YAAWjW,EACX,kBAAiB+U,EACjB9R,MAAOmS,EAHT,SAKmB,OAAhBF,EACG,4BACAhV,IAAgBgV,EAAhB,qBAEA/R,EAAAA,EAAAA,IAAeiS,EAAgB,GAAI,gBCnSnD2B,GAAc,CAAExR,MAAO,OAAQuJ,OAAQ,OAAQrR,aAAc,IA+BnE,GA5BsB,SAAC,GAAmC,IAAD,IAAhCuZ,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACxC,OACE,gBAAKhU,UAAU,yDAAf,SACG+T,GACC,kBACEpK,IAAKoK,EACLpY,MAAO,CAAE0G,MAAO,4BAChB4R,UAAQ,EACRC,UAAQ,EAJV,sDAQEF,GACF,kBAAOrK,IAAKqK,EAAUrY,MAAOkY,GAAaI,UAAQ,EAACC,UAAQ,EAA3D,uDAIA,gBACEvK,KAAK,UAAAmK,EAAMvV,cAAN,eAAcoL,MApBL6F,sCAqBd5F,KAAK,UAAAkK,EAAMvV,cAAN,eAAcqL,MAAO,cAC1B5J,UAAU,mCACVrE,OAAK,kBAAOkY,IAAP,IAAoBM,UAAW,iBCIxCC,IAAiBC,EAAAA,EAAAA,OAAK,kBAAM,iCAa5B3N,GAAgBC,EATF,CAAEhM,MAAO,QACP,CACpBiM,SAAU,IACVjM,MAAO,OACP8I,WAAY,eACZ7I,SAAU,GACViM,QAAS,WACTrM,gBAAiB,SA+OnB,GA3OqB,SAAC,GAOf,IAAD,EANJqB,EAMI,EANJA,MACAyY,EAKI,EALJA,SACAC,EAII,EAJJA,YACAzY,EAGI,EAHJA,aACAuO,EAEI,EAFJA,cACAmK,EACI,EADJA,gBAEA,GAAgDtY,EAAAA,EAAAA,IAAYC,EAAAA,IAApDF,EAAR,EAAQA,aAAc6V,EAAtB,EAAsBA,aAAcpD,EAApC,EAAoCA,QAC9BpS,GAAM,cAAOL,QAAP,IAAOA,OAAP,EAAOA,EAAcM,eAC3BH,GAAWC,EAAAA,EAAAA,MAEjB,GAA8BoE,EAAAA,EAAAA,WAAS,GAAvC,eAAOL,EAAP,KAAgB0I,EAAhB,KACA,GAA0CrI,EAAAA,EAAAA,UAAS5E,GAAnD,eAAO4Y,EAAP,KAAsBC,EAAtB,KACMC,GAAkBxM,EAAAA,EAAAA,UAkClByM,EAAU,mCAAG,qGACXrX,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IADf,kBAGQwB,EAAAA,EAAAA,IAAA,YAAuBF,GAH/B,gBAGPiJ,EAHO,EAGPA,KAEFqO,EAAcrO,EACjB9G,KAAI,SAAC9C,GACJ,IAAQI,EAAuBJ,EAAvBI,YAAaE,EAAUN,EAAVM,MAErB,IAAKF,EAAa,CAChB,IAAM8X,GAAW7X,EAAAA,EAAAA,IAAwBhB,EAAciB,GACvDN,EAAI,SAAJ,OAAmBkY,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAU3X,KAC7BP,EAAI,cAAJ,OAAwBkY,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAU3N,MAClCvK,EAAI,eAAJ,OAAyBkY,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAU5N,WAErC,OAAOtK,KAERtC,QAAO,SAACsC,GAAD,YAA+BmY,IAArBnY,EAAKoV,aAA6BpV,EAAKI,eAE3DsX,EAASO,GACTH,EAAiBG,GACbzU,GAAS0I,GAAW,GArBT,kDAuBf1M,GACEuL,EAAAA,GAAAA,IAAa,CACX5H,MAAO,uBACPhC,SAAS,eAAM+J,gBAAN,mBAAgBtB,YAAhB,eAAsBzI,UAAW,KAAMA,QAChD0D,KAAM,QACNiG,SAAU,IACVxC,SAAU,mBAGV9E,GAAS0I,GAAW,GAhCT,0DAAH,qDAqCVkM,GAAc9H,EAAAA,EAAAA,KAAS,SAAC7O,GAAO,IAAD,EAC5B4W,EAAa,UAAG5W,EAAEE,OAAO4C,aAAZ,aAAG,EAAgB+T,cAAc9I,OACpD,IAAK6I,EAAe,OAAOP,EAAiB7Y,GAC5C6Y,EACE7Y,EAAMvB,QAAO,SAACsC,GAAD,oBACXA,QADW,IACXA,GADW,UACXA,EAAMG,gBADK,aACX,EAAgBmY,cAActV,SAASqV,SAG1C,KAEG5X,EAAqB,mCAAG,WAAOC,GAAP,8EACtBC,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IADJ,kBAGpBwB,EAAAA,EAAAA,IAAA,iCAEJ,CAAEC,gBAAiBC,KAAKC,UAAUN,IAClCC,GANwB,sDAS1BM,QAAQC,IAAI,mCAAoC,KAAMC,SAT5B,wDAAH,sDAqC3B,OAJAqD,EAAAA,EAAAA,YAAU,WACRwT,MACC,CAAClG,KAGF,iBACE1O,UAAS,2DACP8R,EAAe,mBAAqB,SAD7B,kDAGPyC,EAAc,UAAY,WAJ9B,WAOE,oBAASvU,UAAU,oBAAnB,UACE,eAAGA,UAAU,sEAAb,mBAGE,SAAC,GAAD,CACED,MAAM,wBACN8J,UAAU,aACV3G,OAAK,EAHP,UAKE,mBACElD,UAAS,mEACTvE,QAvIsB,WAChCW,GACEqD,EAAAA,EAAAA,IAAa,CACXyP,eAAgB,KAChBJ,kBAjCiBU,mFAkCjBzS,SAAU,GACVG,MAAO,MAGXd,GAASsO,EAAAA,GAAAA,KAAqB,IAC9BL,GAAc,SAAC,GAAD,CAAmBuF,gBAAgB,KACjDxT,GACEuO,EAAAA,GAAAA,IAAc,CACZ5K,MAAO,oBACPmE,QAAS,SACTC,SAAU,OACVE,OAAQ,SAqHJ,UAIE,SAAC8Q,GAAA,EAAD,cAMF,OAALtZ,QAAK,IAALA,OAAA,EAAAA,EAAOuC,QAAS,IACf,oBAAS4B,UAAU,aAAnB,UACE,SAAC,GAAD,CACEkK,IAAKyK,EACL5I,cAAeiJ,EACfnT,WAAW,EACXG,YAAY,cACZgK,WAAY,kBAAM0I,EAAiB7Y,SAKzC,oBAASmE,UAAU,mDAAnB,SACGI,GACC,SAAC,GAAD,CAAaiL,OAAO,OAAOC,SAAU,OAAQC,MAAO,KACrC,OAAbkJ,QAAa,IAAbA,OAAA,EAAAA,EAAerW,QAAS,GAC1B,gBAGE3C,QAAS,SAAC4C,GAAO,IAAD,EACNG,EAAYH,EAAEE,OAAdC,QACF4W,EAAgB/W,EAAEE,OAAOG,WAAWF,QACpCO,EAAgBP,EAAQ5B,MAAQwY,EAAcxY,KAC9CyY,EAAY7W,EAAQ6W,WAAaD,EAAcC,UACrD,GAAKtW,EAAL,CAEA,aAAIV,EAAEE,OAAOyB,iBAAb,OAAI,EAAoBwR,WAAW5R,SAAS,iBAC1C,OArJe,SAACvB,GAAO,IAAD,EAClCjC,GAASsO,EAAAA,GAAAA,KAAqB,IAC9BL,GAAc,SAAC,GAAD,CAAeyJ,MAAOzV,KACpCjC,GACEuO,EAAAA,GAAAA,IAAc,CACZ3G,cAAc,EACdjE,OAAO,UAAA1B,EAAEE,cAAF,eAAUqL,MAAO,iBA+IT0L,CAAqBjX,GAE9B,IAAMkX,EAAcd,EAAc5V,MAChC,SAACjC,GAAD,OAAUA,EAAKE,MAAQiC,KAErBwW,EAAYzY,OAAZ,OAAoBgV,QAApB,IAAoBA,OAApB,EAAoBA,EAAchV,OACtCV,GAAS0C,EAAAA,EAAAA,IAAgByW,IACzBzZ,GAAa,GACb,OAAIyZ,QAAJ,IAAIA,GAAAA,EAAavY,aAAaZ,GAASqD,EAAAA,EAAAA,IAAa8V,IAGhDF,GAzFY,SAACtW,GAG3B,IADA,IAAMzB,EAAoB,GACjB0B,EAAI,EAAGA,EAAI1C,EAAO8B,SAAUY,EACnC,GAAI1C,EAAO0C,GAAGpC,KAAKE,MAAQiC,EAAe,CACxC,IAAME,EAAe3C,EAAO4C,OAAOF,EAAG,GAAG,GACzC1B,EAAkB6B,KAAKF,EAAanC,OAGlCkC,EAGN,IAAMI,GAAW,kBAAQnD,GAAR,IAAsBM,cAAeD,IACtD+C,aAAaC,QAAQ,eAAgB3B,KAAKC,UAAUwB,IACpDhD,GAASmD,EAAAA,EAAAA,IAAgBH,IAGzB/B,EAAsBC,GAwEGkC,CAAoBT,MAtBvC,SAyBG0V,EAAc/U,KAAI,SAAC9C,GAClB,IAAIiV,EAAiB,EAIrB,OAHM,OAANvV,QAAM,IAANA,GAAAA,EAAQG,SAAQ,SAACC,GACXA,EAAME,KAAKE,MAAQF,EAAKE,OAAO+U,MAGnC,SAAC,GAAD,CAEEjV,KAAMA,EACNiV,eAAgBA,GAAkB,GAClCT,eAAc,OAAEoD,QAAF,IAAEA,OAAF,EAAEA,EAAiB3V,MAC/B,SAACoS,GAAD,aAAQ,OAADA,QAAC,IAADA,GAAA,UAAAA,EAAGO,kBAAH,eAAe7S,MAAM,OAAO,MAAO/B,EAAKE,QAJ5CF,EAAKE,WAWlB,iCACE,iBAAMkD,UAAU,oDAAhB,SACqB,KAAb,OAALnE,QAAK,IAALA,OAAA,EAAAA,EAAOuC,QAAP,cAEK6B,EAAAA,EAAAA,IAAc,OAAChE,QAAD,IAACA,GAAD,UAACA,EAAckB,YAAf,aAAC,EAAoBwB,MAAM,KAAK,GAAI,GAAI,IACtD,QAHL,gBAKG,mBAEa,KAAb,OAAL9C,QAAK,IAALA,OAAA,EAAAA,EAAOuC,UAAgB,SAACgW,GAAD,a,gCC3P9B1N,GAAgBC,EAVF,CAAEhM,MAAO,QACP,CACpBiM,SAAU,IACVjM,MAAO,OACP8I,WAAY,eACZ7I,SAAU,GACViM,QAAS,WACTC,OAAQ,iBACRtM,gBAAiB,SA0FnB,GAtFwB,SAAC,GAAmD,IAAD,IAErE2C,EAAMgK,EAAOD,EAFQsO,EAAgD,EAAhDA,iBAAkBC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YACvD,GAAuCxZ,EAAAA,EAAAA,IAAYC,EAAAA,IAA3CF,EAAR,EAAQA,aAAc6V,EAAtB,EAAsBA,aAEd/K,GAAuB7K,EAAAA,EAAAA,IAAY8K,EAAAA,IAAnCD,mBACAX,EAA2CW,EAA3CX,mBAAoBC,EAAuBU,EAAvBV,mBAE5B,GAAkD5F,EAAAA,EAAAA,WAAS,GAA3D,eAAOkD,EAAP,KAA0B+G,EAA1B,KACA,GAA8CjK,EAAAA,EAAAA,WAAS,GAAvD,eAAOmD,EAAP,KAAwB0M,EAAxB,KAEA,GAAIkF,GAAoBC,GAAcC,EACpCvY,EAAOsY,EACPtO,EAAQuO,EACRxO,EAAasO,MACR,CACL,IAAMV,GAAW7X,EAAAA,EAAAA,IAAwBhB,EAAD,OAAe6V,QAAf,IAAeA,OAAf,EAAeA,EAAc5U,OACrEC,EAAI,OAAG2X,QAAH,IAAGA,OAAH,EAAGA,EAAU3X,KACjBgK,EAAK,OAAG2N,QAAH,IAAGA,OAAH,EAAGA,EAAU3N,MAClBD,EAAU,OAAG4N,QAAH,IAAGA,OAAH,EAAGA,EAAU5N,WAazB,OACE,iCAEE,oBAASlH,UAAU,4CAAnB,UACE,SAAC,GAAD,CAAeD,MAAM,mBAAmB8J,UAAU,MAAM3G,OAAK,EAA7D,UACE,gBACElD,UAAU,sFACV8B,GAAG,kBACHrG,QAlBmB,SAAC4C,GAAO,IAAD,EAClCqM,GAAqB,GACrB4F,GAAmB,GACnBlK,GAAmB,SAAC,GAAD,CAAe0N,MAAOzV,KACzCgI,EAAmB,CACjBrC,cAAc,EACdjE,OAAO,UAAA1B,EAAEE,cAAF,eAAUqL,MAAO,iBAalBD,IAAKzC,EACL0C,IAAKzM,SAKX,oBAAS6C,UAAS,+BAAlB,UACE,gBAAKA,UAAU,cAAcrE,MAAO,CAAEoJ,UAAW,SAAjD,UACE,SAAC,GAAD,CACEhF,OAAW,QAAJ,EAAA5C,SAAA,eAAMiB,QAAS,GAAKjB,EAAO,GAClC0M,UAAU,MACV3G,OAAK,EAHP,UAKE,gBACElD,UAAU,kCACVrE,MAAO,CAAEf,SAAU,QAFrB,UAIGqF,EAAAA,EAAAA,IAAe9C,EAAM,GAAI,aAMlC,oBACE6C,UAAS,+BACTrE,MAAO,CAAEoJ,UAAW,SAFtB,UAIE,SAAC,GAAD,CACEhF,OAAY,QAAL,EAAAoH,SAAA,eAAO/I,QAAS,GAAK+I,EAAQ,GACpC0C,UAAU,SACV3G,OAAK,EAHP,UAKE,iBAAMlD,UAAU,OAAOrE,MAAO,CAAEhB,MAAO,aAAvC,UACGsF,EAAAA,EAAAA,IAAekH,EAAO,GAAI,WAMjC,SAAC,GAAD,CACEpB,uBAAwBpC,EACxBqC,qBAAsBpC,Q,iCCrFxB8C,GAAgBC,EATF,CAAEhM,MAAO,WACP,CACpBiM,SAAU,IACVjM,MAAO,OACP8I,WAAY,eACZ7I,SAAU,GACVL,aAAc,GACdC,gBAAiB,YA6DnB,GAzDwB,SAAC,GAA8B,IAA5BwQ,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,eACvBhP,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAA7BF,aACAa,EAAiCkO,EAAjClO,IAAKK,EAA4B6N,EAA5B7N,KAAMgK,EAAsB6D,EAAtB7D,MAAOD,EAAe8D,EAAf9D,WAC1B,UAAqB+D,EAArB,GAAOC,EAAP,KAAYC,EAAZ,KACMwK,EAAiB7Y,KAAG,OAAKb,QAAL,IAAKA,OAAL,EAAKA,EAAca,KAE7C,OACE,iBACE,YAAWA,EACXkD,UAAS,8HACN2V,GAAkB,WAHvB,WAMO,OAAJ3K,QAAI,IAAJA,OAAA,EAAAA,EAAM4K,gBACL,iBACE5V,UAAS,mEACTrE,MAAO,CAAE2Q,OAAQ,QAFnB,oBAOAqJ,IACA,iBACE,YAAW7Y,EACXkD,UAAU,iEAFZ,UAIE,SAAC6V,GAAA,EAAD,CAAmB,YAAW/Y,OAGlC,SAAC,GAAD,CACE,YAAWA,EACXiD,MAAK,UAAK4V,EAAiB,GAAH,UAAWxY,EAAX,aAAoBgK,EAApB,MACxB0C,UAAU,YACV3G,OAAK,EAJP,UAME,SAACkI,EAAA,EAAD,CACEzB,IAAKzC,EACL0C,IAAK9M,EACL,YAAWA,EACXkD,UAAS,wCAGb,iBACE,YAAWlD,EACXkD,UAAU,4DAFZ,WAIE,cAAG,YAAWlD,EAAKkD,UAAU,oCAA7B,SACG2V,EAAiB,OAAQ1V,EAAAA,EAAAA,IAAe9C,EAAM+N,EAAKC,MAEtD,cAAG,YAAWrO,EAAKkD,UAAU,mBAA7B,UACGC,EAAAA,EAAAA,IAAekH,EAAO+D,EAAKC,Y,iCCuOtC,GApR0B,SAAC,GAOpB,IAAD,IANJpP,EAMI,EANJA,OACAC,EAKI,EALJA,UACA8Z,EAII,EAJJA,cACApL,EAGI,EAHJA,qBACA4F,EAEI,EAFJA,mBACAvJ,EACI,EADJA,mBAEA,GACE7K,EAAAA,EAAAA,IAAYC,EAAAA,IADNF,EAAR,EAAQA,aAAcyS,EAAtB,EAAsBA,QAASC,EAA/B,EAA+BA,UAAWC,EAA1C,EAA0CA,aAAcC,EAAxD,EAAwDA,kBAElDzS,GAAWC,EAAAA,EAAAA,MAET+J,EAA2CW,EAA3CX,mBAAoBC,EAAuBU,EAAvBV,mBACtB0P,EAAwB,OAAGpH,QAAH,IAAGA,GAAH,UAAGA,EAAWqH,mBAAd,aAAG,EAAwBC,MACvD,SAAC7G,GAAD,OAAgB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOtS,QAAP,OAAeb,QAAf,IAAeA,OAAf,EAAeA,EAAca,QAEpCoZ,GAAoBjW,EAAAA,EAAAA,IAAc,OACtC6V,QADsC,IACtCA,GADsC,UACtCA,EAAe3Y,YADuB,aACtC,EAAqBwB,MAAM,KAAK,GAChC,GACA,GAEIwX,GACJ,iBAAMxa,MAAO,CAAEhB,MAAO,SAAUC,SAAU,QAA1C,SACGsb,IAGCE,EAAa,SAAC5P,GAClBpK,GAASkT,EAAAA,EAAAA,KAAeZ,IACxBtS,GAAS0C,EAAAA,EAAAA,IAAgB0H,KAGrBoB,EAAe,WAGf,IAAD,IAFHC,EAEG,uDAFK,6BACR9H,EACG,uDADK,mBAER3D,GACEuL,EAAAA,GAAAA,IAAa,CACX5H,MAAAA,EACAhC,SAAS,UAAA8J,EAAMC,gBAAN,mBAAgBtB,YAAhB,eAAsBzI,UAAW8J,EAAM9J,QAChD0D,KAAM,QACNiG,SAAU,IACVxC,SAAU,oBAMVmR,EAAQ,mCAAG,+FACfja,GAASmI,EAAAA,GAAAA,OACTnI,GAAS0M,EAAAA,EAAAA,KAAW,IACdvL,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IAHjB,kBAKUwB,EAAAA,EAAAA,KAAA,YAErB,CAAE4P,OAAM,OAAEyI,QAAF,IAAEA,OAAF,EAAEA,EAAehZ,KACzBS,GARW,gBAKLiJ,EALK,EAKLA,KAMRpK,GAAS0M,EAAAA,EAAAA,KAAW,IACpBsN,EAAW5P,GAZE,kDAcboB,EAAa,EAAD,GAAQ,iCACpBxL,GAAS0M,EAAAA,EAAAA,KAAW,IAfP,0DAAH,qDAgCRwN,EAAc,mCAAG,+FACrBla,GAAS0M,EAAAA,EAAAA,KAAW,IACdvL,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IAFX,kBAIIwB,EAAAA,EAAAA,KAAA,6BAErB,CAAE4P,OAAM,OAAEyI,QAAF,IAAEA,OAAF,EAAEA,EAAehZ,IAAKD,OAAM,OAAE8R,QAAF,IAAEA,OAAF,EAAEA,EAAW7R,KACjDS,GAPiB,gBAIXiJ,EAJW,EAIXA,KAKJqI,GACFD,EAAaO,KAAK,cAAe,CAC/BoH,QAASta,EACTua,aAAchQ,EACdiQ,aAAcX,IAGlB1Z,GACEuL,EAAAA,GAAAA,IAAa,CACX5J,QAAQ,GAAD,OAAKmY,EAAL,yBACPzU,KAAM,UACNiG,SAAU,IACVxC,SAAU,mBAGd9I,GAASqD,EAAAA,EAAAA,IAAa+G,IACtB4P,EAAW5P,GACXpK,GAAS0M,EAAAA,EAAAA,KAAW,IA1BD,kDA4BnBlB,EAAa,EAAD,GAAQ,2BACpBxL,GAAS0M,EAAAA,EAAAA,KAAW,IA7BD,0DAAH,qDAiCd4N,EAAc,mCAAG,+FACrBta,GAAS0M,EAAAA,EAAAA,KAAW,IACdvL,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IAFX,kBAIIwB,EAAAA,EAAAA,IAAA,gCAErB,CAAE4P,OAAM,OAAEyI,QAAF,IAAEA,OAAF,EAAEA,EAAehZ,IAAKD,OAAM,OAAE8R,QAAF,IAAEA,OAAF,EAAEA,EAAW7R,KACjDS,GAPiB,uBAIXiJ,EAJW,EAIXA,KAKJqI,GACFD,EAAaO,KAAK,cAAe,CAC/BoH,QAASta,EACTua,aAAchQ,EACdmQ,eAAgBb,IAGpB1Z,GACEuL,EAAAA,GAAAA,IAAa,CACX5J,QAAQ,GAAD,OAAKmY,EAAL,+BACPzU,KAAM,OACNiG,SAAU,IACVxC,SAAU,mBAGd9I,GAAS0M,EAAAA,EAAAA,KAAW,IACpB1M,GAASqD,EAAAA,EAAAA,IAAa+G,IACtB4P,EAAW5P,GA1BQ,kBA2BZ,kBA3BY,yCA6BnBoB,EAAa,EAAD,GAAQ,iCACpBxL,GAAS0M,EAAAA,EAAAA,KAAW,IA9BD,kBA+BZ,kBA/BY,0DAAH,qDAmCd8N,EAAe,mCAAG,+FACtBxa,GAAS0M,EAAAA,EAAAA,KAAW,IACdvL,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IAFV,kBAIGwB,EAAAA,EAAAA,IAAA,yBAErB,CACEoZ,gBAAe,OAAEf,QAAF,IAAEA,OAAF,EAAEA,EAAehZ,IAChC8Y,aAAY,OAAEE,QAAF,IAAEA,OAAF,EAAEA,EAAeF,aAC7B/Y,OAAM,OAAE8R,QAAF,IAAEA,OAAF,EAAEA,EAAW7R,KAErBS,GAXkB,wBAIZiJ,EAJY,EAIZA,MAUJ,YAAkBsP,EAClBjH,GACFD,EAAaO,KAAK,cAAe,CAC/BoH,QAASta,EACTua,aAAchQ,IAGlBpK,GACEuL,EAAAA,GAAAA,IAAa,CACX5J,QAAQ,GAAD,OAAKmY,EAAL,uBACPzU,KAAM,OACNiG,SAAU,IACVxC,SAAU,mBAGd9I,GAAS0M,EAAAA,EAAAA,KAAW,IACpB1M,GAASqD,EAAAA,EAAAA,IAAa+G,IACtB4P,EAAW5P,GA/BS,kBAgCb,kBAhCa,yCAkCpBoB,EAAa,EAAD,GAAQ,4BACpBxL,GAAS0M,EAAAA,EAAAA,KAAW,IAnCA,kBAoCb,kBApCa,0DAAH,qDAuErB,OACE,UAAC,EAAD,CACE/N,WAAYgB,EACZf,cAAegB,EACff,gBAAiB,CAAE+C,SAAU,MAAOC,WAAY,SAChD/C,aAAc,CAAE8C,SAAU,SAAUC,WAAY,SAJlD,WAOE,UAAC6B,EAAA,EAAD,CAAU3F,GAAIO,EAAee,QAAS4a,EAAtC,WACE,SAAC3T,EAAA,EAAD,CAAcvI,GAAIU,EAAlB,UACE,SAACic,GAAA,EAAD,OAEF,SAAC,EAAD,4BACEZ,GAAqB,gBAIzB,UAACpW,EAAA,EAAD,CAAU3F,GAAIO,EAAee,QAzKH,WAC5BiP,GAAqB,GACrB4F,GAAmB,GACnBlK,GACE,SAAC,GAAD,CACEoP,iBAAgB,OAAEM,QAAF,IAAEA,OAAF,EAAEA,EAAe5O,WACjCuO,WAAU,OAAEK,QAAF,IAAEA,OAAF,EAAEA,EAAe3Y,KAC3BuY,YAAW,OAAEI,QAAF,IAAEA,OAAF,EAAEA,EAAe3O,SAGhCd,EAAmB,CAAEtG,MAAO,kBA+J1B,WACE,SAAC2C,EAAA,EAAD,CAAcvI,GAAIU,EAAlB,UACE,SAACkc,GAAA,EAAD,OAEF,SAAC,EAAD,yBAAuBb,GAAqB,eAG7CH,IACC,UAACjW,EAAA,EAAD,CACE3F,GAAIO,EACJe,QACe,OAAbqa,QAAa,IAAbA,GAAAA,EAAeF,aA1De,WACtClL,GAAqB,GACrB4F,GAAmB,GACnBlK,GACE,oEAAoC+P,EAApC,uBAEF9P,EAAmB,CACjBtG,MAAO,mBACPmE,QAAS,KACTC,SAAU,MACVC,gBAAiB,YACjBC,OAAQqS,KAiDEJ,EALR,WAQE,SAAC5T,EAAA,EAAD,CAAcvI,GAAIU,EAAlB,UACE,SAACmc,GAAA,EAAD,OAEF,SAAC,EAAD,UACgB,OAAblB,QAAa,IAAbA,GAAAA,EAAeF,aACZ,mBACA,wBAKTG,IACC,UAACjW,EAAA,EAAD,CAAU3F,GAAIO,EAAee,QA5DM,WACvCiP,GAAqB,GACrB4F,GAAmB,GACnBlK,GACE,mEAAmC+P,EAAnC,wBAEF9P,EAAmB,CACjBtG,MAAO,oBACPmE,QAAS,KACTC,SAAU,MACVC,gBAAiB,YACjBC,OAAQuS,KAiDN,WACE,SAAClU,EAAA,EAAD,CAAcvI,GAAIU,EAAlB,UACE,SAACoc,GAAA,EAAD,OAEF,SAAC,EAAD,2BACEf,GAAqB,mBCzR7BgB,GAAuB,GAgI3B,GA9HyB,WACvB,OAAoChb,EAAAA,EAAAA,IAAYC,EAAAA,IAAxCF,EAAR,EAAQA,aAAc0S,EAAtB,EAAsBA,UACd5H,GAAuB7K,EAAAA,EAAAA,IAAY8K,EAAAA,IAAnCD,mBACR,GAAkDtG,EAAAA,EAAAA,WAAS,GAA3D,eAAOkD,EAAP,KAA0B+G,EAA1B,KACA,GAA8CjK,EAAAA,EAAAA,WAAS,GAAvD,eAAOmD,EAAP,KAAwB0M,EAAxB,KACML,EAAY,OAAGtB,QAAH,IAAGA,OAAH,EAAGA,EAAWzR,MAC1Bia,EAAM,OAAGxI,QAAH,IAAGA,OAAH,EAAGA,EAAWqH,YAC1B,GAA0CvV,EAAAA,EAAAA,UAAS,MAAnD,eAAOqV,EAAP,KAAsBsB,EAAtB,KACA,GAA8D3W,EAAAA,EAAAA,UAAS,MAAvE,eAAO4W,EAAP,KAAgCC,EAAhC,MAoBAlW,EAAAA,EAAAA,YAAU,WACHuN,IACLuI,GAnBO,CACLjb,GADK,sBAEFkb,QAFE,IAEFA,OAFE,EAEFA,EAAQ7c,QAAO,SAAC8U,GAAD,OAAgB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOtS,QAAP,OAAeb,QAAf,IAAeA,OAAf,EAAeA,EAAca,UAFrD,cAGFmT,QAHE,IAGFA,OAHE,EAGFA,EAAc3V,QACf,SAACid,GAAD,OACQ,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQza,QAAR,OAAgBb,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAca,OAA9B,OACAqa,QADA,IACAA,OADA,EACAA,EAAQK,OAAM,SAACpI,GAAD,OAAgB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOtS,QAAP,OAAeya,QAAf,IAAeA,OAAf,EAAeA,EAAQza,cAEpD4C,KAAI,SAAC6X,GACL,OAAO,kBACFA,GADL,IAEE3B,aAAY,OAAEuB,QAAF,IAAEA,OAAF,EAAEA,EAAQlB,MAAK,SAAC7G,GAAD,OAAiB,OAANmI,QAAM,IAANA,OAAA,EAAAA,EAAQza,QAAR,OAAgBsS,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOtS,aASjE2a,EAAmBP,OAClB,CAACvI,IAEJ,IAAM+I,GAAoBvP,EAAAA,EAAAA,QAAO,MACjC,GAA8C1H,EAAAA,EAAAA,UAASyW,IAAvD,eAAOS,EAAP,KAAwBF,EAAxB,KAGMG,GAAgB1K,EAAAA,EAAAA,KAAS,SAAC7O,GAAO,IAAD,MAC9BwZ,EAAe,UAAGxZ,EAAEE,cAAL,iBAAG,EAAU4C,aAAb,aAAG,EAAiB+T,cAAc9I,OACvD,IAAKyL,EACH,OAAOJ,EAAmBP,IAE5BO,EAAkB,UAChBP,UADgB,aAChB,EAAsB5c,QACpB,SAAC0Q,GAAD,eACM,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAM7N,YAAN,eAAY+X,cAActV,SAASiY,MAAnC,OACA7M,QADA,IACAA,GADA,UACAA,EAAM7D,aADN,aACA,EAAa+N,cAActV,SAASiY,UAGzC,KAIH,OACE,iBACE7X,UAAU,qCACVrE,MAAO,CAAEiQ,OAAQ,QAFnB,WAKE,cAAG5L,UAAU,4BAA4BrE,MAAO,CAAEoJ,UAAW,QAA7D,0BACMkL,QADN,IACMA,OADN,EACMA,EAAc7R,OADpB,mBACgD,OAAZ6R,QAAY,IAAZA,OAAA,EAAAA,EAAc7R,QAAS,EAAI,IAAM,OAGrE,oBAAS4B,UAAU,aAAarE,MAAO,CAAEoJ,UAAW,SAApD,UACE,SAAC,GAAD,CACEmF,IAAKwN,EACL3L,cAAe6L,EACf/V,WAAW,EACXG,YAAY,gBACZgK,WAAY,kBAAMyL,EAAmBP,UAIzC,oBAASlX,UAAU,+CAAnB,UACkB,OAAf2X,QAAe,IAAfA,OAAA,EAAAA,EAAiBvZ,QAAS,GACzB,gBAGE3C,QAAS,SAAC4C,GAAO,IAAD,EACRgP,GACJ,UAAAhP,EAAEE,cAAF,eAAUC,QAAQwM,OAClB3M,EAAEE,OAAOG,WAAWF,QAAQwM,MAC5B3M,EAAEE,OAAOqL,IACX,GAAIyD,EAAQ,CAEV,IAAgB,OAAZpR,QAAY,IAAZA,OAAA,EAAAA,EAAca,OAAQuQ,EAAQ,OAElC+J,EAAgB,OACdO,QADc,IACdA,OADc,EACdA,EAAiB9Y,MAAK,SAAC8R,GAAD,OAAQ,OAADA,QAAC,IAADA,OAAA,EAAAA,EAAG7T,OAAQuQ,MArC1B,SAAChP,GAAMiZ,EAA2BjZ,EAAEE,QAuCpDuZ,CAAsBzZ,KAf5B,SAmBGsZ,EAAgBjY,KAAI,SAAC6X,GAAD,OACnB,SAAC,GAAD,CAEEvM,KAAMuM,EACNtM,eAAgB,CAAC,GAAI,KAFhBsM,EAAOza,WAOlB,iBAAMkD,UAAU,8DAAhB,iCAKJ,SAAC,GAAD,CACEjE,OAAQsb,EACRrb,UAAWsb,EACXxB,cAAeA,EACfpL,qBAAsBA,EACtB4F,mBAAoBA,EACpBvJ,mBAAoBA,KAGtB,SAAC,GAAD,CACEhB,uBAAwBpC,EACxBqC,qBAAsBpC,QCpFxB8C,GAAgBC,EAVF,CAAEhM,MAAO,QACP,CACpBiM,SAAU,IACVjM,MAAO,OACP8I,WAAY,eACZ7I,SAAU,GACViM,QAAS,WACTC,OAAQ,iBACRtM,gBAAiB,SAomBnB,GAhmBsB,SAAC,GAAkB,IAAhBud,EAAe,EAAfA,SACvB,GACE7b,EAAAA,EAAAA,IAAYC,EAAAA,IADNF,EAAR,EAAQA,aAAcyS,EAAtB,EAAsBA,QAASC,EAA/B,EAA+BA,UAAWC,EAA1C,EAA0CA,aAAcC,EAAxD,EAAwDA,kBAEhD9H,GAAuB7K,EAAAA,EAAAA,IAAY8K,EAAAA,IAAnCD,mBACR,GAAsC7K,EAAAA,EAAAA,IAAYiE,EAAAA,IAA1CC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,iBACXjE,GAAWC,EAAAA,EAAAA,MACT+J,EACNW,EADMX,mBAAoBC,EAC1BU,EAD0BV,mBAAoBE,EAC9CQ,EAD8CR,iBAG1CyR,EAAO,OAAGrJ,QAAH,IAAGA,OAAH,EAAGA,EAAWO,eACrB+I,EAAS,OAAGtJ,QAAH,IAAGA,OAAH,EAAGA,EAAW5R,SACvBkT,EAAY,OAAGtB,QAAH,IAAGA,OAAH,EAAGA,EAAWzR,MAC1Bia,EAAM,OAAGxI,QAAH,IAAGA,OAAH,EAAGA,EAAWqH,YAE1B,GAAkCvV,EAAAA,EAAAA,WAAS,GAA3C,eAAOuH,EAAP,KAAkBC,EAAlB,KACA,GAA0DxH,EAAAA,EAAAA,UAAS,MAAnE,eAAOsO,EAAP,KAA8BC,EAA9B,KACMkJ,EAAgB,OAAGf,QAAH,IAAGA,OAAH,EAAGA,EAAQlB,MAC/B,SAAC7G,GAAD,OAAgB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOtS,QAAP,OAAeb,QAAf,IAAeA,OAAf,EAAeA,EAAca,QAE1C,GAAkD2D,EAAAA,EAAAA,WAAS,GAA3D,eAAOkD,EAAP,KAA0B+G,EAA1B,KACA,GAA8CjK,EAAAA,EAAAA,WAAS,GAAvD,eAAOmD,EAAP,KAAwB0M,GAAxB,KACMpI,IAAWC,EAAAA,EAAAA,QAAO,MAClBgQ,GAAe,4BAEf1Q,GAAiB,WAA2C,IAA1C1J,EAAyC,uDAA/B,UAAW2J,EAAoB,uDAAT,IACtDtL,GACEuL,EAAAA,GAAAA,IAAa,CACX5J,QAAAA,EACA0D,KAAM,UACNiG,SAAAA,EACAxC,SAAU,iBAKV0C,GAAe,WAGf,IAAD,IAFHC,EAEG,uDAFK,6BACR9H,EACG,uDADK,mBAER3D,GACEuL,EAAAA,GAAAA,IAAa,CACX5H,MAAAA,EACAhC,SAAS,UAAA8J,EAAMC,gBAAN,mBAAgBtB,YAAhB,eAAsBzI,UAAW8J,EAAM9J,QAChD0D,KAAM,QACNiG,SAAU,IACVxC,SAAU,iBAKV6C,GAAiB,WAAuC,IAAtChK,EAAqC,uDAA3B,uBAChC3B,GACEuL,EAAAA,GAAAA,IAAa,CACX5J,QAAAA,EACA0D,KAAM,UACNiG,SAAU,IACVxC,SAAU,oBAKVkR,GAAa,SAAC5P,GAClBpK,GAASqD,EAAAA,EAAAA,IAAa+G,IACtBpK,GAASkT,EAAAA,EAAAA,KAAeZ,IACxBtS,GAAS0C,EAAAA,EAAAA,IAAgB0H,KAIrB8B,GAAiB,SAACjK,GACR,MAAVA,EAAEiD,KAAyB,UAAVjD,EAAEiD,KACrBjD,EAAEE,OAAOgK,SAKT6P,GAAc,GACZjW,GAAiB,SAACoH,EAAcjD,GACpC8R,GAAc7O,EACd,OAAIjD,QAAJ,IAAIA,GAAAA,EAAShE,mBAAmB+V,GAAgB,CAAEC,iBAAiB,KAG/DD,GAAe,mCAAG,WAAO/R,GAAP,8EACjB8R,GADiB,yCACG3Q,GAAe,kCADlB,cAGtBrL,GAAS0M,EAAAA,EAAAA,KAAW,IACdvL,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IAJV,kBAMGwB,EAAAA,EAAAA,IACrB,8BACA,CAAEwa,UAAWG,GAAavb,OAAM,OAAE8R,QAAF,IAAEA,OAAF,EAAEA,EAAW7R,KAC7CS,GATkB,mBAMZiJ,EANY,EAMZA,KAMJqI,GACFD,EAAaO,KAAK,cAAe,CAC/BoH,QAASta,EACTua,aAAchQ,IAGlBuB,GAAe,mCAEf3L,GAAS0M,EAAAA,EAAAA,KAAW,IACpBsN,GAAW5P,GArBS,OAsBhBF,QAtBgB,IAsBhBA,IAAAA,EAASgS,gBAtBO,iBAsBU/R,IAtBV,iDAuBR,kBAvBQ,0DAyBpBqB,GAAa,EAAD,GAAQ,8BACpBxL,GAAS0M,EAAAA,EAAAA,KAAW,IA1BA,0DAAH,sDA+BfyP,GAAa,mCAAG,WAAOla,GAAP,kFACdoK,EAAQpK,EAAEE,OAAOmK,MAAM,GADT,qDAIfC,EAAAA,EAAAA,IAAYF,EAAMtL,MAJH,yCAKXf,GACLuL,EAAAA,GAAAA,IAAa,CACX5H,MAAO,qBACPhC,QAAS,sDACT0D,KAAM,UACNiG,SAAU,IACVxC,SAAU,oBAXI,YAgBhBuD,EAAM7C,MAAQgD,EAAAA,IAhBE,uBAiBlBV,GAASW,QAAQ1H,MAAQ,GAjBP,kBAkBXsG,GAAe,2CAA4C,MAlBhD,cAoBpBrL,GAAS0M,EAAAA,EAAAA,KAAW,IACpBb,GAAa,GACP1K,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,EAAc8M,UAAU,KAElDA,EAAW,IAAIC,UACZC,OAAO,aAAcR,GAC9BM,EAASE,OAAO,YAAa+O,GAC7BjP,EAASE,OAAO,gBAAhB,OAAiC0F,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAWzF,eAC5CH,EAASE,OAAO,SAAhB,OAA0B0F,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAW7R,KA5BjB,oBA8BKW,EAAAA,EAAAA,IACrB,4BACAsL,EACAxL,GAjCgB,iBA8BViJ,EA9BU,EA8BVA,KAKJqI,GACFD,EAAaO,KAAK,cAAe,CAC/BoH,QAASta,EACTua,aAAchQ,IAGlBuB,GAAe,iCACf3L,GAAS0M,EAAAA,EAAAA,KAAW,IACpBb,GAAa,GACbmO,GAAW5P,GA5CO,mDA8ClBoB,GAAa,EAAD,GAAQ,4BACpBxL,GAAS0M,EAAAA,EAAAA,KAAW,IACpBb,GAAa,GAhDK,2DAAH,sDAoDbuQ,GAAa,mCAAG,+FACpBpc,GAAS0M,EAAAA,EAAAA,KAAW,IACdvL,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IAFZ,kBAIKwB,EAAAA,EAAAA,IAAA,4BAErB,CACEgb,UAAWT,EACX9O,cAAa,OAAEyF,QAAF,IAAEA,OAAF,EAAEA,EAAWzF,cAC1BrM,OAAM,OAAE8R,QAAF,IAAEA,OAAF,EAAEA,EAAW7R,KAErBS,GAXgB,uBAIViJ,EAJU,EAIVA,KAUJqI,GACFD,EAAaO,KAAK,cAAe,CAC/BoH,QAASta,EACTua,aAAchQ,IAGlBuB,GAAe,iCACf3L,GAAS0M,EAAAA,EAAAA,KAAW,IACpBsN,GAAW5P,GAtBO,kBAuBX,kBAvBW,kCAyBlBoB,GAAa,EAAD,GAAQ,4BACpBxL,GAAS0M,EAAAA,EAAAA,KAAW,IA1BF,0DAAH,qDA8Bb4P,GAAS,mCAAG,+FACa,KAAb,OAAZzI,QAAY,IAAZA,OAAA,EAAAA,EAAc7R,QADF,yCACuBua,MADvB,cAGhBvc,GAAS0M,EAAAA,EAAAA,KAAW,IACdvL,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IAJhB,kBAMSwB,EAAAA,EAAAA,IAAA,yBAErB,CACEoZ,gBAAe,OAAE5a,QAAF,IAAEA,OAAF,EAAEA,EAAca,IAC/B8Y,aAAcsC,EACdrb,OAAM,OAAE8R,QAAF,IAAEA,OAAF,EAAEA,EAAW7R,KAErBS,GAbY,gBAMNiJ,EANM,EAMNA,KAUJqI,GACFD,EAAaO,KAAK,cAAe,CAC/BoH,QAASta,EACTua,aAAchQ,IAGlBpK,GACEuL,EAAAA,GAAAA,IAAa,CACX5J,QAAQ,gBAAD,cAAkByI,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAMzJ,SAAxB,WACP0E,KAAM,OACNiG,SAAU,IACVxC,SAAU,mBAGd9I,GAAS0M,EAAAA,EAAAA,KAAW,IACpBsN,GAAW,MACXha,GAASmI,EAAAA,GAAAA,OAhCK,yDAkCdnI,GACEuL,EAAAA,GAAAA,IAAa,CACX5H,MAAO,sBACPhC,SAAS,eAAM+J,gBAAN,mBAAgBtB,YAAhB,eAAsBzI,UAAW,KAAMA,QAChD0D,KAAM,QACNiG,SAAU,IACVxC,SAAU,mBAGd9I,GAAS0M,EAAAA,EAAAA,KAAW,IA3CN,kBA4CP,kBA5CO,0DAAH,qDAgDT6P,GAAW,mCAAG,+FAClBvc,GAAS0M,EAAAA,EAAAA,KAAW,IACdvL,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IAFd,SAIV2c,EAAqBnb,EAAAA,EAAAA,IAAA,yBAEzB,CACEgb,UAAS,OAAE9J,QAAF,IAAEA,OAAF,EAAEA,EAAWO,eACtBhG,cAAa,OAAEyF,QAAF,IAAEA,OAAF,EAAEA,EAAWzF,cAC1BrM,OAAM,OAAE8R,QAAF,IAAEA,OAAF,EAAEA,EAAW7R,KAErBS,GAEIsb,EAAgC,OAARd,QAAQ,IAARA,GAAAA,EAAU3Z,OACpCX,EAAAA,EAAAA,IAAA,sBAEE,CACEqb,WAAYnb,KAAKC,UAAL,OAAema,QAAf,IAAeA,OAAf,EAAeA,EAAUrY,KAAI,SAACiR,GAAD,OAAOA,EAAE7T,QAClDic,sBAAsB,GAExBxb,GAEFyb,QAAQC,UAtBI,SAyBVD,QAAQE,IAAI,CAACN,EAAoBC,IAzBvB,OA0BZhK,GACFD,EAAaO,KAAK,cAAe,CAC/BC,MAAOnT,EACPkd,aAAcxK,IAGlB5G,GAAe,8BACf3L,GAAS0M,EAAAA,EAAAA,KAAW,IACpBsN,GAAW,MACXha,GAASmI,EAAAA,GAAAA,OAnCO,kDAqChBqD,GAAa,EAAD,GAAQ,yBACpBxL,GAAS0M,EAAAA,EAAAA,KAAW,IAtCJ,0DAAH,qDAsHbsH,GAAe,GACbT,GAAkB,SAACyJ,GACvBhJ,GAAegJ,GAGXC,GAAiB,mCAAG,6FACnBnB,EADmB,yCAEfzQ,GAAe,wCAFA,oBAInB2I,UAJmB,OAInB,EAAchS,OAJK,yCAKfqJ,GAAe,0CALA,cAOxBrL,GAAS0M,EAAAA,EAAAA,KAAW,IACdvL,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IARR,kBAUCwB,EAAAA,EAAAA,KACrB,sBACA,CACE6b,eAAgB3b,KAAKC,UAAUwS,IAC/BvT,OAAM,OAAE8R,QAAF,IAAEA,OAAF,EAAEA,EAAW7R,KAErBS,GAhBoB,uBAUdiJ,EAVc,EAUdA,KAQJqI,GACFD,EAAaO,KAAK,cAAe,CAC/BoH,QAASta,EACTua,aAAchQ,IAGlBuB,GAAe,wCACf3L,GAAS0M,EAAAA,EAAAA,KAAW,IACpBsN,GAAW5P,GA1BW,kBA2Bf,kBA3Be,kCA6BtBoB,GAAa,EAAD,GAAQ,iCACpBxL,GAAS0M,EAAAA,EAAAA,KAAW,IA9BE,0DAAH,qDAuEvB,OACE,iBAAK9I,UAAU,qCAAf,UAEGI,GAAW4H,GACV,iBAAKhI,UAAU,+DAAf,WACE,SAAC2F,EAAA,EAAD,CACEC,KAAM,GACNjK,MAAO,CAAE+J,OAAQ,WAAY/K,MAAO,gBAEtC,iBAAMgB,MAAO,CAAEC,aAAc,QAAUoE,UAAU,gBAAjD,SACG,2BAIL,qBAASA,UAAU,4CAAnB,WACE,SAAC,GAAD,CAAeD,MAAM,UAAU8J,UAAU,QAAQ3G,OAAK,EAAtD,UACE,gBACElD,UAAU,iFACV2J,IAAKqO,GAAW,UAChBrc,MAAO,CAAE0G,MAAO,QAASuJ,OAAQ,SACjCnQ,QAlCiB,SAAC4C,GAAO,IAAD,EAClCqM,GAAqB,GACrB4F,IAAmB,GACnBlK,GAAmB,SAAC,GAAD,CAAe0N,MAAOzV,KACzCgI,EAAmB,CACjBrC,cAAc,EACdjE,OAAO,UAAA1B,EAAEE,cAAF,eAAUqL,MAAO,iBA6BhBA,IAAKqO,OAIT,SAAC,GAAD,CAAelY,MAAM,gBAAgB8J,UAAU,QAAQ3G,OAAK,EAA5D,UACE,cACEpB,GAAG,iBACHgI,SAAU,EACVnI,UAAW2G,GACXtI,UAAS,qDAAgDK,EAAhD,gFACT5E,QAnCgB,SAAC4C,GAC3B2Q,EAAyB3Q,EAAEE,SA6BnB,UAOE,SAACwL,EAAA,EAAD,CAAM/J,UAAU,yBAIpB,SAAC,EAAD,CACEjE,OAAQgT,EACR/S,UAAWgT,EACXzM,iBAAkB,kBAAM2F,GAASW,QAAQN,SACzC/F,6BAnI2B,WACnCkI,GAAqB,GACrB4F,IAAmB,GACnBlK,GAAmB,qFACnBC,EAAmB,CACjBtG,MAAO,qBACPmE,QAAS,KACTC,SAAU,MACVC,gBAAiB,cACjBC,OAAQmU,MA2HF/V,uBAAsB,OAACuV,QAAD,IAACA,GAAAA,EAAShO,SAAS,wBAE3C,kBACEvI,KAAK,OACLwI,OAAO,UACPvI,SAAU6W,GACVpb,KAAK,aACL2E,GAAG,wBACHoI,IAAKhC,GACLlI,UAAS,SACT+B,SAAU3B,QAMhB,oBAASJ,UAAS,+BAAlB,UACE,iBAAKA,UAAU,cAAcrE,MAAO,CAAEoJ,UAAW,SAAjD,WACE,SAAC,GAAD,CACEhF,OAAgB,OAATkY,QAAS,IAATA,OAAA,EAAAA,EAAW7Z,QAAS,GAAK6Z,EAAY,GAC5CpO,UAAU,MACV3G,OAAK,EAHP,UAKE,gBACElD,UAAU,+BACVrE,MAAO,CAAEf,SAAU,OAAQ2e,WAAY,QAFzC,UAIGtZ,EAAAA,EAAAA,IAAegY,EAAW,GAAI,SAGnC,SAAC,GAAD,CAAelY,MAAM,kBAAkB8J,UAAU,MAAM3G,OAAK,EAA5D,UACE,SAAC+B,EAAA,EAAD,CACE6E,SAAU,EACVnI,UAAW2G,GACX7M,QA1LoB,WAC9BiP,GAAqB,GACrB4F,IAAmB,GACnBlK,GACE,SAAC,EAAD,CACElE,aAAY,OAAEyM,QAAF,IAAEA,OAAF,EAAEA,EAAW5R,SACzBoF,eAAgBA,GAChBH,YAAY,0BAGhBqE,EAAmB,CACjBtG,MAAO,kBACPmE,QAAS,SACTC,SAAU,OACVC,gBAAiB,YACjBC,OAAQgU,MA4KAle,GAAI,CACF+K,SAAU,WACVC,OAAQ,EACRC,IAAK,EACL,SAAU,CAAE5K,gBAAiB,cARjC,UAWE,SAACuP,EAAA,EAAD,CAAM/J,UAAU,yBAOxB,oBACEA,UAAS,0DACTrE,MAAO,CAAEoJ,UAAW,OAAQxK,aAAc,QAF5C,0BAIM0V,QAJN,IAIMA,OAJN,EAIMA,EAAc7R,OAJpB,mBAIgD,OAAZ6R,QAAY,IAAZA,OAAA,EAAAA,EAAc7R,QAAS,EAAI,IAAM,OAIrE,oBAAS4B,UAAS,+BAAlB,UACE,oBACEA,UAAS,UAAKmY,GAAL,wBACT1c,QA7HsB,WAC5BiP,GAAqB,GACrB4F,IAAmB,GACnBlK,GAAmB,SAAC,GAAD,KACnBC,EAAmB,CACjBtG,MAAM,MAsHJ,WAIE,SAACgX,GAAA,EAAD,CACE/W,UAAU,aACVrE,MAAO,CAAEmK,WAAY,YAEvB,iBAAM9F,UAAU,OAAhB,+BAKHkY,IACC,oBAASlY,UAAS,+BAAlB,UACE,oBACEA,UAAS,UAAKmY,GAAL,wBACT1c,QAzJmB,WAC3BiP,GAAqB,GACrB4F,IAAmB,GACnBlK,GAAmB,SAAC,GAAD,CAAmBuJ,gBAAiBA,MACvDtJ,EAAmB,CACjBtG,MAAO,oBACPmE,QAAS,SACTC,SAAU,MACVC,gBAAiB,YACjBC,OAAQgV,MA8IJ,WAIE,SAACG,GAAA,EAAD,CAAWxZ,UAAU,aAAarE,MAAO,CAAEmK,WAAY,YACvD,iBAAM9F,UAAU,OAAhB,+BAMN,oBAASA,UAAS,+BAAlB,UACE,oBACEA,UAAS,UAAKmY,GAAL,uBACT1c,QAAS,WACP,GACEyc,GACmB,KAAb,OAANf,QAAM,IAANA,OAAA,EAAAA,EAAQ/Y,SACiB,KAAb,OAAZ6R,QAAY,IAAZA,OAAA,EAAAA,EAAc7R,QAEd,OAAOqJ,GAAe,kLAIpB,KAjSZiD,GAAqB,GACrB4F,IAAmB,GACnBlK,GACE,8BAC4B,KAAb,OAAZ6J,QAAY,IAAZA,OAAA,EAAAA,EAAc7R,QAAd,qOAOLiI,EAAmB,CACjBtG,MAAO,aACPmE,QAAS,KACTC,SAAU,MACVC,gBAAiB,aACjBC,OAAQqU,MAqQN,WAkBE,SAAC3N,EAAA,EAAD,CAAQ/K,UAAU,aAAarE,MAAO,CAAEmK,WAAY,YACpD,iBAAM9F,UAAU,OAAhB,6BAKHkY,IACC,oBAASlY,UAAS,+BAAlB,UACE,oBACEA,UAAS,UAAKmY,GAAL,uBACT1c,QA7R2B,WACnCiP,GAAqB,GACrB4F,IAAmB,GACnBlK,GACE,0MAMFC,EAAmB,CACjBtG,MAAO,eACPmE,QAAS,KACTC,SAAU,MACVC,gBAAiB,cACjBC,OAAQsU,MA4QJ,WAIE,SAAC/V,EAAA,EAAD,CAAQ5C,UAAU,aAAarE,MAAO,CAAEmK,WAAY,YACpD,iBAAM9F,UAAU,OAAhB,gCAMN,SAAC,GAAD,CACE+F,uBAAwBpC,EACxBqC,qBAAsBpC,QC/mB9B,GA3BoB,SAAC,GAAe,IAAb2H,EAAY,EAAZA,MACfC,EAAgB,CAAEhR,gBAAiB,QACzC,OACE,+BACG,OAAIiR,MAAMF,IAAQ7L,KAAI,SAACrB,EAAGW,GAAJ,OACrB,iBAEEgB,UAAS,oDACPhB,EAAI,EAAI,QAAU,MADX,cAFX,WAME,SAAC0M,GAAA,EAAD,CACEC,QAAQ,cACR3L,UAAS,2BACTrE,MAAO6P,KAET,SAACE,GAAA,EAAD,CACEC,QAAQ,cACR3L,UAAS,uBACTrE,MAAO6P,MAdX,oBACoBxM,U,uFC8Q5B,GAjQsB,SAAC,GAQhB,IAAD,IAPJya,EAOI,EAPJA,QACAC,EAMI,EANJA,WACAC,EAKI,EALJA,cACAC,EAII,EAJJA,kBACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,UACAC,EACI,EADJA,SAEMC,EAAa,UACjBF,IAAcJ,EACV,oDACA,OAEAO,EAAU,UAAMH,IAAcJ,EAAa,OAAS,QAEpD/G,EAAsCoH,EAAtCpH,QAASuH,EAA6BH,EAA7BG,QAASrH,EAAoBkH,EAApBlH,UAAWjN,EAASmU,EAATnU,KAC7BgN,EAAeC,EAAUlU,MAAM,QAAU,GAC/CkU,EAAYD,EAAa,IAAMC,EAC/B,IAAMsH,EAAW,UAAGvH,EAAa,UAAhB,aAAG,EAAiBhT,SAAS,KACxCwa,EAAgBD,EAAcvH,EAAa,GAAGjU,MAAM,OAAS,GAC7D0b,EAAgBD,EAAc,GAC9BE,GAAgBC,EAAAA,EAAAA,IAAkBH,EAAc,IAChDI,GAAarS,EAAAA,EAAAA,QAAO,MAEtBsS,EAAWL,EAAc,IAAMM,SAAS9H,EAAa,KAAOhN,GAAQ,GAEnEuU,IACHM,GAAWF,EAAAA,EAAAA,IAAkBE,IAG/B,IAAME,EAAoBf,IAAsBM,EAC1ClH,EACS,OAAbqH,QAAa,IAAbA,GAAAA,EAAenH,WAAW,WAC1B,8BAA8BD,KAAKJ,GAC/B,QACa,OAAbwH,QAAa,IAAbA,GAAAA,EAAenH,WAAW,WAC1B,uBAAuBD,KAAKJ,GAC5B,QACA,kBAAkBI,KAAKJ,GACvB,WACA,kBAAkBI,KAAKJ,GACvB,MACA,wBAAwBI,KAAKJ,GAC7B,cACA,WAAWI,KAAKJ,GAChB,MADA,UAEAA,EAAU+H,UAAU/H,EAAUgI,YAAY,KAAO,UAFjD,aAEA,EAAqDC,cAErDC,GACJ,8BACGrB,GACC,iBACE1Z,UAAU,8CACVrE,MAAO,CAAEqf,OAAQ,GAFnB,SAIGrB,KAGH,iBACE,gBAAeO,EACfla,UAAS,uBAAkB2a,EAAoB,cAAgB,GAAtD,YACPb,IAAcL,EAAU,SAAW,IAErC1Z,MAAO4a,EAAoB,iBAAmB,gBALhD,SAOGA,GACC,SAACM,GAAA,EAAD,KAEA,SAACC,GAAA,EAAD,CAAU,gBAAehB,QAM7BiB,GACJ,kBAAMnb,UAAS,UAAK8Z,IAAcJ,EAAa,OAAS,QAAxD,sBAEE,iBAAM3Z,MAAO8S,EAAb,UAAyB5S,EAAAA,EAAAA,IAAe4S,EAAY,GAAI,GAAI,SAG1DuI,GACJ,gCACGD,GACD,gBACEnb,UAAS,UAAK8Z,IAAcJ,EAAa,YAAc,IACvD/d,MAAO,CAAEC,aAAcke,IAAcJ,GAAc,GAAK,GAF1D,mBAIM1G,EAJN,cAIoByH,QAIlBY,EACJxB,IAAmBK,EAAU,YAAc,UAEvCoB,EACJzB,IAAmBK,EAAU,UAAY,YAE3C,OACE,8BACU,OAAPvH,QAAO,IAAPA,GAAAA,EAASO,WAtGK1D,gCAsGuB+L,EAAAA,EAAAA,IAAiB1I,IACrD,kBAAM7S,UAAU,wDAAhB,WACE,gBACE2J,IAAKgJ,EACL/I,IAAKiJ,EACL9S,MAAO8S,EACP,gBAAeqH,EACfla,UAAS,gCAEV0Z,IACC,iBAAM1Z,UAAU,kCAAhB,SACG2Z,QAKP,gBACE3Z,UAAU,UACVrE,MAAO,CACL+J,OAAQ,mBACRrD,MACEyX,IAAcJ,EAAa,8BAAgC,QALjE,SAQgB,QAAb1G,GACC,iBAAKhT,UAAS,UAAKga,EAAL,+BAAd,WACE,4BACIN,IAAc,SAAC/F,GAAA,EAAD,CAAc3T,UAAWia,IACxCc,KAEFK,KAEY,gBAAbpI,GACF,iBAAKhT,UAAS,UAAKga,EAAL,iCAAd,WACE,4BACIN,IAAc,SAAC9F,GAAA,EAAD,CAAa5T,UAAWia,IACvCc,KAEFK,KAEY,QAAbpI,GACF,iBAAKhT,UAAS,UAAKga,EAAL,+BAAd,WACE,4BACIN,IAAc,SAAC9F,GAAA,EAAD,CAAa5T,UAAWia,IACvCc,KAEFK,KAEY,aAAbpI,GACF,iBACEhT,UAAS,UAAKga,EAAL,qBACTre,MAAO,CAAEpB,aAAcmf,EAAa,GAAK,GAF3C,WAIE,4BACIA,IAAc,SAAC9F,GAAA,EAAD,CAAa5T,UAAWia,IACvCc,KAEFK,KAEY,UAAbpI,GACF,iBAAKhT,UAAS,UAAKga,EAAL,sBAAd,WACE,2BACGe,GACCrB,GAAD,WAAmBY,MAErBa,GACD,iBACE,aAAYjB,EACZ,kBAAiBrH,EACjB9S,MAAM,gBACNC,UAAU,4BAJZ,WAME,SAACwb,GAAA,EAAD,CACE,aAAYtB,EACZ,kBAAiBrH,EACjB7S,UAAS,oBAAeqb,GACxB1f,MAAO,CAAEf,SAAU,OAErB,SAAC2T,GAAA,EAAD,CACErE,IAAKsQ,EACLxa,UAAS,4BAAuBsb,GAChC3f,MAAO,CACLC,aAAc,EACdgQ,OAAQ,GACRjR,MAAO,SAET6T,cAAeA,MAEjB,kBACE,aAAY0L,EACZ,kBAAiBrH,EACjB7S,UAAU,yCAHZ,WAKE,SAACyb,GAAA,EAAD,CAAU,aAAYvB,EAAS,kBAAiBrH,IALlD,WAMe4H,WAIJ,UAAbzH,GACF,iBACEhT,UAAS,UAAKga,EAAL,4CADX,WAGE,2BACGe,GACCrB,GAAD,WAAmBY,MAErBa,GACD,iBACE,aAAYjB,EACZ,kBAAiBrH,EACjB7S,UAAU,iCACVD,MAAM,gBAJR,WAME,SAAC2b,GAAA,EAAD,CACE,aAAYxB,EACZ,kBAAiBrH,EACjB7S,UAAS,oBAAeqb,MAE1B,SAAC9M,GAAA,EAAD,CACErE,IAAKsQ,EACLxa,UAAS,4BAAuBsb,GAChC3f,MAAO,CACLC,aAAc,EACdgQ,OAAQ,GACRjR,MAAO,SAET6T,cAAeA,MAEjB,kBACE,aAAY0L,EACZ,kBAAiBrH,EACjB7S,UAAU,yCAHZ,WAKE,SAAC2b,GAAA,EAAD,CACE,aAAYzB,EACZ,kBAAiBrH,EACjBlX,MAAO,CAAEf,SAAU,MARvB,OAUS6f,YAKb,iBAAKza,UAAS,UAAKga,EAAL,sBAAd,WACE,4BACIN,IAAc,SAAC9F,GAAA,EAAD,CAAa5T,UAAWia,IACvCc,KAEFK,UCrIf,GAjI0B,SAAC,GAKpB,IAJL1B,EAII,EAJJA,WACAkC,EAGI,EAHJA,eACAlV,EAEI,EAFJA,cACAiT,EACI,EADJA,cAEA,EAGIiC,EAFFC,WAAc1e,EADhB,EACgBA,KAAMsE,EADtB,EACsBA,KAAMmE,EAD5B,EAC4BA,KAC1BkW,EACEF,EADFE,qBAGIC,EAAkB,UACtBrC,EAAa,QAAU,YADD,qDAGlBsC,EAAmB,CACvBzhB,aAAc,EACd8H,MAAO,aACPhI,UAAWqf,EAAa,IAAM,KAE1BuC,GACJ,iBAAMjc,UAAU,sCAAsCrE,MAAO,CAAEqf,OAAQ,GAAvE,SACGrB,IAICuC,EAAeza,EAAKyR,WAAW,gBAAkB,gBAAkB/V,EAEzE,OACE,iBACE6C,UAAU,uGACVrE,MAAO,CAAEpB,aAAc,IAFzB,WAKImf,IACA,SAAChT,EAAD,CACE3G,MAAM,qBACN8J,UAAU,eACV3G,OAAK,EAHP,UAKE,SAAC+B,EAAA,EAAD,CACE,qBAAmB,EACnB9K,GAAI,CACF+K,SAAU,WACViX,KAAM,GACN/W,IAAK,GACLzK,MAAO,UACP,SAAU,CACRH,gBAAiB,cARvB,UAYE,SAAC6K,EAAA,EAAD,CAAO,qBAAmB,SAM9BqU,IACA,SAAChT,EAAD,CACE3G,OAAmB,OAAZmc,QAAY,IAAZA,OAAA,EAAAA,EAAc9d,QAAS,GAAK8d,EAAe,GAClDrS,UAAU,MACV3G,OAAK,EAHP,UAKE,iBACElD,UAAS,YACTrE,MAAO,CAAEhB,MAAO,YAAaC,SAAU,GAAIogB,OAAQ,GAFrD,UAIG/a,EAAAA,EAAAA,IAAeic,EAAc,GAAI,KAAO,qBAK/C,8BACO,OAAJza,QAAI,IAAJA,GAAAA,EAAMyR,WAAW,WAChB,iBAAKlT,UAAS,UAAK+b,EAAL,sBAAd,UACGE,GACD,gBACEtgB,MAAOqgB,EACPrS,IAAKmS,GAhFKtM,sCAiFV5F,IAAI,qBAGF,OAAJnI,QAAI,IAAJA,GAAAA,EAAMyR,WAAW,WACnB,iBACElT,UAAS,UAAK+b,EAAL,gBACTpgB,MAAO,CAAE0G,MAAO,6BAFlB,WAIE,iBAAMrC,UAAU,MAAMrE,MAAO,CAAEqf,OAAQ,GAAvC,SACGrB,KAEH,kBACEhQ,IAAKmS,GAAwB,GAC7B5H,UAAQ,EACRD,UAAQ,EACRtY,MAAOqgB,EAJT,SAMG7e,OAGC,OAAJsE,QAAI,IAAJA,GAAAA,EAAMyR,WAAW,WACnB,iBAAKlT,UAAS,UAAK+b,EAAL,sBAAd,UACGE,GACD,kBACEtS,IAAKmS,GAAwB,GAC7B5H,UAAQ,EACRD,UAAQ,EACRtY,MAAOqgB,EAJT,SAMG7e,QAIL,SAAC,GAAD,CACEuc,WAAYA,EACZC,cAAeA,EACfG,WAAW,EACXC,SAAU,CACRpH,QAASmJ,EACT5B,QAAS,GACTrH,UAAW1V,EACXyI,KAAAA,WCzGRwW,GAAe,CACnBzhB,MAAO,YACP,SAAU,CAAEH,gBAAiB,cAGzBsc,IAAUjL,EAAAA,EAAAA,aACd,WAaEwQ,GACI,IAZFzC,EAYC,EAZDA,kBACAC,EAWC,EAXDA,eACAyC,EAUC,EAVDA,YACAC,EASC,EATDA,aACAC,EAQC,EARDA,eACA9V,EAOC,EAPDA,cACA+S,EAMC,EANDA,QACAgD,EAKC,EALDA,QACAC,EAIC,EAJDA,QACAd,EAGC,EAHDA,eAIIe,GAAgBxU,EAAAA,EAAAA,QAAO,MAC7B,GAAuCjM,EAAAA,EAAAA,IAAYC,EAAAA,IAA3CF,EAAR,EAAQA,aAAc6V,EAAtB,EAAsBA,aACda,EAAgC8J,EAAhC9J,QAASuH,EAAuBuC,EAAvBvC,QAASrH,EAAc4J,EAAd5J,UAC1B,SAAyC4J,QAAzC,IAAyCA,OAAzC,EAAyCA,EAASpJ,OAA1CvW,EAAR,EAAQA,IAAKoK,EAAb,EAAaA,WAAY/J,EAAzB,EAAyBA,KAAMgK,EAA/B,EAA+BA,MACzBwO,EAAiB7Y,IAAQb,EAAaa,IACtC8f,EAAU,UAAM1V,EAAN,cAAsB/J,EAAtB,cAAgCgK,GAC1C0V,EAAYlH,EAAc,OAAG8G,QAAH,IAAGA,OAAH,EAAGA,EAAS3f,IAAM,KAC5CggB,EAAsBP,IAAiBM,EACvCE,EAAejgB,KAAG,OAAK4f,QAAL,IAAKA,OAAL,EAAKA,EAASrJ,OAAOvW,KACvCkgB,EAAc,IAAI1K,KAAKmK,EAAQlK,WAC/B0K,EAAc,IAAI3K,KAAJ,OAASoK,QAAT,IAASA,OAAT,EAASA,EAASnK,WAChC2K,GAAa9J,EAAAA,EAAAA,IAAa4J,MAAiB5J,EAAAA,EAAAA,IAAa6J,GACxDE,GACHxH,IAAD,OACA7D,QADA,IACAA,OADA,EACAA,EAAc9U,gBACZ+f,GAAgBG,GACdxD,EAAa4C,GAAeQ,EAE5BnD,GACJ,iCACE,SAACjT,EAAD,CAAe3G,MAAM,oBAAoB8J,UAAU,MAAM3G,OAAK,EAA9D,UACE,SAAC+B,EAAA,EAAD,CACE,wBAAsB,EACtBjF,UAAS,6BACT7F,GAAIiiB,GAHN,UAKE,SAACxZ,EAAA,EAAD,CAAQ,wBAAsB,EAAMjH,MAAO,CAAEf,SAAU,WAG3D,SAAC8L,EAAD,CAAe3G,MAAM,oBAAoB8J,UAAU,MAAM3G,OAAK,EAA9D,UACE,SAAC+B,EAAA,EAAD,CACE,sBAAoB,EACpBjF,UAAS,6BACT7F,GAAIiiB,GAHN,UAKE,SAACrS,EAAA,EAAD,CAAM,sBAAoB,EAAMpO,MAAO,CAAEf,SAAU,aAkB3D,OAZAwG,EAAAA,EAAAA,YAAU,WACR,OAAIub,QAAJ,IAAIA,GAAAA,EAAe9T,UACjB8T,EAAc9T,QAAQuU,UAAtB,OAAkCX,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAStK,WAE5C,KAEH/Q,EAAAA,EAAAA,YAAU,WACJsY,IACF2D,EAAAA,EAAAA,IAAgB,OAAChB,QAAD,IAACA,OAAD,EAACA,EAAgBxT,WAElC,CAACyT,KAGF,iCACE,qBACEtc,UAAS,wCACP2V,EAAiB,MAAQ,SAE3Bha,MAAO,CAAEoJ,UAAWgY,EAAe,EAAI,IAJzC,UAMGI,GACC,SAACzW,EAAD,CAAe3G,MAAK,eAAkB8J,UAAU,YAAY3G,OAAK,EAAjE,UACE,SAACkI,EAAA,EAAD,CACEzB,IAAKzC,EACL0C,IAAKzM,EACL,cAAayf,EACb5c,UAAU,4BAIF,OAAZ8R,QAAY,IAAZA,OAAA,EAAAA,EAAc9U,eAAe,iBAAMrB,MAAO,CAAE0G,MAAO,OAErD,iBACErC,UAAS,qFACI2V,EAAiB,UAAY,gBAC1C,WAAUkH,EACV,mBAAkB3C,EAJpB,UAMGR,GACC,iBACE1Z,UAAU,6BACVrE,MAAO,CAAE+J,OAAQ,qBAFnB,aAII,OAAC+W,QAAD,IAACA,GAAAA,EAAS9J,UACT6J,KAAkB,OAACZ,QAAD,IAACA,GAAAA,EAAgBC,eACpC,SAACnV,EAAD,CAAe3G,MAAM,cAAc8J,UAAU,UAAU3G,OAAK,EAA5D,UACE,SAAC+B,EAAA,EAAD,CACE,wBAAsB,EACtBjF,UAAS,OACT7F,IAAE,kBAAOiiB,IAAP,IAAqBkB,UAAW,mBAHpC,UAKE,SAACC,GAAA,EAAD,CACE,wBAAsB,EACtB5hB,MAAO,CAAEf,SAAU,WAK3B,SAAC8L,EAAD,CAAe3G,MAAM,gBAAgB8J,UAAU,UAAU3G,OAAK,EAA9D,UACE,SAAC+B,EAAA,EAAD,CACE,sBAAoB,EACpBjF,UAAS,GACT7F,GAAIiiB,GAHN,UAKE,SAAC/W,EAAA,EAAD,CAAO,sBAAoB,EAAM1J,MAAO,CAAEf,SAAU,WAGxD,SAAC8L,EAAD,CAAe3G,MAAM,iBAAiB8J,UAAU,UAAU3G,OAAK,EAA/D,UACE,SAAC+B,EAAA,EAAD,CACE,mBAAiB,EACjB,6BAAqBwX,QAArB,IAAqBA,OAArB,EAAqBA,EAASlK,UAC9BvS,UAAS,OACT7F,GAAIiiB,GAJN,UAME,SAACoB,GAAA,EAAD,CACE,mBAAiB,EACjB,6BAAqBf,QAArB,IAAqBA,OAArB,EAAqBA,EAASlK,UAC9B5W,MAAO,CAAEf,SAAU,cAM3B,wBAEDuiB,IACC,iBAAM,cAAaP,EAAY5c,UAAU,oBAAzC,SACG7C,IAGJwY,GAAkB8D,IAAY6C,IAC7B,iBACE,WAAUO,EACV,mBAAkB3C,EAClBna,MAAM,sBACNC,UAAS,qFAJX,UAOE,SAAC6V,GAAA,EAAD,CACE,WAAUgH,EACV,mBAAkB3C,EAClBve,MAAO,CAAEf,SAAU,IACnBoF,UAAU,qCAIR,OAAPyc,QAAO,IAAPA,OAAA,EAAAA,EAAS9J,WAAY+G,IACpB,SAAC,GAAD,CACED,QAASA,EACTC,WAAYA,EACZC,cAAeA,EACfC,kBAAmBA,EACnBC,eAAgBA,EAChBE,SAAU,CACR0D,MAAOZ,EACPlK,QAAAA,EACAuH,QAAAA,EACArH,UAAAA,KAIL6G,IAAU,OAAIkC,QAAJ,IAAIA,OAAJ,EAAIA,EAAgBC,cAC7B,SAAC,GAAD,CACEnC,WAAYA,EACZkC,eAAgBA,EAChBlV,cAAeA,EACfiT,cAAeA,KAGX,OAAP8C,QAAO,IAAPA,OAAA,EAAAA,EAAS9J,UACR+G,KACA,OAACkC,QAAD,IAACA,GAAAA,EAAgBC,cAChBW,IACC,SAAC,GAAD,CACE/C,QAASA,EACTC,WAAYA,EACZC,cAAeA,EACfC,kBAAmBA,EACnBC,eAAgBA,EAChBE,SAAU,CACR0D,MAAOZ,EACPlK,QAAAA,EACAuH,QAAAA,EACArH,UAAAA,MAIR,iBACE,WAAUgK,EACV,mBAAkB3C,EAClBla,UAAS,4BACPka,GAAO,OAAI0B,QAAJ,IAAIA,GAAAA,EAAgBC,WAAa,OAAS,IAJrD,WAOE,iBACE/Z,GAAE,iBAAK2a,QAAL,IAAKA,OAAL,EAAKA,EAAS3f,IAAd,cACFkD,UAAU,QACVrE,MAAO,CAAE+hB,QAAS,QAClBC,gBAAiBjE,EACjB,6BAAqB+C,QAArB,IAAqBA,OAArB,EAAqBA,EAASlK,UAC9BrI,IAAKwP,EAAa2C,EAAiBM,KAErC,kBACE,WAAUE,EACV,mBAAkB3C,EAClBla,UAAU,8DAHZ,WAKGmT,EAAAA,EAAAA,IAAgB6J,GAChBrH,IACC,8BACG8D,GACC,SAACnG,GAAA,EAAD,CACE,WAAUuJ,EACV,mBAAkB3C,EAClBla,UAAU,yBAGZ,SAAC2F,EAAA,EAAD,CACEC,KAAM,GACN5F,UAAU,sCASzBkd,IACC,gBAAKld,UAAS,gDAAd,UACGyS,EAAAA,EAAAA,IAAgBuK,WAO7B,MCvPA,GA7BuB,SAAC,GAKjB,IAJLjhB,EAII,EAJJA,OACAC,EAGI,EAHJA,UACA4hB,EAEI,EAFJA,eACAC,EACI,EADJA,2BAEA,OACE,UAAC,EAAD,CACE9iB,WAAYgB,EACZf,cAAegB,EACff,gBAAiB,CAAE+C,SAAU,MAAOC,WAAY,QAChD/C,aAAc,CAAE8C,SAAU,SAAUC,WAAY,SAJlD,WAME,UAAC6B,EAAA,EAAD,CAAU3F,GAAIO,EAAee,QAASmiB,EAAtC,WACE,SAAClb,EAAA,EAAD,CAAcvI,GAAIU,EAAlB,UACE,SAACkP,EAAA,EAAD,OAEF,SAAC,EAAD,+BAEF,UAACjK,EAAA,EAAD,CAAU3F,GAAIO,EAAee,QAASoiB,EAAtC,WACE,SAACnb,EAAA,EAAD,CAAcvI,GAAIU,EAAlB,UACE,SAAC+H,EAAA,EAAD,OAEF,SAAC,EAAD,oC,0x2GCeR,GApCsB,SAAC,GAAmB,IAAD,IAAhBkb,EAAgB,EAAhBA,UACf7hB,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAA7BF,aACF8hB,GAAc5V,EAAAA,EAAAA,QAAO,MAC3B,OACE,iBAAKnI,UAAU,oEAAf,WACI8d,IACA,gBAAI9d,UAAU,YAAd,kBACQ,KACN,iBACEA,UAAU,UACVrE,MAAO,CAAEhB,MAAO,WAFlB,8BAGKsF,EAAAA,EAAAA,IAAc,OACjBhE,QADiB,IACjBA,GADiB,UACjBA,EAAckB,YADG,aACjB,EAAoBwB,MAAM,KAAK,GAC/B,GACA,UANF,aAGK,EAIFmc,iBAAwB,IAT7B,mBAaF,SAACvM,GAAA,EAAD,CACErE,IAAK6T,EACL/d,UAAW,sBACXrE,MAAO,CAAEC,aAAc,GAAIgQ,OAAQ,OACnC4C,cAAewP,MAEjB,cAAGhe,UAAU,eAAerE,MAAO,CAAEoJ,WAAY,GAAIpK,MAAO,WAA5D,8HAIA,cAAGqF,UAAU,KAAKrE,MAAO,CAAEhB,MAAO,WAAlC,6C,WCmDN,GAjFmB,SAAC,GAMb,IAAD,IALJsjB,EAKI,EALJA,UACAC,EAII,EAJJA,oBACAC,EAGI,EAHJA,sBACAC,EAEI,EAFJA,gBACA1X,EACI,EADJA,cAEA,GAAuCxK,EAAAA,EAAAA,IAAYC,EAAAA,IAA3CF,EAAR,EAAQA,aAAc6V,EAAtB,EAAsBA,aAChB/U,EAAuB,OAAZ+U,QAAY,IAAZA,GAAAA,EAAc9U,YAAd,OACb8U,QADa,IACbA,OADa,EACbA,EAAc/U,SADD,WAEbE,EAAAA,EAAAA,IAAwBhB,EAAD,OAAe6V,QAAf,IAAeA,OAAf,EAAeA,EAAc5U,cAFvC,aAEb,EAA4DC,KAChE,OACE,qBACE6C,UAAS,qIAETvE,QAAS2iB,EAHX,WAKE,SAAC1X,EAAD,CAAe3G,MAAM,UAAU8J,UAAU,eAAe3G,OAAK,EAA7D,UACE,SAAC+B,EAAA,EAAD,CACExJ,QAASwiB,EACTje,UAAS,wBACT7F,GAAI,CACFQ,MAAO,UACP,SAAU,CAAEH,gBAAiB,cALjC,UAQE,SAAC6jB,GAAA,EAAD,SAGJ,SAAC3X,EAAD,CACE3G,MAAmB,OAAZ+R,QAAY,IAAZA,GAAAA,EAAc9U,YAAc,aAAe,eAClD6M,UAAU,eACV3G,OAAK,EAHP,UAKE,SAAC+B,EAAA,EAAD,CACE9K,GAAI,CACFuL,OAAQ,OACR,SAAU,CAAElL,gBAAiB,cAE/BwF,UAAU,uBACVvE,QACc,OAAZqW,QAAY,IAAZA,GAAAA,EAAc9U,YACVkhB,EACAC,EATR,UAYE,SAAC/S,EAAA,EAAD,CACEzB,IACc,OAAZmI,QAAY,IAAZA,GAAAA,EAAc9U,YAAd,OACI8U,QADJ,IACIA,OADJ,EACIA,EAAc5C,gBACd,WAAAjS,EAAAA,EAAAA,IAAwBhB,EAAD,OAAe6V,QAAf,IAAeA,OAAf,EAAeA,EAAc5U,cAApD,eACIgK,aAAc,GAExB0C,IAAK,wBAKX,iBAAM5J,UAAU,2BAA2BD,MAAOhD,EAAlD,UACGkD,EAAAA,EAAAA,IAAelD,EAAU,GAAI,OAGhC,SAAC2J,EAAD,CAAe3G,MAAM,aAAa8J,UAAU,aAAa3G,OAAK,EAA9D,UACE,SAAC+B,EAAA,EAAD,CACExJ,QAASwiB,EACTje,UAAU,mBACV7F,GAAI,CACF+K,SAAU,WACVC,MAAO,GACPC,IAAK,EACLzK,MAAO,UACP,SAAU,CAAEH,gBAAiB,cARjC,UAWE,SAAC6K,EAAA,EAAD,Y,sBCxBJ4U,GAAa,CACjBvU,OAAQ,UACRmB,QAAS,MACTlM,MAAO,UACP,SAAU,CAAEH,gBAAiB,cAGzBkM,GAAgBC,EAlBF,CAAEhM,MAAO,QACP,CACpBiM,SAAU,IACVjM,MAAO,OACP8I,WAAY,eACZ7I,SAAU,GACViM,QAAS,WACTtM,aAAc,EACduM,OAAQ,iBACRtM,gBAAiB,SAWf8jB,IAAuB,EACvBC,IAAkB,EA64BtB,GA14BqB,SAAC,GAQf,IAPLhK,EAOI,EAPJA,YACAiK,EAMI,EANJA,eACAC,EAKI,EALJA,UACA3iB,EAII,EAJJA,aACAuO,EAGI,EAHJA,cACAyT,EAEI,EAFJA,UACA1M,EACI,EADJA,eAEA,GAMIlV,EAAAA,EAAAA,IAAYC,EAAAA,IALdF,EADF,EACEA,aACA6V,EAFF,EAEEA,aACApD,EAHF,EAGEA,QACAE,EAJF,EAIEA,aACAC,EALF,EAKEA,kBAEMxO,GAAqBnE,EAAAA,EAAAA,IAAYiE,EAAAA,IAAjCE,iBACFjE,GAAWC,EAAAA,EAAAA,MACjB,GAA8BoE,EAAAA,EAAAA,WAAS,GAAvC,eAAOie,EAAP,KAAgBC,EAAhB,KACA,GAA4Cle,EAAAA,EAAAA,WAAS,GAArD,eAAO+b,EAAP,KAAuBoC,EAAvB,KACA,GAA0Cne,EAAAA,EAAAA,WAAS,GAAnD,eAAOoe,EAAP,KAAsBC,EAAtB,KACA,GAAwCre,EAAAA,EAAAA,WAAS,GAAjD,eAAOse,EAAP,KAAqBC,EAArB,KACA,GAAgCve,EAAAA,EAAAA,UAAS,IAAzC,eAAOsX,EAAP,KAAiBkH,EAAjB,KACA,GAAwCxe,EAAAA,EAAAA,UAAS,IAAjD,eAAO8b,EAAP,KAAqB2C,EAArB,KACA,GAAoDze,EAAAA,EAAAA,WAAS,GAA7D,gBAAO0e,GAAP,MAA2BC,GAA3B,MACA,IAA4C3e,EAAAA,EAAAA,UAAS,CACnDob,WAAY,KACZC,qBAAsB,KAFxB,iBAAOF,GAAP,MAAuByD,GAAvB,MAIMC,IAAgBnX,EAAAA,EAAAA,QAAO,MACvBoX,IAAepX,EAAAA,EAAAA,QAAO,MACtBqX,IAAarX,EAAAA,EAAAA,QAAO,MACpBsX,IAAqBtX,EAAAA,EAAAA,QAAO,MAClC,IAAkD1H,EAAAA,EAAAA,UAAS,IAA3D,iBAAOmZ,GAAP,MAA0B8F,GAA1B,MACA,IAA4Cjf,EAAAA,EAAAA,UAAS,IAArD,iBAAOoZ,GAAP,MAAuB8F,GAAvB,MACA,IAAsClf,EAAAA,EAAAA,WAAS,GAA/C,iBAAO6b,GAAP,MAAoBsD,GAApB,MACA,IAAwDnf,EAAAA,EAAAA,UAAS,MAAjE,iBAAOof,GAAP,MAA6BC,GAA7B,MAEMC,GAAgB,SAACzZ,GACrB+Y,GAAkB,CAChBxD,WAAY,KACZC,qBAAsB,KAExByD,GAAa1W,QAAQ1H,MAAQ,GAC7B6d,GAAgB,GAChB,OAAI1Y,QAAJ,IAAIA,GAAAA,EAAS0Z,wBACblB,GAAiB,GACjBU,GAAW3W,QAAQuU,UAAY,KAIjC,IAA8C3c,EAAAA,EAAAA,WAAS,GAAvD,iBAAOwf,GAAP,MAAwBC,GAAxB,MAKM9B,GAAkB,WAClB6B,IAAiBC,IAAmB,IAQpCC,GAAmB,WAAO,IAAD,GACT,EACpB/B,KACA,UAAAmB,GAAa1W,eAAb,SAAsBN,SAGlB6X,GAAoB,kBACxBL,GAAc,CAAEC,uBAAuB,KAEnC3X,GAAqB,SAACjJ,GAE1BC,aAAaC,QAAQ,eAAgB3B,KAAKC,UAAUwB,IACpDhD,GAASmD,EAAAA,EAAAA,IAAgBH,KAGrBwI,GAAe,WAGf,IAAD,IAFHC,EAEG,uDAFK,6BACR9H,EACG,uDADK,mBAER3D,GACEuL,EAAAA,GAAAA,IAAa,CACX5H,MAAAA,EACAhC,SAAS,UAAA8J,EAAMC,gBAAN,mBAAgBtB,YAAhB,eAAsBzI,UAAW8J,EAAM9J,QAChD0D,KAAM,QACNiG,SAAU,IACVxC,SAAU,oBAKV6C,GAAiB,WAAuC,IAAtChK,EAAqC,uDAA3B,uBAChC3B,GACEuL,EAAAA,GAAAA,IAAa,CACX5J,QAAAA,EACA0D,KAAM,UACNiG,SAAU,KACVxC,SAAU,oBAcVmb,GAAY,SAAC1W,EAAKoQ,GACtB,GAAKpQ,GAAQoQ,EAAb,CACA,IAAQuG,EAAsBvG,EAAtBuG,SAAUC,EAAYxG,EAAZwG,QAClBnkB,GAASsO,EAAAA,GAAAA,KAAqB,IAC9BL,GACE,SAAC,GAAD,CACE0J,SAAUwM,EAAU5W,EAAM,KAC1BqK,SAAWuM,EAAgB,KAAN5W,KAGzBvN,GACEuO,EAAAA,GAAAA,IAAc,CACZ3G,cAAc,EACdjE,MAAOugB,GAAQ,UAAOC,EAAU,QAAU,QAA3B,YAGnBZ,GAAkB,MAcda,GAAS,mCAAG,WAAOC,EAAQna,GAAf,oFACXma,GAAWna,EADA,wDAEhBqZ,GAAkBc,GACVH,EAAsBha,EAAtBga,SAAUC,EAAYja,EAAZia,QACZhjB,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,EAAcykB,MAAM,IAJpC,kBAMSjjB,EAAAA,EAAAA,IAAA,6BAAgCgjB,GAAUljB,GANnD,gBAMNiJ,EANM,EAMNA,KAEFma,EAAWlR,IAAIC,gBAAgB,IAAIkR,KAAK,CAACpa,KAC/C6Z,GAAUM,EAAU,CAAEL,SAAAA,EAAUC,QAAAA,IATlB,kDAWd3Y,GAAa,EAAD,GAAQ,uBACpB+X,GAAkB,IAZJ,0DAAH,wDAgBTkB,GAAY,mCAAG,WAAOJ,GAAP,gFACdA,EADc,wDAEnBf,GAAqBe,GACrB9B,GAAW,GACLphB,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,EAAcykB,MAAM,IAJjC,kBAMMjjB,EAAAA,EAAAA,IAAA,6BAAgCgjB,GAAUljB,GANhD,gBAMTiJ,EANS,EAMTA,MAEFsa,EAAOC,SAASC,cAAc,MAC/BC,KAAOxR,IAAIC,gBAAgB,IAAIkR,KAAK,CAACpa,KAC1Csa,EAAKI,aAAa,WAAYT,EAAO9hB,MAAM,OAAO,IAAM8hB,GACxDM,SAASI,KAAKC,YAAYN,GAC1BA,EAAKvY,QACLuY,EAAKO,SAEL3B,GAAqB,IACrBf,GAAW,GAhBM,kDAkBjB/W,GAAa,EAAD,GAAQ,0BACpB8X,GAAqB,IACrBf,GAAW,GApBM,0DAAH,sDAwBZ2C,GAAa,mCAAG,WAAOhb,GAAP,kFACpBkY,GAAe,GACTjhB,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IAFZ,kBAIKwB,EAAAA,EAAAA,IAAA,8BACLqU,QADK,IACLA,OADK,EACLA,EAAchV,KAC9BS,GANgB,gBAIViJ,EAJU,EAIVA,KAIRyY,EACEzY,EAAK9G,KAAI,SAAC6hB,GAER,OADAA,EAAG,MAAW,EACPA,MAGX/C,GAAe,GACXC,GAAW3iB,GAAa,GAC5B,OAAIwK,QAAJ,IAAIA,GAAAA,EAASkb,aAAazZ,GAAe,gCACzC4W,GAAW,GAjBO,kDAmBlB/W,GAAa,EAAD,GAAQ,2BACpB4W,GAAe,GACXC,GAAW3iB,GAAa,GAC5B6iB,GAAW,GAtBO,0DAAH,sDA0Bb8C,GAAW,mCAAG,gHACE,EACpBC,KACAtD,KACKxC,GAAeC,YAAc,UAAC2D,GAAW3W,eAAZ,OAAC,EAAoBuU,UAJrC,wDAMZuE,GANY,kBAOb/F,IAPa,IAQhBzJ,SAAS,UAAAqN,GAAW3W,eAAX,eAAoBuU,YAAa,KAEtCwE,IAAkBrG,EAAAA,EAAAA,IAAgB,UAACoG,EAAQ9F,kBAAT,aAAC,EAAoB1e,MAEvD0kB,EAAS,CACb/kB,IAAKwV,KAAKwP,MACVzO,OAAQ,CACNvW,IAAG,OAAEb,QAAF,IAAEA,OAAF,EAAEA,EAAca,IACnBoK,WAAY,GACZ/J,KAAM,GACNgK,MAAO,IAETwL,QAAO,OAAEgP,QAAF,IAAEA,OAAF,EAAEA,EAAS7F,qBAClB5B,QAAS,GACTrH,WACS,OAAP8O,QAAO,IAAPA,GAAA,UAAAA,EAAS9F,kBAAT,eAAqB1e,MAArB,UAES,OAAPwkB,QAAO,IAAPA,GAAAA,EAASI,cAAT,aACUJ,EAAQI,eACdH,EAAc,cACR,UAAAD,EAAQ9F,kBAAR,eAAoBjW,OAAQ,IAClC,IAERuM,QAAO,OAAEwP,QAAF,IAAEA,OAAF,EAAEA,EAASxP,QAClBI,WAAW,IAAID,MAAO0P,cACtBC,MAAM,GAER7C,IAAsB,GACtBH,EAAY,CAAC4C,GAAF,eAAa9J,KACxBgI,KACApB,GAAW,GACLphB,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,EAAc8M,UAAU,IAvCtC,UA2CVmZ,EAASN,EAAc,6CAIvB7Y,EAAW,IAAIC,UACZC,OAAO,aAAc0Y,EAAQ9F,YACtC9S,EAASE,OAAO,gBAAhB,OAAiC0Y,QAAjC,IAAiCA,OAAjC,EAAiCA,EAASI,eAC1ChZ,EAASE,OAAO,UAAW0Y,EAAQxP,SACnCpJ,EAASE,OAAO,SAAhB,OAA0B6I,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAchV,KAnDxB,UAoDOW,EAAAA,EAAAA,KAAWykB,EAAQnZ,EAAUxL,GApDpC,iBAoDRiJ,EApDQ,EAoDRA,KAEJqI,IAA+B,OAAZD,QAAY,IAAZA,GAAAA,EAAcO,KAAK,eAAgB3I,IAC1D8a,KACAllB,GAASkT,EAAAA,EAAAA,KAAeZ,IAxDR,mDA0DhB9G,GAAa,EAAD,GAAQ,yBACpB+W,GAAW,GA3DK,2DAAH,qDA+DXwD,GAAa,mCAAG,2FACpB/lB,GAAS0M,EAAAA,EAAAA,KAAW,IACpB6V,GAAW,GACLphB,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IAHZ,kBAMZwB,EAAAA,EAAAA,IAAA,sBAEJ,CAAEqb,WAAYnb,KAAKC,UAAU,CAAC2e,KAC9Bhf,GATgB,cAWdsR,IACU,OAAZD,QAAY,IAAZA,GAAAA,EAAcO,KAAK,cAAe,CAChCiT,aAAc7F,EACd8F,SAAQ,OAAEpmB,QAAF,IAAEA,OAAF,EAAEA,EAAca,IACxBF,KAAMkV,KAGV/J,GAAe,gCACfkX,EAAYlH,EAASzd,QAAO,SAACinB,GAAD,OAAY,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAKzkB,OAAQyf,MAClDngB,GAAS0M,EAAAA,EAAAA,KAAW,IACpB1M,GAASkT,EAAAA,EAAAA,KAAeZ,IACxBiQ,GAAW,GAtBO,kBAuBX,iBAvBW,kCAyBlB/W,GAAa,EAAD,GAAQ,2BACpBxL,GAAS0M,EAAAA,EAAAA,KAAW,IACpB6V,GAAW,GA3BO,0DAAH,qDA+Bb2D,GAAa,mCAAG,WAAOC,EAAmBC,GAA1B,8FAGhB5G,GAAeC,YACdyC,KAAyB9B,IAE3BiG,EAAAA,EAAAA,IAAeF,GANE,yCAQXnmB,GACLuL,EAAAA,GAAAA,IAAa,CACX5J,QAAS,4DACT0D,KAAM,UACNiG,SAAU,IACVxC,SAAU,iBAbI,cAiBpB0a,IAAe,GACfR,IAAsB,GAEhBuC,GApBc,kBAqBf/F,IArBe,IAsBlBzJ,QAASoQ,GAAqB,KAE1BX,IAAkBrG,EAAAA,EAAAA,IAAgB,UAACoG,EAAQ9F,kBAAT,aAAC,EAAoB1e,MAEvDulB,EAAa,CACjB5lB,IAAKwV,KAAKwP,MACVzO,OAAQ,CACNvW,IAAG,OAAEb,QAAF,IAAEA,OAAF,EAAEA,EAAca,IACnBoK,WAAY,GACZ/J,KAAM,GACNgK,MAAO,IAETwL,QAAO,OAAEgP,QAAF,IAAEA,OAAF,EAAEA,EAAS7F,qBAClB5B,QAAS,GACTrH,WACS,OAAP8O,QAAO,IAAPA,GAAA,UAAAA,EAAS9F,kBAAT,eAAqB1e,MAArB,UAES,OAAPwkB,QAAO,IAAPA,GAAAA,EAASI,cAAT,aACUJ,EAAQI,eACdH,EAAc,cACR,UAAAD,EAAQ9F,kBAAR,eAAoBjW,OAAQ,IAClC,IAERuM,QAAO,OAAEwP,QAAF,IAAEA,OAAF,EAAEA,EAASxP,QAClBI,UAAWiQ,EACXP,MAAM,GAERhD,EACElH,EAASrY,KAAI,SAAC6hB,GAAD,OAAUA,EAAIzkB,MAAQyf,EAAemG,EAAanB,MAEjEnB,KACAzB,GAAW,GACLphB,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,EAAc8M,UAAU,IAtDpC,UA0DZmZ,EAASN,EAAc,mDAIvB7Y,EAAW,IAAIC,UACZC,OAAO,aAAc0Y,EAAQ9F,YACtC9S,EAASE,OAAO,iBAAkBuT,GAClCzT,EAASE,OAAO,gBAAhB,OAAiC0Y,QAAjC,IAAiCA,OAAjC,EAAiCA,EAASI,eAC1ChZ,EAASE,OAAO,iBAAkB0Y,EAAQxP,SAC1CpJ,EAASE,OAAO,YAAasT,GAnEX,UAoEK9e,EAAAA,EAAAA,IAAUykB,EAAQnZ,EAAUxL,GApEjC,iBAoEViJ,EApEU,EAoEVA,KAEJqI,IAA+B,OAAZD,QAAY,IAAZA,GAAAA,EAAcO,KAAK,cAAe3I,IACzD8a,GAAc,CAAEE,aAAa,IAC7BplB,GAASkT,EAAAA,EAAAA,KAAeZ,IACxBkQ,GAAkB,GAzEA,mDA2ElBhX,GAAa,EAAD,GAAQ,2BACpB+W,GAAW,GACXC,GAAkB,GA7EA,2DAAH,wDA+HbvhB,GAAqB,mCAAG,WAAOC,GAAP,8EACtBC,GAASC,EAAAA,EAAAA,IAAe,CAAEvB,aAAAA,IADJ,kBAGpBwB,EAAAA,EAAAA,IAAA,iCAEJ,CAAEC,gBAAiBC,KAAKC,UAAUN,IAClCC,GANwB,sDAS1BM,QAAQC,IAAI,mCAAoC,KAAMC,SAT5B,wDAAH,uDAgB3BqD,EAAAA,EAAAA,YAAU,WACRhF,GACEumB,EAAAA,EAAAA,KAAgBC,EAAAA,GAAAA,IAvcEpT,mCAuckB,CAAEqT,WAAY,CAAC,mBAEpD,KAoEHzhB,EAAAA,EAAAA,YAAU,WACHwN,KAEAC,GAAqBD,IACxBA,EAAaO,KAAK,YAAlB,OAA+BlT,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAca,KAC7C8R,EAAakU,GAAG,kBAAkB,WAEhC1mB,GAAS2mB,EAAAA,EAAAA,IAAmB,QAtEhCnU,EACGoU,IAAI,oBACJF,GAAG,oBAAoB,SAACjB,EAAQtlB,GAC/B,IAAQK,EAASilB,EAATjlB,KAER,GADAR,GAASkT,EAAAA,EAAAA,KAAeZ,IACpBoD,GAAgBlV,GAAQkV,EAAahV,MAAQF,EAAKE,IACpD+kB,EAAM,MAAW,EACjB5C,EAAY,CAAC4C,GAAF,eAAa9J,KACxB1a,GAAsB,CAACwkB,EAAO/kB,UACzB,CACL,IAAMsC,GAAW,kBACZnD,GADY,IAEfM,cAAa,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAe0mB,YAEhC5a,GAAmBjJ,OAMzBwP,EACGoU,IAAI,sBACJF,GAAG,sBAAsB,SAACI,GACzB,IAAQd,EAAuBc,EAAvBd,aAAcxlB,EAASsmB,EAATtmB,KAEtB,GADAR,GAASkT,EAAAA,EAAAA,KAAeZ,IACpBoD,GAAgBlV,GAAQkV,EAAahV,MAAQF,EAAKE,IACpDmiB,EAAYlH,EAASzd,QAAO,SAACqW,GAAD,OAAQ,OAADA,QAAC,IAADA,OAAA,EAAAA,EAAG7T,OAAQslB,UACzC,CAGL,IAAM9lB,EAASL,EAAaM,cACtB6C,GAAW,kBACZnD,GADY,IAEfM,cAAeD,EAAOhC,QAAO,SAAC6oB,GAAD,OAAOA,EAAErmB,MAAQslB,OAEhD/Z,GAAmBjJ,OAMzBwP,EACGoU,IAAI,uBACJF,GAAG,uBAAuB,SAACJ,GAC1B,IAE2D,EAFnD9lB,EAAS8lB,EAAT9lB,KACRR,GAASkT,EAAAA,EAAAA,KAAeZ,IACpBoD,GAAgBlV,GAAQkV,EAAahV,MAAQF,EAAKE,MACpD4lB,EAAU,MAAW,EACrBA,EAAU,KAAV,OAAqBA,QAArB,IAAqBA,GAArB,UAAqBA,EAAY9lB,YAAjC,aAAqB,EAAkBE,IACvCuR,YAAW,WAKT0S,SAASqC,eAAT,UAA2BV,EAAW5lB,IAAtC,eAAuDsgB,UACrDsF,EAAWvQ,UACZ,YAuBX,IAAMkR,GAAkB,WAetB,OAdAjD,KACAR,IAAe,GACfjB,GAAW,GACXM,EAAY,IAEZ5Q,YAAW,WACT4Q,EAAYlH,GACZ4G,GAAW,GAEXtQ,YAAW,WAAO,IAAD,EACf,UAAA0S,SAASqC,eAAe7G,UAAxB,SAAuC+G,mBACtC,MACF,GACH1E,GAAkB,GACX,iBA0BH8C,GAAiB,WACjB7S,GAAqB0P,KACX,OAAZ3P,QAAY,IAAZA,GAAAA,EAAcO,KAAK,cAAe2C,EAAc7V,GAChDsiB,IAAkB,IAchBgF,IAAkBrW,EAAAA,EAAAA,KAAS,SAAC7O,GAChC,IAAMmlB,EAAkBpoB,SAAQqnB,EAAAA,EAAAA,IAAepkB,EAAEE,OAAO6e,YACxD0B,EAAiB0E,GACZA,GAAiB9B,KAClB8B,GA3BA3U,IAAsB0P,KACZ,OAAZ3P,QAAY,IAAZA,GAAAA,EAAcO,KAAK,SAAU2C,EAAc7V,GAC3CsiB,IAAkB,KA0BnB,KAEGkF,GAAoB,SAACplB,GAEzB,GADA+f,KAEY,UAAV/f,EAAEiD,MACDjD,EAAEqlB,WACF7E,GAAiBE,GAAgBzC,IAGlC,GADAje,EAAEkR,iBACE+M,GAAa,CAAC,IAAD,EACTkG,EACJnkB,EAAEE,OAAOC,QAAQmlB,cACjBtlB,EAAEE,OAAOG,WAAWF,QAAQmlB,aAC9BrB,GAAa,OAAC7C,SAAD,IAACA,IAAD,UAACA,GAAoB5W,eAArB,aAAC,EAA6BuU,UAAWoF,QAEtDf,OAmENrgB,EAAAA,EAAAA,YAAU,WACH+d,IA9OgB,2BAAMG,GAAczW,eAApB,OAAM,EAAuBya,iBA8OzBM,KACxB,CAAC7L,KAEJ3W,EAAAA,EAAAA,YAAU,WACJqd,IACF6C,KACIzS,IAA+B,OAAZD,QAAY,IAAZA,GAAAA,EAAcO,KAAK,YAAnB,OAAgC2C,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAchV,SAEtE,CAAC2hB,IAEJ,IAAMN,GAAwB,SAACnb,GAC7B5G,GAASsO,EAAAA,GAAAA,KAAqB,IAC9BL,EAAcrH,GAAQ,SAAC,IAAD,UAAqBA,KAAY,SAAC,GAAD,KACvD5G,GAASuO,EAAAA,GAAAA,IAAc,CAAE5K,MAAO,oBA0BlCqB,EAAAA,EAAAA,YAAU,WACR,OAAIoe,SAAJ,IAAIA,IAAAA,GAAY3W,UAAS2W,GAAW3W,QAAQuU,UAAY,MACvD,CAACtL,IAEJ,IAAM+R,GAAqB,SAACxlB,GACtBqgB,GACJoB,GAAwBzhB,EAAEE,SAG5B,OACE,gBACEyB,UAAS,4EACP8R,EAAe,SAAW,mBADnB,qCADX,SAKGA,GACC,iCACE,SAAC,GAAD,CACEmM,UA1nBQ,WAChBO,GAAe,GACfpiB,GAAS0C,EAAAA,EAAAA,IAAgB,OACzBihB,KACAnB,GAAkB,GAClBgB,IAAe,GACfR,IAAsB,IAqnBdlB,oBA1CkB,WAE1B9hB,GAASqD,EAAAA,EAAAA,IAAaqS,IACtB1V,GAASsO,EAAAA,GAAAA,KAAqB,IAC9BL,GAAc,SAAC,GAAD,CAAe0N,SAAUA,KACvC3b,GAASuO,EAAAA,GAAAA,IAAc,CAAE5K,MAAO,iBAsCxBoe,sBAAuBA,GACvBC,gBAAiBA,GACjB1X,cAAeA,MAEjB,qBACE1G,UAAS,yCACP4Z,IAAqBC,GAAiB,UAAY,UAD3C,+BAGTpe,QAAS,SAAC4C,GACR,IAAQG,EAAYH,EAAEE,OAAdC,QACF4W,EAAgB/W,EAAEE,OAAOG,WAAWF,SAExCA,EAAQslB,aAAe1O,EAAc0O,cACf1D,MAT5B,WAaE,gBAAKpgB,UAAU,wCAAf,UACE,iBAEEvE,QA7IW,SAAC4C,GAAO,IAAD,EACtBG,EAAYH,EAAEE,OAAdC,QACF4W,EAAgB/W,EAAEE,OAAOG,WAAWF,QACpCoe,EAAU,UAAIpe,EAAQ6U,QAAU+B,EAAc/B,cAApC,aAAG,EAA0C1U,MAAM,OAC7D8e,EAAQjf,EAAQ+iB,KAAOnM,EAAcmM,IACrCwC,EAAUvlB,EAAQwlB,OAAS5O,EAAc4O,MACzCC,EAAUzlB,EAAQ0lB,OAAS9O,EAAc8O,MACzCzD,EAASjiB,EAAQ2lB,UAAY/O,EAAc+O,SAC3CC,EAAkB5lB,EAAQ6lB,WAAajP,EAAciP,UACrDC,EACJ9lB,EAAQ+lB,eAAiBnP,EAAcmP,cACnCC,EACJhmB,EAAQimB,eAAiBrP,EAAcqP,cACnCC,EAAqBlmB,EAAQmmB,aAAevP,EAAcuP,YAC1DC,EACJpmB,EAAQqmB,cAAgBzP,EAAcyP,aAGxC,GADAzG,KACIqC,EACFI,GAAaJ,QACR,GAAIsD,EAETvD,GAAUuD,EAAS,CACjBzD,SAAU9hB,EAAQsmB,WAAa1P,EAAc0P,UAC7CvE,SAAS,SAEN,GAAI0D,EAETzD,GAAUyD,EAAS,CACjB3D,SAAU9hB,EAAQumB,WAAa3P,EAAc2P,UAC7CxE,SAAS,SAEN,GAAI/hB,EAAQwmB,SAvgBQ,SAAC3mB,GAAO,IAAD,EAClCjC,GAASsO,EAAAA,GAAAA,KAAqB,IAC9BL,GAAc,SAAC,GAAD,CAAeyJ,MAAOzV,KACpCjC,GACEuO,EAAAA,GAAAA,IAAc,CACZ3G,cAAc,EACdjE,OAAO,UAAA1B,EAAEE,cAAF,eAAUqL,MAAO,iBAkgB1B0L,CAAqBjX,QAChB,UAAIue,QAAJ,IAAIA,GAAAA,EAAYxe,OAAQ,CAE7B,IAAM4E,EAAQ,CACZwS,iBAAkBoH,EAAW,GAC7BnH,WAAYmH,EAAW,GACvBlH,YAAakH,EAAW,IAE1BuB,GAAsBnb,QACjB,GAAIya,IAAUnB,GACnBgC,GAAuBljB,QACrBoD,EAAQymB,YAAc7P,EAAc6P,YAEtC/F,EAAgBzB,GAChBoG,GAAmBxlB,QACd,GAAIimB,GAAwBI,EACjCvE,UACK,GAAIqE,EACT5F,GAAkB,GAClBwB,UACK,GAAIwE,EAtHXxoB,GAASsO,EAAAA,GAAAA,KAAqB,IAC9BL,GAAc,gFACdjO,GACEuO,EAAAA,GAAAA,IAAc,CACZ5K,MAAO,gBACPmE,QAAS,KACTC,SAAU,MACVC,gBAAiB,gBACjBC,OAAQgf,WAgHL,GAAIe,EAAiB,CAAC,IAAD,EACpB5B,EAAUhkB,EAAQmlB,cAAgBvO,EAAcuO,aACtDrB,GAAa,OAAC7C,SAAD,IAACA,IAAD,UAACA,GAAoB5W,eAArB,aAAC,EAA6BuU,UAAWoF,KAqF5C7gB,UAAW8hB,GACXzjB,UAAS,gCACP+e,IAAiBzC,GAAc,SAAW,SADnC,wBAJX,WAQE,gBAAKtc,UAAU,gBAAgBkK,IAAKoV,KACnC/K,IAAgBmK,GACf,SAAC,GAAD,CAAanT,MAAO,IAEpBwM,EAASrY,KAAI,SAACiR,EAAG3R,EAAGkmB,GAAP,OACX,SAAC,GAAD,CACEtL,kBAAmBA,GACnBC,eAAgBA,GAChByC,YAAaA,GACbC,aAAcA,EACdC,eAAgBA,EAChBZ,eAAgBA,GAChB1R,IAAKuV,GACL/Y,cAAeA,GAEf+S,QAAS9I,EAAEsR,KACXxF,QAAS9L,EACT+L,QAAS1d,EAAIkmB,EAAK9mB,OAAS,EAAI8mB,EAAKlmB,EAAI,GAAK,MAHxC2R,EAAE7T,cAUjB,SAAC,GAAD,CACEf,OAAQ8jB,GACR7jB,UAAW8jB,GACXqF,WAAY5I,EACZqB,eA1ZW,kBAAMgC,IAAe,IA2ZhC/B,2BAzFuB,WACjCzhB,GAASsO,EAAAA,GAAAA,KAAqB,IAC9BL,GAAc,iFACdjO,GACEuO,EAAAA,GAAAA,IAAc,CACZ5K,MAAO,iBACPmE,QAAS,KACTC,SAAU,MACVC,gBAAiB,cACjBC,OAAQ8d,SAkFHpD,IAAiBzC,KAChB,SAAC,GAAD,CACEV,eAAgBA,GAChBwE,kBAAmBA,GACnB1Z,cAAeA,MAInB,iBAAM1G,UAAS,UAAKoR,EAAiB,iBAAmB,UAAxD,UACE,SAAC,GAAD,CACEA,eAAgBA,EAChBC,YAAY,OAIhB,iBACErR,UAAS,+CACPsc,IAAeoC,EAAU,UAAY,WAFzC,WAKE,kBACE1e,UAAS,4BAAuBK,EAAvB,oBADX,WAGE,SAAC4E,EAAA,EAAD,CACExJ,QAnwBS,YACH,EACpBykB,IAAoBD,KAkwBNjgB,UAAS,wBACT7F,GAAI8f,GAHN,UAKE,SAACmL,GAAA,EAAD,CAAezpB,MAAO,CAAEf,SAAU,SAEpC,SAAC,GAAD,CAAemF,MAAM,cAAc8J,UAAU,YAAY3G,OAAK,EAA9D,UACE,SAAC+B,EAAA,EAAD,CACExJ,QAAS0kB,GACTngB,UAAS,cACT7F,IAAE,kBAAO8f,IAAP,IAAmBqD,UAAW,mBAHlC,UAKE,SAACC,GAAA,EAAD,CAAY5hB,MAAO,CAAEf,SAAU,UAIlCqlB,KACC,iBAAMjgB,UAAU,wCAAhB,UACE,SAAC,KAAD,CACEqlB,aA/wBC,SAACvR,EAAOwR,GAC3B9F,GAAW3W,QAAQuU,WAAakI,EAAYC,OAC5ClI,EAAAA,EAAAA,IAAiBmC,GAAW3W,SAC5BiW,GAAiB,IA6wBC0G,kBAAkB,EAClBC,QAAQ,EACRC,kBAAmB,0BAKzB,kBACEjkB,KAAK,OACLwI,OAAO,IACPvI,SAhciB,SAACrD,GAChC,IAAMsnB,EAAUtnB,EAAEE,OAAOmK,MAAM,GAC/B,GAAKid,EAAL,CAEA,GAAIA,EAAQ/f,MAAQggB,EAAAA,GAElB,OADArG,GAAa1W,QAAQ1H,MAAQ,GACtB/E,GACLuL,EAAAA,GAAAA,IAAa,CACX5J,QAAS,yCACT0D,KAAM,UACNiG,SAAU,IACVxC,SAAU,gBAIhB,IAAMyN,EAAUlD,IAAIC,gBAAgBiW,GAChC,qBAAqB1S,KAAK0S,EAAQlkB,MAjCf,SAACokB,EAAUF,GAClC,IAAMG,EAAQ,IAAIC,MAAMF,GACxBC,EAAME,iBAAmB,WACvB,IAAQte,EAAaoe,EAAbpe,SACFue,EAAUvL,SAAShT,EAAW,IAC9Bwe,EAAUxL,SAAShT,EAAW,IACpC2X,GAAkB,CAChBxD,WAAY8J,EACZ7J,qBAAsB+J,EACtB9D,cAAc,GAAD,OAAKkE,EAAL,YACXC,EAAU,GAAV,WAAmBA,GAAYA,EADpB,cAEPP,EAAQlkB,QAEhBud,GAAgB,IAqBhBmH,CAAiBxT,EAASgT,IAE1BtG,GAAkB,CAChBxD,WAAY8J,EACZ7J,qBAAsBnJ,IAExBqM,GAAgB,MA0aJ7hB,KAAK,aACL2E,GAAG,gBACHoI,IAAKqV,GACLvf,UAAS,SACT+B,SAAUwS,QAId,gBACE6R,QAvRO,YACC,GAuRRC,OApRM,aAqRNC,QAAS/C,GACT5hB,UAAW8hB,GACXhoB,QAAS2iB,GACTlU,IAAKsV,GACLxf,UAAS,mBACP+e,IAAiBzC,GAAc,aAAe,GADvC,+DAGTqB,iBAAiB,EACjBhiB,MAAO,CACLpB,aACEskB,GAAkBE,IAAiBzC,GAC/B,MACA,qBAITuC,GAAkBE,IAAiBzC,IAClC,iBACEtc,UAAS,wDAAmDK,EAAnD,YACT5E,QAASgmB,GAFX,UAIE,SAACxc,EAAA,EAAD,CACEjF,UAAS,2BACT7F,GAAI,CAAEuL,OAAQ,UAAWmB,QAAS,MAAOlM,MAAO,WAFlD,UAIE,SAAC4rB,GAAA,EAAD,CAAM5qB,MAAO,CAAEf,SAAU,WAI7B,kCAMR,SAAC,GAAD,CAAekjB,UAAWA,OC9uBlC,GAtMkB,WAChB,OAMI5hB,EAAAA,EAAAA,IAAYC,EAAAA,IALdF,EADF,EACEA,aACAyS,EAFF,EAEEA,QACAE,EAHF,EAGEA,aACAkD,EAJF,EAIEA,aACAjD,EALF,EAKEA,kBAEF,GAA0C3S,EAAAA,EAAAA,IACxCsqB,GAAAA,IADM9iB,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,kBAGdvH,GAAWC,EAAAA,EAAAA,MACXyH,GAAWC,EAAAA,EAAAA,MACjB,GAAkCtD,EAAAA,EAAAA,WAAS,GAA3C,eAAOge,EAAP,KAAkB3iB,EAAlB,KACA,GAAsC2E,EAAAA,EAAAA,WAAS,GAA/C,eAAO8T,EAAP,KAAoBiK,EAApB,KACA,GAAoC/d,EAAAA,EAAAA,WAAS,yBAA7C,eAAOgmB,EAAP,KAAmBpc,EAAnB,KACA,GAA0B5J,EAAAA,EAAAA,UAAS,IAAnC,eAAO5E,EAAP,KAAcyY,EAAd,KACA,GAA8C7T,EAAAA,EAAAA,UAAS,IAAvD,eAAO+T,EAAP,KAAwBkS,EAAxB,MAEAtlB,EAAAA,EAAAA,YAAU,WAER,IAAM4J,EAAOrN,KAAKgpB,MAAMtnB,aAAaunB,QAAQ,iBAC7C,OAAK5b,EAEDsH,KAAKwP,OAASpH,SAAS1P,EAAK5B,aAC9BtF,EAAS,KACF1H,GACLuL,EAAAA,GAAAA,IAAa,CACX5H,MAAO,kBACPhC,QAAS,qBACT0D,KAAM,OACNiG,SAAU,IACVxC,SAAU,qBAKhB9I,GAASmD,EAAAA,EAAAA,IAAgByL,IACzB5O,GAASmI,EAAAA,GAAAA,YACTnI,GAAS0C,EAAAA,EAAAA,IAAgB,QAjBPgF,EAAS,OAkB1B,IAEH,IAAM+iB,EAAoB,SAACC,GAAD,aACxB7mB,EAAAA,EAAAA,IAAc,UAAC6mB,EAAW3pB,YAAZ,aAAC,EAAiBqU,WAAW7S,MAAM,KAAK,GAAI,GAAI,IAAM,KAIhEooB,EAAc,WAAqC,IAApChpB,EAAmC,uDAAzB,qBAC7B3B,GACEuL,EAAAA,GAAAA,IAAa,CACX5J,QAAAA,EACA0D,KAAM,OACNiG,SAAU,IACVxC,SAAU,oBA+FhB,OANA9D,EAAAA,EAAAA,YAAU,WACHwN,GAAiBC,IApFtBD,EACGoU,IAAI,uBACJF,GAAG,uBAAuB,SAACkE,GAC1B,IAAQxQ,EAA+CwQ,EAA/CxQ,aAAcC,EAAiCuQ,EAAjCvQ,aAAcE,EAAmBqQ,EAAnBrQ,eAEpC,GADAva,GAASkT,EAAAA,EAAAA,KAAeZ,IACnB8H,EAAL,CACA,IAAQ1Z,EAA+B0Z,EAA/B1Z,IAAKC,EAA0ByZ,EAA1BzZ,SAAUkqB,EAAgBzQ,EAAhByQ,YACjBC,GAAmC,OAAXD,QAAW,IAAXA,OAAA,EAAAA,EAAanqB,QAAb,OAAqBb,QAArB,IAAqBA,OAArB,EAAqBA,EAAca,KAC3DqqB,EACJzjB,EAAWO,QAA+B,eAArBP,EAAW3D,MAElC,IAAgB,OAAZ+R,QAAY,IAAZA,OAAA,EAAAA,EAAchV,OAAQA,EAAK,CAC7B,IAAI+S,EAAY2G,EACZ0Q,IACF9qB,GAASmI,EAAAA,GAAAA,OACTsL,EAAY,MAEdzT,GAAS0C,EAAAA,EAAAA,IAAgB+Q,IACzBzT,GAASqD,EAAAA,EAAAA,IAAaoQ,IAEpBsX,IACY,OAAZ1Q,QAAY,IAAZA,OAAA,EAAAA,EAAc3Z,QAAd,OAAsBb,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAca,MAEpCiqB,EAAY,4BAAD,OAA6BhqB,EAA7B,YAGXoqB,IACc,OAAdxQ,QAAc,IAAdA,OAAA,EAAAA,EAAgB7Z,QAAhB,OAAwBb,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAca,MAEtCiqB,EAAY,kCAAD,OAAmChqB,EAAnC,YAGXmqB,GACFH,EAAY,+BAAD,OAAgChqB,EAAhC,gBAIjB6R,EACGoU,IAAI,sBACJF,GAAG,sBAAsB,SAAC3J,GACzB/c,GAASkT,EAAAA,EAAAA,KAAeZ,IACnByK,KACW,OAAZrH,QAAY,IAAZA,OAAA,EAAAA,EAAchV,QAAd,OAAsBqc,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAcrc,OACtCV,GAASmI,EAAAA,GAAAA,OACTnI,GAAS0C,EAAAA,EAAAA,IAAgB,OACzB1C,GAASqD,EAAAA,EAAAA,IAAa,QAExBsnB,EAAY,IAAD,OAAK5N,EAAapc,SAAlB,iCAGf6R,EAAaoU,IAAI,mBAAmBF,GAAG,mBAAmB,WACxD1mB,GAASkT,EAAAA,EAAAA,KAAeZ,OAK1BE,EACGoU,IAAI,kBACJF,GAAG,kBAAkB,SAAClmB,EAAMkqB,GACtBlqB,GAASkqB,GACdJ,EAAmB,GAAD,eACblS,GADa,WAEb5X,EAAKE,IAFQ,cAEC+pB,EAAkBC,GAFnB,cAGdA,EAAW5f,kBAKnB0H,EAAaoU,IAAI,eAAeF,GAAG,eAAe,SAAClmB,EAAMkqB,GAClDlqB,GAASkqB,GACdJ,EACElS,EAAgBla,QACd,SAAC8sB,GAAD,OACEA,IAAQ,UACLxqB,EAAKE,IADA,cACS+pB,EAAkBC,GAD3B,cAENA,EAAW5f,wBAerB,8BACGjL,IACC,iBAAK+D,UAAS,WAAd,WAEE,SAAC,GAAD,CACEnE,MAAOA,EACPC,aAAcA,EACduO,cAAeA,KAGjB,qBAASrK,UAAS,UAAlB,WAEE,SAAC,GAAD,CACEnE,MAAOA,EACPyY,SAAUA,EACVC,YAAaA,EACbzY,aAAcA,EACduO,cAAeA,EACfmK,gBAAiBA,KAInB,SAAC,GAAD,CACED,YAAaA,EACbiK,eAAgBA,EAChBC,UAAWA,EACX3iB,aAAcA,EACduO,cAAeA,EACfyT,UAA6B,KAAb,OAALjiB,QAAK,IAALA,OAAA,EAAAA,EAAOuC,QAClBgT,eAAgBoD,EAAgB3V,MAC9B,SAACoS,GAAD,OAtIU,QAACmW,EAsIYnW,SAtIb,IAAcmW,OAAd,EAAcA,EAAU5V,WAAW7S,MAAM,OAAO,OAsInD,OAAuBmT,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAchV,KAtIlC,IAACsqB,WA4IjB,SAAC,GAAD,CACE1jB,WAAYA,EACZC,kBAAmBA,EACnBC,iBAAiB,EAHnB,SAKG6iB","sources":["components/utils/Menu.jsx","components/utils/MenuItemText.jsx","components/menus/NotificationsMenu.jsx","components/dialogs/ChangePasswordBody.jsx","components/dialogs/EditNameBody.jsx","components/menus/EditPicMenu.jsx","components/utils/CustomTooltip.jsx","components/utils/CustomDialog.jsx","components/utils/ChildDialog.jsx","components/dialogs/EditProfileBody.jsx","components/menus/ProfileSettingsMenu.jsx","components/utils/UserListItem.jsx","components/utils/LoadingList.jsx","components/utils/SearchInput.jsx","components/utils/SearchUsersDrawer.jsx","components/ChatpageHeader.jsx","components/dialogs/NewGroupBody.jsx","components/dialogs/AddMembersToGroup.jsx","components/utils/TypingIndicator.jsx","components/utils/ChatListItem.jsx","components/utils/FullSizeImage.jsx","components/ChatListView.jsx","components/dialogs/ViewProfileBody.jsx","components/utils/GroupMemberItem.jsx","components/menus/MemberOptionsMenu.jsx","components/dialogs/ViewGroupMembers.jsx","components/dialogs/GroupInfoBody.jsx","components/utils/LoadingMsgs.jsx","components/utils/MsgAttachment.jsx","components/utils/AttachmentPreview.jsx","components/utils/Message.jsx","components/menus/MsgOptionsMenu.jsx","components/WelcomeBanner.jsx","components/MsgsHeader.jsx","components/MessagesView.jsx","pages/ChatsPage.jsx"],"sourcesContent":["import { Menu as MuiMenu } from \"@mui/material\";\r\n\r\nexport const menuPaperProps = {\r\n  elevation: 0,\r\n  sx: {\r\n    overflow: \"auto\",\r\n    maxHeight: 250,\r\n    filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\r\n    borderRadius: 2,\r\n    backgroundColor: \"#404040\",\r\n    mt: 1,\r\n  },\r\n};\r\n\r\nexport const menuItemProps = {\r\n  \":hover\": { backgroundColor: \"#505050\" },\r\n  color: \"#e0e0e0\",\r\n  fontSize: \"19px\",\r\n};\r\n\r\nexport const menuIconProps = { color: \"lightblue\" };\r\n\r\nconst Menu = ({\r\n  children,\r\n  menuAnchor,\r\n  setMenuAnchor,\r\n  transformOrigin,\r\n  anchorOrigin,\r\n}) => {\r\n  const isMenuOpen = Boolean(menuAnchor);\r\n  const closeMenu = () => setMenuAnchor(null);\r\n\r\n  return (\r\n    <MuiMenu\r\n      anchorEl={menuAnchor}\r\n      open={isMenuOpen}\r\n      onClose={closeMenu}\r\n      onClick={closeMenu}\r\n      PaperProps={menuPaperProps}\r\n      transformOrigin={transformOrigin}\r\n      anchorOrigin={anchorOrigin}\r\n    >\r\n      {children}\r\n    </MuiMenu>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","const MenuItemText = ({ children }) => {\r\n  return <span style={{ marginBottom: \"3px\" }}>{children}</span>;\r\n};\r\n\r\nexport default MenuItemText;\r\n","import { MenuItem } from \"@mui/material\";\r\nimport Menu, { menuItemProps } from \"../utils/Menu\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  setLoggedInUser,\r\n  setSelectedChat,\r\n} from \"../../store/slices/AppSlice\";\r\nimport {\r\n  getAxiosConfig,\r\n  getOneToOneChatReceiver,\r\n  truncateString,\r\n} from \"../../utils/appUtils\";\r\nimport axios from \"../../utils/axios\";\r\n\r\nconst NotificationsMenu = ({ chats, setFetchMsgs, anchor, setAnchor }) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n  const notifs = [...loggedInUser?.notifications];\r\n  const notifGroups = {};\r\n\r\n  notifs.forEach((notif) => {\r\n    // Notifications grouped by 'chat'\r\n    const notifChat = notif.chat;\r\n    const chatId = notifChat._id;\r\n    const chatName = notifChat.isGroupChat\r\n      ? `group===${notifChat.chatName}`\r\n      : getOneToOneChatReceiver(loggedInUser, notifChat.users).name;\r\n    const notifGroupId = `${chatId}---${chatName}`;\r\n    if (notifGroups[notifGroupId]) {\r\n      ++notifGroups[notifGroupId];\r\n    } else {\r\n      notifGroups[notifGroupId] = 1;\r\n    }\r\n  });\r\n\r\n  const deletePersistedNotifs = async (notifsToBeDeleted) => {\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      await axios.put(\r\n        `/api/user/delete/notifications`,\r\n        { notificationIds: JSON.stringify(notifsToBeDeleted) },\r\n        config\r\n      );\r\n    } catch (error) {\r\n      console.log(\"Couldn't Delete Notifications : \", error.message);\r\n    }\r\n  };\r\n\r\n  const deleteNotifications = (clickedChatId) => {\r\n    // Delete notifs from global state and localStorage\r\n    const notifsToBeDeleted = [];\r\n    for (let i = 0; i < notifs.length; ++i) {\r\n      if (notifs[i].chat._id === clickedChatId) {\r\n        const deletedNotif = notifs.splice(i, 1)[0];\r\n        notifsToBeDeleted.push(deletedNotif._id);\r\n        // After deleting element at 'i', next element (i+1) shifts back\r\n        // to 'i' index\r\n        --i;\r\n      }\r\n    }\r\n    const updatedUser = { ...loggedInUser, notifications: notifs };\r\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\r\n    dispatch(setLoggedInUser(updatedUser));\r\n\r\n    // Delete notifs that were persisted in mongodb\r\n    deletePersistedNotifs(notifsToBeDeleted);\r\n  };\r\n\r\n  const chatNotifClickHandler = (e) => {\r\n    const chatNotifId =\r\n      e.target.dataset.notifGroup || e.target.parentNode.dataset.notifGroup;\r\n    if (!chatNotifId) return;\r\n\r\n    const chatId = chatNotifId.split(\"---\")[0];\r\n    const chatToBeOpened = chats.find((chat) => chat._id === chatId);\r\n    dispatch(setSelectedChat(chatToBeOpened));\r\n    setFetchMsgs(true); // To fetch selected chat msgs\r\n    deleteNotifications(chatId);\r\n    if (chatToBeOpened?.isGroupChat) dispatch(setGroupInfo(chatToBeOpened));\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      {Object.keys(notifGroups).length ? (\r\n        <div onClick={chatNotifClickHandler}>\r\n          {Object.keys(notifGroups).map((notifGroupId) => {\r\n            const fromGroup = notifGroupId.includes(\"group===\");\r\n            const notifCount = notifGroups[notifGroupId];\r\n            let chatName = notifGroupId.split(\"---\")[1];\r\n            chatName = fromGroup ? chatName.split(\"===\")[1] : chatName;\r\n            return (\r\n              <MenuItem\r\n                key={notifGroupId}\r\n                data-notif-group={notifGroupId}\r\n                sx={menuItemProps}\r\n              >\r\n                <MenuItemText>\r\n                  {`${notifCount} message${notifCount > 1 ? \"s\" : \"\"} ${\r\n                    fromGroup ? \"in\" : \"from\"\r\n                  } `}\r\n                  <span\r\n                    title={chatName}\r\n                    data-notif-group={notifGroupId}\r\n                    className=\"text-info\"\r\n                  >\r\n                    {`${truncateString(\r\n                      fromGroup ? chatName : chatName.split(\" \")[0],\r\n                      12,\r\n                      9\r\n                    )}`}\r\n                  </span>\r\n                </MenuItemText>\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <MenuItem sx={menuItemProps}>\r\n          <MenuItemText>No notifications</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default NotificationsMenu;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\nimport PasswordVisibilityToggle from \"../utils/PasswordVisibilityToggle\";\r\n\r\nconst ChangePasswordBody = ({ getUpdatedState }) => {\r\n  const {\r\n    loading,\r\n    disableIfLoading,\r\n    formLabelClassName,\r\n    formFieldClassName,\r\n    inputFieldClassName,\r\n  } = useSelector(selectFormfieldState);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [changePasswordData, setChangePasswordData] = useState({\r\n    currentPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmNewPassword: \"\",\r\n  });\r\n\r\n  const { currentPassword, newPassword, confirmNewPassword } =\r\n    changePasswordData;\r\n\r\n  const handleChangeFor = (prop) => (e) => {\r\n    setChangePasswordData({ ...changePasswordData, [prop]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Return updated state to profile settings menu\r\n    getUpdatedState(changePasswordData);\r\n  }, [changePasswordData]);\r\n\r\n  const onEnterKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      // Submit updated password data\r\n      getUpdatedState(changePasswordData, { submitUpdatedPassword: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Current Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 mt-3 col-md-6 order-md-2`}\r\n      >\r\n        <label htmlFor=\"current_password\" className={`${formLabelClassName}`}>\r\n          Current Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={currentPassword}\r\n            onChange={handleChangeFor(\"currentPassword\")}\r\n            onKeyDown={onEnterKeyDown}\r\n            required\r\n            autoFocus\r\n            name=\"currentPassword\"\r\n            id=\"current_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Used While Signing In\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n      {/* New Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 col-md-6 order-md-2`}\r\n      >\r\n        <label htmlFor=\"new_password\" className={`${formLabelClassName}`}>\r\n          New Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={newPassword}\r\n            onChange={handleChangeFor(\"newPassword\")}\r\n            onKeyDown={onEnterKeyDown}\r\n            required\r\n            name=\"newPassword\"\r\n            id=\"new_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Different from Current\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n      {/* Confirm New Password input */}\r\n      <section\r\n        className={`dialogField ${formFieldClassName} mb-2 col-md-6 order-md-2`}\r\n      >\r\n        <label\r\n          htmlFor=\"confirm_new_password\"\r\n          className={`${formLabelClassName}`}\r\n        >\r\n          Confirm New Password <span className=\"required\">*</span>\r\n        </label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={confirmNewPassword}\r\n            onChange={handleChangeFor(\"confirmNewPassword\")}\r\n            onKeyDown={onEnterKeyDown}\r\n            required\r\n            name=\"confirmNewPassword\"\r\n            id=\"confirm_new_password\"\r\n            className={`${inputFieldClassName} rounded-end`}\r\n            disabled={loading}\r\n            placeholder=\"Exactly as Above\"\r\n          />\r\n          <PasswordVisibilityToggle\r\n            disableIfLoading={disableIfLoading}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n          />\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordBody;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\n\r\nconst EditNameBody = ({ originalName, getUpdatedName, placeholder }) => {\r\n  const { loading, formFieldClassName, inputFieldClassName } =\r\n    useSelector(selectFormfieldState);\r\n  const [name, setName] = useState(originalName);\r\n\r\n  useEffect(() => {\r\n    getUpdatedName(name);\r\n  }, [name]);\r\n\r\n  return (\r\n    <section\r\n      className={`${formFieldClassName} mx-auto`}\r\n      style={{ width: \"clamp(250px, 60vw, 360px)\" }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            // Submit updated group name\r\n            getUpdatedName(name, { submitUpdatedName: true });\r\n          }\r\n        }}\r\n        name=\"editname\"\r\n        autoFocus\r\n        className={`${inputFieldClassName} mt-1`}\r\n        disabled={loading}\r\n        placeholder={placeholder}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditNameBody;\r\n","import { Delete, Upload } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\n\r\nconst EditPicMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  selectProfilePic,\r\n  openDeletePhotoConfirmDialog,\r\n  deletePhotoCondition,\r\n}) => {\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={selectProfilePic}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Upload />\r\n        </ListItemIcon>\r\n        <MenuItemText>Upload Photo</MenuItemText>\r\n      </MenuItem>\r\n      {deletePhotoCondition && (\r\n        <MenuItem sx={menuItemProps} onClick={openDeletePhotoConfirmDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <Delete />\r\n          </ListItemIcon>\r\n          <MenuItemText>Delete Photo</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default EditPicMenu;\r\n","import { styled } from \"@mui/material/styles\";\r\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\r\n\r\nconst getCustomTooltip = (arrowStyles, tooltipStyles) =>\r\n  styled(({ className, ...props }) => (\r\n    <Tooltip {...props} arrow classes={{ popper: className }} />\r\n  ))(({ theme }) => ({\r\n    [`& .${tooltipClasses.arrow}`]: { ...arrowStyles },\r\n    [`& .${tooltipClasses.tooltip}`]: { ...tooltipStyles },\r\n  }));\r\n\r\nexport default getCustomTooltip;\r\n","import {\r\n  Close,\r\n  KeyboardDoubleArrowLeft,\r\n  KeyboardDoubleArrowRight,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setSelectedChat } from \"../../store/slices/AppSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\n\r\nexport const btnHoverStyle = { \":hover\": { backgroundColor: \"#93c2f727\" } };\r\nexport const btnCustomStyle = {\r\n  fontSize: 17,\r\n  color: \"#8cc2ff\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  borderRadius: 10,\r\n};\r\n\r\nconst CustomDialog = ({\r\n  children,\r\n  dialogData,\r\n  showDialogActions,\r\n  showDialogClose,\r\n  closeDialog,\r\n}) => {\r\n  const { loading, disableIfLoading } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const {\r\n    isFullScreen,\r\n    isOpen,\r\n    title,\r\n    nolabel,\r\n    yeslabel,\r\n    loadingYeslabel,\r\n    action,\r\n  } = dialogData;\r\n\r\n  const handleDialogClose = () => {\r\n    if (closeDialog) return closeDialog();\r\n    dispatch(hideDialog());\r\n  };\r\n\r\n  const handleYes = async () => {\r\n    const result = await action();\r\n    if (\r\n      result === \"profileUpdated\" ||\r\n      result === \"membersUpdated\" ||\r\n      result === \"msgActionDone\"\r\n    ) {\r\n      handleDialogClose();\r\n    } else if (result === \"createdGroup\") {\r\n      handleDialogClose();\r\n      // Close Parent Dialog as well\r\n      dispatch(hideDialog());\r\n    } else if (result === \"pwdUpdated\" || result === \"loggingOut\") {\r\n      handleDialogClose();\r\n      dispatch(setSelectedChat(null));\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen={Boolean(isFullScreen)}\r\n      PaperProps={{\r\n        sx: {\r\n          borderRadius: 2,\r\n          backgroundImage: \"linear-gradient(0deg,#353535,#444)\",\r\n        },\r\n      }}\r\n      className={`user-select-none ${disableIfLoading}`}\r\n      open={isOpen}\r\n      onClose={handleDialogClose}\r\n    >\r\n      <DialogTitle\r\n        style={{\r\n          fontSize: 25,\r\n          color: \"#A4D0F0\",\r\n          fontFamily: \"Trebuchet MS\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        <span\r\n          className=\"d-flex\"\r\n          title={title}\r\n          style={{ marginTop: -5, marginRight: 10 }}\r\n        >\r\n          {truncateString(title, 24, 21)}\r\n        </span>\r\n        {showDialogClose && (\r\n          <IconButton\r\n            onClick={handleDialogClose}\r\n            disabled={loading}\r\n            sx={{\r\n              position: \"absolute\",\r\n              right: 8,\r\n              top: 8,\r\n              color: \"#999999\",\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        )}\r\n      </DialogTitle>\r\n      <DialogContent\r\n        style={{ fontSize: 19, color: \"#e0e0e0\", fontFamily: \"Trebuchet MS\" }}\r\n      >\r\n        {children || <></>}\r\n      </DialogContent>\r\n      {showDialogActions && (\r\n        <DialogActions>\r\n          <Button\r\n            sx={btnHoverStyle}\r\n            disabled={loading}\r\n            style={btnCustomStyle}\r\n            onClick={handleDialogClose}\r\n          >\r\n            {nolabel === \"Back\" ? (\r\n              <span>\r\n                <KeyboardDoubleArrowLeft\r\n                  className=\"btnArrowIcons\"\r\n                  style={{\r\n                    margin: \"0px 5px 2px 0px\",\r\n                  }}\r\n                />\r\n                Back\r\n              </span>\r\n            ) : (\r\n              nolabel\r\n            )}\r\n          </Button>\r\n          <Button\r\n            sx={btnHoverStyle}\r\n            disabled={loading}\r\n            style={btnCustomStyle}\r\n            onClick={handleYes}\r\n          >\r\n            {loading && yeslabel !== \"Next\" ? (\r\n              <>\r\n                <CircularProgress size={25} style={{ marginRight: 12 }} />\r\n                <span style={{ marginRight: 22 }}>{loadingYeslabel}</span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {yeslabel === \"Next\" ? (\r\n                  <span>\r\n                    Next\r\n                    <KeyboardDoubleArrowRight\r\n                      className=\"btnArrowIcons\"\r\n                      style={{\r\n                        marginLeft: 4,\r\n                      }}\r\n                    />\r\n                  </span>\r\n                ) : (\r\n                  yeslabel\r\n                )}\r\n              </>\r\n            )}\r\n          </Button>\r\n        </DialogActions>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CustomDialog;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setChildDialogMethods } from \"../../store/slices/ChildDialogSlice\";\r\nimport CustomDialog from \"./CustomDialog\";\r\n\r\nconst ChildDialog = ({\r\n  showChildDialogActions = true,\r\n  showChildDialogClose = false,\r\n}) => {\r\n  // Child Dialog config\r\n  const [childDialogData, setChildDialogData] = useState({\r\n    isOpen: false,\r\n    title: \"Child Dialog\",\r\n    nolabel: \"NO\",\r\n    yeslabel: \"YES\",\r\n    loadingYeslabel: \"Updating...\",\r\n    action: () => {},\r\n  });\r\n  const [childDialogBody, setChildDialogBody] = useState(<></>);\r\n  const dispatch = useDispatch();\r\n  const displayChildDialog = (options) =>\r\n    setChildDialogData({ ...options, isOpen: true });\r\n\r\n  const closeChildDialog = (data) =>\r\n    setChildDialogData({ ...data, isOpen: false });\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setChildDialogMethods({\r\n        setChildDialogBody,\r\n        displayChildDialog,\r\n        closeChildDialog,\r\n      })\r\n    );\r\n  }, [childDialogData]);\r\n\r\n  return (\r\n    <CustomDialog\r\n      dialogData={childDialogData}\r\n      closeDialog={closeChildDialog}\r\n      showDialogActions={showChildDialogActions}\r\n      showDialogClose={showChildDialogClose}\r\n    >\r\n      {childDialogBody}\r\n    </CustomDialog>\r\n  );\r\n};\r\n\r\nexport default ChildDialog;\r\n","import { Edit } from \"@mui/icons-material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"../../utils/axios\";\r\nimport EditNameBody from \"./EditNameBody\";\r\nimport { CircularProgress, IconButton } from \"@mui/material\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport {\r\n  getAxiosConfig,\r\n  isImageFile,\r\n  truncateString,\r\n  TWO_MB,\r\n} from \"../../utils/appUtils\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { selectAppState, setLoggedInUser } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\n\r\nconst arrowStyles = { color: \"#111\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  padding: \"5px 10px\",\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst EditProfileBody = () => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const { loading, disableIfLoading } = useSelector(selectFormfieldState);\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const dispatch = useDispatch();\r\n  const { setChildDialogBody, displayChildDialog, closeChildDialog } =\r\n    childDialogMethods;\r\n\r\n  const [profileData, setProfileData] = useState({\r\n    profilePicUrl: loggedInUser?.profilePic,\r\n    name: loggedInUser?.name,\r\n    email: loggedInUser?.email,\r\n  });\r\n  const [editProfilePicMenuAnchor, setEditProfilePicMenuAnchor] =\r\n    useState(null);\r\n\r\n  useEffect(() => {\r\n    setProfileData({\r\n      ...profileData,\r\n      profilePicUrl: loggedInUser?.profilePic,\r\n      name: loggedInUser?.name,\r\n    });\r\n  }, [loggedInUser]);\r\n\r\n  const displayWarning = (message = \"Warning\", duration = 3000) => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"warning\",\r\n        duration,\r\n        position: \"top-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const displayError = (\r\n    error = \"Oops! Something went wrong\",\r\n    title = \"Operation Failed\"\r\n  ) => {\r\n    dispatch(\r\n      displayToast({\r\n        title,\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"top-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const displaySuccess = (message = \"Operation Successful\") => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"success\",\r\n        duration: 3000,\r\n        position: \"bottom-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  // For profile pic upload loading indicator\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const { profilePicUrl, name, email } = profileData;\r\n  const imgInput = useRef();\r\n  const isGuestUser = loggedInUser?.email === \"guest.user@gmail.com\";\r\n\r\n  const persistUpdatedUser = (updatedUser) => {\r\n    // localStorage persists updated user even after page refresh\r\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\r\n    dispatch(setLoggedInUser(updatedUser));\r\n  };\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") {\r\n      e.target.click();\r\n    }\r\n  };\r\n\r\n  // Update Profile Pic\r\n  const handleImgInputChange = async (e) => {\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n\r\n    if (!isImageFile(image.name)) {\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Invalid Image File\",\r\n          message: \"Please Select an Image File (png/jpg/jpeg/svg/webp)\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    if (image.size >= TWO_MB) {\r\n      imgInput.current.value = \"\";\r\n      return displayWarning(\"Please Select an Image Smaller than 2 MB\", 4000);\r\n    }\r\n    dispatch(setLoading(true));\r\n    setUploading(true);\r\n    const config = getAxiosConfig({ loggedInUser, formData: true });\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"profilePic\", image);\r\n    formData.append(\"currentProfilePic\", loggedInUser?.profilePic);\r\n    formData.append(\"cloudinary_id\", loggedInUser?.cloudinary_id);\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/update/profile-pic\",\r\n        formData,\r\n        config\r\n      );\r\n      displaySuccess(\"ProfilePic Updated Successfully\");\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n      persistUpdatedUser({\r\n        ...data,\r\n        token: loggedInUser.token,\r\n        expiryTime: loggedInUser.expiryTime,\r\n      });\r\n    } catch (error) {\r\n      displayError(error, \"ProfilePic Update Failed\");\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const deleteProfilePic = async () => {\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/delete/profile-pic\",\r\n        {\r\n          currentProfilePic: loggedInUser?.profilePic,\r\n          cloudinary_id: loggedInUser?.cloudinary_id,\r\n        },\r\n        config\r\n      );\r\n      displaySuccess(\"ProfilePic Deleted Successfully\");\r\n      dispatch(setLoading(false));\r\n      persistUpdatedUser({\r\n        ...data,\r\n        token: loggedInUser.token,\r\n        expiryTime: loggedInUser.expiryTime,\r\n      });\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      displayError(error, \"ProfilePic Deletion Failed\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Edited Name config\r\n  let editedName;\r\n\r\n  const getUpdatedName = (updatedValue, options) => {\r\n    editedName = updatedValue;\r\n    if (options?.submitUpdatedName)\r\n      updateProfileName({ enterKeyPressed: true });\r\n  };\r\n\r\n  const updateProfileName = async (options) => {\r\n    if (!editedName) return displayWarning(\"Please Enter a Valid Name\");\r\n\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/user/update/name\",\r\n        { newUserName: editedName },\r\n        config\r\n      );\r\n      displaySuccess(\"Name Updated Successfully\");\r\n      dispatch(setLoading(false));\r\n      persistUpdatedUser({\r\n        ...data,\r\n        token: loggedInUser.token,\r\n        expiryTime: loggedInUser.expiryTime,\r\n      });\r\n      if (options?.enterKeyPressed) closeChildDialog();\r\n      else return \"profileUpdated\";\r\n    } catch (error) {\r\n      displayError(error, \"Name Update Failed\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Open edit name dialog\r\n  const openEditNameDialog = () => {\r\n    setChildDialogBody(\r\n      <EditNameBody\r\n        originalName={loggedInUser?.name}\r\n        getUpdatedName={getUpdatedName}\r\n        placeholder=\"Enter New Name\"\r\n      />\r\n    );\r\n    displayChildDialog({\r\n      title: \"Edit Name\",\r\n      nolabel: \"CANCEL\",\r\n      yeslabel: \"SAVE\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: updateProfileName,\r\n    });\r\n  };\r\n\r\n  // Open delete photo confirm dialog\r\n  const openDeletePhotoConfirmDialog = () => {\r\n    setChildDialogBody(<>Are you sure you want to delete this profile pic?</>);\r\n    displayChildDialog({\r\n      title: \"Delete Profile Pic\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteProfilePic,\r\n    });\r\n  };\r\n\r\n  const openEditProfilePicMenu = (e) => {\r\n    setEditProfilePicMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* View/Edit Profile Pic */}\r\n      {loading && uploading ? (\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n          <CircularProgress\r\n            size={75}\r\n            style={{ margin: \"30px 0px\", color: \"lightblue\" }}\r\n          />\r\n          <span style={{ marginBottom: \"45px\" }} className=\"text-light h1\">\r\n            {\" Updating Photo...\"}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <section className=\"dialogField d-flex position-relative mb-4\">\r\n          <img\r\n            className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n            id=\"viewedit__profilePic\"\r\n            src={profilePicUrl}\r\n            alt=\"profilePic\"\r\n          />\r\n          {!isGuestUser && (\r\n            <CustomTooltip title=\"Edit Profile Pic\" placement=\"top-start\" arrow>\r\n              <i\r\n                id=\"editProfilePic\"\r\n                tabIndex={2}\r\n                onKeyDown={clickOnKeydown}\r\n                className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n                onClick={openEditProfilePicMenu}\r\n              >\r\n                <Edit className=\"text-light fs-6\" />\r\n              </i>\r\n            </CustomTooltip>\r\n          )}\r\n          {/* Edit/Delete profile pic menu */}\r\n          <EditPicMenu\r\n            anchor={editProfilePicMenuAnchor}\r\n            setAnchor={setEditProfilePicMenuAnchor}\r\n            selectProfilePic={() => imgInput.current.click()}\r\n            openDeletePhotoConfirmDialog={openDeletePhotoConfirmDialog}\r\n            deletePhotoCondition={\r\n              !loggedInUser?.profilePic?.endsWith(\"user_dqzjdz.png\")\r\n            }\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={handleImgInputChange}\r\n            name=\"profilepic\"\r\n            id=\"editProfilePic\"\r\n            ref={imgInput}\r\n            className={`d-none`}\r\n            disabled={loading}\r\n          />\r\n        </section>\r\n      )}\r\n      {/* View Name */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-15px\" }}>\r\n          <CustomTooltip\r\n            title={name?.length > 24 ? name : \"\"}\r\n            placement=\"top-start\"\r\n            arrow\r\n          >\r\n            <div\r\n              className=\"w-100 h1 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"32px\", wordBreak: \"break-all\" }}\r\n            >\r\n              {truncateString(name, 25, 21)}\r\n            </div>\r\n          </CustomTooltip>\r\n          {!isGuestUser && (\r\n            <CustomTooltip title=\"Edit Name\" placement=\"top\" arrow>\r\n              <IconButton\r\n                tabIndex={3}\r\n                onKeyDown={clickOnKeydown}\r\n                onClick={openEditNameDialog}\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  right: -8,\r\n                  top: 0,\r\n                  \":hover\": { backgroundColor: \"#aaaaaa30\" },\r\n                }}\r\n              >\r\n                <Edit className=\"text-light\" />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n          )}\r\n        </div>\r\n      </section>\r\n      {/* View Email */}\r\n      <section\r\n        className={`dialogField text-center mb-2`}\r\n        style={{ marginTop: \"-10px\" }}\r\n      >\r\n        <CustomTooltip\r\n          title={email?.length > 24 ? email : \"\"}\r\n          placement=\"bottom\"\r\n          arrow\r\n        >\r\n          <span className=\"h4\" style={{ color: \"lightblue\" }}>\r\n            {truncateString(email, 25, 21)}\r\n          </span>\r\n        </CustomTooltip>\r\n      </section>\r\n      {/* Child confirmation dialog */}\r\n      <ChildDialog />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfileBody;\r\n","import { Key, Logout, ManageAccounts, Person } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport axios from \"../../utils/axios\";\r\nimport ChangePasswordBody from \"../dialogs/ChangePasswordBody\";\r\nimport EditProfileBody from \"../dialogs/EditProfileBody\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setLoggedInUser,\r\n  setSelectedChat,\r\n} from \"../../store/slices/AppSlice\";\r\nimport { setLoading } from \"../../store/slices/FormfieldSlice\";\r\nimport {\r\n  displayDialog,\r\n  hideDialog,\r\n  setShowDialogActions,\r\n} from \"../../store/slices/CustomDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getAxiosConfig } from \"../../utils/appUtils\";\r\n\r\nconst ProfileSettingsMenu = ({ anchor, setAnchor, setDialogBody }) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const displaySuccess = (\r\n    message = \"Operation Successful\",\r\n    duration = 3000\r\n  ) => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"success\",\r\n        duration,\r\n        position: \"bottom-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const displayWarning = (message = \"Warning\") => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"warning\",\r\n        duration: 5000,\r\n        position: \"top-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const isGuestUser = loggedInUser?.email === \"guest.user@gmail.com\";\r\n\r\n  // Edit Password Config\r\n  let editPasswordData;\r\n\r\n  const getUpdatedState = (updatedState, options) => {\r\n    editPasswordData = updatedState;\r\n    if (options?.submitUpdatedPassword)\r\n      updatePassword({ enterKeyPressed: true });\r\n  };\r\n\r\n  const updatePassword = async (options) => {\r\n    const { currentPassword, newPassword, confirmNewPassword } =\r\n      editPasswordData;\r\n\r\n    if (!currentPassword || !newPassword || !confirmNewPassword) {\r\n      return displayWarning(\"Please Enter All the Fields\");\r\n    }\r\n    if (currentPassword === newPassword) {\r\n      return displayWarning(\"New Password Must Differ from Current Password\");\r\n    }\r\n    if (newPassword !== confirmNewPassword) {\r\n      return displayWarning(\"New Password Must Match Confirm New Password\");\r\n    }\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      await axios.put(\r\n        \"/api/user/update/password\",\r\n        { currentPassword, newPassword },\r\n        config\r\n      );\r\n      displaySuccess(\r\n        \"Password Updated Successfully. Please Login Again with Updated Password\",\r\n        5000\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      localStorage.removeItem(\"loggedInUser\");\r\n      dispatch(setLoggedInUser(null));\r\n      if (options?.enterKeyPressed) {\r\n        dispatch(hideDialog());\r\n        dispatch(setSelectedChat(null));\r\n        navigate(\"/\");\r\n        return;\r\n      }\r\n      return \"pwdUpdated\";\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Password Update Failed\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"loggedInUser\");\r\n    dispatch(setLoggedInUser(null));\r\n    dispatch(\r\n      displayToast({\r\n        message: \"Logged Out\",\r\n        type: \"success\",\r\n        duration: 1500,\r\n        position: \"bottom-center\",\r\n      })\r\n    );\r\n    return \"loggingOut\";\r\n  };\r\n\r\n  // Open dialogs\r\n  const openLogoutConfirmDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<>Are you sure you want to log out?</>);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Logout Confirmation\",\r\n        nolabel: \"NO\",\r\n        yeslabel: \"YES\",\r\n        loadingYeslabel: \"Logging Out...\",\r\n        action: logout,\r\n      })\r\n    );\r\n  };\r\n\r\n  const openEditProfileDialog = () => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<EditProfileBody />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: isGuestUser ? \"View Profile\" : \"Edit Profile\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const openEditPasswordDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<ChangePasswordBody getUpdatedState={getUpdatedState} />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Change Password\",\r\n        nolabel: \"CANCEL\",\r\n        yeslabel: \"SAVE\",\r\n        loadingYeslabel: \"Saving...\",\r\n        action: updatePassword,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={openEditProfileDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          {isGuestUser ? <Person /> : <ManageAccounts />}\r\n        </ListItemIcon>\r\n        <MenuItemText>{isGuestUser ? \"View\" : \"Edit\"} Profile</MenuItemText>\r\n      </MenuItem>\r\n      {!isGuestUser && (\r\n        <MenuItem sx={menuItemProps} onClick={openEditPasswordDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <Key />\r\n          </ListItemIcon>\r\n          <MenuItemText>Change Password</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n      <MenuItem sx={menuItemProps} onClick={openLogoutConfirmDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Logout />\r\n        </ListItemIcon>\r\n        <MenuItemText>Logout</MenuItemText>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default ProfileSettingsMenu;\r\n","import { Avatar } from \"@mui/material\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\n\r\nconst arrowStyles = { color: \"#A30CA7\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  padding: \"5px 12px\",\r\n  borderRadius: 5,\r\n  backgroundColor: \"#A30CA7\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst UserListItem = ({ user, truncateValues }) => {\r\n  const { _id, name, email, profilePic } = user;\r\n  const [max, index] = truncateValues;\r\n\r\n  return (\r\n    <div\r\n      data-user={_id}\r\n      className={`userListItem user-select-none d-flex text-light justify-content-start align-items-center pointer px-3`}\r\n    >\r\n      <CustomTooltip\r\n        data-user={_id}\r\n        title={`${name} (${email})`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <Avatar\r\n          src={profilePic}\r\n          alt={_id}\r\n          data-user={_id}\r\n          className={`listItemAvatar userListAvatar`}\r\n        />\r\n      </CustomTooltip>\r\n      <div\r\n        data-user={_id}\r\n        className=\"userListData d-flex flex-column align-items-start px-2\"\r\n      >\r\n        <p data-user={_id} className=\"userListName fs-5 fw-bold text-info\">\r\n          {truncateString(name, max, index)}\r\n        </p>\r\n        <p data-user={_id} className=\"userListEmail fs-6\">\r\n          {truncateString(email, max, index)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n","import { Skeleton } from \"@mui/material\";\r\n\r\nconst LoadingList = ({ listOf, dpRadius, count }) => {\r\n  const skeletonStyle = { backgroundColor: \"#999\" };\r\n  return (\r\n    <>\r\n      {[...Array(count)].map((e, i) => (\r\n        <div key={`loadingListOf${listOf + i}`} className=\"loadingListItem row\">\r\n          <Skeleton\r\n            variant=\"circular\"\r\n            className=\"loadingDp rounded-circle\"\r\n            style={{ ...skeletonStyle, width: dpRadius, height: dpRadius }}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className=\"loadingTitle col-5\"\r\n            style={skeletonStyle}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className=\"loadingDesc col-7\"\r\n            style={skeletonStyle}\r\n          />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadingList;\r\n","import { Clear, Search } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { forwardRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\r\n\r\nconst SearchInput = forwardRef((props, inputRef) => {\r\n  const { searchHandler, autoFocus, placeholder, clearInput } = props;\r\n  const { disableIfLoading, formFieldClassName, inputFieldClassName } =\r\n    useSelector(selectFormfieldState);\r\n\r\n  // To display/hide clear search (<Close />) icon when typing\r\n  const [typing, setTyping] = useState(false);\r\n\r\n  return (\r\n    <section className={`${formFieldClassName} pt-3 pb-2 mx-1`}>\r\n      {/* Input box */}\r\n      <div className=\"input-group\">\r\n        <span\r\n          className={`input-group-text ${disableIfLoading} bg-black bg-gradient border-secondary text-light rounded-pill rounded-end`}\r\n        >\r\n          <Search className=\"mx-0\" style={{ marginTop: \"3px\" }} />\r\n        </span>\r\n        <input\r\n          type=\"text\"\r\n          ref={inputRef}\r\n          onChange={(e) => {\r\n            setTyping(Boolean(e.target.value.trim()));\r\n            searchHandler(e);\r\n          }}\r\n          autoFocus={autoFocus}\r\n          placeholder={placeholder}\r\n          className={`${inputFieldClassName\r\n            .replace(\"text-center\", \"text-start\")\r\n            .replace(\"pill\", \"0\")} border-start-0 border-end-0 d-inline-block`}\r\n          style={{ cursor: \"auto\", fontSize: \"18px\" }}\r\n        />\r\n        {/* Clear icon button */}\r\n        <span\r\n          className={`input-group-text ${disableIfLoading} bg-black bg-gradient border-secondary text-light rounded-pill rounded-start border-start-0`}\r\n        >\r\n          <IconButton\r\n            onClick={() => {\r\n              inputRef.current.value = \"\";\r\n              setTyping(false); // Hide '<Close />' icon\r\n              inputRef.current.focus();\r\n              clearInput();\r\n            }}\r\n            className={`${typing ? \"d-inline-block\" : \"d-none\"}`}\r\n            style={{\r\n              padding: \"0px 9px 3px 9px\",\r\n              margin: \"-7px\",\r\n              color: \"#999999\",\r\n            }}\r\n            sx={{ \":hover\": { backgroundColor: \"#aaaaaa20\" } }}\r\n          >\r\n            <Clear style={{ fontSize: \"19px\" }} />\r\n          </IconButton>\r\n        </span>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default SearchInput;\r\n","import { ChevronLeft } from \"@mui/icons-material\";\r\nimport { Drawer, IconButton } from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"../../utils/axios\";\r\nimport { debounce, getAxiosConfig, truncateString } from \"../../utils/appUtils\";\r\nimport UserListItem from \"./UserListItem\";\r\nimport LoadingList from \"./LoadingList\";\r\nimport SearchInput from \"./SearchInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectAppState, setSelectedChat } from \"../../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\n\r\nconst SearchUsersDrawer = ({ setFetchMsgs, isDrawerOpen, setIsDrawerOpen }) => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const { loading } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n  const searchUserInput = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isDrawerOpen) {\r\n      setSearchResults([]);\r\n      dispatch(setLoading(false));\r\n      setSearchQuery(\"\");\r\n    }\r\n  }, [isDrawerOpen]);\r\n\r\n  const handleClose = () => setIsDrawerOpen(false);\r\n\r\n  // Debouncing fetchUsers method to limit the no. of API calls\r\n  const searchUsers = debounce(async (e) => {\r\n    const query = e.target?.value?.trim();\r\n    setSearchQuery(query);\r\n    if (!query) return setSearchResults([]);\r\n\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.get(`/api/user?search=${query}`, config);\r\n\r\n      dispatch(setLoading(false));\r\n      setSearchResults(data);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Users\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-left\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  }, 800);\r\n\r\n  // Create/Retreive chat when a user item is clicked\r\n  const createOrRetrieveChat = async (userId) => {\r\n    handleClose();\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\r\n\r\n      dispatch(setLoading(false));\r\n      dispatch(setSelectedChat(data));\r\n      setFetchMsgs(true);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Create/Retrieve Chat\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        PaperProps={{\r\n          sx: {\r\n            borderTopRightRadius: 10,\r\n            borderBottomRightRadius: 10,\r\n            backgroundImage: \"linear-gradient(0deg,#222,#444)\",\r\n            padding: \"10px\",\r\n            width: \"350px\",\r\n          },\r\n        }}\r\n        anchor=\"left\"\r\n        open={isDrawerOpen}\r\n        onClose={handleClose}\r\n        transitionDuration={350}\r\n      >\r\n        <div className=\"d-flex justify-content-center\">\r\n          <span\r\n            className=\"text-center mt-1 user-select-none text-light\"\r\n            style={{ marginTop: 0, fontSize: 27 }}\r\n          >\r\n            Search Users\r\n            <IconButton\r\n              onClick={handleClose}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: 8,\r\n                top: 5,\r\n                color: \"#999999\",\r\n                \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n              }}\r\n            >\r\n              <ChevronLeft className=\"text-light m-1\" />\r\n            </IconButton>\r\n          </span>\r\n        </div>\r\n        {/* Search Bar */}\r\n        <SearchInput\r\n          ref={searchUserInput}\r\n          searchHandler={searchUsers}\r\n          autoFocus={true}\r\n          placeholder=\"Search by Name or Email\"\r\n          clearInput={() => {\r\n            setSearchQuery(\"\");\r\n            setSearchResults([]);\r\n            searchUserInput.current.focus();\r\n          }}\r\n        />\r\n        {/* Search Results */}\r\n        <section\r\n          className=\"position-relative mx-1 my-2 h-100\"\r\n          style={{ overflowY: \"auto\", overflowX: \"hidden\" }}\r\n        >\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={(e) => {\r\n              const userId = e.target.dataset.user || e.target.alt;\r\n              if (!userId) return;\r\n              createOrRetrieveChat(userId);\r\n            }}\r\n          >\r\n            {loading ? (\r\n              <LoadingList listOf=\"User\" dpRadius={\"42px\"} count={8} />\r\n            ) : searchResults.length > 0 ? (\r\n              searchResults.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  truncateValues={[27, 24]}\r\n                />\r\n              ))\r\n            ) : searchQuery && !loading ? (\r\n              <p className=\"text-light text-center fs-5 mt-3 mx-5\">\r\n                No results found for '\r\n                <span className=\"text-info\">\r\n                  {truncateString(searchQuery, 30, 26)}\r\n                </span>\r\n                '\r\n              </p>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        </section>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchUsersDrawer;\r\n","import { Notifications, Search } from \"@mui/icons-material\";\r\nimport { Avatar, IconButton } from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport NotificationsMenu from \"./menus/NotificationsMenu\";\r\nimport ProfileSettingsMenu from \"./menus/ProfileSettingsMenu\";\r\nimport SearchUsersDrawer from \"./utils/SearchUsersDrawer\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport animationData from \"../animations/chat-gif.json\";\r\nimport LottieAnimation from \"./utils/LottieAnimation\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../store/slices/AppSlice\";\r\n\r\nconst arrowStyles = { color: \"#666\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 16,\r\n  padding: \"5px 15px\",\r\n  backgroundColor: \"#666\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ChatpageHeader = ({ chats, setFetchMsgs, setDialogBody }) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const appGif = useRef();\r\n  const notifCount = loggedInUser?.notifications?.length || \"\";\r\n\r\n  const [animateNotif, setAnimateNotif] = useState(false);\r\n  const [notificationsMenuAnchor, setNotificationsMenuAnchor] = useState(null);\r\n  const [profileSettingsMenuAnchor, setProfileSettingsMenuAnchor] =\r\n    useState(null);\r\n\r\n  const openNotificationMenu = (e) => setNotificationsMenuAnchor(e.target);\r\n  const openProfileSettingsMenu = (e) => setProfileSettingsMenuAnchor(e.target);\r\n\r\n  // For opening/closing 'search users' left drawer\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (animateNotif) return;\r\n    setAnimateNotif(true);\r\n    let timeout = setTimeout(() => {\r\n      setAnimateNotif(false);\r\n    }, 1000);\r\n    return () => clearTimeout(timeout);\r\n  }, [notifCount]);\r\n\r\n  return (\r\n    <header\r\n      className={`chatpageDiv d-flex justify-content-between align-items-center user-select-none`}\r\n    >\r\n      {/* Search Users to create/access chat */}\r\n      <CustomTooltip\r\n        title=\"Search Users to Start or Open a Chat\"\r\n        placement=\"bottom-start\"\r\n        arrow\r\n      >\r\n        <button\r\n          style={{ borderRadius: \"20px\" }}\r\n          className={`btn btn-outline-secondary text-light px-3`}\r\n          onClick={() => setIsDrawerOpen(true)}\r\n        >\r\n          <Search className={`me-1`} />\r\n          <span className={`d-none d-md-inline mb-1 fs-5`}>Search Users</span>\r\n        </button>\r\n      </CustomTooltip>\r\n      <SearchUsersDrawer\r\n        setFetchMsgs={setFetchMsgs}\r\n        isDrawerOpen={isDrawerOpen}\r\n        setIsDrawerOpen={setIsDrawerOpen}\r\n      />\r\n\r\n      {/* App Logo */}\r\n      <div className={`d-flex align-items-center ms-3 ms-md-0`}>\r\n        <LottieAnimation\r\n          ref={appGif}\r\n          className={\"d-none d-sm-inline-block mt-2 me-sm-1 me-md-2\"}\r\n          style={{ width: \"35px\", height: \"35px\" }}\r\n          animationData={animationData}\r\n        />\r\n        <span style={{ color: \"orange\" }} className=\"fs-4 fw-bold mt-1\">\r\n          CHAT ZONED\r\n        </span>\r\n      </div>\r\n\r\n      {/* User notification and profile settings icons */}\r\n      <div>\r\n        <CustomTooltip title={`Notifications`} placement=\"bottom-end\" arrow>\r\n          <IconButton\r\n            className=\"position-relative mx-1\"\r\n            onClick={openNotificationMenu}\r\n            sx={{\r\n              color: \"#999999\",\r\n              \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n            }}\r\n          >\r\n            {notifCount && (\r\n              <span\r\n                className={`notifBadge ${\r\n                  animateNotif ? \"notifCountChange\" : \"\"\r\n                } badge rounded-circle bg-danger \r\n               position-absolute`}\r\n                style={{\r\n                  fontSize: notifCount > 99 ? 12 : 13,\r\n                  top: -2,\r\n                  right: notifCount > 99 ? -11 : notifCount > 9 ? -5 : -2,\r\n                  padding:\r\n                    notifCount > 99\r\n                      ? \"6px 5px\"\r\n                      : notifCount > 9\r\n                      ? \"4px 5px\"\r\n                      : \"4px 7px\",\r\n                }}\r\n              >\r\n                {!notifCount ? \"\" : notifCount > 99 ? \"99+\" : notifCount}\r\n              </span>\r\n            )}\r\n            <Notifications className={`text-light`} />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n        <CustomTooltip\r\n          title=\"Profile Settings\"\r\n          size=\"small\"\r\n          placement=\"bottom-end\"\r\n          arrow\r\n        >\r\n          <IconButton\r\n            className=\"mx-md-3 mx-lg-4\"\r\n            sx={{\r\n              color: \"#999999\",\r\n              \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n            }}\r\n            onClick={openProfileSettingsMenu}\r\n          >\r\n            <Avatar\r\n              alt=\"LoggedInUser\"\r\n              className=\"img-fluid\"\r\n              src={loggedInUser?.profilePic}\r\n            />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n        <NotificationsMenu\r\n          chats={chats}\r\n          setFetchMsgs={setFetchMsgs}\r\n          anchor={notificationsMenuAnchor}\r\n          setAnchor={setNotificationsMenuAnchor}\r\n        />\r\n        <ProfileSettingsMenu\r\n          anchor={profileSettingsMenuAnchor}\r\n          setAnchor={setProfileSettingsMenuAnchor}\r\n          setDialogBody={setDialogBody}\r\n        />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default ChatpageHeader;\r\n","import { useRef, useState } from \"react\";\r\nimport { Edit, KeyboardDoubleArrowLeft } from \"@mui/icons-material\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport { getAxiosConfig, isImageFile, TWO_MB } from \"../../utils/appUtils\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport axios from \"../../utils/axios\";\r\nimport { Button, CircularProgress, DialogActions } from \"@mui/material\";\r\nimport { btnCustomStyle, btnHoverStyle } from \"../utils/CustomDialog\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  toggleRefresh,\r\n} from \"../../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\n\r\nconst arrowStyles = { color: \"#111\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  padding: \"5px 10px\",\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\nconst DEFAULT_GROUP_DP = process.env.REACT_APP_DEFAULT_GROUP_DP;\r\n\r\nconst NewGroupBody = ({ closeChildDialog }) => {\r\n  const { loggedInUser, refresh, groupInfo, clientSocket, isSocketConnected } =\r\n    useSelector(selectAppState);\r\n  const {\r\n    loading,\r\n    disableIfLoading,\r\n    formFieldClassName,\r\n    inputFieldClassName,\r\n    formLabelClassName,\r\n  } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n\r\n  const { chatDisplayPicUrl, chatName } = groupInfo;\r\n  const [editGroupDpMenuAnchor, setEditGroupDpMenuAnchor] = useState(null);\r\n  const imgInput = useRef();\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") e.target.click();\r\n  };\r\n\r\n  const displayWarning = (message = \"Warning\", duration = 3000) => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"warning\",\r\n        duration,\r\n        position: \"top-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  // Create group chat\r\n  const createGroupChat = async () => {\r\n    if (!groupInfo) return;\r\n    const { chatDisplayPic, chatName, users } = groupInfo;\r\n\r\n    if (!chatName) return displayWarning(\"Please Enter a Group Name\");\r\n\r\n    if (users?.length < 2)\r\n      return displayWarning(\"Please Add Atleast 2 Members\");\r\n\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser, formData: true });\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"displayPic\", chatDisplayPic);\r\n      formData.append(\"chatName\", chatName);\r\n      formData.append(\"users\", JSON.stringify(users?.map((user) => user?._id)));\r\n\r\n      const { data } = await axios.post(\"/api/chat/group\", formData, config);\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"new grp created\", {\r\n          admin: loggedInUser,\r\n          newGroup: data,\r\n        });\r\n      }\r\n      dispatch(\r\n        displayToast({\r\n          message: \"Group Created Successfully\",\r\n          type: \"success\",\r\n          duration: 2000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      dispatch(toggleRefresh(!refresh));\r\n      closeChildDialog();\r\n      // Close Parent Dialog as well\r\n      dispatch(hideDialog());\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Create Group\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleImgInputChange = (e) => {\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n\r\n    if (!isImageFile(image.name)) {\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Invalid Image File\",\r\n          message: \"Please Select an Image File (png/jpg/jpeg/svg/webp)\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    if (image.size >= TWO_MB) {\r\n      imgInput.current.value = \"\";\r\n      return displayWarning(\"Please Select an Image Smaller than 2 MB\", 4000);\r\n    }\r\n    dispatch(\r\n      setGroupInfo({\r\n        ...groupInfo,\r\n        chatDisplayPic: image,\r\n        chatDisplayPicUrl: URL.createObjectURL(image),\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleReset = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      setGroupInfo({\r\n        ...groupInfo,\r\n        chatDisplayPic: null,\r\n        chatDisplayPicUrl: DEFAULT_GROUP_DP,\r\n      })\r\n    );\r\n    imgInput.current.value = \"\";\r\n  };\r\n\r\n  const openEditGroupDpMenu = (e) => {\r\n    setEditGroupDpMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Select Display Pic */}\r\n      <section className=\"newGroup d-flex position-relative mb-4\">\r\n        <img\r\n          className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n          src={chatDisplayPicUrl}\r\n          alt=\"displayPic\"\r\n        />\r\n        <CustomTooltip title=\"Edit Group Display Pic\" placement=\"top-start\" arrow>\r\n          <i\r\n            id=\"editGroupDPTooltip\"\r\n            tabIndex={2}\r\n            onKeyDown={clickOnKeydown}\r\n            className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n            onClick={openEditGroupDpMenu}\r\n          >\r\n            <Edit className=\"text-light fs-6\" />\r\n          </i>\r\n        </CustomTooltip>\r\n        {/* Edit/Delete profile pic menu */}\r\n        <EditPicMenu\r\n          anchor={editGroupDpMenuAnchor}\r\n          setAnchor={setEditGroupDpMenuAnchor}\r\n          selectProfilePic={() => imgInput.current.click()}\r\n          openDeletePhotoConfirmDialog={handleReset}\r\n          deletePhotoCondition={\r\n            !chatDisplayPicUrl?.endsWith(\"group_mbuvht.png\")\r\n          }\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleImgInputChange}\r\n          name=\"groupdp\"\r\n          id=\"editGroupDp\"\r\n          ref={imgInput}\r\n          className={`d-none`}\r\n          disabled={loading}\r\n        />\r\n      </section>\r\n      {/* Group Name input */}\r\n      <section className={`${formFieldClassName}`}>\r\n        <label htmlFor=\"groupName\" className={`${formLabelClassName}`}>\r\n          Group Name <span className=\"required\">*</span>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={chatName}\r\n          onChange={(e) => {\r\n            dispatch(setGroupInfo({ ...groupInfo, chatName: e.target.value }));\r\n          }}\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\") createGroupChat();\r\n          }}\r\n          required\r\n          autoFocus\r\n          name=\"groupname\"\r\n          id=\"groupName\"\r\n          className={`${inputFieldClassName}`}\r\n          disabled={loading}\r\n          placeholder=\"Eg: The Avengers\"\r\n        />\r\n      </section>\r\n      <DialogActions className=\"mt-3\" style={{ marginBottom: \"-17px\" }}>\r\n        <Button\r\n          sx={btnHoverStyle}\r\n          disabled={loading}\r\n          style={btnCustomStyle}\r\n          onClick={closeChildDialog}\r\n        >\r\n          <span>\r\n            <KeyboardDoubleArrowLeft\r\n              className=\"btnArrowIcons\"\r\n              style={{\r\n                margin: \"0px 5px 2px 0px\",\r\n              }}\r\n            />\r\n            Back\r\n          </span>\r\n        </Button>\r\n        <Button\r\n          sx={btnHoverStyle}\r\n          disabled={loading}\r\n          style={btnCustomStyle}\r\n          onClick={createGroupChat}\r\n        >\r\n          {loading ? (\r\n            <>\r\n              <CircularProgress size={25} style={{ marginRight: \"10px\" }} />\r\n              <span>Creating...</span>\r\n            </>\r\n          ) : (\r\n            <>Create Group</>\r\n          )}\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewGroupBody;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { Avatar, Chip } from \"@mui/material\";\r\nimport axios from \"../../utils/axios\";\r\nimport { debounce, getAxiosConfig, truncateString } from \"../../utils/appUtils\";\r\nimport UserListItem from \"../utils/UserListItem\";\r\nimport SearchInput from \"../utils/SearchInput\";\r\nimport NewGroupBody from \"./NewGroupBody\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport LoadingList from \"../utils/LoadingList\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectAppState, setGroupInfo } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { setDialogAction } from \"../../store/slices/CustomDialogSlice\";\r\n\r\nconst AddMembersToGroup = ({ getAddedMembers, forCreateGroup }) => {\r\n  const { loggedInUser, groupInfo } = useSelector(selectAppState);\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const dispatch = useDispatch();\r\n\r\n  const [groupData, setGroupData] = useState(groupInfo);\r\n  const [fetching, setFetching] = useState(false);\r\n  const groupMembers = groupData?.users;\r\n  const [isMemberSelected, setIsMemberSelected] = useState(false);\r\n  const [addedMembers, setAddedMembers] = useState([]);\r\n\r\n  const searchUserInput = useRef(null);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const { setChildDialogBody, displayChildDialog, closeChildDialog } =\r\n    childDialogMethods;\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setGroupData(groupInfo);\r\n  }, [groupInfo]);\r\n\r\n  // For 'create group chat'\r\n  const openNewGroupDialog = () => {\r\n    if (addedMembers?.length < 2) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Add Atleast 2 Members\",\r\n          type: \"warning\",\r\n          duration: 3000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(false);\r\n    dispatch(setGroupInfo(groupData));\r\n    setChildDialogBody(<NewGroupBody closeChildDialog={closeChildDialog} />);\r\n    displayChildDialog({\r\n      title: \"Create New Group\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSearchResults([]);\r\n    setSearchQuery(\"\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // For create group: [Next >>] button\r\n    if (forCreateGroup) dispatch(setDialogAction(openNewGroupDialog));\r\n  }, [groupData]);\r\n\r\n  useEffect(() => {\r\n    // For add more group members\r\n    if (!forCreateGroup) getAddedMembers([...addedMembers]);\r\n  }, [addedMembers]);\r\n\r\n  const searchUsers = debounce(async (e) => {\r\n    const query = e.target?.value?.trim();\r\n    setSearchQuery(query);\r\n    if (!query) return setSearchResults([]);\r\n\r\n    setFetching(true);\r\n    if (isMemberSelected) setIsMemberSelected(false);\r\n\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.get(`/api/user?search=${query}`, config);\r\n\r\n      // Remove all the already added members from search results\r\n      let membersNotAdded = [...data];\r\n      groupMembers.forEach((addedMember) => {\r\n        membersNotAdded = membersNotAdded.filter(\r\n          (m) => m._id !== addedMember._id\r\n        );\r\n      });\r\n\r\n      setFetching(false);\r\n      setSearchResults(membersNotAdded);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Users\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-left\",\r\n        })\r\n      );\r\n      setFetching(false);\r\n    }\r\n  }, 800);\r\n\r\n  const unselectUser = (user) => {\r\n    if (!user) return;\r\n    setGroupData({\r\n      ...groupData,\r\n      users: groupMembers.filter((u) => u._id !== user._id),\r\n    });\r\n    // Remove user from added member list\r\n    setAddedMembers(addedMembers.filter((u) => u._id !== user._id));\r\n    // Add removed user to search result list\r\n    setSearchResults([user, ...searchResults]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"addGroupMembers d-flex flex-column\">\r\n      {/* Selected Users tag list */}\r\n      <section\r\n        className=\"mx-auto px-3 py-2 overflow-auto d-flex flex-wrap\"\r\n        style={{\r\n          flex: \"0.33\",\r\n          borderRadius: \"15px\",\r\n          backgroundColor: \"#303030\",\r\n        }}\r\n      >\r\n        {addedMembers?.map((user) => (\r\n          <Chip\r\n            key={user?._id}\r\n            className=\"userChip text-light bg-success rounded-pill fs-6\"\r\n            avatar={\r\n              <Avatar\r\n                className=\"userChipAvatar\"\r\n                alt={user?.name}\r\n                src={user?.profilePic}\r\n              />\r\n            }\r\n            label={truncateString(user?.name?.split(\" \")[0], 12, 8)}\r\n            onDelete={() => unselectUser(user)}\r\n          />\r\n        ))}\r\n      </section>\r\n      {/* Search Bar */}\r\n      <SearchInput\r\n        ref={searchUserInput}\r\n        searchHandler={searchUsers}\r\n        autoFocus={true}\r\n        placeholder=\"Search Members\"\r\n        clearInput={() => {\r\n          setSearchQuery(\"\");\r\n          setSearchResults([]);\r\n          searchUserInput.current.focus();\r\n        }}\r\n      />\r\n      {/* Search Results */}\r\n      <section\r\n        className=\"position-relative mx-auto mt-2 overflow-auto\"\r\n        style={{ flex: \"1\", marginBottom: \"-10px\" }}\r\n      >\r\n        <div\r\n          // 'Event delegation'\r\n          onClick={(e) => {\r\n            const userId = e.target.dataset.user || e.target.alt;\r\n            if (!userId) return;\r\n\r\n            if (!isMemberSelected) setIsMemberSelected(true);\r\n            // Add selected user to tag list\r\n            const selectedUser = searchResults.find((u) => u._id === userId);\r\n            setGroupData({\r\n              ...groupData,\r\n              users: [...groupMembers, selectedUser],\r\n            });\r\n            // Add selected user to added member list\r\n            setAddedMembers([...addedMembers, selectedUser]);\r\n            // Remove selected user from search result list\r\n            setSearchResults(searchResults.filter((u) => u._id !== userId));\r\n          }}\r\n        >\r\n          {fetching ? (\r\n            <LoadingList listOf=\"Member\" dpRadius={\"43px\"} count={6} />\r\n          ) : searchResults.length > 0 ? (\r\n            searchResults.map((user) => (\r\n              <UserListItem\r\n                key={user._id}\r\n                user={user}\r\n                truncateValues={[21, 18]}\r\n              />\r\n            ))\r\n          ) : (\r\n            searchQuery &&\r\n            !fetching && (\r\n              <p className=\"text-light text-center fs-5 mt-3 mx-5\">\r\n                {isMemberSelected ? \"No Other Users \" : \"No Results \"}\r\n                Found for '\r\n                <span className=\"text-info\">\r\n                  {truncateString(searchQuery, 25, 22)}\r\n                </span>\r\n                '\r\n              </p>\r\n            )\r\n          )}\r\n        </div>\r\n      </section>\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMembersToGroup;\r\n","import { Avatar } from \"@mui/material\";\r\nimport LottieAnimation from \"../utils/LottieAnimation\";\r\nimport typingAnimData from \"../../animations/typing.json\";\r\nimport { useRef } from \"react\";\r\n\r\nconst TypingIndicator = ({ typingChatUser, showAvatar }) => {\r\n  const typingGif = useRef(null);\r\n  const typingUserData = typingChatUser?.toString().split(\"---\") || [];\r\n  const typingUserName = typingUserData[1] || \"\";\r\n  return (\r\n    <span\r\n      className={`typingIndicator ${\r\n        typingChatUser ? \"displayTyping\" : \"hideTyping\"\r\n      } \r\n      d-flex pt-2 rounded-3 ps-2 ms-3`}\r\n    >\r\n      {showAvatar && (\r\n        <Avatar\r\n          alt={typingUserName || \"Receiver\"}\r\n          src={typingUserData[2] || \"Receiver\"}\r\n          style={{ height: 30, width: 30 }}\r\n        />\r\n      )}\r\n      <span className=\"ms-2\">\r\n        {typingUserName ? `${typingUserName} is ` : \"\"}typing\r\n      </span>\r\n      <LottieAnimation\r\n        ref={typingGif}\r\n        className={\"\"}\r\n        style={{ height: 30, bottom: 0 }}\r\n        animationData={typingAnimData}\r\n      />\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default TypingIndicator;\r\n","import {\r\n  AudioFile,\r\n  Description,\r\n  DoneAll,\r\n  GifBox,\r\n  Image,\r\n  PictureAsPdf,\r\n  VideoFile,\r\n} from \"@mui/icons-material\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport {\r\n  dateStringOf,\r\n  isImageFile,\r\n  msgDateStringOf,\r\n  msgTimeStringOf,\r\n  truncateString,\r\n} from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport TypingIndicator from \"./TypingIndicator\";\r\n\r\nconst arrowStyles = { color: \"#A30CA7\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  padding: \"5px 12px\",\r\n  borderRadius: 5,\r\n  backgroundColor: \"#A30CA7\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ChatListItem = ({ chat, chatNotifCount, typingChatUser }) => {\r\n  const { selectedChat, loggedInUser } = useSelector(selectAppState);\r\n  const {\r\n    _id,\r\n    chatName,\r\n    receiverEmail,\r\n    isGroupChat,\r\n    lastMessage,\r\n    chatDisplayPic,\r\n  } = chat;\r\n  const tooltipTitle = isGroupChat\r\n    ? `Group: ${chatName}\\n(${chat?.users?.length} Members)`\r\n    : `${chatName}\\n${receiverEmail}`;\r\n\r\n  let lastMsgContent = lastMessage?.content\r\n    ?.replaceAll(\"<br>\", \"\\n\")\r\n    .replaceAll(\"&nbsp;\", \" \")\r\n    .replaceAll(\"<div>\", \"\\n\")\r\n    .replaceAll(\"</div>\", \"\\n\")\r\n    .replaceAll(\"<span>\", \"\")\r\n    .replaceAll(\"</span>\", \"\");\r\n\r\n  const lastMsgDate = new Date(lastMessage?.createdAt);\r\n  const lastMsgDateString = msgDateStringOf(lastMsgDate);\r\n\r\n  const lastMsgFileUrl = lastMessage?.fileUrl;\r\n  const fileContents = lastMessage?.file_name?.split(\"===\") || [];\r\n  const lastMsgFileName = fileContents[0] || \"\";\r\n  const lastMsgData = lastMsgContent || lastMsgFileName;\r\n  const fileType = fileContents[1]?.split(\"+++\")[1];\r\n  let lastMsgFileType;\r\n\r\n  if (lastMsgFileUrl) {\r\n    lastMsgFileType = isImageFile(lastMsgFileUrl)\r\n      ? \"image\"\r\n      : /(\\.gif)$/.test(lastMsgFileUrl)\r\n      ? \"gif\"\r\n      : fileType?.startsWith(\"video/\") ||\r\n        /(\\.mp4|\\.mov|\\.ogv|\\.webm)$/.test(lastMsgFileUrl)\r\n      ? \"video\"\r\n      : fileType?.startsWith(\"audio/\") ||\r\n        /(\\.mp3|\\.ogg|\\.wav)$/.test(lastMsgFileUrl)\r\n      ? \"audio\"\r\n      : /(\\.pdf)$/.test(lastMsgFileUrl)\r\n      ? \"pdf\"\r\n      : \"otherFile\";\r\n  }\r\n\r\n  return (\r\n    <div\r\n      data-chat={_id}\r\n      data-has-notifs={chatNotifCount}\r\n      className={`chatListItem user-select-none text-light pointer ${\r\n        selectedChat?._id === _id ? \"isSelected\" : \"\"\r\n      } d-flex justify-content-start align-items-center`}\r\n    >\r\n      {/* Chat Display Pic */}\r\n      <CustomTooltip\r\n        title={`View ${isGroupChat ? \"Group DP\" : \"Profile Pic\"}`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <Avatar\r\n          src={chatDisplayPic}\r\n          alt={chatName}\r\n          data-chat={_id}\r\n          data-has-notifs={chatNotifCount}\r\n          className={`img-fluid listItemAvatar chatListAvatar rounded-circle`}\r\n        />\r\n      </CustomTooltip>\r\n      {/* Chat Data */}\r\n      <div\r\n        data-chat={_id}\r\n        data-has-notifs={chatNotifCount}\r\n        className=\"chatListData d-flex flex-column align-items-start px-2\"\r\n      >\r\n        {/* Chat Name */}\r\n        <p\r\n          data-chat={_id}\r\n          data-has-notifs={chatNotifCount}\r\n          title={tooltipTitle}\r\n          className=\"chatListName fs-5 fw-bold text-info text-start\"\r\n        >\r\n          {truncateString(chatName, 21, 18)}\r\n        </p>\r\n        {lastMessage && (\r\n          <span\r\n            className=\"lastMsgDate\"\r\n            data-chat={_id}\r\n            data-has-notifs={chatNotifCount}\r\n            style={{ color: chatNotifCount ? \"#50F0B8\" : \"#b9b9b9\" }}\r\n          >\r\n            {lastMsgDateString === \"Today\"\r\n              ? msgTimeStringOf(lastMsgDate)\r\n              : lastMsgDateString !== \"Yesterday\"\r\n              ? dateStringOf(lastMsgDate)\r\n              : \"Yesterday\"}\r\n          </span>\r\n        )}\r\n        {lastMessage && chatNotifCount && (\r\n          <span\r\n            className={`notifBadge badge rounded-circle\r\n             position-absolute text-black bg-gradient`}\r\n            data-chat={_id}\r\n            data-has-notifs={chatNotifCount}\r\n            style={{\r\n              fontSize: chatNotifCount > 99 ? 12 : 13,\r\n              right: 17,\r\n              bottom: chatNotifCount > 9 ? 8 : 9,\r\n              padding:\r\n                chatNotifCount > 99\r\n                  ? \"6px 4px\"\r\n                  : chatNotifCount > 9\r\n                  ? \"6px 5px\"\r\n                  : \"4px 7px\",\r\n            }}\r\n          >\r\n            {chatNotifCount || \"\"}\r\n          </span>\r\n        )}\r\n        {/* Last Message Data */}\r\n        {typingChatUser ? (\r\n          <span style={{ color: \"#73F76D\", margin: \"-3px 0px -3px -30px\" }}>\r\n            <TypingIndicator typingChatUser={typingChatUser} />\r\n          </span>\r\n        ) : (\r\n          (lastMessage || lastMessage === null || isGroupChat) && (\r\n            <p\r\n              data-chat={_id}\r\n              data-has-notifs={chatNotifCount}\r\n              className=\"chatListLastMessage\"\r\n            >\r\n              <span\r\n                data-chat={_id}\r\n                data-has-notifs={chatNotifCount}\r\n                className=\"text-warning\"\r\n              >\r\n                <>\r\n                  {lastMessage === null ||\r\n                  (isGroupChat && !lastMessage) ||\r\n                  (!isGroupChat &&\r\n                    lastMessage?.sender?._id !== loggedInUser?._id) ? (\r\n                    \"\"\r\n                  ) : lastMessage?.sender?._id === loggedInUser?._id ? (\r\n                    <>\r\n                      {isGroupChat ? (\r\n                        <>You: </>\r\n                      ) : (\r\n                        <DoneAll\r\n                          data-chat={_id}\r\n                          data-has-notifs={chatNotifCount}\r\n                          className=\"me-1 fs-5\"\r\n                          style={{ color: \"lightblue\" }}\r\n                        />\r\n                      )}\r\n                    </>\r\n                  ) : (\r\n                    truncateString(\r\n                      lastMessage?.sender?.name?.split(\" \")[0],\r\n                      12,\r\n                      8\r\n                    ) + \": \"\r\n                  )}\r\n                </>\r\n              </span>\r\n              {lastMsgFileUrl ? (\r\n                <span data-chat={_id} data-has-notifs={chatNotifCount}>\r\n                  {lastMsgFileType === \"image\" ? (\r\n                    <span\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      title={lastMsgData}\r\n                    >\r\n                      <Image\r\n                        data-chat={_id}\r\n                        data-has-notifs={chatNotifCount}\r\n                        className=\"fileIcon\"\r\n                      />{\" \"}\r\n                      {truncateString(lastMsgContent, 25, 22) || \"Photo\"}\r\n                    </span>\r\n                  ) : lastMsgFileType === \"gif\" ? (\r\n                    <span\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      title={lastMsgData}\r\n                    >\r\n                      <GifBox\r\n                        data-chat={_id}\r\n                        data-has-notifs={chatNotifCount}\r\n                        className=\"fileIcon\"\r\n                      />{\" \"}\r\n                      {truncateString(lastMsgContent, 25, 22) || \"Gif\"}\r\n                    </span>\r\n                  ) : lastMsgFileType === \"video\" ? (\r\n                    <span\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      title={lastMsgData}\r\n                    >\r\n                      <VideoFile\r\n                        data-chat={_id}\r\n                        data-has-notifs={chatNotifCount}\r\n                        className=\"fileIcon\"\r\n                      />{\" \"}\r\n                      {truncateString(lastMsgContent, 25, 22) || \"Video\"}\r\n                    </span>\r\n                  ) : lastMsgFileType === \"audio\" ? (\r\n                    <span\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      title={lastMsgData}\r\n                    >\r\n                      <AudioFile\r\n                        data-chat={_id}\r\n                        data-has-notifs={chatNotifCount}\r\n                        className=\"fileIcon\"\r\n                      />{\" \"}\r\n                      {truncateString(lastMsgContent, 25, 22) || \"Audio\"}\r\n                    </span>\r\n                  ) : lastMsgFileType === \"pdf\" ? (\r\n                    <span\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      title={lastMsgData}\r\n                    >\r\n                      <PictureAsPdf\r\n                        data-chat={_id}\r\n                        data-has-notifs={chatNotifCount}\r\n                        className=\"fileIcon\"\r\n                      />{\" \"}\r\n                      {truncateString(lastMsgData, 22, 19) || \"Pdf\"}\r\n                    </span>\r\n                  ) : (\r\n                    <span\r\n                      data-chat={_id}\r\n                      data-has-notifs={chatNotifCount}\r\n                      title={lastMsgData}\r\n                    >\r\n                      <Description\r\n                        data-chat={_id}\r\n                        data-has-notifs={chatNotifCount}\r\n                        className=\"fileIcon\"\r\n                      />{\" \"}\r\n                      {truncateString(lastMsgData, 22, 19) || \"File\"}\r\n                    </span>\r\n                  )}\r\n                </span>\r\n              ) : (\r\n                <span\r\n                  data-chat={_id}\r\n                  data-has-notifs={chatNotifCount}\r\n                  title={lastMsgContent}\r\n                >\r\n                  {lastMessage === null\r\n                    ? \" Last Message was deleted\"\r\n                    : isGroupChat && !lastMessage\r\n                    ? `New Group Created`\r\n                    : truncateString(lastMsgContent, 25, 22)}\r\n                </span>\r\n              )}\r\n            </p>\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListItem;\r\n","const FILE_STYLES = { width: \"90vw\", height: \"82vh\", borderRadius: 10 };\r\nconst PLACEHOLDER_IMG = process.env.REACT_APP_PLACEHOLDER_IMG_URL;\r\n\r\nconst FullSizeImage = ({ event, audioSrc, videoSrc }) => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n      {audioSrc ? (\r\n        <audio\r\n          src={audioSrc}\r\n          style={{ width: \"clamp(300px, 70%, 600px)\" }}\r\n          autoPlay\r\n          controls\r\n        >\r\n          Your browser does not support audio tag.\r\n        </audio>\r\n      ) : videoSrc ? (\r\n        <video src={videoSrc} style={FILE_STYLES} autoPlay controls>\r\n          Your browser does not support video tag.\r\n        </video>\r\n      ) : (\r\n        <img\r\n          src={event.target?.src || PLACEHOLDER_IMG}\r\n          alt={event.target?.alt || \"fullSizeImg\"}\r\n          className=\"img-fluid d-inline-block mx-auto\"\r\n          style={{ ...FILE_STYLES, objectFit: \"contain\" }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullSizeImage;\r\n","import { GroupAdd } from \"@mui/icons-material\";\r\nimport { lazy, useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  debounce,\r\n  getAxiosConfig,\r\n  getOneToOneChatReceiver,\r\n  truncateString,\r\n} from \"../utils/appUtils\";\r\nimport axios from \"../utils/axios\";\r\nimport AddMembersToGroup from \"./dialogs/AddMembersToGroup\";\r\nimport ChatListItem from \"./utils/ChatListItem\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport FullSizeImage from \"./utils/FullSizeImage\";\r\nimport LoadingList from \"./utils/LoadingList\";\r\nimport SearchInput from \"./utils/SearchInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  setLoggedInUser,\r\n  setSelectedChat,\r\n} from \"../store/slices/AppSlice\";\r\nimport {\r\n  displayDialog,\r\n  setShowDialogActions,\r\n} from \"../store/slices/CustomDialogSlice\";\r\nimport { displayToast } from \"../store/slices/ToastSlice\";\r\n\r\nconst GettingStarted = lazy(() => import(\"./GettingStarted\"));\r\n\r\nconst DEFAULT_GROUP_DP = process.env.REACT_APP_DEFAULT_GROUP_DP;\r\n\r\nconst arrowStyles = { color: \"#666\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 16,\r\n  padding: \"5px 12px\",\r\n  backgroundColor: \"#666\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ChatListView = ({\r\n  chats,\r\n  setChats,\r\n  loadingMsgs,\r\n  setFetchMsgs,\r\n  setDialogBody,\r\n  typingChatUsers,\r\n}) => {\r\n  const { loggedInUser, selectedChat, refresh } = useSelector(selectAppState);\r\n  const notifs = [...loggedInUser?.notifications];\r\n  const dispatch = useDispatch();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [filteredChats, setFilteredChats] = useState(chats);\r\n  const searchChatInput = useRef();\r\n\r\n  const openCreateGroupChatDialog = () => {\r\n    dispatch(\r\n      setGroupInfo({\r\n        chatDisplayPic: null,\r\n        chatDisplayPicUrl: DEFAULT_GROUP_DP,\r\n        chatName: \"\",\r\n        users: [],\r\n      })\r\n    );\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<AddMembersToGroup forCreateGroup={true} />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Add Group Members\",\r\n        nolabel: \"Cancel\",\r\n        yeslabel: \"Next\",\r\n        action: null,\r\n      })\r\n    );\r\n  };\r\n\r\n  const displayFullSizeImage = (e) => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<FullSizeImage event={e} />);\r\n    dispatch(\r\n      displayDialog({\r\n        isFullScreen: true,\r\n        title: e.target?.alt || \"Display Pic\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const fetchChats = async () => {\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.get(`/api/chat`, config);\r\n\r\n      const mappedChats = data\r\n        .map((chat) => {\r\n          const { isGroupChat, users } = chat;\r\n\r\n          if (!isGroupChat) {\r\n            const receiver = getOneToOneChatReceiver(loggedInUser, users);\r\n            chat[\"chatName\"] = receiver?.name;\r\n            chat[\"receiverEmail\"] = receiver?.email;\r\n            chat[\"chatDisplayPic\"] = receiver?.profilePic;\r\n          }\r\n          return chat;\r\n        })\r\n        .filter((chat) => chat.lastMessage !== undefined || chat.isGroupChat);\r\n\r\n      setChats(mappedChats);\r\n      setFilteredChats(mappedChats);\r\n      if (loading) setLoading(false);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Chats\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      if (loading) setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Debouncing filterChats method to limit the no. of fn calls\r\n  const searchChats = debounce((e) => {\r\n    const chatNameInput = e.target.value?.toLowerCase().trim();\r\n    if (!chatNameInput) return setFilteredChats(chats);\r\n    setFilteredChats(\r\n      chats.filter((chat) =>\r\n        chat?.chatName?.toLowerCase().includes(chatNameInput)\r\n      )\r\n    );\r\n  }, 600);\r\n\r\n  const deletePersistedNotifs = async (notifsToBeDeleted) => {\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      await axios.put(\r\n        `/api/user/delete/notifications`,\r\n        { notificationIds: JSON.stringify(notifsToBeDeleted) },\r\n        config\r\n      );\r\n    } catch (error) {\r\n      console.log(\"Couldn't Delete Notifications : \", error.message);\r\n    }\r\n  };\r\n\r\n  const deleteNotifications = (clickedChatId) => {\r\n    // Delete notifs from global state and localStorage\r\n    const notifsToBeDeleted = [];\r\n    for (let i = 0; i < notifs.length; ++i) {\r\n      if (notifs[i].chat._id === clickedChatId) {\r\n        const deletedNotif = notifs.splice(i, 1)[0];\r\n        notifsToBeDeleted.push(deletedNotif._id);\r\n        // After deleting element at 'i', next element (i+1) shifts back\r\n        // to 'i' index\r\n        --i;\r\n      }\r\n    }\r\n    const updatedUser = { ...loggedInUser, notifications: notifs };\r\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\r\n    dispatch(setLoggedInUser(updatedUser));\r\n\r\n    // Delete notifs that were persisted in mongodb\r\n    deletePersistedNotifs(notifsToBeDeleted);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchChats();\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <div\r\n      className={`chatpageDiv chatpageView chatListView text-light ${\r\n        selectedChat ? \"d-none d-md-flex\" : \"d-flex\"\r\n      } flex-column user-select-none mx-1 p-2 ${\r\n        loadingMsgs ? \"pe-none\" : \"pe-auto\"\r\n      }`}\r\n    >\r\n      <section className=\"position-relative\">\r\n        <p className=\"chatListHeader fw-bold fs-4 rounded-pill bg-info bg-opacity-10 py-2\">\r\n          CHATS\r\n          {/* Create Group Chat */}\r\n          <CustomTooltip\r\n            title=\"Create New Group Chat\"\r\n            placement=\"bottom-end\"\r\n            arrow\r\n          >\r\n            <button\r\n              className={`btnCreateGroup pointer btn btn-outline-secondary text-light px-3`}\r\n              onClick={openCreateGroupChatDialog}\r\n            >\r\n              <GroupAdd />\r\n            </button>\r\n          </CustomTooltip>\r\n        </p>\r\n      </section>\r\n      {/* Search Bar */}\r\n      {chats?.length > 0 && (\r\n        <section className=\"searchChat\">\r\n          <SearchInput\r\n            ref={searchChatInput}\r\n            searchHandler={searchChats}\r\n            autoFocus={false}\r\n            placeholder=\"Search Chat\"\r\n            clearInput={() => setFilteredChats(chats)}\r\n          />\r\n        </section>\r\n      )}\r\n      {/* Chat list */}\r\n      <section className=\"chatList m-1 p-1 overflow-auto position-relative\">\r\n        {loading ? (\r\n          <LoadingList listOf=\"Chat\" dpRadius={\"49px\"} count={8} />\r\n        ) : filteredChats?.length > 0 ? (\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={(e) => {\r\n              const { dataset } = e.target;\r\n              const parentDataset = e.target.parentNode.dataset;\r\n              const clickedChatId = dataset.chat || parentDataset.chat;\r\n              const hasNotifs = dataset.hasNotifs || parentDataset.hasNotifs;\r\n              if (!clickedChatId) return;\r\n\r\n              if (e.target.className?.toString().includes(\"MuiAvatar-img\")) {\r\n                return displayFullSizeImage(e);\r\n              }\r\n              const clickedChat = filteredChats.find(\r\n                (chat) => chat._id === clickedChatId\r\n              );\r\n              if (clickedChat._id === selectedChat?._id) return;\r\n              dispatch(setSelectedChat(clickedChat));\r\n              setFetchMsgs(true); // To fetch selected chat msgs\r\n              if (clickedChat?.isGroupChat) dispatch(setGroupInfo(clickedChat));\r\n\r\n              // Delete notifications if notif badge is present\r\n              if (hasNotifs) deleteNotifications(clickedChatId);\r\n            }}\r\n          >\r\n            {filteredChats.map((chat) => {\r\n              let chatNotifCount = 0;\r\n              notifs?.forEach((notif) => {\r\n                if (notif.chat._id === chat._id) ++chatNotifCount;\r\n              });\r\n              return (\r\n                <ChatListItem\r\n                  key={chat._id}\r\n                  chat={chat}\r\n                  chatNotifCount={chatNotifCount || \"\"}\r\n                  typingChatUser={typingChatUsers?.find(\r\n                    (u) => u?.toString()?.split(\"---\")[0] === chat._id\r\n                  )}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <span className=\"d-inline-block w-100 text-light fs-3 mt-4 mx-auto\">\r\n              {chats?.length === 0\r\n                ? `Hi ${\r\n                    truncateString(loggedInUser?.name?.split(\" \")[0], 12, 9) ||\r\n                    \"There\"\r\n                  }😎`\r\n                : \"No Chats Found\"}\r\n            </span>\r\n            {chats?.length === 0 && <GettingStarted />}\r\n          </>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListView;\r\n","import { getOneToOneChatReceiver, truncateString } from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport FullSizeImage from \"../utils/FullSizeImage\";\r\nimport { useState } from \"react\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\n\r\nconst arrowStyles = { color: \"#111\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  padding: \"5px 10px\",\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst ViewProfileBody = ({ memberProfilePic, memberName, memberEmail }) => {\r\n  const { loggedInUser, selectedChat } = useSelector(selectAppState);\r\n  let name, email, profilePic;\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const { setChildDialogBody, displayChildDialog } = childDialogMethods;\r\n\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n\r\n  if (memberProfilePic && memberName && memberEmail) {\r\n    name = memberName;\r\n    email = memberEmail;\r\n    profilePic = memberProfilePic;\r\n  } else {\r\n    const receiver = getOneToOneChatReceiver(loggedInUser, selectedChat?.users);\r\n    name = receiver?.name;\r\n    email = receiver?.email;\r\n    profilePic = receiver?.profilePic;\r\n  }\r\n\r\n  const displayFullSizeImage = (e) => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    setChildDialogBody(<FullSizeImage event={e} />);\r\n    displayChildDialog({\r\n      isFullScreen: true,\r\n      title: e.target?.alt || \"Profile Pic\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* View Profile Pic */}\r\n      <section className=\"dialogField d-flex position-relative mb-4\">\r\n        <CustomTooltip title=\"View Profile Pic\" placement=\"top\" arrow>\r\n          <img\r\n            className=\"img-fluid pointer d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\r\n            id=\"view_profilePic\"\r\n            onClick={displayFullSizeImage}\r\n            src={profilePic}\r\n            alt={name}\r\n          />\r\n        </CustomTooltip>\r\n      </section>\r\n      {/* View Name */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-15px\" }}>\r\n          <CustomTooltip\r\n            title={name?.length > 20 ? name : \"\"}\r\n            placement=\"top\"\r\n            arrow\r\n          >\r\n            <div\r\n              className=\"w-100 h1 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"32px\" }}\r\n            >\r\n              {truncateString(name, 25, 21)}\r\n            </div>\r\n          </CustomTooltip>\r\n        </div>\r\n      </section>\r\n      {/* View Email */}\r\n      <section\r\n        className={`dialogField text-center mb-2`}\r\n        style={{ marginTop: \"-10px\" }}\r\n      >\r\n        <CustomTooltip\r\n          title={email?.length > 20 ? email : \"\"}\r\n          placement=\"bottom\"\r\n          arrow\r\n        >\r\n          <span className=\"fs-4\" style={{ color: \"lightblue\" }}>\r\n            {truncateString(email, 25, 21)}\r\n          </span>\r\n        </CustomTooltip>\r\n      </section>\r\n\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewProfileBody;\r\n","import { KeyboardArrowDown } from \"@mui/icons-material\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\n\r\nconst arrowStyles = { color: \"#E6480C\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  borderRadius: 10,\r\n  backgroundColor: \"#E6480C\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst GroupMemberItem = ({ user, truncateValues }) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const { _id, name, email, profilePic } = user;\r\n  const [max, index] = truncateValues;\r\n  const isLoggedInUser = _id === loggedInUser?._id;\r\n\r\n  return (\r\n    <div\r\n      data-user={_id}\r\n      className={`groupMemberItem position-relative user-select-none d-flex text-light justify-content-start align-items-center px-3 ${\r\n        !isLoggedInUser && \"pointer\"\r\n      }`}\r\n    >\r\n      {user?.isGroupAdmin && (\r\n        <span\r\n          className={`adminBadge position-absolute fw-light badge rounded-3 bg-success`}\r\n          style={{ cursor: \"auto\" }}\r\n        >\r\n          Admin\r\n        </span>\r\n      )}\r\n      {!isLoggedInUser && (\r\n        <span\r\n          data-user={_id}\r\n          className=\"memberSettingsIcon text-light position-absolute rounded-circle\"\r\n        >\r\n          <KeyboardArrowDown data-user={_id} />\r\n        </span>\r\n      )}\r\n      <CustomTooltip\r\n        data-user={_id}\r\n        title={`${isLoggedInUser ? \"\" : `${name} (${email})`}`}\r\n        placement=\"top-start\"\r\n        arrow\r\n      >\r\n        <Avatar\r\n          src={profilePic}\r\n          alt={_id}\r\n          data-user={_id}\r\n          className={`listItemAvatar groupMemberAvatar`}\r\n        />\r\n      </CustomTooltip>\r\n      <div\r\n        data-user={_id}\r\n        className=\"groupMemberData d-flex flex-column align-items-start px-2\"\r\n      >\r\n        <p data-user={_id} className=\"groupMemberName fw-bold text-info\">\r\n          {isLoggedInUser ? \"You\" : truncateString(name, max, index)}\r\n        </p>\r\n        <p data-user={_id} className=\"groupMemberEmail\">\r\n          {truncateString(email, max, index)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupMemberItem;\r\n","import {\r\n  AdminPanelSettings,\r\n  GroupRemove,\r\n  InfoOutlined,\r\n  Message,\r\n} from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport axios from \"../../utils/axios\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\nimport { getAxiosConfig, truncateString } from \"../../utils/appUtils\";\r\nimport ViewProfileBody from \"../dialogs/ViewProfileBody\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n  toggleRefresh,\r\n} from \"../../store/slices/AppSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { setLoading } from \"../../store/slices/FormfieldSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\n\r\nconst MemberOptionsMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  clickedMember,\r\n  setShowDialogActions,\r\n  setShowDialogClose,\r\n  childDialogMethods,\r\n}) => {\r\n  const { loggedInUser, refresh, groupInfo, clientSocket, isSocketConnected } =\r\n    useSelector(selectAppState);\r\n  const dispatch = useDispatch();\r\n\r\n  const { setChildDialogBody, displayChildDialog } = childDialogMethods;\r\n  const isLoggedInUserGroupAdmin = groupInfo?.groupAdmins?.some(\r\n    (admin) => admin?._id === loggedInUser?._id\r\n  );\r\n  const clickedMemberName = truncateString(\r\n    clickedMember?.name?.split(\" \")[0],\r\n    12,\r\n    9\r\n  );\r\n  const styledMemberName = (\r\n    <span style={{ color: \"violet\", fontSize: \"22px\" }}>\r\n      {clickedMemberName}\r\n    </span>\r\n  );\r\n  const updateView = (data) => {\r\n    dispatch(toggleRefresh(!refresh));\r\n    dispatch(setSelectedChat(data));\r\n  };\r\n\r\n  const displayError = (\r\n    error = \"Oops! Something went wrong\",\r\n    title = \"Operation Failed\"\r\n  ) => {\r\n    dispatch(\r\n      displayToast({\r\n        title,\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"bottom-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  // Create/Retreive chat when 'Message Member' is clicked\r\n  const openChat = async () => {\r\n    dispatch(hideDialog()); // Close all dialogs by closing parent dialog\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.post(\r\n        `/api/chat`,\r\n        { userId: clickedMember?._id },\r\n        config\r\n      );\r\n\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Create/Retrieve Chat\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const openViewProfileDialog = () => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    setChildDialogBody(\r\n      <ViewProfileBody\r\n        memberProfilePic={clickedMember?.profilePic}\r\n        memberName={clickedMember?.name}\r\n        memberEmail={clickedMember?.email}\r\n      />\r\n    );\r\n    displayChildDialog({ title: \"View Profile\" });\r\n  };\r\n\r\n  const makeGroupAdmin = async () => {\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.post(\r\n        `/api/chat/group/make-admin`,\r\n        { userId: clickedMember?._id, chatId: groupInfo?._id },\r\n        config\r\n      );\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n          createdAdmin: clickedMember,\r\n        });\r\n      }\r\n      dispatch(\r\n        displayToast({\r\n          message: `${clickedMemberName} is now a Group Admin`,\r\n          type: \"success\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setGroupInfo(data));\r\n      updateView(data);\r\n      dispatch(setLoading(false));\r\n    } catch (error) {\r\n      displayError(error, \"Make Group Admin Failed\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const dismissAsAdmin = async () => {\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/dismiss-admin`,\r\n        { userId: clickedMember?._id, chatId: groupInfo?._id },\r\n        config\r\n      );\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n          dismissedAdmin: clickedMember,\r\n        });\r\n      }\r\n      dispatch(\r\n        displayToast({\r\n          message: `${clickedMemberName} is no longer a Group Admin`,\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      dispatch(setGroupInfo(data));\r\n      updateView(data);\r\n      return \"membersUpdated\";\r\n    } catch (error) {\r\n      displayError(error, \"Dismiss As Group Admin Failed\");\r\n      dispatch(setLoading(false));\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  const removeFromGroup = async () => {\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/remove`,\r\n        {\r\n          userToBeRemoved: clickedMember?._id,\r\n          isGroupAdmin: clickedMember?.isGroupAdmin,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      data[\"removedUser\"] = clickedMember;\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n        });\r\n      }\r\n      dispatch(\r\n        displayToast({\r\n          message: `${clickedMemberName} removed from Group`,\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      dispatch(setGroupInfo(data));\r\n      updateView(data);\r\n      return \"membersUpdated\";\r\n    } catch (error) {\r\n      displayError(error, \"Remove From Group Failed\");\r\n      dispatch(setLoading(false));\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  // Confirmation dialogs\r\n  const openDismissAsAdminConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>Are you sure you want to dismiss {styledMemberName} as group admin?</>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Dismiss As Admin\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: dismissAsAdmin,\r\n    });\r\n  };\r\n\r\n  const openRemoveFromGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>Are you sure you want to remove {styledMemberName} from this group?</>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Remove From Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: removeFromGroup,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      {/* Message X */}\r\n      <MenuItem sx={menuItemProps} onClick={openChat}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Message />\r\n        </ListItemIcon>\r\n        <MenuItemText>{`Message ${\r\n          clickedMemberName || \"Member\"\r\n        }`}</MenuItemText>\r\n      </MenuItem>\r\n      {/* View X */}\r\n      <MenuItem sx={menuItemProps} onClick={openViewProfileDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <InfoOutlined />\r\n        </ListItemIcon>\r\n        <MenuItemText>{`View ${clickedMemberName || \"Member\"}`}</MenuItemText>\r\n      </MenuItem>\r\n      {/* Make Group Admin / Dismiss as Admin */}\r\n      {isLoggedInUserGroupAdmin && (\r\n        <MenuItem\r\n          sx={menuItemProps}\r\n          onClick={\r\n            clickedMember?.isGroupAdmin\r\n              ? openDismissAsAdminConfirmDialog\r\n              : makeGroupAdmin\r\n          }\r\n        >\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <AdminPanelSettings />\r\n          </ListItemIcon>\r\n          <MenuItemText>\r\n            {clickedMember?.isGroupAdmin\r\n              ? \"Dismiss as Admin\"\r\n              : \"Make Group Admin\"}\r\n          </MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n      {/* Remove X */}\r\n      {isLoggedInUserGroupAdmin && (\r\n        <MenuItem sx={menuItemProps} onClick={openRemoveFromGroupConfirmDialog}>\r\n          <ListItemIcon sx={menuIconProps}>\r\n            <GroupRemove />\r\n          </ListItemIcon>\r\n          <MenuItemText>{`Remove ${\r\n            clickedMemberName || \"Member\"\r\n          }`}</MenuItemText>\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MemberOptionsMenu;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { debounce } from \"../../utils/appUtils\";\r\nimport SearchInput from \"../utils/SearchInput\";\r\nimport GroupMemberItem from \"../utils/GroupMemberItem\";\r\nimport MemberOptionsMenu from \"../menus/MemberOptionsMenu\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\n\r\nlet filteredMembersCache = [];\r\n\r\nconst ViewGroupMembers = () => {\r\n  const { loggedInUser, groupInfo } = useSelector(selectAppState);\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n  const groupMembers = groupInfo?.users;\r\n  const admins = groupInfo?.groupAdmins;\r\n  const [clickedMember, setClickedMember] = useState(null);\r\n  const [memberOptionsMenuAnchor, setMemberOptionsMenuAnchor] = useState(null);\r\n  // LoggedInUser and Group Admins should be at the top\r\n  const sortMembers = () => {\r\n    return [\r\n      loggedInUser,\r\n      ...admins?.filter((admin) => admin?._id !== loggedInUser?._id),\r\n      ...groupMembers?.filter(\r\n        (member) =>\r\n          member?._id !== loggedInUser?._id &&\r\n          admins?.every((admin) => admin?._id !== member?._id)\r\n      ),\r\n    ].map((member) => {\r\n      return {\r\n        ...member,\r\n        isGroupAdmin: admins?.some((admin) => member?._id === admin?._id),\r\n      };\r\n    });\r\n  };\r\n\r\n  // Update the member list whenever groupInfo is updated\r\n  useEffect(() => {\r\n    if (!groupInfo) return;\r\n    filteredMembersCache = sortMembers();\r\n    setFilteredMembers(filteredMembersCache);\r\n  }, [groupInfo]);\r\n\r\n  const filterMemberInput = useRef(null);\r\n  const [filteredMembers, setFilteredMembers] = useState(filteredMembersCache);\r\n\r\n  // Debouncing filterMembers method to limit the no. of fn calls\r\n  const filterMembers = debounce((e) => {\r\n    const memberNameInput = e.target?.value?.toLowerCase().trim();\r\n    if (!memberNameInput) {\r\n      return setFilteredMembers(filteredMembersCache);\r\n    }\r\n    setFilteredMembers(\r\n      filteredMembersCache?.filter(\r\n        (user) =>\r\n          user?.name?.toLowerCase().includes(memberNameInput) ||\r\n          user?.email?.toLowerCase().includes(memberNameInput)\r\n      )\r\n    );\r\n  }, 600);\r\n\r\n  const openMemberOptionsMenu = (e) => setMemberOptionsMenuAnchor(e.target);\r\n\r\n  return (\r\n    <div\r\n      className=\"addGroupMembers d-flex flex-column\"\r\n      style={{ height: \"75vh\" }}\r\n    >\r\n      {/* Member Count */}\r\n      <p className=\"h3 text-center text-light\" style={{ marginTop: \"-5px\" }}>\r\n        {`${groupMembers?.length} Member${groupMembers?.length > 1 ? \"s\" : \"\"}`}\r\n      </p>\r\n      {/* Search Bar */}\r\n      <section className=\"searchChat\" style={{ marginTop: \"-15px\" }}>\r\n        <SearchInput\r\n          ref={filterMemberInput}\r\n          searchHandler={filterMembers}\r\n          autoFocus={false}\r\n          placeholder=\"Search Member\"\r\n          clearInput={() => setFilteredMembers(filteredMembersCache)}\r\n        />\r\n      </section>\r\n      {/* Member list */}\r\n      <section className=\"chatList p-1 overflow-auto position-relative\">\r\n        {filteredMembers?.length > 0 ? (\r\n          <div\r\n            // 'Event delegation' (add only one event listener for\r\n            // parent element instead of adding for each child element)\r\n            onClick={(e) => {\r\n              const userId =\r\n                e.target?.dataset.user ||\r\n                e.target.parentNode.dataset.user ||\r\n                e.target.alt;\r\n              if (userId) {\r\n                // Don't display member options menu for loggedInUser\r\n                if (loggedInUser?._id === userId) return;\r\n\r\n                setClickedMember(\r\n                  filteredMembers?.find((m) => m?._id === userId)\r\n                );\r\n                openMemberOptionsMenu(e);\r\n              }\r\n            }}\r\n          >\r\n            {filteredMembers.map((member) => (\r\n              <GroupMemberItem\r\n                key={member._id}\r\n                user={member}\r\n                truncateValues={[21, 18]}\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <span className=\"d-inline-block w-100 text-center text-light h5 mt-4 mx-auto\">\r\n            No Members Found\r\n          </span>\r\n        )}\r\n      </section>\r\n      <MemberOptionsMenu\r\n        anchor={memberOptionsMenuAnchor}\r\n        setAnchor={setMemberOptionsMenuAnchor}\r\n        clickedMember={clickedMember}\r\n        setShowDialogActions={setShowDialogActions}\r\n        setShowDialogClose={setShowDialogClose}\r\n        childDialogMethods={childDialogMethods}\r\n      />\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewGroupMembers;\r\n","import { useRef, useState } from \"react\";\r\nimport {\r\n  Delete,\r\n  Edit,\r\n  InfoOutlined,\r\n  Logout,\r\n  PersonAdd,\r\n} from \"@mui/icons-material\";\r\nimport { CircularProgress, IconButton } from \"@mui/material\";\r\nimport axios from \"../../utils/axios\";\r\nimport {\r\n  getAxiosConfig,\r\n  isImageFile,\r\n  truncateString,\r\n  TWO_MB,\r\n} from \"../../utils/appUtils\";\r\nimport EditPicMenu from \"../menus/EditPicMenu\";\r\nimport EditNameBody from \"./EditNameBody\";\r\nimport ChildDialog from \"../utils/ChildDialog\";\r\nimport AddMembersToGroup from \"./AddMembersToGroup\";\r\nimport ViewGroupMembers from \"./ViewGroupMembers\";\r\nimport getCustomTooltip from \"../utils/CustomTooltip\";\r\nimport FullSizeImage from \"../utils/FullSizeImage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n  toggleRefresh,\r\n} from \"../../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../../store/slices/FormfieldSlice\";\r\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\r\nimport { displayToast } from \"../../store/slices/ToastSlice\";\r\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\r\n\r\nconst arrowStyles = { color: \"#111\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 17,\r\n  padding: \"5px 10px\",\r\n  border: \"1px solid #333\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nconst GroupInfoBody = ({ messages }) => {\r\n  const { loggedInUser, refresh, groupInfo, clientSocket, isSocketConnected } =\r\n    useSelector(selectAppState);\r\n  const { childDialogMethods } = useSelector(selectChildDialogState);\r\n  const { loading, disableIfLoading } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n  const { setChildDialogBody, displayChildDialog, closeChildDialog } =\r\n    childDialogMethods;\r\n\r\n  const groupDP = groupInfo?.chatDisplayPic;\r\n  const groupName = groupInfo?.chatName;\r\n  const groupMembers = groupInfo?.users;\r\n  const admins = groupInfo?.groupAdmins;\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [editGroupDpMenuAnchor, setEditGroupDpMenuAnchor] = useState(null);\r\n  const isUserGroupAdmin = admins?.some(\r\n    (admin) => admin?._id === loggedInUser?._id\r\n  );\r\n  const [showDialogActions, setShowDialogActions] = useState(true);\r\n  const [showDialogClose, setShowDialogClose] = useState(false);\r\n  const imgInput = useRef(null);\r\n  const btnClassName = \"w-100 btn text-light fs-5\";\r\n\r\n  const displayWarning = (message = \"Warning\", duration = 3000) => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"warning\",\r\n        duration,\r\n        position: \"top-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const displayError = (\r\n    error = \"Oops! Something went wrong\",\r\n    title = \"Operation Failed\"\r\n  ) => {\r\n    dispatch(\r\n      displayToast({\r\n        title,\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"top-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const displaySuccess = (message = \"Operation Successful\") => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"success\",\r\n        duration: 3000,\r\n        position: \"bottom-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const updateView = (data) => {\r\n    dispatch(setGroupInfo(data));\r\n    dispatch(toggleRefresh(!refresh));\r\n    dispatch(setSelectedChat(data)); // To update messages view\r\n  };\r\n\r\n  // Click a button/icon upon 'Enter' or 'Space' keydown\r\n  const clickOnKeydown = (e) => {\r\n    if (e.key === \" \" || e.key === \"Enter\") {\r\n      e.target.click();\r\n    }\r\n  };\r\n\r\n  // To retreive added members from `AddMembersToGroup` dialog\r\n  let updatedName = \"\";\r\n  const getUpdatedName = (updatedValue, options) => {\r\n    updatedName = updatedValue;\r\n    if (options?.submitUpdatedName) updateGroupName({ enterKeyClicked: true });\r\n  };\r\n\r\n  const updateGroupName = async (options) => {\r\n    if (!updatedName) return displayWarning(\"Please Enter Valid Group Name\");\r\n\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/chat/group/update-name\",\r\n        { groupName: updatedName, chatId: groupInfo?._id },\r\n        config\r\n      );\r\n\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n        });\r\n      }\r\n      displaySuccess(\"Group Name Updated Successfully\");\r\n\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n      if (options?.enterKeyClicked) closeChildDialog();\r\n      else return \"profileUpdated\";\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Update Group Name\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Update Group Display Pic\r\n  const updateGroupDp = async (e) => {\r\n    const image = e.target.files[0];\r\n    if (!image) return;\r\n\r\n    if (!isImageFile(image.name)) {\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Invalid Image File\",\r\n          message: \"Please Select an Image File (png/jpg/jpeg/svg/webp)\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    if (image.size >= TWO_MB) {\r\n      imgInput.current.value = \"\";\r\n      return displayWarning(\"Please Select an Image Smaller than 2 MB\", 4000);\r\n    }\r\n    dispatch(setLoading(true));\r\n    setUploading(true);\r\n    const config = getAxiosConfig({ loggedInUser, formData: true });\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"displayPic\", image);\r\n    formData.append(\"currentDP\", groupDP);\r\n    formData.append(\"cloudinary_id\", groupInfo?.cloudinary_id);\r\n    formData.append(\"chatId\", groupInfo?._id);\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/chat/group/update-dp\",\r\n        formData,\r\n        config\r\n      );\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n        });\r\n      }\r\n      displaySuccess(\"Group DP Updated Successfully\");\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n      updateView(data);\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Update Group DP\");\r\n      dispatch(setLoading(false));\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const deleteGroupDp = async () => {\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/delete-dp`,\r\n        {\r\n          currentDP: groupDP,\r\n          cloudinary_id: groupInfo?.cloudinary_id,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n        });\r\n      }\r\n      displaySuccess(\"Group DP Deleted Successfully\");\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Delete Group DP\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const exitGroup = async () => {\r\n    if (groupMembers?.length === 1) return deleteGroup();\r\n\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/chat/group/remove`,\r\n        {\r\n          userToBeRemoved: loggedInUser?._id,\r\n          isGroupAdmin: isUserGroupAdmin,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n        });\r\n      }\r\n      dispatch(\r\n        displayToast({\r\n          message: `Exited From '${data?.chatName}' Group`,\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      updateView(null);\r\n      dispatch(hideDialog());\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Exit Group\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      dispatch(setLoading(false));\r\n      return \"membersUpdated\";\r\n    }\r\n  };\r\n\r\n  const deleteGroup = async () => {\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const deleteGroupPromise = axios.put(\r\n        `/api/chat/group/delete`,\r\n        {\r\n          currentDP: groupInfo?.chatDisplayPic,\r\n          cloudinary_id: groupInfo?.cloudinary_id,\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n      const deleteMessagesPromise = messages?.length\r\n        ? axios.put(\r\n            `/api/message/delete`,\r\n            {\r\n              messageIds: JSON.stringify(messages?.map((m) => m._id)),\r\n              isDeleteGroupRequest: true,\r\n            },\r\n            config\r\n          )\r\n        : Promise.resolve();\r\n\r\n      // Parallel execution of independent promises\r\n      await Promise.all([deleteGroupPromise, deleteMessagesPromise]);\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp deleted\", {\r\n          admin: loggedInUser,\r\n          deletedGroup: groupInfo,\r\n        });\r\n      }\r\n      displaySuccess(\"Group Deleted Successfully\");\r\n      dispatch(setLoading(false));\r\n      updateView(null);\r\n      dispatch(hideDialog());\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Delete Group\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Open confirm dialogs\r\n  const openExitGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>\r\n        {groupMembers?.length === 1\r\n          ? `Since you're the only group member, this group will be \r\n            DELETED if you exit. Are you sure you want to exit?`\r\n          : `This group will be removed from your chats. \r\n             Are you sure you want to exit this group?`}\r\n      </>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Exit Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Exiting...\",\r\n      action: exitGroup,\r\n    });\r\n  };\r\n\r\n  const openDeleteGroupConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <>\r\n        All messages and files related to this group will be deleted and this\r\n        group will be removed from the chats of ALL MEMBERS. Are you sure you\r\n        want to delete this group?\r\n      </>\r\n    );\r\n    displayChildDialog({\r\n      title: \"Delete Group\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteGroup,\r\n    });\r\n  };\r\n\r\n  // Open edit name dialog\r\n  const openEditGroupNameDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(\r\n      <EditNameBody\r\n        originalName={groupInfo?.chatName}\r\n        getUpdatedName={getUpdatedName}\r\n        placeholder=\"Enter New Group Name\"\r\n      />\r\n    );\r\n    displayChildDialog({\r\n      title: \"Edit Group Name\",\r\n      nolabel: \"CANCEL\",\r\n      yeslabel: \"SAVE\",\r\n      loadingYeslabel: \"Saving...\",\r\n      action: updateGroupName,\r\n    });\r\n  };\r\n\r\n  // Open delete photo confirm dialog\r\n  const openDeletePhotoConfirmDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(<>Are you sure you want to delete this display pic?</>);\r\n    displayChildDialog({\r\n      title: \"Delete Display Pic\",\r\n      nolabel: \"NO\",\r\n      yeslabel: \"YES\",\r\n      loadingYeslabel: \"Deleting...\",\r\n      action: deleteGroupDp,\r\n    });\r\n  };\r\n\r\n  // To retreive added members from `AddMembersToGroup` dialog\r\n  let addedMembers = [];\r\n  const getAddedMembers = (updatedMembers) => {\r\n    addedMembers = updatedMembers;\r\n  };\r\n\r\n  const addMembersToGroup = async () => {\r\n    if (!isUserGroupAdmin)\r\n      return displayWarning(\"Only Admin Can Add Members to Group\");\r\n\r\n    if (!addedMembers?.length)\r\n      return displayWarning(\"Please Select Atleast 1 Member to Add\");\r\n\r\n    dispatch(setLoading(true));\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/chat/group/add\",\r\n        {\r\n          usersToBeAdded: JSON.stringify(addedMembers),\r\n          chatId: groupInfo?._id,\r\n        },\r\n        config\r\n      );\r\n      if (isSocketConnected) {\r\n        clientSocket.emit(\"grp updated\", {\r\n          updater: loggedInUser,\r\n          updatedGroup: data,\r\n        });\r\n      }\r\n      displaySuccess(\"Successfully Added Member/s to Group\");\r\n      dispatch(setLoading(false));\r\n      updateView(data);\r\n      return \"profileUpdated\";\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Add Members to Group\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  // Open Add members dialog\r\n  const openAddMembersDialog = () => {\r\n    setShowDialogActions(true);\r\n    setShowDialogClose(false);\r\n    setChildDialogBody(<AddMembersToGroup getAddedMembers={getAddedMembers} />);\r\n    displayChildDialog({\r\n      title: \"Add Group Members\",\r\n      nolabel: \"Cancel\",\r\n      yeslabel: \"Add\",\r\n      loadingYeslabel: \"Adding...\",\r\n      action: addMembersToGroup,\r\n    });\r\n  };\r\n\r\n  const openViewMembersDialog = () => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    setChildDialogBody(<ViewGroupMembers />);\r\n    displayChildDialog({\r\n      title: ``,\r\n    });\r\n  };\r\n\r\n  const displayFullSizeImage = (e) => {\r\n    setShowDialogActions(false);\r\n    setShowDialogClose(true);\r\n    setChildDialogBody(<FullSizeImage event={e} />);\r\n    displayChildDialog({\r\n      isFullScreen: true,\r\n      title: e.target?.alt || \"Display Pic\",\r\n    });\r\n  };\r\n\r\n  const openEditGroupDpMenu = (e) => {\r\n    setEditGroupDpMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div className=\"groupDialog d-flex flex-column row\">\r\n      {/* View/Edit Display Pic */}\r\n      {loading && uploading ? (\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n          <CircularProgress\r\n            size={60}\r\n            style={{ margin: \"20px 0px\", color: \"lightblue\" }}\r\n          />\r\n          <span style={{ marginBottom: \"45px\" }} className=\"text-light h1\">\r\n            {\" Updating Photo...\"}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <section className=\"dialogField d-flex position-relative mb-4\">\r\n          <CustomTooltip title=\"View DP\" placement=\"right\" arrow>\r\n            <img\r\n              className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle pointer\"\r\n              src={groupDP || \"GroupDp\"}\r\n              style={{ width: \"120px\", height: \"120px\" }}\r\n              onClick={displayFullSizeImage}\r\n              alt={groupName}\r\n            />\r\n          </CustomTooltip>\r\n\r\n          <CustomTooltip title=\"Edit Group DP\" placement=\"right\" arrow>\r\n            <i\r\n              id=\"editProfilePic\"\r\n              tabIndex={2}\r\n              onKeyDown={clickOnKeydown}\r\n              className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\r\n              onClick={openEditGroupDpMenu}\r\n            >\r\n              <Edit className=\"text-light fs-6\" />\r\n            </i>\r\n          </CustomTooltip>\r\n          {/* Edit/Delete display pic menu */}\r\n          <EditPicMenu\r\n            anchor={editGroupDpMenuAnchor}\r\n            setAnchor={setEditGroupDpMenuAnchor}\r\n            selectProfilePic={() => imgInput.current.click()}\r\n            openDeletePhotoConfirmDialog={openDeletePhotoConfirmDialog}\r\n            deletePhotoCondition={!groupDP?.endsWith(\"group_mbuvht.png\")}\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={updateGroupDp}\r\n            name=\"displayPic\"\r\n            id=\"groupInfo__displayPic\"\r\n            ref={imgInput}\r\n            className={`d-none`}\r\n            disabled={loading}\r\n          />\r\n        </section>\r\n      )}\r\n\r\n      {/* Group Name */}\r\n      <section className={`dialogField text-center mb-3`}>\r\n        <div className=\"input-group\" style={{ marginTop: \"-10px\" }}>\r\n          <CustomTooltip\r\n            title={groupName?.length > 24 ? groupName : \"\"}\r\n            placement=\"top\"\r\n            arrow\r\n          >\r\n            <div\r\n              className=\"w-100 fw-bold mx-4 text-info\"\r\n              style={{ fontSize: \"28px\", lineHeight: \"30px\" }}\r\n            >\r\n              {truncateString(groupName, 25, 21)}\r\n            </div>\r\n          </CustomTooltip>\r\n          <CustomTooltip title=\"Edit Group Name\" placement=\"top\" arrow>\r\n            <IconButton\r\n              tabIndex={3}\r\n              onKeyDown={clickOnKeydown}\r\n              onClick={openEditGroupNameDialog}\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: -8,\r\n                top: 0,\r\n                \":hover\": { backgroundColor: \"#aaaaaa30\" },\r\n              }}\r\n            >\r\n              <Edit className=\"text-light\" />\r\n            </IconButton>\r\n          </CustomTooltip>\r\n        </div>\r\n      </section>\r\n\r\n      {/* No of members */}\r\n      <section\r\n        className={`dialogField text-center mb-3 text-light text-opacity-75`}\r\n        style={{ marginTop: \"-5px\", borderRadius: \"10px\" }}\r\n      >\r\n        {`${groupMembers?.length} Member${groupMembers?.length > 1 ? \"s\" : \"\"}`}\r\n      </section>\r\n\r\n      {/* View Members */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <button\r\n          className={`${btnClassName} btn-outline-primary`}\r\n          onClick={openViewMembersDialog}\r\n        >\r\n          <InfoOutlined\r\n            className=\"text-light\"\r\n            style={{ marginLeft: \"-15px\" }}\r\n          />\r\n          <span className=\"ms-2\">View Members</span>\r\n        </button>\r\n      </section>\r\n\r\n      {/* Add Members (only for admins) */}\r\n      {isUserGroupAdmin && (\r\n        <section className={`dialogField text-center mb-2`}>\r\n          <button\r\n            className={`${btnClassName} btn-outline-success`}\r\n            onClick={openAddMembersDialog}\r\n          >\r\n            <PersonAdd className=\"text-light\" style={{ marginLeft: \"-20px\" }} />\r\n            <span className=\"ms-2\">Add Members</span>\r\n          </button>\r\n        </section>\r\n      )}\r\n\r\n      {/* Exit Group */}\r\n      <section className={`dialogField text-center mb-2`}>\r\n        <button\r\n          className={`${btnClassName} btn-outline-danger`}\r\n          onClick={() => {\r\n            if (\r\n              isUserGroupAdmin &&\r\n              admins?.length === 1 &&\r\n              groupMembers?.length !== 1\r\n            ) {\r\n              return displayWarning(\r\n                `Every group must have atleast 1 admin. Since \r\n              you're the only group admin, you won't be allowed\r\n              to exit until you make someone else as the admin.`,\r\n                10000\r\n              );\r\n            }\r\n            openExitGroupConfirmDialog();\r\n          }}\r\n        >\r\n          <Logout className=\"text-light\" style={{ marginLeft: \"-30px\" }} />\r\n          <span className=\"ms-2\">Exit Group</span>\r\n        </button>\r\n      </section>\r\n\r\n      {/* Delete Group (only for admins) */}\r\n      {isUserGroupAdmin && (\r\n        <section className={`dialogField text-center mb-2`}>\r\n          <button\r\n            className={`${btnClassName} btn-outline-danger`}\r\n            onClick={openDeleteGroupConfirmDialog}\r\n          >\r\n            <Delete className=\"text-light\" style={{ marginLeft: \"-20px\" }} />\r\n            <span className=\"ms-2\">Delete Group</span>\r\n          </button>\r\n        </section>\r\n      )}\r\n\r\n      {/* Child dialog */}\r\n      <ChildDialog\r\n        showChildDialogActions={showDialogActions}\r\n        showChildDialogClose={showDialogClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupInfoBody;\r\n","import { Skeleton } from \"@mui/material\";\r\n\r\nconst LoadingMsgs = ({ count }) => {\r\n  const skeletonStyle = { backgroundColor: \"#777\" };\r\n  return (\r\n    <>\r\n      {[...Array(count)].map((e, i) => (\r\n        <div\r\n          key={`loadingMsg${i}`}\r\n          className={`loadingMsg d-flex flex-column align-items-${\r\n            i % 2 ? \"start\" : \"end\"\r\n          } mb-2 mx-4`}\r\n        >\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className={`loadingSender col-3 mb-1`}\r\n            style={skeletonStyle}\r\n          />\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            className={`loadingContent col-5`}\r\n            style={skeletonStyle}\r\n          />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadingMsgs;\r\n","import {\r\n  Audiotrack,\r\n  Description,\r\n  Download,\r\n  Downloading,\r\n  PictureAsPdf,\r\n  PlayArrow,\r\n  PlayCircle,\r\n  Videocam,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  getFileSizeString,\r\n  isImageOrGifFile,\r\n  truncateString,\r\n} from \"../../utils/appUtils\";\r\nimport animationData from \"../../animations/app-loading.json\";\r\nimport LottieAnimation from \"../utils/LottieAnimation\";\r\nimport { useRef } from \"react\";\r\n\r\nconst IMG_BASE_URL = process.env.REACT_APP_CLOUDINARY_BASE_URL;\r\n\r\nconst MsgAttachment = ({\r\n  msgSent,\r\n  isEditMode,\r\n  fileEditIcons,\r\n  downloadingFileId,\r\n  loadingMediaId,\r\n  isPreview,\r\n  fileData,\r\n}) => {\r\n  const previewStyles = `${\r\n    isPreview && !isEditMode\r\n      ? \"py-4 border border-4 border-secondary previewFile\"\r\n      : \"p-2\"\r\n  }`;\r\n  const iconStyles = `${isPreview && !isEditMode ? \"fs-1\" : \"fs-2\"}`;\r\n\r\n  let { fileUrl, file_id, file_name, size } = fileData;\r\n  const fileContents = file_name.split(\"===\") || [];\r\n  file_name = fileContents[0] || file_name;\r\n  const isMediaFile = fileContents[1]?.includes(\":\");\r\n  const mediaContents = isMediaFile ? fileContents[1].split(\"+++\") : [];\r\n  const mediaFileType = mediaContents[1];\r\n  const mediaFileSize = getFileSizeString(mediaContents[2]);\r\n  const loadingGif = useRef(null);\r\n\r\n  let fileSize = mediaContents[0] || parseInt(fileContents[1]) || size || \"\";\r\n\r\n  if (!isMediaFile) {\r\n    fileSize = getFileSizeString(fileSize);\r\n  }\r\n\r\n  const isDownloadingFile = downloadingFileId === file_id;\r\n  const fileType =\r\n    mediaFileType?.startsWith(\"video/\") ||\r\n    /(\\.mp4|\\.mov|\\.ogv|\\.webm)$/.test(file_name)\r\n      ? \"Video\"\r\n      : mediaFileType?.startsWith(\"audio/\") ||\r\n        /(\\.mp3|\\.ogg|\\.wav)$/.test(file_name)\r\n      ? \"Audio\"\r\n      : /(\\.doc|\\.docx)$/.test(file_name)\r\n      ? \"Word Doc\"\r\n      : /(\\.ppt|\\.pptx)$/.test(file_name)\r\n      ? \"PPT\"\r\n      : /(\\.xlsx|\\.csv|\\.xls)$/.test(file_name)\r\n      ? \"Spreadsheet\"\r\n      : /(\\.pdf)$/.test(file_name)\r\n      ? \"PDF\"\r\n      : file_name.substring(file_name.lastIndexOf(\".\") + 1)?.toUpperCase();\r\n\r\n  const attachmentHeader = (\r\n    <>\r\n      {isEditMode ? (\r\n        <span\r\n          className=\"d-flex justify-content-center w-100 mx-auto\"\r\n          style={{ zIndex: 6 }}\r\n        >\r\n          {fileEditIcons}\r\n        </span>\r\n      ) : (\r\n        <span\r\n          data-download={file_id}\r\n          className={`downloadIcon ${isDownloadingFile ? \"downloading\" : \"\"} ${\r\n            isPreview || !msgSent ? \"d-none\" : \"\"\r\n          }`}\r\n          title={isDownloadingFile ? \"Downloading...\" : \"Download File\"}\r\n        >\r\n          {isDownloadingFile ? (\r\n            <Downloading />\r\n          ) : (\r\n            <Download data-download={file_id} />\r\n          )}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n  const fileNameWrapper = (\r\n    <span className={`${isPreview && !isEditMode ? \"fs-4\" : \"fs-6\"}`}>\r\n      &nbsp;&nbsp;\r\n      <span title={file_name}>{truncateString(file_name + \"\", 40, 37)}</span>\r\n    </span>\r\n  );\r\n  const fileInfo = (\r\n    <>\r\n      {fileNameWrapper}\r\n      <div\r\n        className={`${isPreview && !isEditMode ? \"fs-5 mt-4\" : \"\"}`}\r\n        style={{ marginBottom: isPreview && !isEditMode ? -10 : 0 }}\r\n      >\r\n        {`${fileType} : ${fileSize}`}\r\n      </div>\r\n    </>\r\n  );\r\n  const hideWhileLoadingMedia =\r\n    loadingMediaId === file_id ? \"invisible\" : \"visible\";\r\n\r\n  const displayWhileLoadingMedia =\r\n    loadingMediaId === file_id ? \"visible\" : \"invisible\";\r\n\r\n  return (\r\n    <>\r\n      {fileUrl?.startsWith(IMG_BASE_URL) || isImageOrGifFile(file_name) ? (\r\n        <span className=\"d-inline-block msgImageWrapper mb-2 position-relative\">\r\n          <img\r\n            src={fileUrl}\r\n            alt={file_name}\r\n            title={file_name}\r\n            data-image-id={file_id}\r\n            className={`msgImageFile d-inline-block`}\r\n          />\r\n          {isEditMode && (\r\n            <span className=\"position-absolute top-0 start-0\">\r\n              {fileEditIcons}\r\n            </span>\r\n          )}\r\n        </span>\r\n      ) : (\r\n        <div\r\n          className=\"pointer\"\r\n          style={{\r\n            margin: \"0px 0px -8px 0px\",\r\n            width:\r\n              isPreview && !isEditMode ? \"clamp(270px, 50vmin, 600px)\" : \"100%\",\r\n          }}\r\n        >\r\n          {fileType === \"PDF\" ? (\r\n            <div className={`${previewStyles} msgFile pdfFile text-light`}>\r\n              <div>\r\n                {!isEditMode && <PictureAsPdf className={iconStyles} />}\r\n                {attachmentHeader}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          ) : fileType === \"Spreadsheet\" ? (\r\n            <div className={`${previewStyles} msgFile excelFile bg-success`}>\r\n              <div>\r\n                {!isEditMode && <Description className={iconStyles} />}\r\n                {attachmentHeader}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          ) : fileType === \"PPT\" ? (\r\n            <div className={`${previewStyles} msgFile pptFile text-light`}>\r\n              <div>\r\n                {!isEditMode && <Description className={iconStyles} />}\r\n                {attachmentHeader}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          ) : fileType === \"Word Doc\" ? (\r\n            <div\r\n              className={`${previewStyles} msgFile wordFile`}\r\n              style={{ borderRadius: isEditMode ? 10 : 5 }}\r\n            >\r\n              <div>\r\n                {!isEditMode && <Description className={iconStyles} />}\r\n                {attachmentHeader}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          ) : fileType === \"Video\" ? (\r\n            <div className={`${previewStyles} msgFile mediaFile`}>\r\n              <div>\r\n                {attachmentHeader}\r\n                {!isEditMode && ` ${mediaFileSize}`}\r\n              </div>\r\n              {fileNameWrapper}\r\n              <div\r\n                data-video={file_id}\r\n                data-video-name={file_name}\r\n                title=\"Click to Play\"\r\n                className=\"mediaMsg bg-gradient py-5\"\r\n              >\r\n                <PlayCircle\r\n                  data-video={file_id}\r\n                  data-video-name={file_name}\r\n                  className={`playMedia ${hideWhileLoadingMedia}`}\r\n                  style={{ fontSize: 40 }}\r\n                />\r\n                <LottieAnimation\r\n                  ref={loadingGif}\r\n                  className={`position-absolute ${displayWhileLoadingMedia}`}\r\n                  style={{\r\n                    marginBottom: 0,\r\n                    height: 50,\r\n                    color: \"white\",\r\n                  }}\r\n                  animationData={animationData}\r\n                />\r\n                <span\r\n                  data-video={file_id}\r\n                  data-video-name={file_name}\r\n                  className=\"mediaDuration videoDuration text-light\"\r\n                >\r\n                  <Videocam data-video={file_id} data-video-name={file_name} />\r\n                  &nbsp;&nbsp;{fileSize}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ) : fileType === \"Audio\" ? (\r\n            <div\r\n              className={`${previewStyles} msgFile mediaFile bg-dark bg-opacity-75`}\r\n            >\r\n              <div>\r\n                {attachmentHeader}\r\n                {!isEditMode && ` ${mediaFileSize}`}\r\n              </div>\r\n              {fileNameWrapper}\r\n              <div\r\n                data-audio={file_id}\r\n                data-audio-name={file_name}\r\n                className=\"mediaMsg bg-gradient px-4 py-2\"\r\n                title=\"Click to Play\"\r\n              >\r\n                <PlayArrow\r\n                  data-audio={file_id}\r\n                  data-audio-name={file_name}\r\n                  className={`playMedia ${hideWhileLoadingMedia}`}\r\n                />\r\n                <LottieAnimation\r\n                  ref={loadingGif}\r\n                  className={`position-absolute ${displayWhileLoadingMedia}`}\r\n                  style={{\r\n                    marginBottom: 0,\r\n                    height: 30,\r\n                    color: \"white\",\r\n                  }}\r\n                  animationData={animationData}\r\n                />\r\n                <span\r\n                  data-audio={file_id}\r\n                  data-audio-name={file_name}\r\n                  className=\"mediaDuration audioDuration text-light\"\r\n                >\r\n                  <Audiotrack\r\n                    data-audio={file_id}\r\n                    data-audio-name={file_name}\r\n                    style={{ fontSize: 20 }}\r\n                  />\r\n                  &nbsp;{fileSize}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={`${previewStyles} msgFile otherFile`}>\r\n              <div>\r\n                {!isEditMode && <Description className={iconStyles} />}\r\n                {attachmentHeader}\r\n              </div>\r\n              {fileInfo}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MsgAttachment;\r\n","import { Close } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { truncateString } from \"../../utils/appUtils\";\r\nimport MsgAttachment from \"./MsgAttachment\";\r\n\r\nconst PLACEHOLDER_IMG = process.env.REACT_APP_PLACEHOLDER_IMG_URL;\r\n\r\nconst AttachmentPreview = ({\r\n  isEditMode,\r\n  attachmentData,\r\n  CustomTooltip,\r\n  fileEditIcons,\r\n}) => {\r\n  const {\r\n    attachment: { name, type, size },\r\n    attachmentPreviewUrl,\r\n  } = attachmentData;\r\n\r\n  const FILE_WRAPPER_CLASS = `${\r\n    isEditMode ? \"h-100\" : \"mt-4 h-50\"\r\n  } d-flex justify-content-center align-items-center`;\r\n  const ATTACHMENT_STYLE = {\r\n    borderRadius: 7,\r\n    width: \"calc(100%)\",\r\n    maxHeight: isEditMode ? 200 : 250,\r\n  };\r\n  const editIconsWrapper = (\r\n    <span className=\"position-absolute top-0 start-0 m-1\" style={{ zIndex: 6 }}>\r\n      {fileEditIcons}\r\n    </span>\r\n  );\r\n\r\n  const previewTitle = type.startsWith(\"application/\") ? \"Attached File\" : name;\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-black bg-gradient bg-opacity-75 h-100 d-flex flex-column justify-content-start align-items-center\"\r\n      style={{ borderRadius: 10 }}\r\n    >\r\n      {/* Discard Attachment button */}\r\n      {!isEditMode && (\r\n        <CustomTooltip\r\n          title=\"Discard Attachment\"\r\n          placement=\"bottom-start\"\r\n          arrow\r\n        >\r\n          <IconButton\r\n            data-discard-file={true}\r\n            sx={{\r\n              position: \"absolute\",\r\n              left: 15,\r\n              top: 12,\r\n              color: \"#999999\",\r\n              \":hover\": {\r\n                backgroundColor: \"#aaaaaa20\",\r\n              },\r\n            }}\r\n          >\r\n            <Close data-discard-file={true} />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      )}\r\n\r\n      {/* Attached File Name */}\r\n      {!isEditMode && (\r\n        <CustomTooltip\r\n          title={previewTitle?.length > 23 ? previewTitle : \"\"}\r\n          placement=\"top\"\r\n          arrow\r\n        >\r\n          <span\r\n            className={`mt-5 mb-2`}\r\n            style={{ color: \"lightblue\", fontSize: 25, zIndex: 5 }}\r\n          >\r\n            {truncateString(previewTitle, 23, 20) || \"Attached File\"}\r\n          </span>\r\n        </CustomTooltip>\r\n      )}\r\n\r\n      <>\r\n        {type?.startsWith(\"image/\") ? (\r\n          <div className={`${FILE_WRAPPER_CLASS} position-relative`}>\r\n            {editIconsWrapper}\r\n            <img\r\n              style={ATTACHMENT_STYLE}\r\n              src={attachmentPreviewUrl || PLACEHOLDER_IMG}\r\n              alt=\"msgAttachment\"\r\n            />\r\n          </div>\r\n        ) : type?.startsWith(\"audio/\") ? (\r\n          <div\r\n            className={`${FILE_WRAPPER_CLASS} flex-column`}\r\n            style={{ width: \"clamp(190px, 48vw, 290px)\" }}\r\n          >\r\n            <span className=\"m-2\" style={{ zIndex: 6 }}>\r\n              {fileEditIcons}\r\n            </span>\r\n            <audio\r\n              src={attachmentPreviewUrl || \"\"}\r\n              controls\r\n              autoPlay\r\n              style={ATTACHMENT_STYLE}\r\n            >\r\n              {name}\r\n            </audio>\r\n          </div>\r\n        ) : type?.startsWith(\"video/\") ? (\r\n          <div className={`${FILE_WRAPPER_CLASS} position-relative`}>\r\n            {editIconsWrapper}\r\n            <video\r\n              src={attachmentPreviewUrl || \"\"}\r\n              controls\r\n              autoPlay\r\n              style={ATTACHMENT_STYLE}\r\n            >\r\n              {name}\r\n            </video>\r\n          </div>\r\n        ) : (\r\n          <MsgAttachment\r\n            isEditMode={isEditMode}\r\n            fileEditIcons={fileEditIcons}\r\n            isPreview={true}\r\n            fileData={{\r\n              fileUrl: attachmentPreviewUrl,\r\n              file_id: \"\",\r\n              file_name: name,\r\n              size,\r\n            }}\r\n          />\r\n        )}\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttachmentPreview;\r\n","import {\r\n  AttachFile,\r\n  Close,\r\n  Delete,\r\n  Done,\r\n  DoneAll,\r\n  Edit,\r\n  KeyboardArrowDown,\r\n} from \"@mui/icons-material\";\r\nimport { Avatar, CircularProgress, IconButton } from \"@mui/material\";\r\nimport { forwardRef, useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../../store/slices/AppSlice\";\r\nimport {\r\n  msgTimeStringOf,\r\n  msgDateStringOf,\r\n  dateStringOf,\r\n  setCaretPosition,\r\n} from \"../../utils/appUtils\";\r\nimport AttachmentPreview from \"./AttachmentPreview\";\r\nimport MsgAttachment from \"./MsgAttachment\";\r\n\r\nconst IconButtonSx = {\r\n  color: \"lightblue\",\r\n  \":hover\": { backgroundColor: \"#cccccc20\" },\r\n};\r\n\r\nconst Message = forwardRef(\r\n  (\r\n    {\r\n      downloadingFileId,\r\n      loadingMediaId,\r\n      msgEditMode,\r\n      clickedMsgId,\r\n      msgFileRemoved,\r\n      CustomTooltip,\r\n      msgSent,\r\n      currMsg,\r\n      prevMsg,\r\n      attachmentData,\r\n    },\r\n    editableMsgRef\r\n  ) => {\r\n    const msgContentRef = useRef(null); // Local ref (in non-edit mode)\r\n    const { loggedInUser, selectedChat } = useSelector(selectAppState);\r\n    const { fileUrl, file_id, file_name } = currMsg;\r\n    const { _id, profilePic, name, email } = currMsg?.sender;\r\n    const isLoggedInUser = _id === loggedInUser._id;\r\n    const senderData = `${profilePic}===${name}===${email}`;\r\n    const currMsgId = isLoggedInUser ? currMsg?._id : null;\r\n    const isClickedMsgCurrMsg = clickedMsgId === currMsgId;\r\n    const isSameSender = _id === prevMsg?.sender._id;\r\n    const currMsgDate = new Date(currMsg.createdAt);\r\n    const prevMsgDate = new Date(prevMsg?.createdAt);\r\n    const isOtherDay = dateStringOf(currMsgDate) !== dateStringOf(prevMsgDate);\r\n    const showCurrSender =\r\n      !isLoggedInUser &&\r\n      selectedChat?.isGroupChat &&\r\n      (!isSameSender || isOtherDay);\r\n    const isEditMode = msgEditMode && isClickedMsgCurrMsg;\r\n\r\n    const fileEditIcons = (\r\n      <>\r\n        <CustomTooltip title=\"Remove Attachment\" placement=\"top\" arrow>\r\n          <IconButton\r\n            data-remove-msg-file={true}\r\n            className={`m-1 bg-black bg-opacity-75`}\r\n            sx={IconButtonSx}\r\n          >\r\n            <Delete data-remove-msg-file={true} style={{ fontSize: 20 }} />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n        <CustomTooltip title=\"Change Attachment\" placement=\"top\" arrow>\r\n          <IconButton\r\n            data-edit-msg-file={true}\r\n            className={`m-1 bg-black bg-opacity-75`}\r\n            sx={IconButtonSx}\r\n          >\r\n            <Edit data-edit-msg-file={true} style={{ fontSize: 20 }} />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      </>\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (msgContentRef?.current) {\r\n        msgContentRef.current.innerHTML = currMsg?.content;\r\n      }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      if (isEditMode) {\r\n        setCaretPosition(editableMsgRef?.current);\r\n      }\r\n    }, [msgEditMode]);\r\n\r\n    return (\r\n      <>\r\n        <section\r\n          className={`msgRow d-flex justify-content-${\r\n            isLoggedInUser ? \"end\" : \"start\"\r\n          }`}\r\n          style={{ marginTop: isSameSender ? 3 : 10 }}\r\n        >\r\n          {showCurrSender ? (\r\n            <CustomTooltip title={`View Profile`} placement=\"top-start\" arrow>\r\n              <Avatar\r\n                src={profilePic}\r\n                alt={name}\r\n                data-sender={senderData}\r\n                className=\"senderAvatar pointer\"\r\n              />\r\n            </CustomTooltip>\r\n          ) : (\r\n            selectedChat?.isGroupChat && <span style={{ width: 30 }}></span>\r\n          )}\r\n          <div\r\n            className={`msgBox d-flex flex-column text-start p-2 rounded-3\r\n          mx-2 mx-md-3 ${isLoggedInUser ? \"yourMsg\" : \"receiversMsg\"}`}\r\n            data-msg={currMsgId}\r\n            data-file-exists={file_id}\r\n          >\r\n            {isEditMode ? (\r\n              <div\r\n                className=\"d-flex justify-content-end\"\r\n                style={{ margin: \"-5px -5px 3px 0px\" }}\r\n              >\r\n                {(!currMsg?.fileUrl ||\r\n                  (msgFileRemoved && !attachmentData?.attachment)) && (\r\n                  <CustomTooltip title=\"Attach File\" placement=\"top-end\" arrow>\r\n                    <IconButton\r\n                      data-attach-msg-file={true}\r\n                      className={`me-1`}\r\n                      sx={{ ...IconButtonSx, transform: \"rotateZ(45deg)\" }}\r\n                    >\r\n                      <AttachFile\r\n                        data-attach-msg-file={true}\r\n                        style={{ fontSize: 20 }}\r\n                      />\r\n                    </IconButton>\r\n                  </CustomTooltip>\r\n                )}\r\n                <CustomTooltip title=\"Discard Draft\" placement=\"top-end\" arrow>\r\n                  <IconButton\r\n                    data-discard-draft={true}\r\n                    className={``}\r\n                    sx={IconButtonSx}\r\n                  >\r\n                    <Close data-discard-draft={true} style={{ fontSize: 20 }} />\r\n                  </IconButton>\r\n                </CustomTooltip>\r\n                <CustomTooltip title=\"Update Message\" placement=\"top-end\" arrow>\r\n                  <IconButton\r\n                    data-update-msg={true}\r\n                    data-msg-created-at={currMsg?.createdAt}\r\n                    className={`ms-1`}\r\n                    sx={IconButtonSx}\r\n                  >\r\n                    <Done\r\n                      data-update-msg={true}\r\n                      data-msg-created-at={currMsg?.createdAt}\r\n                      style={{ fontSize: 20 }}\r\n                    />\r\n                  </IconButton>\r\n                </CustomTooltip>\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {showCurrSender && (\r\n              <span data-sender={senderData} className=\"msgSender pointer\">\r\n                {name}\r\n              </span>\r\n            )}\r\n            {isLoggedInUser && msgSent && !msgEditMode && (\r\n              <span\r\n                data-msg={currMsgId}\r\n                data-file-exists={file_id}\r\n                title=\"Edit/Delete Message\"\r\n                className={`msgOptionsIcon text-light position-absolute \r\n              top-0 end-0 w-25 h-100`}\r\n              >\r\n                <KeyboardArrowDown\r\n                  data-msg={currMsgId}\r\n                  data-file-exists={file_id}\r\n                  style={{ fontSize: 22 }}\r\n                  className=\"position-absolute top-0 end-0\"\r\n                />\r\n              </span>\r\n            )}\r\n            {currMsg?.fileUrl && !isEditMode && (\r\n              <MsgAttachment\r\n                msgSent={msgSent}\r\n                isEditMode={isEditMode}\r\n                fileEditIcons={fileEditIcons}\r\n                downloadingFileId={downloadingFileId}\r\n                loadingMediaId={loadingMediaId}\r\n                fileData={{\r\n                  msgId: currMsgId,\r\n                  fileUrl,\r\n                  file_id,\r\n                  file_name,\r\n                }}\r\n              />\r\n            )}\r\n            {isEditMode && attachmentData?.attachment && (\r\n              <AttachmentPreview\r\n                isEditMode={isEditMode}\r\n                attachmentData={attachmentData}\r\n                CustomTooltip={CustomTooltip}\r\n                fileEditIcons={fileEditIcons}\r\n              />\r\n            )}\r\n            {currMsg?.fileUrl &&\r\n              isEditMode &&\r\n              !attachmentData?.attachment &&\r\n              !msgFileRemoved && (\r\n                <MsgAttachment\r\n                  msgSent={msgSent}\r\n                  isEditMode={isEditMode}\r\n                  fileEditIcons={fileEditIcons}\r\n                  downloadingFileId={downloadingFileId}\r\n                  loadingMediaId={loadingMediaId}\r\n                  fileData={{\r\n                    msgId: currMsgId,\r\n                    fileUrl,\r\n                    file_id,\r\n                    file_name,\r\n                  }}\r\n                />\r\n              )}\r\n            <div\r\n              data-msg={currMsgId}\r\n              data-file-exists={file_id}\r\n              className={`msgContent d-flex ${\r\n                file_id || attachmentData?.attachment ? \"mt-2\" : \"\"\r\n              }`}\r\n            >\r\n              <span\r\n                id={`${currMsg?._id}---content`}\r\n                className=\"w-100\"\r\n                style={{ outline: \"none\" }}\r\n                contentEditable={isEditMode}\r\n                data-msg-created-at={currMsg?.createdAt}\r\n                ref={isEditMode ? editableMsgRef : msgContentRef}\r\n              ></span>\r\n              <span\r\n                data-msg={currMsgId}\r\n                data-file-exists={file_id}\r\n                className=\"msgTime text-end d-flex align-items-end justify-content-end\"\r\n              >\r\n                {msgTimeStringOf(currMsgDate)}\r\n                {isLoggedInUser && (\r\n                  <>\r\n                    {msgSent ? (\r\n                      <DoneAll\r\n                        data-msg={currMsgId}\r\n                        data-file-exists={file_id}\r\n                        className=\"text-info fs-6 ms-1\"\r\n                      />\r\n                    ) : (\r\n                      <CircularProgress\r\n                        size={10}\r\n                        className=\"sendStatusIcon ms-1\"\r\n                      />\r\n                    )}\r\n                  </>\r\n                )}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {isOtherDay && (\r\n          <div className={`msgDate mt-3 mb-2 mx-auto py-1 px-3 rounded-3`}>\r\n            {msgDateStringOf(currMsgDate)}\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n);\r\nexport default Message;\r\n","import { Delete, Edit } from \"@mui/icons-material\";\r\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\r\nimport MenuItemText from \"../utils/MenuItemText\";\r\n\r\nconst MsgOptionsMenu = ({\r\n  anchor,\r\n  setAnchor,\r\n  editMsgHandler,\r\n  openDeleteMsgConfirmDialog,\r\n}) => {\r\n  return (\r\n    <Menu\r\n      menuAnchor={anchor}\r\n      setMenuAnchor={setAnchor}\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n    >\r\n      <MenuItem sx={menuItemProps} onClick={editMsgHandler}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Edit />\r\n        </ListItemIcon>\r\n        <MenuItemText>Edit Message</MenuItemText>\r\n      </MenuItem>\r\n      <MenuItem sx={menuItemProps} onClick={openDeleteMsgConfirmDialog}>\r\n        <ListItemIcon sx={menuIconProps}>\r\n          <Delete />\r\n        </ListItemIcon>\r\n        <MenuItemText>Delete Message</MenuItemText>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MsgOptionsMenu;\r\n","import { useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport letsChatAnimData from \"../animations/letsChatGif.json\";\r\nimport { selectAppState } from \"../store/slices/AppSlice\";\r\nimport { truncateString } from \"../utils/appUtils\";\r\nimport LottieAnimation from \"./utils/LottieAnimation\";\r\n\r\nconst WelcomeBanner = ({ isNewUser }) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const letsChatGif = useRef(null);\r\n  return (\r\n    <div className=\"d-flex flex-column justify-content-start align-items-center h-100\">\r\n      {!isNewUser && (\r\n        <h2 className=\"mx-3 mt-1\">\r\n          Hello{\" \"}\r\n          <span\r\n            className=\"fw-bold\"\r\n            style={{ color: \"#A798F2\" }}\r\n          >{`${truncateString(\r\n            loggedInUser?.name?.split(\" \")[0],\r\n            12,\r\n            9\r\n          )?.toUpperCase()}`}</span>{\" \"}\r\n          👋\r\n        </h2>\r\n      )}\r\n      <LottieAnimation\r\n        ref={letsChatGif}\r\n        className={\"d-inline-block mt-3\"}\r\n        style={{ marginBottom: 50, height: \"50%\" }}\r\n        animationData={letsChatAnimData}\r\n      />\r\n      <p className=\"h4 mx-5 mb-3\" style={{ marginTop: -40, color: \"#99C5EE\" }}>\r\n        Create one-to-one chats, group chats, send/edit/delete text messages and\r\n        files to get 'Chat-Zoned'😉.\r\n      </p>\r\n      <p className=\"h2\" style={{ color: \"#DDBEF9\" }}>\r\n        Happy Chatting!😀\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomeBanner;\r\n","import { ArrowBack, Close } from \"@mui/icons-material\";\r\nimport { Avatar, IconButton } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAppState } from \"../store/slices/AppSlice\";\r\nimport { getOneToOneChatReceiver, truncateString } from \"../utils/appUtils\";\r\n\r\nconst MsgsHeader = ({\r\n  closeChat,\r\n  openGroupInfoDialog,\r\n  openViewProfileDialog,\r\n  hideEmojiPicker,\r\n  CustomTooltip,\r\n}) => {\r\n  const { loggedInUser, selectedChat } = useSelector(selectAppState);\r\n  const chatName = selectedChat?.isGroupChat\r\n    ? selectedChat?.chatName\r\n    : getOneToOneChatReceiver(loggedInUser, selectedChat?.users)?.name;\r\n  return (\r\n    <section\r\n      className={`messagesHeader pointer-event d-flex justify-content-start \r\n            position-relative w-100 fw-bold bg-info bg-opacity-10 py-2`}\r\n      onClick={hideEmojiPicker}\r\n    >\r\n      <CustomTooltip title=\"Go Back\" placement=\"bottom-start\" arrow>\r\n        <IconButton\r\n          onClick={closeChat}\r\n          className={`d-flex d-md-none ms-3`}\r\n          sx={{\r\n            color: \"#999999\",\r\n            \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n          }}\r\n        >\r\n          <ArrowBack />\r\n        </IconButton>\r\n      </CustomTooltip>\r\n      <CustomTooltip\r\n        title={selectedChat?.isGroupChat ? \"Group Info\" : \"View Profile\"}\r\n        placement=\"bottom-start\"\r\n        arrow\r\n      >\r\n        <IconButton\r\n          sx={{\r\n            margin: \"-8px\",\r\n            \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n          }}\r\n          className=\"pointer ms-0 ms-md-4\"\r\n          onClick={\r\n            selectedChat?.isGroupChat\r\n              ? openGroupInfoDialog\r\n              : openViewProfileDialog\r\n          }\r\n        >\r\n          <Avatar\r\n            src={\r\n              selectedChat?.isGroupChat\r\n                ? selectedChat?.chatDisplayPic\r\n                : getOneToOneChatReceiver(loggedInUser, selectedChat?.users)\r\n                    ?.profilePic || \"\"\r\n            }\r\n            alt={\"receiverAvatar\"}\r\n          />\r\n        </IconButton>\r\n      </CustomTooltip>\r\n\r\n      <span className=\"ms-2 mt-1 fs-4 text-info\" title={chatName}>\r\n        {truncateString(chatName, 22, 17)}\r\n      </span>\r\n\r\n      <CustomTooltip title=\"Close Chat\" placement=\"bottom-end\" arrow>\r\n        <IconButton\r\n          onClick={closeChat}\r\n          className=\"d-none d-md-flex\"\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 15,\r\n            top: 8,\r\n            color: \"#999999\",\r\n            \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n          }}\r\n        >\r\n          <Close />\r\n        </IconButton>\r\n      </CustomTooltip>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MsgsHeader;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport {\r\n  debounce,\r\n  FIVE_MB,\r\n  getAxiosConfig,\r\n  isImageOrGifFile,\r\n  parseInnerHTML,\r\n  setCaretPosition,\r\n} from \"../utils/appUtils\";\r\nimport { AttachFile, EmojiEmotions, Send } from \"@mui/icons-material\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport axios from \"../utils/axios\";\r\nimport ViewProfileBody from \"./dialogs/ViewProfileBody\";\r\nimport GroupInfoBody from \"./dialogs/GroupInfoBody\";\r\nimport LoadingMsgs from \"./utils/LoadingMsgs\";\r\nimport FullSizeImage from \"./utils/FullSizeImage\";\r\nimport Message from \"./utils/Message\";\r\nimport MsgOptionsMenu from \"./menus/MsgOptionsMenu\";\r\nimport io from \"socket.io-client\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setClientSocket,\r\n  setGroupInfo,\r\n  setLoggedInUser,\r\n  setSelectedChat,\r\n  setSocketConnected,\r\n  toggleRefresh,\r\n} from \"../store/slices/AppSlice\";\r\nimport {\r\n  selectFormfieldState,\r\n  setLoading,\r\n} from \"../store/slices/FormfieldSlice\";\r\nimport { displayToast } from \"../store/slices/ToastSlice\";\r\nimport {\r\n  displayDialog,\r\n  setShowDialogActions,\r\n} from \"../store/slices/CustomDialogSlice\";\r\nimport AttachmentPreview from \"./utils/AttachmentPreview\";\r\nimport WelcomeBanner from \"./WelcomeBanner\";\r\nimport MsgsHeader from \"./MsgsHeader\";\r\nimport TypingIndicator from \"./utils/TypingIndicator\";\r\nimport EmojiPicker from \"emoji-picker-react\";\r\n\r\nconst arrowStyles = { color: \"#111\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 230,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 16,\r\n  padding: \"5px 10px\",\r\n  borderRadius: 5,\r\n  border: \"1px solid #555\",\r\n  backgroundColor: \"#111\",\r\n};\r\nconst iconStyles = {\r\n  margin: \"4px 0px\",\r\n  padding: \"5px\",\r\n  color: \"#999999\",\r\n  \":hover\": { backgroundColor: \"#aaaaaa20\" },\r\n};\r\n\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\nconst SOCKET_ENDPOINT = process.env.REACT_APP_SERVER_BASE_URL;\r\nlet msgFileAlreadyExists = false;\r\nlet currentlyTyping = false;\r\nlet preventStopTyping = true;\r\n\r\nconst MessagesView = ({\r\n  loadingMsgs,\r\n  setLoadingMsgs,\r\n  fetchMsgs,\r\n  setFetchMsgs,\r\n  setDialogBody,\r\n  isNewUser,\r\n  typingChatUser,\r\n}) => {\r\n  const {\r\n    loggedInUser,\r\n    selectedChat,\r\n    refresh,\r\n    clientSocket,\r\n    isSocketConnected,\r\n  } = useSelector(selectAppState);\r\n  const { disableIfLoading } = useSelector(selectFormfieldState);\r\n  const dispatch = useDispatch();\r\n  const [sending, setSending] = useState(false);\r\n  const [msgFileRemoved, setMsgFileRemoved] = useState(false);\r\n  const [enableMsgSend, setEnableMsgSend] = useState(false);\r\n  const [fileAttached, setFileAttached] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [clickedMsgId, setClickedMsgId] = useState(\"\");\r\n  const [dontScrollToBottom, setDontScrollToBottom] = useState(false);\r\n  const [attachmentData, setAttachmentData] = useState({\r\n    attachment: null,\r\n    attachmentPreviewUrl: \"\",\r\n  });\r\n  const msgListBottom = useRef(null);\r\n  const msgFileInput = useRef(null);\r\n  const msgContent = useRef(null);\r\n  const editableMsgContent = useRef(null);\r\n  const [downloadingFileId, setDownloadingFileId] = useState(\"\");\r\n  const [loadingMediaId, setLoadingMediaId] = useState(\"\");\r\n  const [msgEditMode, setMsgEditMode] = useState(false);\r\n  const [msgOptionsMenuAnchor, setMsgOptionsMenuAnchor] = useState(null);\r\n\r\n  const resetMsgInput = (options) => {\r\n    setAttachmentData({\r\n      attachment: null,\r\n      attachmentPreviewUrl: \"\",\r\n    });\r\n    msgFileInput.current.value = \"\";\r\n    setFileAttached(false);\r\n    if (options?.discardAttachmentOnly) return;\r\n    setEnableMsgSend(false);\r\n    msgContent.current.innerHTML = \"\";\r\n  };\r\n\r\n  // Emoji picker config\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const onEmojiIconClick = () => {\r\n    preventStopTyping = true;\r\n    setShowEmojiPicker(!showEmojiPicker);\r\n  };\r\n  const hideEmojiPicker = () => {\r\n    if (showEmojiPicker) setShowEmojiPicker(false);\r\n  };\r\n  const onEmojiClick = (event, emojiObject) => {\r\n    msgContent.current.innerHTML += emojiObject.emoji;\r\n    setCaretPosition(msgContent.current);\r\n    setEnableMsgSend(true);\r\n  };\r\n\r\n  const selectAttachment = () => {\r\n    preventStopTyping = true;\r\n    hideEmojiPicker();\r\n    msgFileInput.current?.click();\r\n  };\r\n\r\n  const discardAttachment = () =>\r\n    resetMsgInput({ discardAttachmentOnly: true });\r\n\r\n  const persistUpdatedUser = (updatedUser) => {\r\n    // localStorage persists updated user even after page refresh\r\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\r\n    dispatch(setLoggedInUser(updatedUser));\r\n  };\r\n\r\n  const displayError = (\r\n    error = \"Oops! Something went wrong\",\r\n    title = \"Operation Failed\"\r\n  ) => {\r\n    dispatch(\r\n      displayToast({\r\n        title,\r\n        message: error.response?.data?.message || error.message,\r\n        type: \"error\",\r\n        duration: 5000,\r\n        position: \"bottom-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const displaySuccess = (message = \"Operation Successful\") => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"success\",\r\n        duration: 1500,\r\n        position: \"bottom-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const closeChat = () => {\r\n    setLoadingMsgs(false);\r\n    dispatch(setSelectedChat(null));\r\n    resetMsgInput();\r\n    setMsgFileRemoved(false);\r\n    setMsgEditMode(false);\r\n    setDontScrollToBottom(false);\r\n  };\r\n\r\n  const viewMedia = (src, fileData) => {\r\n    if (!src || !fileData) return;\r\n    const { fileName, isAudio } = fileData;\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(\r\n      <FullSizeImage\r\n        audioSrc={isAudio ? src : null}\r\n        videoSrc={!isAudio ? src : null}\r\n      />\r\n    );\r\n    dispatch(\r\n      displayDialog({\r\n        isFullScreen: true,\r\n        title: fileName || `${isAudio ? \"Audio\" : \"Video\"} File`,\r\n      })\r\n    );\r\n    setLoadingMediaId(\"\");\r\n  };\r\n\r\n  const displayFullSizeImage = (e) => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<FullSizeImage event={e} />);\r\n    dispatch(\r\n      displayDialog({\r\n        isFullScreen: true,\r\n        title: e.target?.alt || \"Display Pic\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const loadMedia = async (fileId, options) => {\r\n    if (!fileId || !options) return;\r\n    setLoadingMediaId(fileId);\r\n    const { fileName, isAudio } = options;\r\n    const config = getAxiosConfig({ loggedInUser, blob: true });\r\n    try {\r\n      const { data } = await axios.get(`/api/message/files/${fileId}`, config);\r\n\r\n      const mediaSrc = URL.createObjectURL(new Blob([data]));\r\n      viewMedia(mediaSrc, { fileName, isAudio });\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Load Media\");\r\n      setLoadingMediaId(\"\");\r\n    }\r\n  };\r\n\r\n  const downloadFile = async (fileId) => {\r\n    if (!fileId) return;\r\n    setDownloadingFileId(fileId);\r\n    setSending(true);\r\n    const config = getAxiosConfig({ loggedInUser, blob: true });\r\n    try {\r\n      const { data } = await axios.get(`/api/message/files/${fileId}`, config);\r\n\r\n      const link = document.createElement(\"a\");\r\n      link.href = URL.createObjectURL(new Blob([data]));\r\n      link.setAttribute(\"download\", fileId.split(\"---\")[1] || fileId);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n\r\n      setDownloadingFileId(\"\");\r\n      setSending(false);\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Download File\");\r\n      setDownloadingFileId(\"\");\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const fetchMessages = async (options) => {\r\n    setLoadingMsgs(true);\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat?._id}`,\r\n        config\r\n      );\r\n      setMessages(\r\n        data.map((msg) => {\r\n          msg[\"sent\"] = true;\r\n          return msg;\r\n        })\r\n      );\r\n      setLoadingMsgs(false);\r\n      if (fetchMsgs) setFetchMsgs(false);\r\n      if (options?.updatingMsg) displaySuccess(\"Message Updated Successfully\");\r\n      setSending(false);\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Fetch Messages\");\r\n      setLoadingMsgs(false);\r\n      if (fetchMsgs) setFetchMsgs(false);\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    preventStopTyping = false;\r\n    emitStopTyping();\r\n    hideEmojiPicker();\r\n    if (!attachmentData.attachment && !msgContent.current?.innerHTML) return;\r\n\r\n    const msgData = {\r\n      ...attachmentData,\r\n      content: msgContent.current?.innerHTML || \"\",\r\n    };\r\n    const isNonImageFile = !isImageOrGifFile(msgData.attachment?.name);\r\n\r\n    const newMsg = {\r\n      _id: Date.now(),\r\n      sender: {\r\n        _id: loggedInUser?._id,\r\n        profilePic: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n      },\r\n      fileUrl: msgData?.attachmentPreviewUrl,\r\n      file_id: \"\",\r\n      file_name:\r\n        msgData?.attachment?.name +\r\n        `${\r\n          msgData?.mediaDuration\r\n            ? `===${msgData.mediaDuration}`\r\n            : isNonImageFile\r\n            ? `===${msgData.attachment?.size || \"\"}`\r\n            : \"\"\r\n        }`,\r\n      content: msgData?.content,\r\n      createdAt: new Date().toISOString(),\r\n      sent: false,\r\n    };\r\n    setDontScrollToBottom(false);\r\n    setMessages([newMsg, ...messages]);\r\n    resetMsgInput();\r\n    setSending(true);\r\n    const config = getAxiosConfig({ loggedInUser, formData: true });\r\n\r\n    try {\r\n      // Upload img/gif to cloudinary, and all other files to aws s3\r\n      const apiUrl = isNonImageFile\r\n        ? `/api/message/upload-to-s3`\r\n        : `/api/message/`;\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"attachment\", msgData.attachment);\r\n      formData.append(\"mediaDuration\", msgData?.mediaDuration);\r\n      formData.append(\"content\", msgData.content);\r\n      formData.append(\"chatId\", selectedChat?._id);\r\n      const { data } = await axios.post(apiUrl, formData, config);\r\n\r\n      if (isSocketConnected) clientSocket?.emit(\"new msg sent\", data);\r\n      fetchMessages();\r\n      dispatch(toggleRefresh(!refresh));\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Send Message\");\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const deleteMessage = async () => {\r\n    dispatch(setLoading(true));\r\n    setSending(true);\r\n    const config = getAxiosConfig({ loggedInUser });\r\n\r\n    try {\r\n      await axios.put(\r\n        `/api/message/delete`,\r\n        { messageIds: JSON.stringify([clickedMsgId]) },\r\n        config\r\n      );\r\n      if (isSocketConnected) {\r\n        clientSocket?.emit(\"msg deleted\", {\r\n          deletedMsgId: clickedMsgId,\r\n          senderId: loggedInUser?._id,\r\n          chat: selectedChat,\r\n        });\r\n      }\r\n      displaySuccess(\"Message Deleted Successfully\");\r\n      setMessages(messages.filter((msg) => msg?._id !== clickedMsgId));\r\n      dispatch(setLoading(false));\r\n      dispatch(toggleRefresh(!refresh));\r\n      setSending(false);\r\n      return \"msgActionDone\";\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Delete Message\");\r\n      dispatch(setLoading(false));\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  const updateMessage = async (updatedMsgContent, msgDate) => {\r\n    if (\r\n      !(\r\n        attachmentData.attachment ||\r\n        (msgFileAlreadyExists && !msgFileRemoved)\r\n      ) &&\r\n      !parseInnerHTML(updatedMsgContent)\r\n    ) {\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"A Message Must Contain Either a File or some Text Content\",\r\n          type: \"warning\",\r\n          duration: 5000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    setMsgEditMode(false);\r\n    setDontScrollToBottom(true);\r\n\r\n    const msgData = {\r\n      ...attachmentData,\r\n      content: updatedMsgContent || \"\",\r\n    };\r\n    const isNonImageFile = !isImageOrGifFile(msgData.attachment?.name);\r\n\r\n    const updatedMsg = {\r\n      _id: Date.now(),\r\n      sender: {\r\n        _id: loggedInUser?._id,\r\n        profilePic: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n      },\r\n      fileUrl: msgData?.attachmentPreviewUrl,\r\n      file_id: \"\",\r\n      file_name:\r\n        msgData?.attachment?.name +\r\n        `${\r\n          msgData?.mediaDuration\r\n            ? `===${msgData.mediaDuration}`\r\n            : isNonImageFile\r\n            ? `===${msgData.attachment?.size || \"\"}`\r\n            : \"\"\r\n        }`,\r\n      content: msgData?.content,\r\n      createdAt: msgDate,\r\n      sent: false,\r\n    };\r\n    setMessages(\r\n      messages.map((msg) => (msg._id === clickedMsgId ? updatedMsg : msg))\r\n    );\r\n    discardAttachment();\r\n    setSending(true);\r\n    const config = getAxiosConfig({ loggedInUser, formData: true });\r\n\r\n    try {\r\n      // Upload img/gif to cloudinary, and all other files to aws s3\r\n      const apiUrl = isNonImageFile\r\n        ? `/api/message/update-in-s3`\r\n        : `/api/message/update`;\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"attachment\", msgData.attachment);\r\n      formData.append(\"msgFileRemoved\", msgFileRemoved);\r\n      formData.append(\"mediaDuration\", msgData?.mediaDuration);\r\n      formData.append(\"updatedContent\", msgData.content);\r\n      formData.append(\"messageId\", clickedMsgId);\r\n      const { data } = await axios.put(apiUrl, formData, config);\r\n\r\n      if (isSocketConnected) clientSocket?.emit(\"msg updated\", data);\r\n      fetchMessages({ updatingMsg: true });\r\n      dispatch(toggleRefresh(!refresh));\r\n      setMsgFileRemoved(false);\r\n    } catch (error) {\r\n      displayError(error, \"Couldn't Update Message\");\r\n      setSending(false);\r\n      setMsgFileRemoved(false);\r\n    }\r\n  };\r\n\r\n  const editMsgHandler = () => setMsgEditMode(true);\r\n\r\n  const setMediaDuration = (mediaUrl, msgFile) => {\r\n    const media = new Audio(mediaUrl);\r\n    media.onloadedmetadata = () => {\r\n      const { duration } = media;\r\n      const minutes = parseInt(duration / 60);\r\n      const seconds = parseInt(duration % 60);\r\n      setAttachmentData({\r\n        attachment: msgFile,\r\n        attachmentPreviewUrl: mediaUrl,\r\n        mediaDuration: `${minutes}:${\r\n          seconds < 10 ? `0${seconds}` : seconds\r\n        }+++${msgFile.type}`,\r\n      });\r\n      setFileAttached(true);\r\n    };\r\n  };\r\n\r\n  const handleMsgFileInputChange = (e) => {\r\n    const msgFile = e.target.files[0];\r\n    if (!msgFile) return;\r\n\r\n    if (msgFile.size >= FIVE_MB) {\r\n      msgFileInput.current.value = \"\";\r\n      return dispatch(\r\n        displayToast({\r\n          message: \"Please Select a File Smaller than 5 MB\",\r\n          type: \"warning\",\r\n          duration: 4000,\r\n          position: \"top-center\",\r\n        })\r\n      );\r\n    }\r\n    const fileUrl = URL.createObjectURL(msgFile);\r\n    if (/^(video\\/|audio\\/)/.test(msgFile.type)) {\r\n      setMediaDuration(fileUrl, msgFile);\r\n    } else {\r\n      setAttachmentData({\r\n        attachment: msgFile,\r\n        attachmentPreviewUrl: fileUrl,\r\n      });\r\n      setFileAttached(true);\r\n    }\r\n  };\r\n\r\n  const deletePersistedNotifs = async (notifsToBeDeleted) => {\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      await axios.put(\r\n        `/api/user/delete/notifications`,\r\n        { notificationIds: JSON.stringify(notifsToBeDeleted) },\r\n        config\r\n      );\r\n    } catch (error) {\r\n      console.log(\"Couldn't Delete Notifications : \", error.message);\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => msgListBottom.current?.scrollIntoView();\r\n\r\n  // Initializing Client Socket\r\n  useEffect(() => {\r\n    dispatch(\r\n      setClientSocket(io(SOCKET_ENDPOINT, { transports: [\"websocket\"] }))\r\n    );\r\n  }, []);\r\n\r\n  // Socket event handlers\r\n  const newMsgSocketEventHandler = () => {\r\n    // off() prevents on() from executing multiple times\r\n    clientSocket\r\n      .off(\"new msg received\")\r\n      .on(\"new msg received\", (newMsg, notifications) => {\r\n        const { chat } = newMsg;\r\n        dispatch(toggleRefresh(!refresh));\r\n        if (selectedChat && chat && selectedChat._id === chat._id) {\r\n          newMsg[\"sent\"] = true;\r\n          setMessages([newMsg, ...messages]);\r\n          deletePersistedNotifs([newMsg._id]);\r\n        } else {\r\n          const updatedUser = {\r\n            ...loggedInUser,\r\n            notifications: notifications?.reverse(),\r\n          };\r\n          persistUpdatedUser(updatedUser);\r\n        }\r\n      });\r\n  };\r\n\r\n  const deletedMsgSocketEventHandler = () => {\r\n    clientSocket\r\n      .off(\"remove deleted msg\")\r\n      .on(\"remove deleted msg\", (deletedMsgData) => {\r\n        const { deletedMsgId, chat } = deletedMsgData;\r\n        dispatch(toggleRefresh(!refresh));\r\n        if (selectedChat && chat && selectedChat._id === chat._id) {\r\n          setMessages(messages.filter((m) => m?._id !== deletedMsgId));\r\n        } else {\r\n          // Remove notification of 'deleted msg' from global state\r\n          // and localStorage\r\n          const notifs = loggedInUser.notifications;\r\n          const updatedUser = {\r\n            ...loggedInUser,\r\n            notifications: notifs.filter((n) => n._id !== deletedMsgId),\r\n          };\r\n          persistUpdatedUser(updatedUser);\r\n        }\r\n      });\r\n  };\r\n\r\n  const updatedMsgSocketEventHandler = () => {\r\n    clientSocket\r\n      .off(\"update modified msg\")\r\n      .on(\"update modified msg\", (updatedMsg) => {\r\n        const { chat } = updatedMsg;\r\n        dispatch(toggleRefresh(!refresh));\r\n        if (selectedChat && chat && selectedChat._id === chat._id) {\r\n          updatedMsg[\"sent\"] = true;\r\n          updatedMsg[\"chat\"] = updatedMsg?.chat?._id;\r\n          setTimeout(() => {\r\n            // Only updating msg content using 'document' method\r\n            // as updating 'messages' state will re-render all\r\n            // msgs and scroll to bottom, which may prevent the\r\n            // receiver to edit or view his/her msg, causing bad UX\r\n            document.getElementById(`${updatedMsg._id}---content`).innerHTML =\r\n              updatedMsg.content;\r\n          }, 10);\r\n          // Updating 'state' is the only way to update attachment\r\n        }\r\n      });\r\n  };\r\n\r\n  // Listening to all socket events\r\n  useEffect(() => {\r\n    if (!clientSocket) return;\r\n\r\n    if (!isSocketConnected && clientSocket) {\r\n      clientSocket.emit(\"init user\", loggedInUser?._id);\r\n      clientSocket.on(\"user connected\", () => {\r\n        // console.log(\"socket connected\");\r\n        dispatch(setSocketConnected(true));\r\n      });\r\n    }\r\n    newMsgSocketEventHandler();\r\n    deletedMsgSocketEventHandler();\r\n    updatedMsgSocketEventHandler();\r\n  });\r\n\r\n  // Discard msg update draft\r\n  const discardMsgDraft = () => {\r\n    discardAttachment();\r\n    setMsgEditMode(false);\r\n    setSending(true);\r\n    setMessages([]);\r\n    // To execute after the entire code is run\r\n    setTimeout(() => {\r\n      setMessages(messages);\r\n      setSending(false);\r\n      // To execute after all the messages have been mapped\r\n      setTimeout(() => {\r\n        document.getElementById(clickedMsgId)?.scrollIntoView();\r\n      }, 10);\r\n    }, 0);\r\n    setMsgFileRemoved(false);\r\n    return \"msgActionDone\";\r\n  };\r\n\r\n  // Open discard draft confirm dialog\r\n  const openDiscardDraftConfirmDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<>Are you sure you want to discard this draft?</>);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Discard Draft\",\r\n        nolabel: \"NO\",\r\n        yeslabel: \"YES\",\r\n        loadingYeslabel: \"Discarding...\",\r\n        action: discardMsgDraft,\r\n      })\r\n    );\r\n  };\r\n\r\n  // Message input handlers\r\n  const emitTyping = () => {\r\n    if (isSocketConnected && !currentlyTyping) {\r\n      clientSocket?.emit(\"typing\", selectedChat, loggedInUser);\r\n      currentlyTyping = true;\r\n    }\r\n  };\r\n\r\n  const emitStopTyping = () => {\r\n    if (isSocketConnected && currentlyTyping) {\r\n      clientSocket?.emit(\"stop typing\", selectedChat, loggedInUser);\r\n      currentlyTyping = false;\r\n    }\r\n  };\r\n\r\n  const onInputFocus = () => {\r\n    preventStopTyping = false;\r\n  };\r\n\r\n  const onInputBlur = () => {\r\n    // setTimeout(() => {\r\n    //   if (!preventStopTyping) emitStopTyping();\r\n    // }, 1000);\r\n  };\r\n\r\n  const msgInputHandler = debounce((e) => {\r\n    const isNonEmptyInput = Boolean(parseInnerHTML(e.target.innerHTML));\r\n    setEnableMsgSend(isNonEmptyInput);\r\n    if (!isNonEmptyInput) emitStopTyping();\r\n    if (isNonEmptyInput) emitTyping();\r\n  }, 500);\r\n\r\n  const msgKeydownHandler = (e) => {\r\n    hideEmojiPicker();\r\n    if (\r\n      e.key === \"Enter\" &&\r\n      !e.shiftKey &&\r\n      (enableMsgSend || fileAttached || msgEditMode)\r\n    ) {\r\n      e.preventDefault();\r\n      if (msgEditMode) {\r\n        const msgDate =\r\n          e.target.dataset.msgCreatedAt ||\r\n          e.target.parentNode.dataset.msgCreatedAt;\r\n        updateMessage(editableMsgContent?.current?.innerHTML, msgDate);\r\n      } else {\r\n        sendMessage();\r\n      }\r\n    }\r\n  };\r\n\r\n  // Msgs click handler ('Event Delegation' applied here)\r\n  const msgsClickHandler = (e) => {\r\n    const { dataset } = e.target;\r\n    const parentDataset = e.target.parentNode.dataset;\r\n    const senderData = (dataset.sender || parentDataset.sender)?.split(\"===\");\r\n    const msgId = dataset.msg || parentDataset.msg;\r\n    const videoId = dataset.video || parentDataset.video;\r\n    const audioId = dataset.audio || parentDataset.audio;\r\n    const fileId = dataset.download || parentDataset.download;\r\n    const updateEditedMsg = dataset.updateMsg || parentDataset.updateMsg;\r\n    const attachMsgFileClicked =\r\n      dataset.attachMsgFile || parentDataset.attachMsgFile;\r\n    const removeMsgFileClicked =\r\n      dataset.removeMsgFile || parentDataset.removeMsgFile;\r\n    const editMsgFileClicked = dataset.editMsgFile || parentDataset.editMsgFile;\r\n    const discardDraftClicked =\r\n      dataset.discardDraft || parentDataset.discardDraft;\r\n\r\n    hideEmojiPicker();\r\n    if (fileId) {\r\n      downloadFile(fileId);\r\n    } else if (videoId) {\r\n      // Load video\r\n      loadMedia(videoId, {\r\n        fileName: dataset.videoName || parentDataset.videoName,\r\n        isAudio: false,\r\n      });\r\n    } else if (audioId) {\r\n      // Load audio\r\n      loadMedia(audioId, {\r\n        fileName: dataset.audioName || parentDataset.audioName,\r\n        isAudio: true,\r\n      });\r\n    } else if (dataset.imageId) {\r\n      displayFullSizeImage(e);\r\n    } else if (senderData?.length) {\r\n      // Open view profile dialog\r\n      const props = {\r\n        memberProfilePic: senderData[0],\r\n        memberName: senderData[1],\r\n        memberEmail: senderData[2],\r\n      };\r\n      openViewProfileDialog(props);\r\n    } else if (msgId && !msgEditMode) {\r\n      msgFileAlreadyExists = Boolean(\r\n        dataset.fileExists || parentDataset.fileExists\r\n      );\r\n      setClickedMsgId(msgId);\r\n      openMsgOptionsMenu(e);\r\n    } else if (attachMsgFileClicked || editMsgFileClicked) {\r\n      selectAttachment();\r\n    } else if (removeMsgFileClicked) {\r\n      setMsgFileRemoved(true);\r\n      discardAttachment();\r\n    } else if (discardDraftClicked) {\r\n      openDiscardDraftConfirmDialog();\r\n    } else if (updateEditedMsg) {\r\n      const msgDate = dataset.msgCreatedAt || parentDataset.msgCreatedAt;\r\n      updateMessage(editableMsgContent?.current?.innerHTML, msgDate);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!dontScrollToBottom) scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (fetchMsgs) {\r\n      fetchMessages();\r\n      if (isSocketConnected) clientSocket?.emit(\"join chat\", selectedChat?._id);\r\n    }\r\n  }, [fetchMsgs]);\r\n\r\n  const openViewProfileDialog = (props) => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(props ? <ViewProfileBody {...props} /> : <ViewProfileBody />);\r\n    dispatch(displayDialog({ title: \"View Profile\" }));\r\n  };\r\n\r\n  const openGroupInfoDialog = () => {\r\n    // Open group info dialog\r\n    dispatch(setGroupInfo(selectedChat));\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<GroupInfoBody messages={messages} />);\r\n    dispatch(displayDialog({ title: \"Group Info\" }));\r\n  };\r\n\r\n  // Open delete msg confirm dialog\r\n  const openDeleteMsgConfirmDialog = () => {\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<>Are you sure you want to delete this message?</>);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Delete Message\",\r\n        nolabel: \"NO\",\r\n        yeslabel: \"YES\",\r\n        loadingYeslabel: \"Deleting...\",\r\n        action: deleteMessage,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (msgContent?.current) msgContent.current.innerHTML = \"\";\r\n  }, [selectedChat]);\r\n\r\n  const openMsgOptionsMenu = (e) => {\r\n    if (sending) return;\r\n    setMsgOptionsMenuAnchor(e.target);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`chatpageDiv chatpageView messagesView col text-light mx-0 mx-md-1 ${\r\n        selectedChat ? \"d-flex\" : \"d-none d-md-flex\"\r\n      } flex-column p-2 user-select-none`}\r\n    >\r\n      {selectedChat ? (\r\n        <>\r\n          <MsgsHeader\r\n            closeChat={closeChat}\r\n            openGroupInfoDialog={openGroupInfoDialog}\r\n            openViewProfileDialog={openViewProfileDialog}\r\n            hideEmojiPicker={hideEmojiPicker}\r\n            CustomTooltip={CustomTooltip}\r\n          />\r\n          <section\r\n            className={`messagesBody position-relative ${\r\n              downloadingFileId || loadingMediaId ? \"pe-none\" : \"pe-auto\"\r\n            } d-flex flex-column m-1 p-2`}\r\n            onClick={(e) => {\r\n              const { dataset } = e.target;\r\n              const parentDataset = e.target.parentNode.dataset;\r\n              const discardFileClicked =\r\n                dataset.discardFile || parentDataset.discardFile;\r\n              if (discardFileClicked) discardAttachment();\r\n            }}\r\n          >\r\n            {/* Messages list */}\r\n            <div className=\"messages rounded-3 d-flex flex-column\">\r\n              <div\r\n                // Event delegation\r\n                onClick={msgsClickHandler}\r\n                onKeyDown={msgKeydownHandler}\r\n                className={`msgArea overflow-auto ${\r\n                  fileAttached && !msgEditMode ? \"d-none\" : \"d-flex\"\r\n                } flex-column-reverse`}\r\n              >\r\n                <div className=\"msgListBottom\" ref={msgListBottom}></div>\r\n                {loadingMsgs && !sending ? (\r\n                  <LoadingMsgs count={8} />\r\n                ) : (\r\n                  messages.map((m, i, msgs) => (\r\n                    <Message\r\n                      downloadingFileId={downloadingFileId}\r\n                      loadingMediaId={loadingMediaId}\r\n                      msgEditMode={msgEditMode}\r\n                      clickedMsgId={clickedMsgId}\r\n                      msgFileRemoved={msgFileRemoved}\r\n                      attachmentData={attachmentData}\r\n                      ref={editableMsgContent}\r\n                      CustomTooltip={CustomTooltip}\r\n                      key={m._id}\r\n                      msgSent={m.sent}\r\n                      currMsg={m}\r\n                      prevMsg={i < msgs.length - 1 ? msgs[i + 1] : null}\r\n                    />\r\n                  ))\r\n                )}\r\n              </div>\r\n            </div>\r\n            {/* Edit/Delete Message menu */}\r\n            <MsgOptionsMenu\r\n              anchor={msgOptionsMenuAnchor}\r\n              setAnchor={setMsgOptionsMenuAnchor}\r\n              clickedMsg={clickedMsgId}\r\n              editMsgHandler={editMsgHandler}\r\n              openDeleteMsgConfirmDialog={openDeleteMsgConfirmDialog}\r\n            />\r\n            {fileAttached && !msgEditMode && (\r\n              <AttachmentPreview\r\n                attachmentData={attachmentData}\r\n                discardAttachment={discardAttachment}\r\n                CustomTooltip={CustomTooltip}\r\n              />\r\n            )}\r\n            {/* Typing indicator */}\r\n            <span className={`${typingChatUser ? \"d-inline-block\" : \"d-none\"}`}>\r\n              <TypingIndicator\r\n                typingChatUser={typingChatUser}\r\n                showAvatar={true}\r\n              />\r\n            </span>\r\n            {/* New Message Input */}\r\n            <div\r\n              className={`msgInputDiv d-flex position-absolute ${\r\n                msgEditMode || sending ? \"pe-none\" : \"pe-auto\"\r\n              }`}\r\n            >\r\n              <span\r\n                className={`d-flex attachFile ${disableIfLoading} pointer bg-dark`}\r\n              >\r\n                <IconButton\r\n                  onClick={onEmojiIconClick}\r\n                  className={`d-flex ms-2 me-1 my-2`}\r\n                  sx={iconStyles}\r\n                >\r\n                  <EmojiEmotions style={{ fontSize: 24 }} />\r\n                </IconButton>\r\n                <CustomTooltip title=\"Attach File\" placement=\"top-start\" arrow>\r\n                  <IconButton\r\n                    onClick={selectAttachment}\r\n                    className={`d-flex my-2`}\r\n                    sx={{ ...iconStyles, transform: \"rotateZ(45deg)\" }}\r\n                  >\r\n                    <AttachFile style={{ fontSize: 22 }} />\r\n                  </IconButton>\r\n                </CustomTooltip>\r\n                {/* Emoji Picker */}\r\n                {showEmojiPicker && (\r\n                  <span className=\"emojiPicker position-absolute start-0\">\r\n                    <EmojiPicker\r\n                      onEmojiClick={onEmojiClick}\r\n                      disableAutoFocus={true}\r\n                      native={true}\r\n                      searchPlaceholder={\"Search an emoji...\"}\r\n                    />\r\n                  </span>\r\n                )}\r\n                {/* Attachment File input */}\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"*\"\r\n                  onChange={handleMsgFileInputChange}\r\n                  name=\"attachment\"\r\n                  id=\"attachMsgFile\"\r\n                  ref={msgFileInput}\r\n                  className={`d-none`}\r\n                  disabled={loadingMsgs}\r\n                />\r\n              </span>\r\n              {/* Content/text input */}\r\n              <div\r\n                onFocus={onInputFocus}\r\n                onBlur={onInputBlur}\r\n                onInput={msgInputHandler}\r\n                onKeyDown={msgKeydownHandler}\r\n                onClick={hideEmojiPicker}\r\n                ref={msgContent}\r\n                className={`msgInput ${\r\n                  fileAttached && !msgEditMode ? \"addCaption\" : \"\"\r\n                } w-100 text-start d-flex bg-dark px-2 justify-content-start`}\r\n                contentEditable={true}\r\n                style={{\r\n                  borderRadius:\r\n                    enableMsgSend || (fileAttached && !msgEditMode)\r\n                      ? \"0px\"\r\n                      : \"0px 7px 7px 0px\",\r\n                }}\r\n              ></div>\r\n              {/* Send button */}\r\n              {enableMsgSend || (fileAttached && !msgEditMode) ? (\r\n                <span\r\n                  className={`d-inline-block btn btn-dark btn-sm sendButton ${disableIfLoading} pointer`}\r\n                  onClick={sendMessage}\r\n                >\r\n                  <IconButton\r\n                    className={`d-flex my-1 mx-0 mx-md-0`}\r\n                    sx={{ margin: \"4px 0px\", padding: \"5px\", color: \"#999999\" }}\r\n                  >\r\n                    <Send style={{ fontSize: 20 }} />\r\n                  </IconButton>\r\n                </span>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n          </section>\r\n        </>\r\n      ) : (\r\n        <WelcomeBanner isNewUser={isNewUser} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesView;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ChatpageHeader from \"../components/ChatpageHeader\";\r\nimport CustomDialog from \"../components/utils/CustomDialog\";\r\nimport ChatListView from \"../components/ChatListView\";\r\nimport MessagesView from \"../components/MessagesView\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { displayToast } from \"../store/slices/ToastSlice\";\r\nimport {\r\n  selectAppState,\r\n  setGroupInfo,\r\n  setLoggedInUser,\r\n  setSelectedChat,\r\n  toggleRefresh,\r\n} from \"../store/slices/AppSlice\";\r\nimport {\r\n  hideDialog,\r\n  selectCustomDialogState,\r\n} from \"../store/slices/CustomDialogSlice\";\r\nimport { truncateString } from \"../utils/appUtils\";\r\n\r\nconst ChatsPage = () => {\r\n  const {\r\n    loggedInUser,\r\n    refresh,\r\n    clientSocket,\r\n    selectedChat,\r\n    isSocketConnected,\r\n  } = useSelector(selectAppState);\r\n  const { dialogData, showDialogActions } = useSelector(\r\n    selectCustomDialogState\r\n  );\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [fetchMsgs, setFetchMsgs] = useState(false);\r\n  const [loadingMsgs, setLoadingMsgs] = useState(false);\r\n  const [dialogBody, setDialogBody] = useState(<></>);\r\n  const [chats, setChats] = useState([]);\r\n  const [typingChatUsers, setTypingChatUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // localStorage persists data even after page refresh, unlike state\r\n    const user = JSON.parse(localStorage.getItem(\"loggedInUser\"));\r\n    if (!user) return navigate(\"/\");\r\n\r\n    if (Date.now() >= parseInt(user.expiryTime)) {\r\n      navigate(\"/\");\r\n      return dispatch(\r\n        displayToast({\r\n          title: \"Session Expired\",\r\n          message: \"Please Login Again\",\r\n          type: \"info\",\r\n          duration: 4000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n    }\r\n\r\n    dispatch(setLoggedInUser(user));\r\n    dispatch(hideDialog());\r\n    dispatch(setSelectedChat(null));\r\n  }, []);\r\n\r\n  const getTypingUserName = (typingUser) =>\r\n    truncateString(typingUser.name?.toString().split(\" \")[0], 12, 9) || \" \";\r\n\r\n  const getTypingChatId = (chatUser) => chatUser?.toString().split(\"---\")[0];\r\n\r\n  const displayInfo = (message = \"Operation Executed\") => {\r\n    dispatch(\r\n      displayToast({\r\n        message,\r\n        type: \"info\",\r\n        duration: 5000,\r\n        position: \"bottom-center\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const groupSocketEventHandlers = () => {\r\n    clientSocket\r\n      .off(\"display updated grp\")\r\n      .on(\"display updated grp\", (updatedGroupData) => {\r\n        const { updatedGroup, createdAdmin, dismissedAdmin } = updatedGroupData;\r\n        dispatch(toggleRefresh(!refresh));\r\n        if (!updatedGroup) return;\r\n        const { _id, chatName, removedUser } = updatedGroup;\r\n        const isLoggedInUserRemoved = removedUser?._id === loggedInUser?._id;\r\n        const isGroupInfoDialogOpen =\r\n          dialogData.isOpen && dialogData.title === \"Group Info\";\r\n\r\n        if (selectedChat?._id === _id) {\r\n          let groupData = updatedGroup;\r\n          if (isLoggedInUserRemoved) {\r\n            dispatch(hideDialog());\r\n            groupData = null;\r\n          }\r\n          dispatch(setSelectedChat(groupData));\r\n          dispatch(setGroupInfo(groupData));\r\n          if (\r\n            isGroupInfoDialogOpen &&\r\n            createdAdmin?._id === loggedInUser?._id\r\n          ) {\r\n            displayInfo(`You are now an Admin of '${chatName}' group`);\r\n          }\r\n          if (\r\n            isGroupInfoDialogOpen &&\r\n            dismissedAdmin?._id === loggedInUser?._id\r\n          ) {\r\n            displayInfo(`You are no longer an Admin of '${chatName}' group`);\r\n          }\r\n        }\r\n        if (isLoggedInUserRemoved) {\r\n          displayInfo(`You have been removed from '${chatName}' group`);\r\n        }\r\n      });\r\n\r\n    clientSocket\r\n      .off(\"remove deleted grp\")\r\n      .on(\"remove deleted grp\", (deletedGroup) => {\r\n        dispatch(toggleRefresh(!refresh));\r\n        if (!deletedGroup) return;\r\n        if (selectedChat?._id === deletedGroup?._id) {\r\n          dispatch(hideDialog());\r\n          dispatch(setSelectedChat(null));\r\n          dispatch(setGroupInfo(null));\r\n        }\r\n        displayInfo(`'${deletedGroup.chatName}' Group Deleted by Admin`);\r\n      });\r\n\r\n    clientSocket.off(\"display new grp\").on(\"display new grp\", () => {\r\n      dispatch(toggleRefresh(!refresh));\r\n    });\r\n  };\r\n\r\n  const typingSocketEventHandler = () => {\r\n    clientSocket\r\n      .off(\"display typing\")\r\n      .on(\"display typing\", (chat, typingUser) => {\r\n        if (!chat || !typingUser) return;\r\n        setTypingChatUsers([\r\n          ...typingChatUsers,\r\n          `${chat._id}---${getTypingUserName(typingUser)}---${\r\n            typingUser.profilePic\r\n          }`,\r\n        ]);\r\n      });\r\n\r\n    clientSocket.off(\"hide typing\").on(\"hide typing\", (chat, typingUser) => {\r\n      if (!chat || !typingUser) return;\r\n      setTypingChatUsers(\r\n        typingChatUsers.filter(\r\n          (chatUser) =>\r\n            chatUser !==\r\n            `${chat._id}---${getTypingUserName(typingUser)}---${\r\n              typingUser.profilePic\r\n            }`\r\n        )\r\n      );\r\n    });\r\n  };\r\n\r\n  // Listening to socket events\r\n  useEffect(() => {\r\n    if (!clientSocket || !isSocketConnected) return;\r\n    groupSocketEventHandlers();\r\n    typingSocketEventHandler();\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {loggedInUser && (\r\n        <div className={`chatpage`}>\r\n          {/* Header component */}\r\n          <ChatpageHeader\r\n            chats={chats}\r\n            setFetchMsgs={setFetchMsgs}\r\n            setDialogBody={setDialogBody}\r\n          />\r\n\r\n          <section className={`row g-1`}>\r\n            {/* Chat List component */}\r\n            <ChatListView\r\n              chats={chats}\r\n              setChats={setChats}\r\n              loadingMsgs={loadingMsgs}\r\n              setFetchMsgs={setFetchMsgs}\r\n              setDialogBody={setDialogBody}\r\n              typingChatUsers={typingChatUsers}\r\n            />\r\n\r\n            {/* Chat Messages component */}\r\n            <MessagesView\r\n              loadingMsgs={loadingMsgs}\r\n              setLoadingMsgs={setLoadingMsgs}\r\n              fetchMsgs={fetchMsgs}\r\n              setFetchMsgs={setFetchMsgs}\r\n              setDialogBody={setDialogBody}\r\n              isNewUser={chats?.length === 0}\r\n              typingChatUser={typingChatUsers.find(\r\n                (u) => getTypingChatId(u) === selectedChat?._id\r\n              )}\r\n            />\r\n          </section>\r\n\r\n          {/* App Parent Dialog */}\r\n          <CustomDialog\r\n            dialogData={dialogData}\r\n            showDialogActions={showDialogActions}\r\n            showDialogClose={true}\r\n          >\r\n            {dialogBody}\r\n          </CustomDialog>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatsPage;\r\n"],"names":["menuPaperProps","elevation","sx","overflow","maxHeight","filter","borderRadius","backgroundColor","mt","menuItemProps","color","fontSize","menuIconProps","children","menuAnchor","setMenuAnchor","transformOrigin","anchorOrigin","isMenuOpen","Boolean","closeMenu","anchorEl","open","onClose","onClick","PaperProps","style","marginBottom","chats","setFetchMsgs","anchor","setAnchor","loggedInUser","useSelector","selectAppState","dispatch","useDispatch","notifs","notifications","notifGroups","forEach","notif","notifChat","chat","chatId","_id","chatName","isGroupChat","getOneToOneChatReceiver","users","name","notifGroupId","deletePersistedNotifs","notifsToBeDeleted","config","getAxiosConfig","axios","notificationIds","JSON","stringify","console","log","message","vertical","horizontal","Object","keys","length","e","chatNotifId","target","dataset","notifGroup","parentNode","split","chatToBeOpened","find","setSelectedChat","clickedChatId","i","deletedNotif","splice","push","updatedUser","localStorage","setItem","setLoggedInUser","deleteNotifications","setGroupInfo","map","fromGroup","includes","notifCount","MenuItem","title","className","truncateString","getUpdatedState","selectFormfieldState","loading","disableIfLoading","formLabelClassName","formFieldClassName","inputFieldClassName","useState","showPassword","setShowPassword","currentPassword","newPassword","confirmNewPassword","changePasswordData","setChangePasswordData","handleChangeFor","prop","value","useEffect","onEnterKeyDown","key","submitUpdatedPassword","htmlFor","type","onChange","onKeyDown","required","autoFocus","id","disabled","placeholder","PasswordVisibilityToggle","originalName","getUpdatedName","setName","width","submitUpdatedName","selectProfilePic","openDeletePhotoConfirmDialog","deletePhotoCondition","ListItemIcon","Upload","Delete","arrowStyles","tooltipStyles","styled","props","Tooltip","arrow","classes","popper","theme","tooltipClasses","btnHoverStyle","btnCustomStyle","fontFamily","dialogData","showDialogActions","showDialogClose","closeDialog","navigate","useNavigate","isFullScreen","isOpen","nolabel","yeslabel","loadingYeslabel","action","handleDialogClose","hideDialog","handleYes","result","Dialog","fullScreen","backgroundImage","DialogTitle","fontWeight","marginTop","marginRight","IconButton","position","right","top","Close","DialogContent","DialogActions","Button","KeyboardDoubleArrowLeft","margin","CircularProgress","size","KeyboardDoubleArrowRight","marginLeft","showChildDialogActions","showChildDialogClose","childDialogData","setChildDialogData","childDialogBody","setChildDialogBody","displayChildDialog","options","closeChildDialog","data","setChildDialogMethods","CustomTooltip","getCustomTooltip","maxWidth","padding","border","childDialogMethods","selectChildDialogState","profilePicUrl","profilePic","email","profileData","setProfileData","editProfilePicMenuAnchor","setEditProfilePicMenuAnchor","editedName","displayWarning","duration","displayToast","displayError","error","response","displaySuccess","uploading","setUploading","imgInput","useRef","isGuestUser","persistUpdatedUser","clickOnKeydown","click","handleImgInputChange","image","files","isImageFile","TWO_MB","current","setLoading","formData","FormData","append","cloudinary_id","token","expiryTime","deleteProfilePic","currentProfilePic","updatedValue","updateProfileName","enterKeyPressed","newUserName","src","alt","placement","tabIndex","Edit","endsWith","accept","ref","wordBreak","editPasswordData","setDialogBody","updatedState","updatePassword","removeItem","logout","setShowDialogActions","displayDialog","Person","ManageAccounts","Key","Logout","user","truncateValues","max","index","Avatar","listOf","dpRadius","count","skeletonStyle","Array","Skeleton","variant","height","forwardRef","inputRef","searchHandler","clearInput","typing","setTyping","Search","trim","replace","cursor","focus","Clear","isDrawerOpen","setIsDrawerOpen","searchQuery","setSearchQuery","searchResults","setSearchResults","searchUserInput","handleClose","searchUsers","debounce","query","createOrRetrieveChat","userId","Drawer","borderTopRightRadius","borderBottomRightRadius","transitionDuration","ChevronLeft","overflowY","overflowX","appGif","animateNotif","setAnimateNotif","notificationsMenuAnchor","setNotificationsMenuAnchor","profileSettingsMenuAnchor","setProfileSettingsMenuAnchor","timeout","setTimeout","clearTimeout","LottieAnimation","animationData","Notifications","refresh","groupInfo","clientSocket","isSocketConnected","chatDisplayPicUrl","editGroupDpMenuAnchor","setEditGroupDpMenuAnchor","createGroupChat","chatDisplayPic","emit","admin","newGroup","toggleRefresh","preventDefault","process","URL","createObjectURL","getAddedMembers","forCreateGroup","groupData","setGroupData","fetching","setFetching","groupMembers","isMemberSelected","setIsMemberSelected","addedMembers","setAddedMembers","setShowDialogClose","openNewGroupDialog","setDialogAction","membersNotAdded","addedMember","m","flex","Chip","avatar","label","onDelete","u","unselectUser","selectedUser","typingChatUser","showAvatar","typingGif","typingUserData","toString","typingUserName","bottom","typingAnimData","lastMsgFileType","chatNotifCount","selectedChat","receiverEmail","lastMessage","tooltipTitle","lastMsgContent","content","replaceAll","lastMsgDate","Date","createdAt","lastMsgDateString","msgDateStringOf","lastMsgFileUrl","fileUrl","fileContents","file_name","lastMsgFileName","lastMsgData","fileType","test","startsWith","msgTimeStringOf","dateStringOf","sender","DoneAll","Image","GifBox","VideoFile","AudioFile","PictureAsPdf","Description","FILE_STYLES","event","audioSrc","videoSrc","autoPlay","controls","objectFit","GettingStarted","lazy","setChats","loadingMsgs","typingChatUsers","filteredChats","setFilteredChats","searchChatInput","fetchChats","mappedChats","receiver","undefined","searchChats","chatNameInput","toLowerCase","GroupAdd","parentDataset","hasNotifs","displayFullSizeImage","clickedChat","memberProfilePic","memberName","memberEmail","isLoggedInUser","isGroupAdmin","KeyboardArrowDown","clickedMember","isLoggedInUserGroupAdmin","groupAdmins","some","clickedMemberName","styledMemberName","updateView","openChat","makeGroupAdmin","updater","updatedGroup","createdAdmin","dismissAsAdmin","dismissedAdmin","removeFromGroup","userToBeRemoved","Message","InfoOutlined","AdminPanelSettings","GroupRemove","filteredMembersCache","admins","setClickedMember","memberOptionsMenuAnchor","setMemberOptionsMenuAnchor","member","every","setFilteredMembers","filterMemberInput","filteredMembers","filterMembers","memberNameInput","openMemberOptionsMenu","messages","groupDP","groupName","isUserGroupAdmin","btnClassName","updatedName","updateGroupName","enterKeyClicked","updateGroupDp","deleteGroupDp","currentDP","exitGroup","deleteGroup","deleteGroupPromise","deleteMessagesPromise","messageIds","isDeleteGroupRequest","Promise","resolve","all","deletedGroup","updatedMembers","addMembersToGroup","usersToBeAdded","lineHeight","PersonAdd","msgSent","isEditMode","fileEditIcons","downloadingFileId","loadingMediaId","isPreview","fileData","previewStyles","iconStyles","file_id","isMediaFile","mediaContents","mediaFileType","mediaFileSize","getFileSizeString","loadingGif","fileSize","parseInt","isDownloadingFile","substring","lastIndexOf","toUpperCase","attachmentHeader","zIndex","Downloading","Download","fileNameWrapper","fileInfo","hideWhileLoadingMedia","displayWhileLoadingMedia","isImageOrGifFile","PlayCircle","Videocam","PlayArrow","Audiotrack","attachmentData","attachment","attachmentPreviewUrl","FILE_WRAPPER_CLASS","ATTACHMENT_STYLE","editIconsWrapper","previewTitle","left","IconButtonSx","editableMsgRef","msgEditMode","clickedMsgId","msgFileRemoved","currMsg","prevMsg","msgContentRef","senderData","currMsgId","isClickedMsgCurrMsg","isSameSender","currMsgDate","prevMsgDate","isOtherDay","showCurrSender","innerHTML","setCaretPosition","transform","AttachFile","Done","msgId","outline","contentEditable","editMsgHandler","openDeleteMsgConfirmDialog","isNewUser","letsChatGif","letsChatAnimData","closeChat","openGroupInfoDialog","openViewProfileDialog","hideEmojiPicker","ArrowBack","msgFileAlreadyExists","currentlyTyping","setLoadingMsgs","fetchMsgs","sending","setSending","setMsgFileRemoved","enableMsgSend","setEnableMsgSend","fileAttached","setFileAttached","setMessages","setClickedMsgId","dontScrollToBottom","setDontScrollToBottom","setAttachmentData","msgListBottom","msgFileInput","msgContent","editableMsgContent","setDownloadingFileId","setLoadingMediaId","setMsgEditMode","msgOptionsMenuAnchor","setMsgOptionsMenuAnchor","resetMsgInput","discardAttachmentOnly","showEmojiPicker","setShowEmojiPicker","selectAttachment","discardAttachment","viewMedia","fileName","isAudio","loadMedia","fileId","blob","mediaSrc","Blob","downloadFile","link","document","createElement","href","setAttribute","body","appendChild","remove","fetchMessages","msg","updatingMsg","sendMessage","emitStopTyping","msgData","isNonImageFile","newMsg","now","mediaDuration","toISOString","sent","apiUrl","deleteMessage","deletedMsgId","senderId","updateMessage","updatedMsgContent","msgDate","parseInnerHTML","updatedMsg","setClientSocket","io","transports","on","setSocketConnected","off","reverse","deletedMsgData","n","getElementById","discardMsgDraft","scrollIntoView","msgInputHandler","isNonEmptyInput","msgKeydownHandler","shiftKey","msgCreatedAt","scrollToBottom","openMsgOptionsMenu","discardFile","videoId","video","audioId","audio","download","updateEditedMsg","updateMsg","attachMsgFileClicked","attachMsgFile","removeMsgFileClicked","removeMsgFile","editMsgFileClicked","editMsgFile","discardDraftClicked","discardDraft","videoName","audioName","imageId","fileExists","msgs","clickedMsg","EmojiEmotions","onEmojiClick","emojiObject","emoji","disableAutoFocus","native","searchPlaceholder","msgFile","FIVE_MB","mediaUrl","media","Audio","onloadedmetadata","minutes","seconds","setMediaDuration","onFocus","onBlur","onInput","Send","selectCustomDialogState","dialogBody","setTypingChatUsers","parse","getItem","getTypingUserName","typingUser","displayInfo","updatedGroupData","removedUser","isLoggedInUserRemoved","isGroupInfoDialogOpen","chatUser"],"sourceRoot":""}